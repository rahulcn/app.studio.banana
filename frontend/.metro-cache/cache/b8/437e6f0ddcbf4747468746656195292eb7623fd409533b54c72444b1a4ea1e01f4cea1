{"dependencies":[{"name":"./helpers","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":49,"index":49}}],"key":"kg0rJsyHf+Iyf4Z1AFOYGhKLkW4=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"internals\", {\n    enumerable: true,\n    get: function () {\n      return internals;\n    }\n  });\n  Object.defineProperty(exports, \"LockAcquireTimeoutError\", {\n    enumerable: true,\n    get: function () {\n      return LockAcquireTimeoutError;\n    }\n  });\n  Object.defineProperty(exports, \"NavigatorLockAcquireTimeoutError\", {\n    enumerable: true,\n    get: function () {\n      return NavigatorLockAcquireTimeoutError;\n    }\n  });\n  Object.defineProperty(exports, \"ProcessLockAcquireTimeoutError\", {\n    enumerable: true,\n    get: function () {\n      return ProcessLockAcquireTimeoutError;\n    }\n  });\n  exports.navigatorLock = navigatorLock;\n  exports.processLock = processLock;\n  var _helpers = require(_dependencyMap[0], \"./helpers\");\n  /**\n   * @experimental\n   */\n  const internals = {\n    /**\n     * @experimental\n     */\n    debug: !!(globalThis && (0, _helpers.supportsLocalStorage)() && globalThis.localStorage && globalThis.localStorage.getItem('supabase.gotrue-js.locks.debug') === 'true')\n  };\n  /**\n   * An error thrown when a lock cannot be acquired after some amount of time.\n   *\n   * Use the {@link #isAcquireTimeout} property instead of checking with `instanceof`.\n   */\n  class LockAcquireTimeoutError extends Error {\n    constructor(message) {\n      super(message);\n      this.isAcquireTimeout = true;\n    }\n  }\n  class NavigatorLockAcquireTimeoutError extends LockAcquireTimeoutError {}\n  class ProcessLockAcquireTimeoutError extends LockAcquireTimeoutError {}\n  /**\n   * Implements a global exclusive lock using the Navigator LockManager API. It\n   * is available on all browsers released after 2022-03-15 with Safari being the\n   * last one to release support. If the API is not available, this function will\n   * throw. Make sure you check availablility before configuring {@link\n   * GoTrueClient}.\n   *\n   * You can turn on debugging by setting the `supabase.gotrue-js.locks.debug`\n   * local storage item to `true`.\n   *\n   * Internals:\n   *\n   * Since the LockManager API does not preserve stack traces for the async\n   * function passed in the `request` method, a trick is used where acquiring the\n   * lock releases a previously started promise to run the operation in the `fn`\n   * function. The lock waits for that promise to finish (with or without error),\n   * while the function will finally wait for the result anyway.\n   *\n   * @param name Name of the lock to be acquired.\n   * @param acquireTimeout If negative, no timeout. If 0 an error is thrown if\n   *                       the lock can't be acquired without waiting. If positive, the lock acquire\n   *                       will time out after so many milliseconds. An error is\n   *                       a timeout if it has `isAcquireTimeout` set to true.\n   * @param fn The operation to run once the lock is acquired.\n   */\n  async function navigatorLock(name, acquireTimeout, fn) {\n    if (internals.debug) {\n      console.log('@supabase/gotrue-js: navigatorLock: acquire lock', name, acquireTimeout);\n    }\n    const abortController = new globalThis.AbortController();\n    if (acquireTimeout > 0) {\n      setTimeout(() => {\n        abortController.abort();\n        if (internals.debug) {\n          console.log('@supabase/gotrue-js: navigatorLock acquire timed out', name);\n        }\n      }, acquireTimeout);\n    }\n    // MDN article: https://developer.mozilla.org/en-US/docs/Web/API/LockManager/request\n    // Wrapping navigator.locks.request() with a plain Promise is done as some\n    // libraries like zone.js patch the Promise object to track the execution\n    // context. However, it appears that most browsers use an internal promise\n    // implementation when using the navigator.locks.request() API causing them\n    // to lose context and emit confusing log messages or break certain features.\n    // This wrapping is believed to help zone.js track the execution context\n    // better.\n    return await Promise.resolve().then(() => globalThis.navigator.locks.request(name, acquireTimeout === 0 ? {\n      mode: 'exclusive',\n      ifAvailable: true\n    } : {\n      mode: 'exclusive',\n      signal: abortController.signal\n    }, async lock => {\n      if (lock) {\n        if (internals.debug) {\n          console.log('@supabase/gotrue-js: navigatorLock: acquired', name, lock.name);\n        }\n        try {\n          return await fn();\n        } finally {\n          if (internals.debug) {\n            console.log('@supabase/gotrue-js: navigatorLock: released', name, lock.name);\n          }\n        }\n      } else {\n        if (acquireTimeout === 0) {\n          if (internals.debug) {\n            console.log('@supabase/gotrue-js: navigatorLock: not immediately available', name);\n          }\n          throw new NavigatorLockAcquireTimeoutError(`Acquiring an exclusive Navigator LockManager lock \"${name}\" immediately failed`);\n        } else {\n          if (internals.debug) {\n            try {\n              const result = await globalThis.navigator.locks.query();\n              console.log('@supabase/gotrue-js: Navigator LockManager state', JSON.stringify(result, null, '  '));\n            } catch (e) {\n              console.warn('@supabase/gotrue-js: Error when querying Navigator LockManager state', e);\n            }\n          }\n          // Browser is not following the Navigator LockManager spec, it\n          // returned a null lock when we didn't use ifAvailable. So we can\n          // pretend the lock is acquired in the name of backward compatibility\n          // and user experience and just run the function.\n          console.warn('@supabase/gotrue-js: Navigator LockManager returned a null lock when using #request without ifAvailable set to true, it appears this browser is not following the LockManager spec https://developer.mozilla.org/en-US/docs/Web/API/LockManager/request');\n          return await fn();\n        }\n      }\n    }));\n  }\n  const PROCESS_LOCKS = {};\n  /**\n   * Implements a global exclusive lock that works only in the current process.\n   * Useful for environments like React Native or other non-browser\n   * single-process (i.e. no concept of \"tabs\") environments.\n   *\n   * Use {@link #navigatorLock} in browser environments.\n   *\n   * @param name Name of the lock to be acquired.\n   * @param acquireTimeout If negative, no timeout. If 0 an error is thrown if\n   *                       the lock can't be acquired without waiting. If positive, the lock acquire\n   *                       will time out after so many milliseconds. An error is\n   *                       a timeout if it has `isAcquireTimeout` set to true.\n   * @param fn The operation to run once the lock is acquired.\n   */\n  async function processLock(name, acquireTimeout, fn) {\n    var _a;\n    const previousOperation = (_a = PROCESS_LOCKS[name]) !== null && _a !== void 0 ? _a : Promise.resolve();\n    const currentOperation = Promise.race([previousOperation.catch(() => {\n      // ignore error of previous operation that we're waiting to finish\n      return null;\n    }), acquireTimeout >= 0 ? new Promise((_, reject) => {\n      setTimeout(() => {\n        reject(new ProcessLockAcquireTimeoutError(`Acquring process lock with name \"${name}\" timed out`));\n      }, acquireTimeout);\n    }) : null].filter(x => x)).catch(e => {\n      if (e && e.isAcquireTimeout) {\n        throw e;\n      }\n      return null;\n    }).then(async () => {\n      // previous operations finished and we didn't get a race on the acquire\n      // timeout, so the current operation can finally start\n      return await fn();\n    });\n    PROCESS_LOCKS[name] = currentOperation.catch(async e => {\n      if (e && e.isAcquireTimeout) {\n        // if the current operation timed out, it doesn't mean that the previous\n        // operation finished, so we need contnue waiting for it to finish\n        await previousOperation;\n        return null;\n      }\n      throw e;\n    });\n    // finally wait for the current operation to finish successfully, with an\n    // error or with an acquire timeout error\n    return await currentOperation;\n  }\n});","lineCount":193,"map":[[7,2,5,0,"Object"],[7,8,5,0],[7,9,5,0,"defineProperty"],[7,23,5,0],[7,24,5,0,"exports"],[7,31,5,0],[8,4,5,0,"enumerable"],[8,14,5,0],[9,4,5,0,"get"],[9,7,5,0],[9,18,5,0,"get"],[9,19,5,0],[10,6,5,0],[10,13,5,0,"internals"],[10,22,5,0],[11,4,5,0],[12,2,5,0],[13,2,19,0,"Object"],[13,8,19,0],[13,9,19,0,"defineProperty"],[13,23,19,0],[13,24,19,0,"exports"],[13,31,19,0],[14,4,19,0,"enumerable"],[14,14,19,0],[15,4,19,0,"get"],[15,7,19,0],[15,18,19,0,"get"],[15,19,19,0],[16,6,19,0],[16,13,19,0,"LockAcquireTimeoutError"],[16,36,19,0],[17,4,19,0],[18,2,19,0],[19,2,25,0,"Object"],[19,8,25,0],[19,9,25,0,"defineProperty"],[19,23,25,0],[19,24,25,0,"exports"],[19,31,25,0],[20,4,25,0,"enumerable"],[20,14,25,0],[21,4,25,0,"get"],[21,7,25,0],[21,18,25,0,"get"],[21,19,25,0],[22,6,25,0],[22,13,25,0,"NavigatorLockAcquireTimeoutError"],[22,45,25,0],[23,4,25,0],[24,2,25,0],[25,2,27,0,"Object"],[25,8,27,0],[25,9,27,0,"defineProperty"],[25,23,27,0],[25,24,27,0,"exports"],[25,31,27,0],[26,4,27,0,"enumerable"],[26,14,27,0],[27,4,27,0,"get"],[27,7,27,0],[27,18,27,0,"get"],[27,19,27,0],[28,6,27,0],[28,13,27,0,"ProcessLockAcquireTimeoutError"],[28,43,27,0],[29,4,27,0],[30,2,27,0],[31,2,54,0,"exports"],[31,9,54,0],[31,10,54,0,"navigatorLock"],[31,23,54,0],[31,26,54,0,"navigatorLock"],[31,39,54,0],[32,2,139,0,"exports"],[32,9,139,0],[32,10,139,0,"processLock"],[32,21,139,0],[32,24,139,0,"processLock"],[32,35,139,0],[33,2,1,0],[33,6,1,0,"_helpers"],[33,14,1,0],[33,17,1,0,"require"],[33,24,1,0],[33,25,1,0,"_dependencyMap"],[33,39,1,0],[34,2,2,0],[35,0,3,0],[36,0,4,0],[37,2,5,7],[37,8,5,13,"internals"],[37,17,5,22],[37,20,5,25],[38,4,6,4],[39,0,7,0],[40,0,8,0],[41,4,9,4,"debug"],[41,9,9,9],[41,11,9,11],[41,12,9,12],[41,14,9,14,"globalThis"],[41,24,9,24],[41,28,10,8],[41,32,10,8,"supportsLocalStorage"],[41,40,10,28],[41,41,10,28,"supportsLocalStorage"],[41,61,10,28],[41,63,10,29],[41,64,10,30],[41,68,11,8,"globalThis"],[41,78,11,18],[41,79,11,19,"localStorage"],[41,91,11,31],[41,95,12,8,"globalThis"],[41,105,12,18],[41,106,12,19,"localStorage"],[41,118,12,31],[41,119,12,32,"getItem"],[41,126,12,39],[41,127,12,40],[41,159,12,72],[41,160,12,73],[41,165,12,78],[41,171,12,84],[42,2,13,0],[42,3,13,1],[43,2,14,0],[44,0,15,0],[45,0,16,0],[46,0,17,0],[47,0,18,0],[48,2,19,7],[48,8,19,13,"LockAcquireTimeoutError"],[48,31,19,36],[48,40,19,45,"Error"],[48,45,19,50],[48,46,19,51],[49,4,20,4,"constructor"],[49,15,20,15,"constructor"],[49,16,20,16,"message"],[49,23,20,23],[49,25,20,25],[50,6,21,8],[50,11,21,13],[50,12,21,14,"message"],[50,19,21,21],[50,20,21,22],[51,6,22,8],[51,10,22,12],[51,11,22,13,"isAcquireTimeout"],[51,27,22,29],[51,30,22,32],[51,34,22,36],[52,4,23,4],[53,2,24,0],[54,2,25,7],[54,8,25,13,"NavigatorLockAcquireTimeoutError"],[54,40,25,45],[54,49,25,54,"LockAcquireTimeoutError"],[54,72,25,77],[54,73,25,78],[55,2,27,7],[55,8,27,13,"ProcessLockAcquireTimeoutError"],[55,38,27,43],[55,47,27,52,"LockAcquireTimeoutError"],[55,70,27,75],[55,71,27,76],[56,2,29,0],[57,0,30,0],[58,0,31,0],[59,0,32,0],[60,0,33,0],[61,0,34,0],[62,0,35,0],[63,0,36,0],[64,0,37,0],[65,0,38,0],[66,0,39,0],[67,0,40,0],[68,0,41,0],[69,0,42,0],[70,0,43,0],[71,0,44,0],[72,0,45,0],[73,0,46,0],[74,0,47,0],[75,0,48,0],[76,0,49,0],[77,0,50,0],[78,0,51,0],[79,0,52,0],[80,0,53,0],[81,2,54,7],[81,17,54,22,"navigatorLock"],[81,30,54,35,"navigatorLock"],[81,31,54,36,"name"],[81,35,54,40],[81,37,54,42,"acquireTimeout"],[81,51,54,56],[81,53,54,58,"fn"],[81,55,54,60],[81,57,54,62],[82,4,55,4],[82,8,55,8,"internals"],[82,17,55,17],[82,18,55,18,"debug"],[82,23,55,23],[82,25,55,25],[83,6,56,8,"console"],[83,13,56,15],[83,14,56,16,"log"],[83,17,56,19],[83,18,56,20],[83,68,56,70],[83,70,56,72,"name"],[83,74,56,76],[83,76,56,78,"acquireTimeout"],[83,90,56,92],[83,91,56,93],[84,4,57,4],[85,4,58,4],[85,10,58,10,"abortController"],[85,25,58,25],[85,28,58,28],[85,32,58,32,"globalThis"],[85,42,58,42],[85,43,58,43,"AbortController"],[85,58,58,58],[85,59,58,59],[85,60,58,60],[86,4,59,4],[86,8,59,8,"acquireTimeout"],[86,22,59,22],[86,25,59,25],[86,26,59,26],[86,28,59,28],[87,6,60,8,"setTimeout"],[87,16,60,18],[87,17,60,19],[87,23,60,25],[88,8,61,12,"abortController"],[88,23,61,27],[88,24,61,28,"abort"],[88,29,61,33],[88,30,61,34],[88,31,61,35],[89,8,62,12],[89,12,62,16,"internals"],[89,21,62,25],[89,22,62,26,"debug"],[89,27,62,31],[89,29,62,33],[90,10,63,16,"console"],[90,17,63,23],[90,18,63,24,"log"],[90,21,63,27],[90,22,63,28],[90,76,63,82],[90,78,63,84,"name"],[90,82,63,88],[90,83,63,89],[91,8,64,12],[92,6,65,8],[92,7,65,9],[92,9,65,11,"acquireTimeout"],[92,23,65,25],[92,24,65,26],[93,4,66,4],[94,4,67,4],[95,4,68,4],[96,4,69,4],[97,4,70,4],[98,4,71,4],[99,4,72,4],[100,4,73,4],[101,4,74,4],[102,4,75,4],[102,11,75,11],[102,17,75,17,"Promise"],[102,24,75,24],[102,25,75,25,"resolve"],[102,32,75,32],[102,33,75,33],[102,34,75,34],[102,35,75,35,"then"],[102,39,75,39],[102,40,75,40],[102,46,75,46,"globalThis"],[102,56,75,56],[102,57,75,57,"navigator"],[102,66,75,66],[102,67,75,67,"locks"],[102,72,75,72],[102,73,75,73,"request"],[102,80,75,80],[102,81,75,81,"name"],[102,85,75,85],[102,87,75,87,"acquireTimeout"],[102,101,75,101],[102,106,75,106],[102,107,75,107],[102,110,76,10],[103,6,77,12,"mode"],[103,10,77,16],[103,12,77,18],[103,23,77,29],[104,6,78,12,"ifAvailable"],[104,17,78,23],[104,19,78,25],[105,4,79,8],[105,5,79,9],[105,8,80,10],[106,6,81,12,"mode"],[106,10,81,16],[106,12,81,18],[106,23,81,29],[107,6,82,12,"signal"],[107,12,82,18],[107,14,82,20,"abortController"],[107,29,82,35],[107,30,82,36,"signal"],[108,4,83,8],[108,5,83,9],[108,7,83,11],[108,13,83,18,"lock"],[108,17,83,22],[108,21,83,27],[109,6,84,8],[109,10,84,12,"lock"],[109,14,84,16],[109,16,84,18],[110,8,85,12],[110,12,85,16,"internals"],[110,21,85,25],[110,22,85,26,"debug"],[110,27,85,31],[110,29,85,33],[111,10,86,16,"console"],[111,17,86,23],[111,18,86,24,"log"],[111,21,86,27],[111,22,86,28],[111,68,86,74],[111,70,86,76,"name"],[111,74,86,80],[111,76,86,82,"lock"],[111,80,86,86],[111,81,86,87,"name"],[111,85,86,91],[111,86,86,92],[112,8,87,12],[113,8,88,12],[113,12,88,16],[114,10,89,16],[114,17,89,23],[114,23,89,29,"fn"],[114,25,89,31],[114,26,89,32],[114,27,89,33],[115,8,90,12],[115,9,90,13],[115,18,91,20],[116,10,92,16],[116,14,92,20,"internals"],[116,23,92,29],[116,24,92,30,"debug"],[116,29,92,35],[116,31,92,37],[117,12,93,20,"console"],[117,19,93,27],[117,20,93,28,"log"],[117,23,93,31],[117,24,93,32],[117,70,93,78],[117,72,93,80,"name"],[117,76,93,84],[117,78,93,86,"lock"],[117,82,93,90],[117,83,93,91,"name"],[117,87,93,95],[117,88,93,96],[118,10,94,16],[119,8,95,12],[120,6,96,8],[120,7,96,9],[120,13,97,13],[121,8,98,12],[121,12,98,16,"acquireTimeout"],[121,26,98,30],[121,31,98,35],[121,32,98,36],[121,34,98,38],[122,10,99,16],[122,14,99,20,"internals"],[122,23,99,29],[122,24,99,30,"debug"],[122,29,99,35],[122,31,99,37],[123,12,100,20,"console"],[123,19,100,27],[123,20,100,28,"log"],[123,23,100,31],[123,24,100,32],[123,87,100,95],[123,89,100,97,"name"],[123,93,100,101],[123,94,100,102],[124,10,101,16],[125,10,102,16],[125,16,102,22],[125,20,102,26,"NavigatorLockAcquireTimeoutError"],[125,52,102,58],[125,53,102,59],[125,107,102,113,"name"],[125,111,102,117],[125,133,102,139],[125,134,102,140],[126,8,103,12],[126,9,103,13],[126,15,104,17],[127,10,105,16],[127,14,105,20,"internals"],[127,23,105,29],[127,24,105,30,"debug"],[127,29,105,35],[127,31,105,37],[128,12,106,20],[128,16,106,24],[129,14,107,24],[129,20,107,30,"result"],[129,26,107,36],[129,29,107,39],[129,35,107,45,"globalThis"],[129,45,107,55],[129,46,107,56,"navigator"],[129,55,107,65],[129,56,107,66,"locks"],[129,61,107,71],[129,62,107,72,"query"],[129,67,107,77],[129,68,107,78],[129,69,107,79],[130,14,108,24,"console"],[130,21,108,31],[130,22,108,32,"log"],[130,25,108,35],[130,26,108,36],[130,76,108,86],[130,78,108,88,"JSON"],[130,82,108,92],[130,83,108,93,"stringify"],[130,92,108,102],[130,93,108,103,"result"],[130,99,108,109],[130,101,108,111],[130,105,108,115],[130,107,108,117],[130,111,108,121],[130,112,108,122],[130,113,108,123],[131,12,109,20],[131,13,109,21],[131,14,110,20],[131,21,110,27,"e"],[131,22,110,28],[131,24,110,30],[132,14,111,24,"console"],[132,21,111,31],[132,22,111,32,"warn"],[132,26,111,36],[132,27,111,37],[132,97,111,107],[132,99,111,109,"e"],[132,100,111,110],[132,101,111,111],[133,12,112,20],[134,10,113,16],[135,10,114,16],[136,10,115,16],[137,10,116,16],[138,10,117,16],[139,10,118,16,"console"],[139,17,118,23],[139,18,118,24,"warn"],[139,22,118,28],[139,23,118,29],[139,272,118,278],[139,273,118,279],[140,10,119,16],[140,17,119,23],[140,23,119,29,"fn"],[140,25,119,31],[140,26,119,32],[140,27,119,33],[141,8,120,12],[142,6,121,8],[143,4,122,4],[143,5,122,5],[143,6,122,6],[143,7,122,7],[144,2,123,0],[145,2,124,0],[145,8,124,6,"PROCESS_LOCKS"],[145,21,124,19],[145,24,124,22],[145,25,124,23],[145,26,124,24],[146,2,125,0],[147,0,126,0],[148,0,127,0],[149,0,128,0],[150,0,129,0],[151,0,130,0],[152,0,131,0],[153,0,132,0],[154,0,133,0],[155,0,134,0],[156,0,135,0],[157,0,136,0],[158,0,137,0],[159,0,138,0],[160,2,139,7],[160,17,139,22,"processLock"],[160,28,139,33,"processLock"],[160,29,139,34,"name"],[160,33,139,38],[160,35,139,40,"acquireTimeout"],[160,49,139,54],[160,51,139,56,"fn"],[160,53,139,58],[160,55,139,60],[161,4,140,4],[161,8,140,8,"_a"],[161,10,140,10],[162,4,141,4],[162,10,141,10,"previousOperation"],[162,27,141,27],[162,30,141,30],[162,31,141,31,"_a"],[162,33,141,33],[162,36,141,36,"PROCESS_LOCKS"],[162,49,141,49],[162,50,141,50,"name"],[162,54,141,54],[162,55,141,55],[162,61,141,61],[162,65,141,65],[162,69,141,69,"_a"],[162,71,141,71],[162,76,141,76],[162,81,141,81],[162,82,141,82],[162,85,141,85,"_a"],[162,87,141,87],[162,90,141,90,"Promise"],[162,97,141,97],[162,98,141,98,"resolve"],[162,105,141,105],[162,106,141,106],[162,107,141,107],[163,4,142,4],[163,10,142,10,"currentOperation"],[163,26,142,26],[163,29,142,29,"Promise"],[163,36,142,36],[163,37,142,37,"race"],[163,41,142,41],[163,42,142,42],[163,43,143,8,"previousOperation"],[163,60,143,25],[163,61,143,26,"catch"],[163,66,143,31],[163,67,143,32],[163,73,143,38],[164,6,144,12],[165,6,145,12],[165,13,145,19],[165,17,145,23],[166,4,146,8],[166,5,146,9],[166,6,146,10],[166,8,147,8,"acquireTimeout"],[166,22,147,22],[166,26,147,26],[166,27,147,27],[166,30,148,14],[166,34,148,18,"Promise"],[166,41,148,25],[166,42,148,26],[166,43,148,27,"_"],[166,44,148,28],[166,46,148,30,"reject"],[166,52,148,36],[166,57,148,41],[167,6,149,16,"setTimeout"],[167,16,149,26],[167,17,149,27],[167,23,149,33],[168,8,150,20,"reject"],[168,14,150,26],[168,15,150,27],[168,19,150,31,"ProcessLockAcquireTimeoutError"],[168,49,150,61],[168,50,150,62],[168,86,150,98,"name"],[168,90,150,102],[168,103,150,115],[168,104,150,116],[168,105,150,117],[169,6,151,16],[169,7,151,17],[169,9,151,19,"acquireTimeout"],[169,23,151,33],[169,24,151,34],[170,4,152,12],[170,5,152,13],[170,6,152,14],[170,9,153,14],[170,13,153,18],[170,14,154,5],[170,15,154,6,"filter"],[170,21,154,12],[170,22,154,14,"x"],[170,23,154,15],[170,27,154,20,"x"],[170,28,154,21],[170,29,154,22],[170,30,154,23],[170,31,155,9,"catch"],[170,36,155,14],[170,37,155,16,"e"],[170,38,155,17],[170,42,155,22],[171,6,156,8],[171,10,156,12,"e"],[171,11,156,13],[171,15,156,17,"e"],[171,16,156,18],[171,17,156,19,"isAcquireTimeout"],[171,33,156,35],[171,35,156,37],[172,8,157,12],[172,14,157,18,"e"],[172,15,157,19],[173,6,158,8],[174,6,159,8],[174,13,159,15],[174,17,159,19],[175,4,160,4],[175,5,160,5],[175,6,160,6],[175,7,161,9,"then"],[175,11,161,13],[175,12,161,14],[175,24,161,26],[176,6,162,8],[177,6,163,8],[178,6,164,8],[178,13,164,15],[178,19,164,21,"fn"],[178,21,164,23],[178,22,164,24],[178,23,164,25],[179,4,165,4],[179,5,165,5],[179,6,165,6],[180,4,166,4,"PROCESS_LOCKS"],[180,17,166,17],[180,18,166,18,"name"],[180,22,166,22],[180,23,166,23],[180,26,166,26,"currentOperation"],[180,42,166,42],[180,43,166,43,"catch"],[180,48,166,48],[180,49,166,49],[180,55,166,56,"e"],[180,56,166,57],[180,60,166,62],[181,6,167,8],[181,10,167,12,"e"],[181,11,167,13],[181,15,167,17,"e"],[181,16,167,18],[181,17,167,19,"isAcquireTimeout"],[181,33,167,35],[181,35,167,37],[182,8,168,12],[183,8,169,12],[184,8,170,12],[184,14,170,18,"previousOperation"],[184,31,170,35],[185,8,171,12],[185,15,171,19],[185,19,171,23],[186,6,172,8],[187,6,173,8],[187,12,173,14,"e"],[187,13,173,15],[188,4,174,4],[188,5,174,5],[188,6,174,6],[189,4,175,4],[190,4,176,4],[191,4,177,4],[191,11,177,11],[191,17,177,17,"currentOperation"],[191,33,177,33],[192,2,178,0],[193,0,178,1],[193,3]],"functionMap":{"names":["<global>","LockAcquireTimeoutError","LockAcquireTimeoutError#constructor","NavigatorLockAcquireTimeoutError","ProcessLockAcquireTimeoutError","navigatorLock","setTimeout$argument_0","Promise.resolve.then$argument_0","globalThis.navigator.locks.request$argument_2","processLock","previousOperation._catch$argument_0","Promise$argument_0","filter$argument_0","Promise.race._catch$argument_0","Promise.race._catch.then$argument_0","currentOperation._catch$argument_0"],"mappings":"AAA;OCkB;ICC;KDG;CDC;OGC;CHC;OIC;CJC;OK0B;mBCM;SDK;wCEU;WCQ;KDuC,CF;CLC;OSgB;gCCI;SDG;0BEE;2BLC;iBKE;aFC;aGE,QH;eIC;KJK;cKC;KLI;iDMC;KNQ;CTI"},"hasCjsExports":false},"type":"js/module"}]}