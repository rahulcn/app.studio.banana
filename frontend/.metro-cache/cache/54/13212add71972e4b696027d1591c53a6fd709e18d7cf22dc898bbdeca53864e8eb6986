{"dependencies":[{"name":"./PlatformChecker","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":61,"index":76}}],"key":"O136KS8LvzB4pufOIvMCitL6KOc=","exportNames":["*"],"imports":1}},{"name":"./core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":77},"end":{"line":4,"column":84,"index":161}}],"key":"0ONCEUiDM4TuRiJMnypk4k7v4nE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"updateLayoutAnimations\", {\n    enumerable: true,\n    get: function () {\n      return updateLayoutAnimations;\n    }\n  });\n  var _PlatformChecker = require(_dependencyMap[0], \"./PlatformChecker\");\n  var _core = require(_dependencyMap[1], \"./core\");\n  function createUpdateManager() {\n    const animations = [];\n    // When a stack is rerendered we reconfigure all the shared elements.\n    // To do that we want them to appear in our batch in the correct order,\n    // so we defer some of the updates to appear at the end of the batch.\n    const deferredAnimations = [];\n    return {\n      update(batchItem, isUnmounting) {\n        if (isUnmounting) {\n          deferredAnimations.push(batchItem);\n        } else {\n          animations.push(batchItem);\n        }\n        if (animations.length + deferredAnimations.length === 1) {\n          (0, _PlatformChecker.isFabric)() ? this.flush() : setImmediate(this.flush);\n        }\n      },\n      flush() {\n        (0, _core.configureLayoutAnimationBatch)(animations.concat(deferredAnimations));\n        animations.length = 0;\n        deferredAnimations.length = 0;\n      }\n    };\n  }\n\n  /**\n   * Lets you update the current configuration of the layout animation or shared element transition for a given component.\n   * Configurations are batched and applied at the end of the current execution block, right before sending the response back to native.\n   *\n   * @param viewTag - The tag of the component you'd like to configure.\n   * @param type - The type of the animation you'd like to configure - {@link LayoutAnimationType}.\n   * @param config - The animation configuration - {@link LayoutAnimationFunction}, {@link SharedTransitionAnimationsFunction}, {@link ProgressAnimationCallback} or {@link Keyframe}. Passing `undefined` will remove the animation.\n   * @param sharedTransitionTag - The tag of the shared element transition you'd like to configure. Passing `undefined` will remove the transition.\n   * @param isUnmounting - Determines whether the configuration should be included at the end of the batch, after all the non-deferred configurations (even those that were updated later). This is used to retain the correct ordering of shared elements. Defaults to `false`.\n   */\n  let updateLayoutAnimations;\n  if ((0, _PlatformChecker.shouldBeUseWeb)()) {\n    updateLayoutAnimations = () => {\n      // no-op\n    };\n  } else {\n    const updateLayoutAnimationsManager = createUpdateManager();\n    updateLayoutAnimations = (viewTag, type, config, sharedTransitionTag, isUnmounting) => updateLayoutAnimationsManager.update({\n      viewTag,\n      type,\n      config: config ? (0, _core.makeShareableCloneRecursive)(config) : undefined,\n      sharedTransitionTag\n    }, isUnmounting);\n  }\n});","lineCount":64,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,40,0,"Object"],[7,8,40,0],[7,9,40,0,"defineProperty"],[7,23,40,0],[7,24,40,0,"exports"],[7,31,40,0],[8,4,40,0,"enumerable"],[8,14,40,0],[9,4,40,0,"get"],[9,7,40,0],[9,18,40,0,"get"],[9,19,40,0],[10,6,40,0],[10,13,40,0,"updateLayoutAnimations"],[10,35,40,0],[11,4,40,0],[12,2,40,0],[13,2,3,0],[13,6,3,0,"_PlatformChecker"],[13,22,3,0],[13,25,3,0,"require"],[13,32,3,0],[13,33,3,0,"_dependencyMap"],[13,47,3,0],[14,2,4,0],[14,6,4,0,"_core"],[14,11,4,0],[14,14,4,0,"require"],[14,21,4,0],[14,22,4,0,"_dependencyMap"],[14,36,4,0],[15,2,5,0],[15,11,5,9,"createUpdateManager"],[15,30,5,28,"createUpdateManager"],[15,31,5,28],[15,33,5,31],[16,4,6,2],[16,10,6,8,"animations"],[16,20,6,18],[16,23,6,21],[16,25,6,23],[17,4,7,2],[18,4,8,2],[19,4,9,2],[20,4,10,2],[20,10,10,8,"deferredAnimations"],[20,28,10,26],[20,31,10,29],[20,33,10,31],[21,4,11,2],[21,11,11,9],[22,6,12,4,"update"],[22,12,12,10,"update"],[22,13,12,11,"batchItem"],[22,22,12,20],[22,24,12,22,"isUnmounting"],[22,36,12,34],[22,38,12,36],[23,8,13,6],[23,12,13,10,"isUnmounting"],[23,24,13,22],[23,26,13,24],[24,10,14,8,"deferredAnimations"],[24,28,14,26],[24,29,14,27,"push"],[24,33,14,31],[24,34,14,32,"batchItem"],[24,43,14,41],[24,44,14,42],[25,8,15,6],[25,9,15,7],[25,15,15,13],[26,10,16,8,"animations"],[26,20,16,18],[26,21,16,19,"push"],[26,25,16,23],[26,26,16,24,"batchItem"],[26,35,16,33],[26,36,16,34],[27,8,17,6],[28,8,18,6],[28,12,18,10,"animations"],[28,22,18,20],[28,23,18,21,"length"],[28,29,18,27],[28,32,18,30,"deferredAnimations"],[28,50,18,48],[28,51,18,49,"length"],[28,57,18,55],[28,62,18,60],[28,63,18,61],[28,65,18,63],[29,10,19,8],[29,14,19,8,"isFabric"],[29,30,19,16],[29,31,19,16,"isFabric"],[29,39,19,16],[29,41,19,17],[29,42,19,18],[29,45,19,21],[29,49,19,25],[29,50,19,26,"flush"],[29,55,19,31],[29,56,19,32],[29,57,19,33],[29,60,19,36,"setImmediate"],[29,72,19,48],[29,73,19,49],[29,77,19,53],[29,78,19,54,"flush"],[29,83,19,59],[29,84,19,60],[30,8,20,6],[31,6,21,4],[31,7,21,5],[32,6,22,4,"flush"],[32,11,22,9,"flush"],[32,12,22,9],[32,14,22,12],[33,8,23,6],[33,12,23,6,"configureLayoutAnimationBatch"],[33,17,23,35],[33,18,23,35,"configureLayoutAnimationBatch"],[33,47,23,35],[33,49,23,36,"animations"],[33,59,23,46],[33,60,23,47,"concat"],[33,66,23,53],[33,67,23,54,"deferredAnimations"],[33,85,23,72],[33,86,23,73],[33,87,23,74],[34,8,24,6,"animations"],[34,18,24,16],[34,19,24,17,"length"],[34,25,24,23],[34,28,24,26],[34,29,24,27],[35,8,25,6,"deferredAnimations"],[35,26,25,24],[35,27,25,25,"length"],[35,33,25,31],[35,36,25,34],[35,37,25,35],[36,6,26,4],[37,4,27,2],[37,5,27,3],[38,2,28,0],[40,2,30,0],[41,0,31,0],[42,0,32,0],[43,0,33,0],[44,0,34,0],[45,0,35,0],[46,0,36,0],[47,0,37,0],[48,0,38,0],[49,0,39,0],[50,2,40,7],[50,6,40,11,"updateLayoutAnimations"],[50,28,40,33],[51,2,41,0],[51,6,41,4],[51,10,41,4,"shouldBeUseWeb"],[51,26,41,18],[51,27,41,18,"shouldBeUseWeb"],[51,41,41,18],[51,43,41,19],[51,44,41,20],[51,46,41,22],[52,4,42,2,"updateLayoutAnimations"],[52,26,42,24],[52,29,42,27,"updateLayoutAnimations"],[52,30,42,27],[52,35,42,33],[53,6,43,4],[54,4,43,4],[54,5,44,3],[55,2,45,0],[55,3,45,1],[55,9,45,7],[56,4,46,2],[56,10,46,8,"updateLayoutAnimationsManager"],[56,39,46,37],[56,42,46,40,"createUpdateManager"],[56,61,46,59],[56,62,46,60],[56,63,46,61],[57,4,47,2,"updateLayoutAnimations"],[57,26,47,24],[57,29,47,27,"updateLayoutAnimations"],[57,30,47,28,"viewTag"],[57,37,47,35],[57,39,47,37,"type"],[57,43,47,41],[57,45,47,43,"config"],[57,51,47,49],[57,53,47,51,"sharedTransitionTag"],[57,72,47,70],[57,74,47,72,"isUnmounting"],[57,86,47,84],[57,91,47,89,"updateLayoutAnimationsManager"],[57,120,47,118],[57,121,47,119,"update"],[57,127,47,125],[57,128,47,126],[58,6,48,4,"viewTag"],[58,13,48,11],[59,6,49,4,"type"],[59,10,49,8],[60,6,50,4,"config"],[60,12,50,10],[60,14,50,12,"config"],[60,20,50,18],[60,23,50,21],[60,27,50,21,"makeShareableCloneRecursive"],[60,32,50,48],[60,33,50,48,"makeShareableCloneRecursive"],[60,60,50,48],[60,62,50,49,"config"],[60,68,50,55],[60,69,50,56],[60,72,50,59,"undefined"],[60,81,50,68],[61,6,51,4,"sharedTransitionTag"],[62,4,52,2],[62,5,52,3],[62,7,52,5,"isUnmounting"],[62,19,52,17],[62,20,52,18],[63,2,53,0],[64,0,53,1],[64,3]],"functionMap":{"names":["<global>","createUpdateManager","update","flush","updateLayoutAnimations"],"mappings":"AAA;ACI;ICO;KDS;IEC;KFI;CDE;2BIc;GJE;2BIG;kBJK"},"hasCjsExports":false},"type":"js/module"}]}