{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  /**\n   * imported from react-native\n   */\n  /* eslint-disable */\n  /**\n   * This is a helper function for when a component needs to be able to forward a ref\n   * to a child component, but still needs to have access to that component as part of\n   * its implementation.\n   *\n   * Its main use case is in wrappers for native components.\n   *\n   * Usage:\n   *\n   *   class MyView extends React.Component {\n   *     _nativeRef = null;\n   *\n   *     _setNativeRef = setAndForwardRef({\n   *       getForwardedRef: () => this.props.forwardedRef,\n   *       setLocalRef: ref => {\n   *         this._nativeRef = ref;\n   *       },\n   *     });\n   *\n   *     render() {\n   *       return <View ref={this._setNativeRef} />;\n   *     }\n   *   }\n   *\n   *   const MyViewWithRef = React.forwardRef((props, ref) => (\n   *     <MyView {...props} forwardedRef={ref} />\n   *   ));\n   *\n   *   module.exports = MyViewWithRef;\n   */\n  /* eslint-enable */\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  function setAndForwardRef({\n    getForwardedRef,\n    setLocalRef\n  }) {\n    return function forwardRef(ref) {\n      const forwardedRef = getForwardedRef();\n      setLocalRef(ref);\n\n      // Forward to user ref prop (if one has been specified)\n      if (typeof forwardedRef === 'function') {\n        // Handle function-based refs. String-based refs are handled as functions.\n        forwardedRef(ref);\n      } else if (typeof forwardedRef === 'object' && forwardedRef != null) {\n        // Handle createRef-based refs\n        forwardedRef.current = ref;\n      }\n    };\n  }\n  var _default = setAndForwardRef;\n});","lineCount":67,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[5,0,4,0],[6,0,5,0],[7,2,6,0],[8,2,7,0],[9,0,8,0],[10,0,9,0],[11,0,10,0],[12,0,11,0],[13,0,12,0],[14,0,13,0],[15,0,14,0],[16,0,15,0],[17,0,16,0],[18,0,17,0],[19,0,18,0],[20,0,19,0],[21,0,20,0],[22,0,21,0],[23,0,22,0],[24,0,23,0],[25,0,24,0],[26,0,25,0],[27,0,26,0],[28,0,27,0],[29,0,28,0],[30,0,29,0],[31,0,30,0],[32,0,31,0],[33,0,32,0],[34,0,33,0],[35,0,34,0],[36,0,35,0],[37,0,36,0],[38,2,37,0],[39,2,37,0,"Object"],[39,8,37,0],[39,9,37,0,"defineProperty"],[39,23,37,0],[39,24,37,0,"exports"],[39,31,37,0],[40,4,37,0,"value"],[40,9,37,0],[41,2,37,0],[42,2,56,0,"Object"],[42,8,56,0],[42,9,56,0,"defineProperty"],[42,23,56,0],[42,24,56,0,"exports"],[42,31,56,0],[43,4,56,0,"enumerable"],[43,14,56,0],[44,4,56,0,"get"],[44,7,56,0],[44,18,56,0,"get"],[44,19,56,0],[45,6,56,0],[45,13,56,0,"_default"],[45,21,56,0],[46,4,56,0],[47,2,56,0],[48,2,38,0],[48,11,38,9,"setAndForwardRef"],[48,27,38,25,"setAndForwardRef"],[48,28,38,26],[49,4,39,2,"getForwardedRef"],[49,19,39,17],[50,4,40,2,"setLocalRef"],[51,2,41,0],[51,3,41,1],[51,5,41,3],[52,4,42,2],[52,11,42,9],[52,20,42,18,"forwardRef"],[52,30,42,28,"forwardRef"],[52,31,42,29,"ref"],[52,34,42,32],[52,36,42,34],[53,6,43,4],[53,12,43,10,"forwardedRef"],[53,24,43,22],[53,27,43,25,"getForwardedRef"],[53,42,43,40],[53,43,43,41],[53,44,43,42],[54,6,44,4,"setLocalRef"],[54,17,44,15],[54,18,44,16,"ref"],[54,21,44,19],[54,22,44,20],[56,6,46,4],[57,6,47,4],[57,10,47,8],[57,17,47,15,"forwardedRef"],[57,29,47,27],[57,34,47,32],[57,44,47,42],[57,46,47,44],[58,8,48,6],[59,8,49,6,"forwardedRef"],[59,20,49,18],[59,21,49,19,"ref"],[59,24,49,22],[59,25,49,23],[60,6,50,4],[60,7,50,5],[60,13,50,11],[60,17,50,15],[60,24,50,22,"forwardedRef"],[60,36,50,34],[60,41,50,39],[60,49,50,47],[60,53,50,51,"forwardedRef"],[60,65,50,63],[60,69,50,67],[60,73,50,71],[60,75,50,73],[61,8,51,6],[62,8,52,6,"forwardedRef"],[62,20,52,18],[62,21,52,19,"current"],[62,28,52,26],[62,31,52,29,"ref"],[62,34,52,32],[63,6,53,4],[64,4,54,2],[64,5,54,3],[65,2,55,0],[66,2,56,0],[66,6,56,0,"_default"],[66,14,56,0],[66,17,56,15,"setAndForwardRef"],[66,33,56,31],[67,0,56,32],[67,3]],"functionMap":{"names":["<global>","setAndForwardRef","forwardRef"],"mappings":"AAA;ACqC;SCI;GDY;CDC"},"hasCjsExports":false},"type":"js/module"}]}