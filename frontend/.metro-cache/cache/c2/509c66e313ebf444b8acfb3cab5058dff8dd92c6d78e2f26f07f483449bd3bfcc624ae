{"dependencies":[{"name":"./GoTrueAdminApi","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":41,"index":257},"end":{"line":6,"column":68,"index":284}}],"key":"i76uMxXVdWAA3Rph0eWK7LoaO/w=","exportNames":["*"],"imports":1}},{"name":"./lib/constants","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":20,"index":307},"end":{"line":7,"column":46,"index":333}}],"key":"Tozkr70n9lVAcLLAJew2JSVOK9Y=","exportNames":["*"],"imports":1}},{"name":"./lib/errors","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":17,"index":352},"end":{"line":8,"column":40,"index":375}}],"key":"Hvlclxpmmg311e5qhG3wYodSjVs=","exportNames":["*"],"imports":1}},{"name":"./lib/fetch","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":16,"index":393},"end":{"line":9,"column":38,"index":415}}],"key":"R6LkNjEOXDiLQ/+hwj6jDUhuOC4=","exportNames":["*"],"imports":1}},{"name":"./lib/helpers","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":18,"index":435},"end":{"line":10,"column":42,"index":459}}],"key":"WC5jlm7KwiIsdJM6jCtPN6iFk4U=","exportNames":["*"],"imports":1}},{"name":"./lib/local-storage","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":11,"column":24,"index":485},"end":{"line":11,"column":54,"index":515}}],"key":"28e7FuPaeGJTeNMVDStJkLK21ZQ=","exportNames":["*"],"imports":1}},{"name":"./lib/polyfills","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":12,"column":20,"index":537},"end":{"line":12,"column":46,"index":563}}],"key":"H1na6Pv39nAwh4LAnhORLuVehnY=","exportNames":["*"],"imports":1}},{"name":"./lib/version","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":13,"column":18,"index":583},"end":{"line":13,"column":42,"index":607}}],"key":"be4aTMTsFhd78/kHR0JbG8rudXE=","exportNames":["*"],"imports":1}},{"name":"./lib/locks","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":14,"column":16,"index":625},"end":{"line":14,"column":38,"index":647}}],"key":"30OMvxA5kFoj+Fk30l1b7z+Cmv4=","exportNames":["*"],"imports":1}},{"name":"./lib/base64url","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":15,"column":20,"index":669},"end":{"line":15,"column":46,"index":695}}],"key":"A8ay9+wpIpGL0Q6K/yfIViI8mrc=","exportNames":["*"],"imports":1}},{"name":"./lib/web3/ethereum","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":16,"column":19,"index":716},"end":{"line":16,"column":49,"index":746}}],"key":"7NCa1l0WsdounoYDseQIolyeoT4=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var __importDefault = this && this.__importDefault || function (mod) {\n    return mod && mod.__esModule ? mod : {\n      \"default\": mod\n    };\n  };\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  const GoTrueAdminApi_1 = __importDefault(require(_dependencyMap[0], \"./GoTrueAdminApi\"));\n  const constants_1 = require(_dependencyMap[1], \"./lib/constants\");\n  const errors_1 = require(_dependencyMap[2], \"./lib/errors\");\n  const fetch_1 = require(_dependencyMap[3], \"./lib/fetch\");\n  const helpers_1 = require(_dependencyMap[4], \"./lib/helpers\");\n  const local_storage_1 = require(_dependencyMap[5], \"./lib/local-storage\");\n  const polyfills_1 = require(_dependencyMap[6], \"./lib/polyfills\");\n  const version_1 = require(_dependencyMap[7], \"./lib/version\");\n  const locks_1 = require(_dependencyMap[8], \"./lib/locks\");\n  const base64url_1 = require(_dependencyMap[9], \"./lib/base64url\");\n  const ethereum_1 = require(_dependencyMap[10], \"./lib/web3/ethereum\");\n  (0, polyfills_1.polyfillGlobalThis)(); // Make \"globalThis\" available\n  const DEFAULT_OPTIONS = {\n    url: constants_1.GOTRUE_URL,\n    storageKey: constants_1.STORAGE_KEY,\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true,\n    headers: constants_1.DEFAULT_HEADERS,\n    flowType: 'implicit',\n    debug: false,\n    hasCustomAuthorizationHeader: false\n  };\n  async function lockNoOp(name, acquireTimeout, fn) {\n    return await fn();\n  }\n  /**\n   * Caches JWKS values for all clients created in the same environment. This is\n   * especially useful for shared-memory execution environments such as Vercel's\n   * Fluid Compute, AWS Lambda or Supabase's Edge Functions. Regardless of how\n   * many clients are created, if they share the same storage key they will use\n   * the same JWKS cache, significantly speeding up getClaims() with asymmetric\n   * JWTs.\n   */\n  const GLOBAL_JWKS = {};\n  class GoTrueClient {\n    /**\n     * Create a new client for use in the browser.\n     */\n    constructor(options) {\n      var _a, _b;\n      /**\n       * @experimental\n       */\n      this.userStorage = null;\n      this.memoryStorage = null;\n      this.stateChangeEmitters = new Map();\n      this.autoRefreshTicker = null;\n      this.visibilityChangedCallback = null;\n      this.refreshingDeferred = null;\n      /**\n       * Keeps track of the async client initialization.\n       * When null or not yet resolved the auth state is `unknown`\n       * Once resolved the auth state is known and it's safe to call any further client methods.\n       * Keep extra care to never reject or throw uncaught errors\n       */\n      this.initializePromise = null;\n      this.detectSessionInUrl = true;\n      this.hasCustomAuthorizationHeader = false;\n      this.suppressGetSessionWarning = false;\n      this.lockAcquired = false;\n      this.pendingInLock = [];\n      /**\n       * Used to broadcast state change events to other tabs listening.\n       */\n      this.broadcastChannel = null;\n      this.logger = console.log;\n      this.instanceID = GoTrueClient.nextInstanceID;\n      GoTrueClient.nextInstanceID += 1;\n      if (this.instanceID > 0 && (0, helpers_1.isBrowser)()) {\n        console.warn('Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key.');\n      }\n      const settings = Object.assign(Object.assign({}, DEFAULT_OPTIONS), options);\n      this.logDebugMessages = !!settings.debug;\n      if (typeof settings.debug === 'function') {\n        this.logger = settings.debug;\n      }\n      this.persistSession = settings.persistSession;\n      this.storageKey = settings.storageKey;\n      this.autoRefreshToken = settings.autoRefreshToken;\n      this.admin = new GoTrueAdminApi_1.default({\n        url: settings.url,\n        headers: settings.headers,\n        fetch: settings.fetch\n      });\n      this.url = settings.url;\n      this.headers = settings.headers;\n      this.fetch = (0, helpers_1.resolveFetch)(settings.fetch);\n      this.lock = settings.lock || lockNoOp;\n      this.detectSessionInUrl = settings.detectSessionInUrl;\n      this.flowType = settings.flowType;\n      this.hasCustomAuthorizationHeader = settings.hasCustomAuthorizationHeader;\n      if (settings.lock) {\n        this.lock = settings.lock;\n      } else if ((0, helpers_1.isBrowser)() && ((_a = globalThis === null || globalThis === void 0 ? void 0 : globalThis.navigator) === null || _a === void 0 ? void 0 : _a.locks)) {\n        this.lock = locks_1.navigatorLock;\n      } else {\n        this.lock = lockNoOp;\n      }\n      if (!this.jwks) {\n        this.jwks = {\n          keys: []\n        };\n        this.jwks_cached_at = Number.MIN_SAFE_INTEGER;\n      }\n      this.mfa = {\n        verify: this._verify.bind(this),\n        enroll: this._enroll.bind(this),\n        unenroll: this._unenroll.bind(this),\n        challenge: this._challenge.bind(this),\n        listFactors: this._listFactors.bind(this),\n        challengeAndVerify: this._challengeAndVerify.bind(this),\n        getAuthenticatorAssuranceLevel: this._getAuthenticatorAssuranceLevel.bind(this)\n      };\n      if (this.persistSession) {\n        if (settings.storage) {\n          this.storage = settings.storage;\n        } else {\n          if ((0, helpers_1.supportsLocalStorage)()) {\n            this.storage = globalThis.localStorage;\n          } else {\n            this.memoryStorage = {};\n            this.storage = (0, local_storage_1.memoryLocalStorageAdapter)(this.memoryStorage);\n          }\n        }\n        if (settings.userStorage) {\n          this.userStorage = settings.userStorage;\n        }\n      } else {\n        this.memoryStorage = {};\n        this.storage = (0, local_storage_1.memoryLocalStorageAdapter)(this.memoryStorage);\n      }\n      if ((0, helpers_1.isBrowser)() && globalThis.BroadcastChannel && this.persistSession && this.storageKey) {\n        try {\n          this.broadcastChannel = new globalThis.BroadcastChannel(this.storageKey);\n        } catch (e) {\n          console.error('Failed to create a new BroadcastChannel, multi-tab state changes will not be available', e);\n        }\n        (_b = this.broadcastChannel) === null || _b === void 0 ? void 0 : _b.addEventListener('message', async event => {\n          this._debug('received broadcast notification from other tab or client', event);\n          await this._notifyAllSubscribers(event.data.event, event.data.session, false); // broadcast = false so we don't get an endless loop of messages\n        });\n      }\n      this.initialize();\n    }\n    /**\n     * The JWKS used for verifying asymmetric JWTs\n     */\n    get jwks() {\n      var _a, _b;\n      return (_b = (_a = GLOBAL_JWKS[this.storageKey]) === null || _a === void 0 ? void 0 : _a.jwks) !== null && _b !== void 0 ? _b : {\n        keys: []\n      };\n    }\n    set jwks(value) {\n      GLOBAL_JWKS[this.storageKey] = Object.assign(Object.assign({}, GLOBAL_JWKS[this.storageKey]), {\n        jwks: value\n      });\n    }\n    get jwks_cached_at() {\n      var _a, _b;\n      return (_b = (_a = GLOBAL_JWKS[this.storageKey]) === null || _a === void 0 ? void 0 : _a.cachedAt) !== null && _b !== void 0 ? _b : Number.MIN_SAFE_INTEGER;\n    }\n    set jwks_cached_at(value) {\n      GLOBAL_JWKS[this.storageKey] = Object.assign(Object.assign({}, GLOBAL_JWKS[this.storageKey]), {\n        cachedAt: value\n      });\n    }\n    _debug(...args) {\n      if (this.logDebugMessages) {\n        this.logger(`GoTrueClient@${this.instanceID} (${version_1.version}) ${new Date().toISOString()}`, ...args);\n      }\n      return this;\n    }\n    /**\n     * Initializes the client session either from the url or from storage.\n     * This method is automatically called when instantiating the client, but should also be called\n     * manually when checking for an error from an auth redirect (oauth, magiclink, password recovery, etc).\n     */\n    async initialize() {\n      if (this.initializePromise) {\n        return await this.initializePromise;\n      }\n      this.initializePromise = (async () => {\n        return await this._acquireLock(-1, async () => {\n          return await this._initialize();\n        });\n      })();\n      return await this.initializePromise;\n    }\n    /**\n     * IMPORTANT:\n     * 1. Never throw in this method, as it is called from the constructor\n     * 2. Never return a session from this method as it would be cached over\n     *    the whole lifetime of the client\n     */\n    async _initialize() {\n      var _a;\n      try {\n        const params = (0, helpers_1.parseParametersFromURL)(window.location.href);\n        let callbackUrlType = 'none';\n        if (this._isImplicitGrantCallback(params)) {\n          callbackUrlType = 'implicit';\n        } else if (await this._isPKCECallback(params)) {\n          callbackUrlType = 'pkce';\n        }\n        /**\n         * Attempt to get the session from the URL only if these conditions are fulfilled\n         *\n         * Note: If the URL isn't one of the callback url types (implicit or pkce),\n         * then there could be an existing session so we don't want to prematurely remove it\n         */\n        if ((0, helpers_1.isBrowser)() && this.detectSessionInUrl && callbackUrlType !== 'none') {\n          const {\n            data,\n            error\n          } = await this._getSessionFromURL(params, callbackUrlType);\n          if (error) {\n            this._debug('#_initialize()', 'error detecting session from URL', error);\n            if ((0, errors_1.isAuthImplicitGrantRedirectError)(error)) {\n              const errorCode = (_a = error.details) === null || _a === void 0 ? void 0 : _a.code;\n              if (errorCode === 'identity_already_exists' || errorCode === 'identity_not_found' || errorCode === 'single_identity_not_deletable') {\n                return {\n                  error\n                };\n              }\n            }\n            // failed login attempt via url,\n            // remove old session as in verifyOtp, signUp and signInWith*\n            await this._removeSession();\n            return {\n              error\n            };\n          }\n          const {\n            session,\n            redirectType\n          } = data;\n          this._debug('#_initialize()', 'detected session in URL', session, 'redirect type', redirectType);\n          await this._saveSession(session);\n          setTimeout(async () => {\n            if (redirectType === 'recovery') {\n              await this._notifyAllSubscribers('PASSWORD_RECOVERY', session);\n            } else {\n              await this._notifyAllSubscribers('SIGNED_IN', session);\n            }\n          }, 0);\n          return {\n            error: null\n          };\n        }\n        // no login attempt via callback url try to recover session from storage\n        await this._recoverAndRefresh();\n        return {\n          error: null\n        };\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            error\n          };\n        }\n        return {\n          error: new errors_1.AuthUnknownError('Unexpected error during initialization', error)\n        };\n      } finally {\n        await this._handleVisibilityChange();\n        this._debug('#_initialize()', 'end');\n      }\n    }\n    /**\n     * Creates a new anonymous user.\n     *\n     * @returns A session where the is_anonymous claim in the access token JWT set to true\n     */\n    async signInAnonymously(credentials) {\n      var _a, _b, _c;\n      try {\n        const res = await (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/signup`, {\n          headers: this.headers,\n          body: {\n            data: (_b = (_a = credentials === null || credentials === void 0 ? void 0 : credentials.options) === null || _a === void 0 ? void 0 : _a.data) !== null && _b !== void 0 ? _b : {},\n            gotrue_meta_security: {\n              captcha_token: (_c = credentials === null || credentials === void 0 ? void 0 : credentials.options) === null || _c === void 0 ? void 0 : _c.captchaToken\n            }\n          },\n          xform: fetch_1._sessionResponse\n        });\n        const {\n          data,\n          error\n        } = res;\n        if (error || !data) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error: error\n          };\n        }\n        const session = data.session;\n        const user = data.user;\n        if (data.session) {\n          await this._saveSession(data.session);\n          await this._notifyAllSubscribers('SIGNED_IN', session);\n        }\n        return {\n          data: {\n            user,\n            session\n          },\n          error: null\n        };\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Creates a new user.\n     *\n     * Be aware that if a user account exists in the system you may get back an\n     * error message that attempts to hide this information from the user.\n     * This method has support for PKCE via email signups. The PKCE flow cannot be used when autoconfirm is enabled.\n     *\n     * @returns A logged-in session if the server has \"autoconfirm\" ON\n     * @returns A user if the server has \"autoconfirm\" OFF\n     */\n    async signUp(credentials) {\n      var _a, _b, _c;\n      try {\n        let res;\n        if ('email' in credentials) {\n          const {\n            email,\n            password,\n            options\n          } = credentials;\n          let codeChallenge = null;\n          let codeChallengeMethod = null;\n          if (this.flowType === 'pkce') {\n            ;\n            [codeChallenge, codeChallengeMethod] = await (0, helpers_1.getCodeChallengeAndMethod)(this.storage, this.storageKey);\n          }\n          res = await (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/signup`, {\n            headers: this.headers,\n            redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\n            body: {\n              email,\n              password,\n              data: (_a = options === null || options === void 0 ? void 0 : options.data) !== null && _a !== void 0 ? _a : {},\n              gotrue_meta_security: {\n                captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n              },\n              code_challenge: codeChallenge,\n              code_challenge_method: codeChallengeMethod\n            },\n            xform: fetch_1._sessionResponse\n          });\n        } else if ('phone' in credentials) {\n          const {\n            phone,\n            password,\n            options\n          } = credentials;\n          res = await (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/signup`, {\n            headers: this.headers,\n            body: {\n              phone,\n              password,\n              data: (_b = options === null || options === void 0 ? void 0 : options.data) !== null && _b !== void 0 ? _b : {},\n              channel: (_c = options === null || options === void 0 ? void 0 : options.channel) !== null && _c !== void 0 ? _c : 'sms',\n              gotrue_meta_security: {\n                captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n              }\n            },\n            xform: fetch_1._sessionResponse\n          });\n        } else {\n          throw new errors_1.AuthInvalidCredentialsError('You must provide either an email or phone number and a password');\n        }\n        const {\n          data,\n          error\n        } = res;\n        if (error || !data) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error: error\n          };\n        }\n        const session = data.session;\n        const user = data.user;\n        if (data.session) {\n          await this._saveSession(data.session);\n          await this._notifyAllSubscribers('SIGNED_IN', session);\n        }\n        return {\n          data: {\n            user,\n            session\n          },\n          error: null\n        };\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Log in an existing user with an email and password or phone and password.\n     *\n     * Be aware that you may get back an error message that will not distinguish\n     * between the cases where the account does not exist or that the\n     * email/phone and password combination is wrong or that the account can only\n     * be accessed via social login.\n     */\n    async signInWithPassword(credentials) {\n      try {\n        let res;\n        if ('email' in credentials) {\n          const {\n            email,\n            password,\n            options\n          } = credentials;\n          res = await (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/token?grant_type=password`, {\n            headers: this.headers,\n            body: {\n              email,\n              password,\n              gotrue_meta_security: {\n                captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n              }\n            },\n            xform: fetch_1._sessionResponsePassword\n          });\n        } else if ('phone' in credentials) {\n          const {\n            phone,\n            password,\n            options\n          } = credentials;\n          res = await (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/token?grant_type=password`, {\n            headers: this.headers,\n            body: {\n              phone,\n              password,\n              gotrue_meta_security: {\n                captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n              }\n            },\n            xform: fetch_1._sessionResponsePassword\n          });\n        } else {\n          throw new errors_1.AuthInvalidCredentialsError('You must provide either an email or phone number and a password');\n        }\n        const {\n          data,\n          error\n        } = res;\n        if (error) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error\n          };\n        } else if (!data || !data.session || !data.user) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error: new errors_1.AuthInvalidTokenResponseError()\n          };\n        }\n        if (data.session) {\n          await this._saveSession(data.session);\n          await this._notifyAllSubscribers('SIGNED_IN', data.session);\n        }\n        return {\n          data: Object.assign({\n            user: data.user,\n            session: data.session\n          }, data.weak_password ? {\n            weakPassword: data.weak_password\n          } : null),\n          error\n        };\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Log in an existing user via a third-party provider.\n     * This method supports the PKCE flow.\n     */\n    async signInWithOAuth(credentials) {\n      var _a, _b, _c, _d;\n      return await this._handleProviderSignIn(credentials.provider, {\n        redirectTo: (_a = credentials.options) === null || _a === void 0 ? void 0 : _a.redirectTo,\n        scopes: (_b = credentials.options) === null || _b === void 0 ? void 0 : _b.scopes,\n        queryParams: (_c = credentials.options) === null || _c === void 0 ? void 0 : _c.queryParams,\n        skipBrowserRedirect: (_d = credentials.options) === null || _d === void 0 ? void 0 : _d.skipBrowserRedirect\n      });\n    }\n    /**\n     * Log in an existing user by exchanging an Auth Code issued during the PKCE flow.\n     */\n    async exchangeCodeForSession(authCode) {\n      await this.initializePromise;\n      return this._acquireLock(-1, async () => {\n        return this._exchangeCodeForSession(authCode);\n      });\n    }\n    /**\n     * Signs in a user by verifying a message signed by the user's private key.\n     * Supports Ethereum (via Sign-In-With-Ethereum) & Solana (Sign-In-With-Solana) standards,\n     * both of which derive from the EIP-4361 standard\n     * With slight variation on Solana's side.\n     * @reference https://eips.ethereum.org/EIPS/eip-4361\n     */\n    async signInWithWeb3(credentials) {\n      const {\n        chain\n      } = credentials;\n      switch (chain) {\n        case 'ethereum':\n          return await this.signInWithEthereum(credentials);\n        case 'solana':\n          return await this.signInWithSolana(credentials);\n        default:\n          throw new Error(`@supabase/auth-js: Unsupported chain \"${chain}\"`);\n      }\n    }\n    async signInWithEthereum(credentials) {\n      var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;\n      // TODO: flatten type\n      let message;\n      let signature;\n      if ('message' in credentials) {\n        message = credentials.message;\n        signature = credentials.signature;\n      } else {\n        const {\n          chain,\n          wallet,\n          statement,\n          options\n        } = credentials;\n        let resolvedWallet;\n        if (!(0, helpers_1.isBrowser)()) {\n          if (typeof wallet !== 'object' || !(options === null || options === void 0 ? void 0 : options.url)) {\n            throw new Error('@supabase/auth-js: Both wallet and url must be specified in non-browser environments.');\n          }\n          resolvedWallet = wallet;\n        } else if (typeof wallet === 'object') {\n          resolvedWallet = wallet;\n        } else {\n          const windowAny = window;\n          if ('ethereum' in windowAny && typeof windowAny.ethereum === 'object' && 'request' in windowAny.ethereum && typeof windowAny.ethereum.request === 'function') {\n            resolvedWallet = windowAny.ethereum;\n          } else {\n            throw new Error(`@supabase/auth-js: No compatible Ethereum wallet interface on the window object (window.ethereum) detected. Make sure the user already has a wallet installed and connected for this app. Prefer passing the wallet interface object directly to signInWithWeb3({ chain: 'ethereum', wallet: resolvedUserWallet }) instead.`);\n          }\n        }\n        const url = new URL((_a = options === null || options === void 0 ? void 0 : options.url) !== null && _a !== void 0 ? _a : window.location.href);\n        const accounts = await resolvedWallet.request({\n          method: 'eth_requestAccounts'\n        }).then(accs => accs).catch(() => {\n          throw new Error(`@supabase/auth-js: Wallet method eth_requestAccounts is missing or invalid`);\n        });\n        if (!accounts || accounts.length === 0) {\n          throw new Error(`@supabase/auth-js: No accounts available. Please ensure the wallet is connected.`);\n        }\n        const address = (0, ethereum_1.getAddress)(accounts[0]);\n        let chainId = (_b = options === null || options === void 0 ? void 0 : options.signInWithEthereum) === null || _b === void 0 ? void 0 : _b.chainId;\n        if (!chainId) {\n          const chainIdHex = await resolvedWallet.request({\n            method: 'eth_chainId'\n          });\n          chainId = (0, ethereum_1.fromHex)(chainIdHex);\n        }\n        const siweMessage = {\n          domain: url.host,\n          address: address,\n          statement: statement,\n          uri: url.href,\n          version: '1',\n          chainId: chainId,\n          nonce: (_c = options === null || options === void 0 ? void 0 : options.signInWithEthereum) === null || _c === void 0 ? void 0 : _c.nonce,\n          issuedAt: (_e = (_d = options === null || options === void 0 ? void 0 : options.signInWithEthereum) === null || _d === void 0 ? void 0 : _d.issuedAt) !== null && _e !== void 0 ? _e : new Date(),\n          expirationTime: (_f = options === null || options === void 0 ? void 0 : options.signInWithEthereum) === null || _f === void 0 ? void 0 : _f.expirationTime,\n          notBefore: (_g = options === null || options === void 0 ? void 0 : options.signInWithEthereum) === null || _g === void 0 ? void 0 : _g.notBefore,\n          requestId: (_h = options === null || options === void 0 ? void 0 : options.signInWithEthereum) === null || _h === void 0 ? void 0 : _h.requestId,\n          resources: (_j = options === null || options === void 0 ? void 0 : options.signInWithEthereum) === null || _j === void 0 ? void 0 : _j.resources\n        };\n        message = (0, ethereum_1.createSiweMessage)(siweMessage);\n        // Sign message\n        signature = await resolvedWallet.request({\n          method: 'personal_sign',\n          params: [(0, ethereum_1.toHex)(message), address]\n        });\n      }\n      try {\n        const {\n          data,\n          error\n        } = await (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/token?grant_type=web3`, {\n          headers: this.headers,\n          body: Object.assign({\n            chain: 'ethereum',\n            message,\n            signature\n          }, ((_k = credentials.options) === null || _k === void 0 ? void 0 : _k.captchaToken) ? {\n            gotrue_meta_security: {\n              captcha_token: (_l = credentials.options) === null || _l === void 0 ? void 0 : _l.captchaToken\n            }\n          } : null),\n          xform: fetch_1._sessionResponse\n        });\n        if (error) {\n          throw error;\n        }\n        if (!data || !data.session || !data.user) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error: new errors_1.AuthInvalidTokenResponseError()\n          };\n        }\n        if (data.session) {\n          await this._saveSession(data.session);\n          await this._notifyAllSubscribers('SIGNED_IN', data.session);\n        }\n        return {\n          data: Object.assign({}, data),\n          error\n        };\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    async signInWithSolana(credentials) {\n      var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n      let message;\n      let signature;\n      if ('message' in credentials) {\n        message = credentials.message;\n        signature = credentials.signature;\n      } else {\n        const {\n          chain,\n          wallet,\n          statement,\n          options\n        } = credentials;\n        let resolvedWallet;\n        if (!(0, helpers_1.isBrowser)()) {\n          if (typeof wallet !== 'object' || !(options === null || options === void 0 ? void 0 : options.url)) {\n            throw new Error('@supabase/auth-js: Both wallet and url must be specified in non-browser environments.');\n          }\n          resolvedWallet = wallet;\n        } else if (typeof wallet === 'object') {\n          resolvedWallet = wallet;\n        } else {\n          const windowAny = window;\n          if ('solana' in windowAny && typeof windowAny.solana === 'object' && ('signIn' in windowAny.solana && typeof windowAny.solana.signIn === 'function' || 'signMessage' in windowAny.solana && typeof windowAny.solana.signMessage === 'function')) {\n            resolvedWallet = windowAny.solana;\n          } else {\n            throw new Error(`@supabase/auth-js: No compatible Solana wallet interface on the window object (window.solana) detected. Make sure the user already has a wallet installed and connected for this app. Prefer passing the wallet interface object directly to signInWithWeb3({ chain: 'solana', wallet: resolvedUserWallet }) instead.`);\n          }\n        }\n        const url = new URL((_a = options === null || options === void 0 ? void 0 : options.url) !== null && _a !== void 0 ? _a : window.location.href);\n        if ('signIn' in resolvedWallet && resolvedWallet.signIn) {\n          const output = await resolvedWallet.signIn(Object.assign(Object.assign(Object.assign({\n            issuedAt: new Date().toISOString()\n          }, options === null || options === void 0 ? void 0 : options.signInWithSolana), {\n            // non-overridable properties\n            version: '1',\n            domain: url.host,\n            uri: url.href\n          }), statement ? {\n            statement\n          } : null));\n          let outputToProcess;\n          if (Array.isArray(output) && output[0] && typeof output[0] === 'object') {\n            outputToProcess = output[0];\n          } else if (output && typeof output === 'object' && 'signedMessage' in output && 'signature' in output) {\n            outputToProcess = output;\n          } else {\n            throw new Error('@supabase/auth-js: Wallet method signIn() returned unrecognized value');\n          }\n          if ('signedMessage' in outputToProcess && 'signature' in outputToProcess && (typeof outputToProcess.signedMessage === 'string' || outputToProcess.signedMessage instanceof Uint8Array) && outputToProcess.signature instanceof Uint8Array) {\n            message = typeof outputToProcess.signedMessage === 'string' ? outputToProcess.signedMessage : new TextDecoder().decode(outputToProcess.signedMessage);\n            signature = outputToProcess.signature;\n          } else {\n            throw new Error('@supabase/auth-js: Wallet method signIn() API returned object without signedMessage and signature fields');\n          }\n        } else {\n          if (!('signMessage' in resolvedWallet) || typeof resolvedWallet.signMessage !== 'function' || !('publicKey' in resolvedWallet) || typeof resolvedWallet !== 'object' || !resolvedWallet.publicKey || !('toBase58' in resolvedWallet.publicKey) || typeof resolvedWallet.publicKey.toBase58 !== 'function') {\n            throw new Error('@supabase/auth-js: Wallet does not have a compatible signMessage() and publicKey.toBase58() API');\n          }\n          message = [`${url.host} wants you to sign in with your Solana account:`, resolvedWallet.publicKey.toBase58(), ...(statement ? ['', statement, ''] : ['']), 'Version: 1', `URI: ${url.href}`, `Issued At: ${(_c = (_b = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _b === void 0 ? void 0 : _b.issuedAt) !== null && _c !== void 0 ? _c : new Date().toISOString()}`, ...(((_d = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _d === void 0 ? void 0 : _d.notBefore) ? [`Not Before: ${options.signInWithSolana.notBefore}`] : []), ...(((_e = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _e === void 0 ? void 0 : _e.expirationTime) ? [`Expiration Time: ${options.signInWithSolana.expirationTime}`] : []), ...(((_f = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _f === void 0 ? void 0 : _f.chainId) ? [`Chain ID: ${options.signInWithSolana.chainId}`] : []), ...(((_g = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _g === void 0 ? void 0 : _g.nonce) ? [`Nonce: ${options.signInWithSolana.nonce}`] : []), ...(((_h = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _h === void 0 ? void 0 : _h.requestId) ? [`Request ID: ${options.signInWithSolana.requestId}`] : []), ...(((_k = (_j = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _j === void 0 ? void 0 : _j.resources) === null || _k === void 0 ? void 0 : _k.length) ? ['Resources', ...options.signInWithSolana.resources.map(resource => `- ${resource}`)] : [])].join('\\n');\n          const maybeSignature = await resolvedWallet.signMessage(new TextEncoder().encode(message), 'utf8');\n          if (!maybeSignature || !(maybeSignature instanceof Uint8Array)) {\n            throw new Error('@supabase/auth-js: Wallet signMessage() API returned an recognized value');\n          }\n          signature = maybeSignature;\n        }\n      }\n      try {\n        const {\n          data,\n          error\n        } = await (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/token?grant_type=web3`, {\n          headers: this.headers,\n          body: Object.assign({\n            chain: 'solana',\n            message,\n            signature: (0, base64url_1.bytesToBase64URL)(signature)\n          }, ((_l = credentials.options) === null || _l === void 0 ? void 0 : _l.captchaToken) ? {\n            gotrue_meta_security: {\n              captcha_token: (_m = credentials.options) === null || _m === void 0 ? void 0 : _m.captchaToken\n            }\n          } : null),\n          xform: fetch_1._sessionResponse\n        });\n        if (error) {\n          throw error;\n        }\n        if (!data || !data.session || !data.user) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error: new errors_1.AuthInvalidTokenResponseError()\n          };\n        }\n        if (data.session) {\n          await this._saveSession(data.session);\n          await this._notifyAllSubscribers('SIGNED_IN', data.session);\n        }\n        return {\n          data: Object.assign({}, data),\n          error\n        };\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    async _exchangeCodeForSession(authCode) {\n      const storageItem = await (0, helpers_1.getItemAsync)(this.storage, `${this.storageKey}-code-verifier`);\n      const [codeVerifier, redirectType] = (storageItem !== null && storageItem !== void 0 ? storageItem : '').split('/');\n      try {\n        const {\n          data,\n          error\n        } = await (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/token?grant_type=pkce`, {\n          headers: this.headers,\n          body: {\n            auth_code: authCode,\n            code_verifier: codeVerifier\n          },\n          xform: fetch_1._sessionResponse\n        });\n        await (0, helpers_1.removeItemAsync)(this.storage, `${this.storageKey}-code-verifier`);\n        if (error) {\n          throw error;\n        }\n        if (!data || !data.session || !data.user) {\n          return {\n            data: {\n              user: null,\n              session: null,\n              redirectType: null\n            },\n            error: new errors_1.AuthInvalidTokenResponseError()\n          };\n        }\n        if (data.session) {\n          await this._saveSession(data.session);\n          await this._notifyAllSubscribers('SIGNED_IN', data.session);\n        }\n        return {\n          data: Object.assign(Object.assign({}, data), {\n            redirectType: redirectType !== null && redirectType !== void 0 ? redirectType : null\n          }),\n          error\n        };\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: {\n              user: null,\n              session: null,\n              redirectType: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Allows signing in with an OIDC ID token. The authentication provider used\n     * should be enabled and configured.\n     */\n    async signInWithIdToken(credentials) {\n      try {\n        const {\n          options,\n          provider,\n          token,\n          access_token,\n          nonce\n        } = credentials;\n        const res = await (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/token?grant_type=id_token`, {\n          headers: this.headers,\n          body: {\n            provider,\n            id_token: token,\n            access_token,\n            nonce,\n            gotrue_meta_security: {\n              captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n            }\n          },\n          xform: fetch_1._sessionResponse\n        });\n        const {\n          data,\n          error\n        } = res;\n        if (error) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error\n          };\n        } else if (!data || !data.session || !data.user) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error: new errors_1.AuthInvalidTokenResponseError()\n          };\n        }\n        if (data.session) {\n          await this._saveSession(data.session);\n          await this._notifyAllSubscribers('SIGNED_IN', data.session);\n        }\n        return {\n          data,\n          error\n        };\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Log in a user using magiclink or a one-time password (OTP).\n     *\n     * If the `{{ .ConfirmationURL }}` variable is specified in the email template, a magiclink will be sent.\n     * If the `{{ .Token }}` variable is specified in the email template, an OTP will be sent.\n     * If you're using phone sign-ins, only an OTP will be sent. You won't be able to send a magiclink for phone sign-ins.\n     *\n     * Be aware that you may get back an error message that will not distinguish\n     * between the cases where the account does not exist or, that the account\n     * can only be accessed via social login.\n     *\n     * Do note that you will need to configure a Whatsapp sender on Twilio\n     * if you are using phone sign in with the 'whatsapp' channel. The whatsapp\n     * channel is not supported on other providers\n     * at this time.\n     * This method supports PKCE when an email is passed.\n     */\n    async signInWithOtp(credentials) {\n      var _a, _b, _c, _d, _e;\n      try {\n        if ('email' in credentials) {\n          const {\n            email,\n            options\n          } = credentials;\n          let codeChallenge = null;\n          let codeChallengeMethod = null;\n          if (this.flowType === 'pkce') {\n            ;\n            [codeChallenge, codeChallengeMethod] = await (0, helpers_1.getCodeChallengeAndMethod)(this.storage, this.storageKey);\n          }\n          const {\n            error\n          } = await (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/otp`, {\n            headers: this.headers,\n            body: {\n              email,\n              data: (_a = options === null || options === void 0 ? void 0 : options.data) !== null && _a !== void 0 ? _a : {},\n              create_user: (_b = options === null || options === void 0 ? void 0 : options.shouldCreateUser) !== null && _b !== void 0 ? _b : true,\n              gotrue_meta_security: {\n                captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n              },\n              code_challenge: codeChallenge,\n              code_challenge_method: codeChallengeMethod\n            },\n            redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo\n          });\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error\n          };\n        }\n        if ('phone' in credentials) {\n          const {\n            phone,\n            options\n          } = credentials;\n          const {\n            data,\n            error\n          } = await (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/otp`, {\n            headers: this.headers,\n            body: {\n              phone,\n              data: (_c = options === null || options === void 0 ? void 0 : options.data) !== null && _c !== void 0 ? _c : {},\n              create_user: (_d = options === null || options === void 0 ? void 0 : options.shouldCreateUser) !== null && _d !== void 0 ? _d : true,\n              gotrue_meta_security: {\n                captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n              },\n              channel: (_e = options === null || options === void 0 ? void 0 : options.channel) !== null && _e !== void 0 ? _e : 'sms'\n            }\n          });\n          return {\n            data: {\n              user: null,\n              session: null,\n              messageId: data === null || data === void 0 ? void 0 : data.message_id\n            },\n            error\n          };\n        }\n        throw new errors_1.AuthInvalidCredentialsError('You must provide either an email or phone number.');\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Log in a user given a User supplied OTP or TokenHash received through mobile or email.\n     */\n    async verifyOtp(params) {\n      var _a, _b;\n      try {\n        let redirectTo = undefined;\n        let captchaToken = undefined;\n        if ('options' in params) {\n          redirectTo = (_a = params.options) === null || _a === void 0 ? void 0 : _a.redirectTo;\n          captchaToken = (_b = params.options) === null || _b === void 0 ? void 0 : _b.captchaToken;\n        }\n        const {\n          data,\n          error\n        } = await (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/verify`, {\n          headers: this.headers,\n          body: Object.assign(Object.assign({}, params), {\n            gotrue_meta_security: {\n              captcha_token: captchaToken\n            }\n          }),\n          redirectTo,\n          xform: fetch_1._sessionResponse\n        });\n        if (error) {\n          throw error;\n        }\n        if (!data) {\n          throw new Error('An error occurred on token verification.');\n        }\n        const session = data.session;\n        const user = data.user;\n        if (session === null || session === void 0 ? void 0 : session.access_token) {\n          await this._saveSession(session);\n          await this._notifyAllSubscribers(params.type == 'recovery' ? 'PASSWORD_RECOVERY' : 'SIGNED_IN', session);\n        }\n        return {\n          data: {\n            user,\n            session\n          },\n          error: null\n        };\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Attempts a single-sign on using an enterprise Identity Provider. A\n     * successful SSO attempt will redirect the current page to the identity\n     * provider authorization page. The redirect URL is implementation and SSO\n     * protocol specific.\n     *\n     * You can use it by providing a SSO domain. Typically you can extract this\n     * domain by asking users for their email address. If this domain is\n     * registered on the Auth instance the redirect will use that organization's\n     * currently active SSO Identity Provider for the login.\n     *\n     * If you have built an organization-specific login page, you can use the\n     * organization's SSO Identity Provider UUID directly instead.\n     */\n    async signInWithSSO(params) {\n      var _a, _b, _c;\n      try {\n        let codeChallenge = null;\n        let codeChallengeMethod = null;\n        if (this.flowType === 'pkce') {\n          ;\n          [codeChallenge, codeChallengeMethod] = await (0, helpers_1.getCodeChallengeAndMethod)(this.storage, this.storageKey);\n        }\n        return await (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/sso`, {\n          body: Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, 'providerId' in params ? {\n            provider_id: params.providerId\n          } : null), 'domain' in params ? {\n            domain: params.domain\n          } : null), {\n            redirect_to: (_b = (_a = params.options) === null || _a === void 0 ? void 0 : _a.redirectTo) !== null && _b !== void 0 ? _b : undefined\n          }), ((_c = params === null || params === void 0 ? void 0 : params.options) === null || _c === void 0 ? void 0 : _c.captchaToken) ? {\n            gotrue_meta_security: {\n              captcha_token: params.options.captchaToken\n            }\n          } : null), {\n            skip_http_redirect: true,\n            code_challenge: codeChallenge,\n            code_challenge_method: codeChallengeMethod\n          }),\n          headers: this.headers,\n          xform: fetch_1._ssoResponse\n        });\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Sends a reauthentication OTP to the user's email or phone number.\n     * Requires the user to be signed-in.\n     */\n    async reauthenticate() {\n      await this.initializePromise;\n      return await this._acquireLock(-1, async () => {\n        return await this._reauthenticate();\n      });\n    }\n    async _reauthenticate() {\n      try {\n        return await this._useSession(async result => {\n          const {\n            data: {\n              session\n            },\n            error: sessionError\n          } = result;\n          if (sessionError) throw sessionError;\n          if (!session) throw new errors_1.AuthSessionMissingError();\n          const {\n            error\n          } = await (0, fetch_1._request)(this.fetch, 'GET', `${this.url}/reauthenticate`, {\n            headers: this.headers,\n            jwt: session.access_token\n          });\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error\n          };\n        });\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Resends an existing signup confirmation email, email change email, SMS OTP or phone change OTP.\n     */\n    async resend(credentials) {\n      try {\n        const endpoint = `${this.url}/resend`;\n        if ('email' in credentials) {\n          const {\n            email,\n            type,\n            options\n          } = credentials;\n          const {\n            error\n          } = await (0, fetch_1._request)(this.fetch, 'POST', endpoint, {\n            headers: this.headers,\n            body: {\n              email,\n              type,\n              gotrue_meta_security: {\n                captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n              }\n            },\n            redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo\n          });\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error\n          };\n        } else if ('phone' in credentials) {\n          const {\n            phone,\n            type,\n            options\n          } = credentials;\n          const {\n            data,\n            error\n          } = await (0, fetch_1._request)(this.fetch, 'POST', endpoint, {\n            headers: this.headers,\n            body: {\n              phone,\n              type,\n              gotrue_meta_security: {\n                captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n              }\n            }\n          });\n          return {\n            data: {\n              user: null,\n              session: null,\n              messageId: data === null || data === void 0 ? void 0 : data.message_id\n            },\n            error\n          };\n        }\n        throw new errors_1.AuthInvalidCredentialsError('You must provide either an email or phone number and a type');\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Returns the session, refreshing it if necessary.\n     *\n     * The session returned can be null if the session is not detected which can happen in the event a user is not signed-in or has logged out.\n     *\n     * **IMPORTANT:** This method loads values directly from the storage attached\n     * to the client. If that storage is based on request cookies for example,\n     * the values in it may not be authentic and therefore it's strongly advised\n     * against using this method and its results in such circumstances. A warning\n     * will be emitted if this is detected. Use {@link #getUser()} instead.\n     */\n    async getSession() {\n      await this.initializePromise;\n      const result = await this._acquireLock(-1, async () => {\n        return this._useSession(async result => {\n          return result;\n        });\n      });\n      return result;\n    }\n    /**\n     * Acquires a global lock based on the storage key.\n     */\n    async _acquireLock(acquireTimeout, fn) {\n      this._debug('#_acquireLock', 'begin', acquireTimeout);\n      try {\n        if (this.lockAcquired) {\n          const last = this.pendingInLock.length ? this.pendingInLock[this.pendingInLock.length - 1] : Promise.resolve();\n          const result = (async () => {\n            await last;\n            return await fn();\n          })();\n          this.pendingInLock.push((async () => {\n            try {\n              await result;\n            } catch (e) {\n              // we just care if it finished\n            }\n          })());\n          return result;\n        }\n        return await this.lock(`lock:${this.storageKey}`, acquireTimeout, async () => {\n          this._debug('#_acquireLock', 'lock acquired for storage key', this.storageKey);\n          try {\n            this.lockAcquired = true;\n            const result = fn();\n            this.pendingInLock.push((async () => {\n              try {\n                await result;\n              } catch (e) {\n                // we just care if it finished\n              }\n            })());\n            await result;\n            // keep draining the queue until there's nothing to wait on\n            while (this.pendingInLock.length) {\n              const waitOn = [...this.pendingInLock];\n              await Promise.all(waitOn);\n              this.pendingInLock.splice(0, waitOn.length);\n            }\n            return await result;\n          } finally {\n            this._debug('#_acquireLock', 'lock released for storage key', this.storageKey);\n            this.lockAcquired = false;\n          }\n        });\n      } finally {\n        this._debug('#_acquireLock', 'end');\n      }\n    }\n    /**\n     * Use instead of {@link #getSession} inside the library. It is\n     * semantically usually what you want, as getting a session involves some\n     * processing afterwards that requires only one client operating on the\n     * session at once across multiple tabs or processes.\n     */\n    async _useSession(fn) {\n      this._debug('#_useSession', 'begin');\n      try {\n        // the use of __loadSession here is the only correct use of the function!\n        const result = await this.__loadSession();\n        return await fn(result);\n      } finally {\n        this._debug('#_useSession', 'end');\n      }\n    }\n    /**\n     * NEVER USE DIRECTLY!\n     *\n     * Always use {@link #_useSession}.\n     */\n    async __loadSession() {\n      this._debug('#__loadSession()', 'begin');\n      if (!this.lockAcquired) {\n        this._debug('#__loadSession()', 'used outside of an acquired lock!', new Error().stack);\n      }\n      try {\n        let currentSession = null;\n        const maybeSession = await (0, helpers_1.getItemAsync)(this.storage, this.storageKey);\n        this._debug('#getSession()', 'session from storage', maybeSession);\n        if (maybeSession !== null) {\n          if (this._isValidSession(maybeSession)) {\n            currentSession = maybeSession;\n          } else {\n            this._debug('#getSession()', 'session from storage is not valid');\n            await this._removeSession();\n          }\n        }\n        if (!currentSession) {\n          return {\n            data: {\n              session: null\n            },\n            error: null\n          };\n        }\n        // A session is considered expired before the access token _actually_\n        // expires. When the autoRefreshToken option is off (or when the tab is\n        // in the background), very eager users of getSession() -- like\n        // realtime-js -- might send a valid JWT which will expire by the time it\n        // reaches the server.\n        const hasExpired = currentSession.expires_at ? currentSession.expires_at * 1000 - Date.now() < constants_1.EXPIRY_MARGIN_MS : false;\n        this._debug('#__loadSession()', `session has${hasExpired ? '' : ' not'} expired`, 'expires_at', currentSession.expires_at);\n        if (!hasExpired) {\n          if (this.userStorage) {\n            const maybeUser = await (0, helpers_1.getItemAsync)(this.userStorage, this.storageKey + '-user');\n            if (maybeUser === null || maybeUser === void 0 ? void 0 : maybeUser.user) {\n              currentSession.user = maybeUser.user;\n            } else {\n              currentSession.user = (0, helpers_1.userNotAvailableProxy)();\n            }\n          }\n          if (this.storage.isServer && currentSession.user) {\n            let suppressWarning = this.suppressGetSessionWarning;\n            const proxySession = new Proxy(currentSession, {\n              get: (target, prop, receiver) => {\n                if (!suppressWarning && prop === 'user') {\n                  // only show warning when the user object is being accessed from the server\n                  console.warn('Using the user object as returned from supabase.auth.getSession() or from some supabase.auth.onAuthStateChange() events could be insecure! This value comes directly from the storage medium (usually cookies on the server) and may not be authentic. Use supabase.auth.getUser() instead which authenticates the data by contacting the Supabase Auth server.');\n                  suppressWarning = true; // keeps this proxy instance from logging additional warnings\n                  this.suppressGetSessionWarning = true; // keeps this client's future proxy instances from warning\n                }\n                return Reflect.get(target, prop, receiver);\n              }\n            });\n            currentSession = proxySession;\n          }\n          return {\n            data: {\n              session: currentSession\n            },\n            error: null\n          };\n        }\n        const {\n          session,\n          error\n        } = await this._callRefreshToken(currentSession.refresh_token);\n        if (error) {\n          return {\n            data: {\n              session: null\n            },\n            error\n          };\n        }\n        return {\n          data: {\n            session\n          },\n          error: null\n        };\n      } finally {\n        this._debug('#__loadSession()', 'end');\n      }\n    }\n    /**\n     * Gets the current user details if there is an existing session. This method\n     * performs a network request to the Supabase Auth server, so the returned\n     * value is authentic and can be used to base authorization rules on.\n     *\n     * @param jwt Takes in an optional access token JWT. If no JWT is provided, the JWT from the current session is used.\n     */\n    async getUser(jwt) {\n      if (jwt) {\n        return await this._getUser(jwt);\n      }\n      await this.initializePromise;\n      const result = await this._acquireLock(-1, async () => {\n        return await this._getUser();\n      });\n      return result;\n    }\n    async _getUser(jwt) {\n      try {\n        if (jwt) {\n          return await (0, fetch_1._request)(this.fetch, 'GET', `${this.url}/user`, {\n            headers: this.headers,\n            jwt: jwt,\n            xform: fetch_1._userResponse\n          });\n        }\n        return await this._useSession(async result => {\n          var _a, _b, _c;\n          const {\n            data,\n            error\n          } = result;\n          if (error) {\n            throw error;\n          }\n          // returns an error if there is no access_token or custom authorization header\n          if (!((_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) && !this.hasCustomAuthorizationHeader) {\n            return {\n              data: {\n                user: null\n              },\n              error: new errors_1.AuthSessionMissingError()\n            };\n          }\n          return await (0, fetch_1._request)(this.fetch, 'GET', `${this.url}/user`, {\n            headers: this.headers,\n            jwt: (_c = (_b = data.session) === null || _b === void 0 ? void 0 : _b.access_token) !== null && _c !== void 0 ? _c : undefined,\n            xform: fetch_1._userResponse\n          });\n        });\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          if ((0, errors_1.isAuthSessionMissingError)(error)) {\n            // JWT contains a `session_id` which does not correspond to an active\n            // session in the database, indicating the user is signed out.\n            await this._removeSession();\n            await (0, helpers_1.removeItemAsync)(this.storage, `${this.storageKey}-code-verifier`);\n          }\n          return {\n            data: {\n              user: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Updates user data for a logged in user.\n     */\n    async updateUser(attributes, options = {}) {\n      await this.initializePromise;\n      return await this._acquireLock(-1, async () => {\n        return await this._updateUser(attributes, options);\n      });\n    }\n    async _updateUser(attributes, options = {}) {\n      try {\n        return await this._useSession(async result => {\n          const {\n            data: sessionData,\n            error: sessionError\n          } = result;\n          if (sessionError) {\n            throw sessionError;\n          }\n          if (!sessionData.session) {\n            throw new errors_1.AuthSessionMissingError();\n          }\n          const session = sessionData.session;\n          let codeChallenge = null;\n          let codeChallengeMethod = null;\n          if (this.flowType === 'pkce' && attributes.email != null) {\n            ;\n            [codeChallenge, codeChallengeMethod] = await (0, helpers_1.getCodeChallengeAndMethod)(this.storage, this.storageKey);\n          }\n          const {\n            data,\n            error: userError\n          } = await (0, fetch_1._request)(this.fetch, 'PUT', `${this.url}/user`, {\n            headers: this.headers,\n            redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\n            body: Object.assign(Object.assign({}, attributes), {\n              code_challenge: codeChallenge,\n              code_challenge_method: codeChallengeMethod\n            }),\n            jwt: session.access_token,\n            xform: fetch_1._userResponse\n          });\n          if (userError) throw userError;\n          session.user = data.user;\n          await this._saveSession(session);\n          await this._notifyAllSubscribers('USER_UPDATED', session);\n          return {\n            data: {\n              user: session.user\n            },\n            error: null\n          };\n        });\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: {\n              user: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Sets the session data from the current session. If the current session is expired, setSession will take care of refreshing it to obtain a new session.\n     * If the refresh token or access token in the current session is invalid, an error will be thrown.\n     * @param currentSession The current session that minimally contains an access token and refresh token.\n     */\n    async setSession(currentSession) {\n      await this.initializePromise;\n      return await this._acquireLock(-1, async () => {\n        return await this._setSession(currentSession);\n      });\n    }\n    async _setSession(currentSession) {\n      try {\n        if (!currentSession.access_token || !currentSession.refresh_token) {\n          throw new errors_1.AuthSessionMissingError();\n        }\n        const timeNow = Date.now() / 1000;\n        let expiresAt = timeNow;\n        let hasExpired = true;\n        let session = null;\n        const {\n          payload\n        } = (0, helpers_1.decodeJWT)(currentSession.access_token);\n        if (payload.exp) {\n          expiresAt = payload.exp;\n          hasExpired = expiresAt <= timeNow;\n        }\n        if (hasExpired) {\n          const {\n            session: refreshedSession,\n            error\n          } = await this._callRefreshToken(currentSession.refresh_token);\n          if (error) {\n            return {\n              data: {\n                user: null,\n                session: null\n              },\n              error: error\n            };\n          }\n          if (!refreshedSession) {\n            return {\n              data: {\n                user: null,\n                session: null\n              },\n              error: null\n            };\n          }\n          session = refreshedSession;\n        } else {\n          const {\n            data,\n            error\n          } = await this._getUser(currentSession.access_token);\n          if (error) {\n            throw error;\n          }\n          session = {\n            access_token: currentSession.access_token,\n            refresh_token: currentSession.refresh_token,\n            user: data.user,\n            token_type: 'bearer',\n            expires_in: expiresAt - timeNow,\n            expires_at: expiresAt\n          };\n          await this._saveSession(session);\n          await this._notifyAllSubscribers('SIGNED_IN', session);\n        }\n        return {\n          data: {\n            user: session.user,\n            session\n          },\n          error: null\n        };\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: {\n              session: null,\n              user: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Returns a new session, regardless of expiry status.\n     * Takes in an optional current session. If not passed in, then refreshSession() will attempt to retrieve it from getSession().\n     * If the current session's refresh token is invalid, an error will be thrown.\n     * @param currentSession The current session. If passed in, it must contain a refresh token.\n     */\n    async refreshSession(currentSession) {\n      await this.initializePromise;\n      return await this._acquireLock(-1, async () => {\n        return await this._refreshSession(currentSession);\n      });\n    }\n    async _refreshSession(currentSession) {\n      try {\n        return await this._useSession(async result => {\n          var _a;\n          if (!currentSession) {\n            const {\n              data,\n              error\n            } = result;\n            if (error) {\n              throw error;\n            }\n            currentSession = (_a = data.session) !== null && _a !== void 0 ? _a : undefined;\n          }\n          if (!(currentSession === null || currentSession === void 0 ? void 0 : currentSession.refresh_token)) {\n            throw new errors_1.AuthSessionMissingError();\n          }\n          const {\n            session,\n            error\n          } = await this._callRefreshToken(currentSession.refresh_token);\n          if (error) {\n            return {\n              data: {\n                user: null,\n                session: null\n              },\n              error: error\n            };\n          }\n          if (!session) {\n            return {\n              data: {\n                user: null,\n                session: null\n              },\n              error: null\n            };\n          }\n          return {\n            data: {\n              user: session.user,\n              session\n            },\n            error: null\n          };\n        });\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: {\n              user: null,\n              session: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Gets the session data from a URL string\n     */\n    async _getSessionFromURL(params, callbackUrlType) {\n      try {\n        if (!(0, helpers_1.isBrowser)()) throw new errors_1.AuthImplicitGrantRedirectError('No browser detected.');\n        // If there's an error in the URL, it doesn't matter what flow it is, we just return the error.\n        if (params.error || params.error_description || params.error_code) {\n          // The error class returned implies that the redirect is from an implicit grant flow\n          // but it could also be from a redirect error from a PKCE flow.\n          throw new errors_1.AuthImplicitGrantRedirectError(params.error_description || 'Error in URL with unspecified error_description', {\n            error: params.error || 'unspecified_error',\n            code: params.error_code || 'unspecified_code'\n          });\n        }\n        // Checks for mismatches between the flowType initialised in the client and the URL parameters\n        switch (callbackUrlType) {\n          case 'implicit':\n            if (this.flowType === 'pkce') {\n              throw new errors_1.AuthPKCEGrantCodeExchangeError('Not a valid PKCE flow url.');\n            }\n            break;\n          case 'pkce':\n            if (this.flowType === 'implicit') {\n              throw new errors_1.AuthImplicitGrantRedirectError('Not a valid implicit grant flow url.');\n            }\n            break;\n          default:\n          // there's no mismatch so we continue\n        }\n        // Since this is a redirect for PKCE, we attempt to retrieve the code from the URL for the code exchange\n        if (callbackUrlType === 'pkce') {\n          this._debug('#_initialize()', 'begin', 'is PKCE flow', true);\n          if (!params.code) throw new errors_1.AuthPKCEGrantCodeExchangeError('No code detected.');\n          const {\n            data,\n            error\n          } = await this._exchangeCodeForSession(params.code);\n          if (error) throw error;\n          const url = new URL(window.location.href);\n          url.searchParams.delete('code');\n          window.history.replaceState(window.history.state, '', url.toString());\n          return {\n            data: {\n              session: data.session,\n              redirectType: null\n            },\n            error: null\n          };\n        }\n        const {\n          provider_token,\n          provider_refresh_token,\n          access_token,\n          refresh_token,\n          expires_in,\n          expires_at,\n          token_type\n        } = params;\n        if (!access_token || !expires_in || !refresh_token || !token_type) {\n          throw new errors_1.AuthImplicitGrantRedirectError('No session defined in URL');\n        }\n        const timeNow = Math.round(Date.now() / 1000);\n        const expiresIn = parseInt(expires_in);\n        let expiresAt = timeNow + expiresIn;\n        if (expires_at) {\n          expiresAt = parseInt(expires_at);\n        }\n        const actuallyExpiresIn = expiresAt - timeNow;\n        if (actuallyExpiresIn * 1000 <= constants_1.AUTO_REFRESH_TICK_DURATION_MS) {\n          console.warn(`@supabase/gotrue-js: Session as retrieved from URL expires in ${actuallyExpiresIn}s, should have been closer to ${expiresIn}s`);\n        }\n        const issuedAt = expiresAt - expiresIn;\n        if (timeNow - issuedAt >= 120) {\n          console.warn('@supabase/gotrue-js: Session as retrieved from URL was issued over 120s ago, URL could be stale', issuedAt, expiresAt, timeNow);\n        } else if (timeNow - issuedAt < 0) {\n          console.warn('@supabase/gotrue-js: Session as retrieved from URL was issued in the future? Check the device clock for skew', issuedAt, expiresAt, timeNow);\n        }\n        const {\n          data,\n          error\n        } = await this._getUser(access_token);\n        if (error) throw error;\n        const session = {\n          provider_token,\n          provider_refresh_token,\n          access_token,\n          expires_in: expiresIn,\n          expires_at: expiresAt,\n          refresh_token,\n          token_type,\n          user: data.user\n        };\n        // Remove tokens from URL\n        window.location.hash = '';\n        this._debug('#_getSessionFromURL()', 'clearing window.location.hash');\n        return {\n          data: {\n            session,\n            redirectType: params.type\n          },\n          error: null\n        };\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: {\n              session: null,\n              redirectType: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Checks if the current URL contains parameters given by an implicit oauth grant flow (https://www.rfc-editor.org/rfc/rfc6749.html#section-4.2)\n     */\n    _isImplicitGrantCallback(params) {\n      return Boolean(params.access_token || params.error_description);\n    }\n    /**\n     * Checks if the current URL and backing storage contain parameters given by a PKCE flow\n     */\n    async _isPKCECallback(params) {\n      const currentStorageContent = await (0, helpers_1.getItemAsync)(this.storage, `${this.storageKey}-code-verifier`);\n      return !!(params.code && currentStorageContent);\n    }\n    /**\n     * Inside a browser context, `signOut()` will remove the logged in user from the browser session and log them out - removing all items from localstorage and then trigger a `\"SIGNED_OUT\"` event.\n     *\n     * For server-side management, you can revoke all refresh tokens for a user by passing a user's JWT through to `auth.api.signOut(JWT: string)`.\n     * There is no way to revoke a user's access token jwt until it expires. It is recommended to set a shorter expiry on the jwt for this reason.\n     *\n     * If using `others` scope, no `SIGNED_OUT` event is fired!\n     */\n    async signOut(options = {\n      scope: 'global'\n    }) {\n      await this.initializePromise;\n      return await this._acquireLock(-1, async () => {\n        return await this._signOut(options);\n      });\n    }\n    async _signOut({\n      scope\n    } = {\n      scope: 'global'\n    }) {\n      return await this._useSession(async result => {\n        var _a;\n        const {\n          data,\n          error: sessionError\n        } = result;\n        if (sessionError) {\n          return {\n            error: sessionError\n          };\n        }\n        const accessToken = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token;\n        if (accessToken) {\n          const {\n            error\n          } = await this.admin.signOut(accessToken, scope);\n          if (error) {\n            // ignore 404s since user might not exist anymore\n            // ignore 401s since an invalid or expired JWT should sign out the current session\n            if (!((0, errors_1.isAuthApiError)(error) && (error.status === 404 || error.status === 401 || error.status === 403))) {\n              return {\n                error\n              };\n            }\n          }\n        }\n        if (scope !== 'others') {\n          await this._removeSession();\n          await (0, helpers_1.removeItemAsync)(this.storage, `${this.storageKey}-code-verifier`);\n        }\n        return {\n          error: null\n        };\n      });\n    }\n    /**\n     * Receive a notification every time an auth event happens.\n     * @param callback A callback function to be invoked when an auth event happens.\n     */\n    onAuthStateChange(callback) {\n      const id = (0, helpers_1.uuid)();\n      const subscription = {\n        id,\n        callback,\n        unsubscribe: () => {\n          this._debug('#unsubscribe()', 'state change callback with id removed', id);\n          this.stateChangeEmitters.delete(id);\n        }\n      };\n      this._debug('#onAuthStateChange()', 'registered callback with id', id);\n      this.stateChangeEmitters.set(id, subscription);\n      (async () => {\n        await this.initializePromise;\n        await this._acquireLock(-1, async () => {\n          this._emitInitialSession(id);\n        });\n      })();\n      return {\n        data: {\n          subscription\n        }\n      };\n    }\n    async _emitInitialSession(id) {\n      return await this._useSession(async result => {\n        var _a, _b;\n        try {\n          const {\n            data: {\n              session\n            },\n            error\n          } = result;\n          if (error) throw error;\n          await ((_a = this.stateChangeEmitters.get(id)) === null || _a === void 0 ? void 0 : _a.callback('INITIAL_SESSION', session));\n          this._debug('INITIAL_SESSION', 'callback id', id, 'session', session);\n        } catch (err) {\n          await ((_b = this.stateChangeEmitters.get(id)) === null || _b === void 0 ? void 0 : _b.callback('INITIAL_SESSION', null));\n          this._debug('INITIAL_SESSION', 'callback id', id, 'error', err);\n          console.error(err);\n        }\n      });\n    }\n    /**\n     * Sends a password reset request to an email address. This method supports the PKCE flow.\n     *\n     * @param email The email address of the user.\n     * @param options.redirectTo The URL to send the user to after they click the password reset link.\n     * @param options.captchaToken Verification token received when the user completes the captcha on the site.\n     */\n    async resetPasswordForEmail(email, options = {}) {\n      let codeChallenge = null;\n      let codeChallengeMethod = null;\n      if (this.flowType === 'pkce') {\n        ;\n        [codeChallenge, codeChallengeMethod] = await (0, helpers_1.getCodeChallengeAndMethod)(this.storage, this.storageKey, true // isPasswordRecovery\n        );\n      }\n      try {\n        return await (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/recover`, {\n          body: {\n            email,\n            code_challenge: codeChallenge,\n            code_challenge_method: codeChallengeMethod,\n            gotrue_meta_security: {\n              captcha_token: options.captchaToken\n            }\n          },\n          headers: this.headers,\n          redirectTo: options.redirectTo\n        });\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Gets all the identities linked to a user.\n     */\n    async getUserIdentities() {\n      var _a;\n      try {\n        const {\n          data,\n          error\n        } = await this.getUser();\n        if (error) throw error;\n        return {\n          data: {\n            identities: (_a = data.user.identities) !== null && _a !== void 0 ? _a : []\n          },\n          error: null\n        };\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Links an oauth identity to an existing user.\n     * This method supports the PKCE flow.\n     */\n    async linkIdentity(credentials) {\n      var _a;\n      try {\n        const {\n          data,\n          error\n        } = await this._useSession(async result => {\n          var _a, _b, _c, _d, _e;\n          const {\n            data,\n            error\n          } = result;\n          if (error) throw error;\n          const url = await this._getUrlForProvider(`${this.url}/user/identities/authorize`, credentials.provider, {\n            redirectTo: (_a = credentials.options) === null || _a === void 0 ? void 0 : _a.redirectTo,\n            scopes: (_b = credentials.options) === null || _b === void 0 ? void 0 : _b.scopes,\n            queryParams: (_c = credentials.options) === null || _c === void 0 ? void 0 : _c.queryParams,\n            skipBrowserRedirect: true\n          });\n          return await (0, fetch_1._request)(this.fetch, 'GET', url, {\n            headers: this.headers,\n            jwt: (_e = (_d = data.session) === null || _d === void 0 ? void 0 : _d.access_token) !== null && _e !== void 0 ? _e : undefined\n          });\n        });\n        if (error) throw error;\n        if ((0, helpers_1.isBrowser)() && !((_a = credentials.options) === null || _a === void 0 ? void 0 : _a.skipBrowserRedirect)) {\n          window.location.assign(data === null || data === void 0 ? void 0 : data.url);\n        }\n        return {\n          data: {\n            provider: credentials.provider,\n            url: data === null || data === void 0 ? void 0 : data.url\n          },\n          error: null\n        };\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: {\n              provider: credentials.provider,\n              url: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Unlinks an identity from a user by deleting it. The user will no longer be able to sign in with that identity once it's unlinked.\n     */\n    async unlinkIdentity(identity) {\n      try {\n        return await this._useSession(async result => {\n          var _a, _b;\n          const {\n            data,\n            error\n          } = result;\n          if (error) {\n            throw error;\n          }\n          return await (0, fetch_1._request)(this.fetch, 'DELETE', `${this.url}/user/identities/${identity.identity_id}`, {\n            headers: this.headers,\n            jwt: (_b = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : undefined\n          });\n        });\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Generates a new JWT.\n     * @param refreshToken A valid refresh token that was returned on login.\n     */\n    async _refreshAccessToken(refreshToken) {\n      const debugName = `#_refreshAccessToken(${refreshToken.substring(0, 5)}...)`;\n      this._debug(debugName, 'begin');\n      try {\n        const startedAt = Date.now();\n        // will attempt to refresh the token with exponential backoff\n        return await (0, helpers_1.retryable)(async attempt => {\n          if (attempt > 0) {\n            await (0, helpers_1.sleep)(200 * Math.pow(2, attempt - 1)); // 200, 400, 800, ...\n          }\n          this._debug(debugName, 'refreshing attempt', attempt);\n          return await (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/token?grant_type=refresh_token`, {\n            body: {\n              refresh_token: refreshToken\n            },\n            headers: this.headers,\n            xform: fetch_1._sessionResponse\n          });\n        }, (attempt, error) => {\n          const nextBackOffInterval = 200 * Math.pow(2, attempt);\n          return error && (0, errors_1.isAuthRetryableFetchError)(error) &&\n          // retryable only if the request can be sent before the backoff overflows the tick duration\n          Date.now() + nextBackOffInterval - startedAt < constants_1.AUTO_REFRESH_TICK_DURATION_MS;\n        });\n      } catch (error) {\n        this._debug(debugName, 'error', error);\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: {\n              session: null,\n              user: null\n            },\n            error\n          };\n        }\n        throw error;\n      } finally {\n        this._debug(debugName, 'end');\n      }\n    }\n    _isValidSession(maybeSession) {\n      const isValidSession = typeof maybeSession === 'object' && maybeSession !== null && 'access_token' in maybeSession && 'refresh_token' in maybeSession && 'expires_at' in maybeSession;\n      return isValidSession;\n    }\n    async _handleProviderSignIn(provider, options) {\n      const url = await this._getUrlForProvider(`${this.url}/authorize`, provider, {\n        redirectTo: options.redirectTo,\n        scopes: options.scopes,\n        queryParams: options.queryParams\n      });\n      this._debug('#_handleProviderSignIn()', 'provider', provider, 'options', options, 'url', url);\n      // try to open on the browser\n      if ((0, helpers_1.isBrowser)() && !options.skipBrowserRedirect) {\n        window.location.assign(url);\n      }\n      return {\n        data: {\n          provider,\n          url\n        },\n        error: null\n      };\n    }\n    /**\n     * Recovers the session from LocalStorage and refreshes the token\n     * Note: this method is async to accommodate for AsyncStorage e.g. in React native.\n     */\n    async _recoverAndRefresh() {\n      var _a, _b;\n      const debugName = '#_recoverAndRefresh()';\n      this._debug(debugName, 'begin');\n      try {\n        const currentSession = await (0, helpers_1.getItemAsync)(this.storage, this.storageKey);\n        if (currentSession && this.userStorage) {\n          let maybeUser = await (0, helpers_1.getItemAsync)(this.userStorage, this.storageKey + '-user');\n          if (!this.storage.isServer && Object.is(this.storage, this.userStorage) && !maybeUser) {\n            // storage and userStorage are the same storage medium, for example\n            // window.localStorage if userStorage does not have the user from\n            // storage stored, store it first thereby migrating the user object\n            // from storage -> userStorage\n            maybeUser = {\n              user: currentSession.user\n            };\n            await (0, helpers_1.setItemAsync)(this.userStorage, this.storageKey + '-user', maybeUser);\n          }\n          currentSession.user = (_a = maybeUser === null || maybeUser === void 0 ? void 0 : maybeUser.user) !== null && _a !== void 0 ? _a : (0, helpers_1.userNotAvailableProxy)();\n        } else if (currentSession && !currentSession.user) {\n          // user storage is not set, let's check if it was previously enabled so\n          // we bring back the storage as it should be\n          if (!currentSession.user) {\n            // test if userStorage was previously enabled and the storage medium was the same, to move the user back under the same key\n            const separateUser = await (0, helpers_1.getItemAsync)(this.storage, this.storageKey + '-user');\n            if (separateUser && (separateUser === null || separateUser === void 0 ? void 0 : separateUser.user)) {\n              currentSession.user = separateUser.user;\n              await (0, helpers_1.removeItemAsync)(this.storage, this.storageKey + '-user');\n              await (0, helpers_1.setItemAsync)(this.storage, this.storageKey, currentSession);\n            } else {\n              currentSession.user = (0, helpers_1.userNotAvailableProxy)();\n            }\n          }\n        }\n        this._debug(debugName, 'session from storage', currentSession);\n        if (!this._isValidSession(currentSession)) {\n          this._debug(debugName, 'session is not valid');\n          if (currentSession !== null) {\n            await this._removeSession();\n          }\n          return;\n        }\n        const expiresWithMargin = ((_b = currentSession.expires_at) !== null && _b !== void 0 ? _b : Infinity) * 1000 - Date.now() < constants_1.EXPIRY_MARGIN_MS;\n        this._debug(debugName, `session has${expiresWithMargin ? '' : ' not'} expired with margin of ${constants_1.EXPIRY_MARGIN_MS}s`);\n        if (expiresWithMargin) {\n          if (this.autoRefreshToken && currentSession.refresh_token) {\n            const {\n              error\n            } = await this._callRefreshToken(currentSession.refresh_token);\n            if (error) {\n              console.error(error);\n              if (!(0, errors_1.isAuthRetryableFetchError)(error)) {\n                this._debug(debugName, 'refresh failed with a non-retryable error, removing the session', error);\n                await this._removeSession();\n              }\n            }\n          }\n        } else if (currentSession.user && currentSession.user.__isUserNotAvailableProxy === true) {\n          // If we have a proxy user, try to get the real user data\n          try {\n            const {\n              data,\n              error: userError\n            } = await this._getUser(currentSession.access_token);\n            if (!userError && (data === null || data === void 0 ? void 0 : data.user)) {\n              currentSession.user = data.user;\n              await this._saveSession(currentSession);\n              await this._notifyAllSubscribers('SIGNED_IN', currentSession);\n            } else {\n              this._debug(debugName, 'could not get user data, skipping SIGNED_IN notification');\n            }\n          } catch (getUserError) {\n            console.error('Error getting user data:', getUserError);\n            this._debug(debugName, 'error getting user data, skipping SIGNED_IN notification', getUserError);\n          }\n        } else {\n          // no need to persist currentSession again, as we just loaded it from\n          // local storage; persisting it again may overwrite a value saved by\n          // another client with access to the same local storage\n          await this._notifyAllSubscribers('SIGNED_IN', currentSession);\n        }\n      } catch (err) {\n        this._debug(debugName, 'error', err);\n        console.error(err);\n        return;\n      } finally {\n        this._debug(debugName, 'end');\n      }\n    }\n    async _callRefreshToken(refreshToken) {\n      var _a, _b;\n      if (!refreshToken) {\n        throw new errors_1.AuthSessionMissingError();\n      }\n      // refreshing is already in progress\n      if (this.refreshingDeferred) {\n        return this.refreshingDeferred.promise;\n      }\n      const debugName = `#_callRefreshToken(${refreshToken.substring(0, 5)}...)`;\n      this._debug(debugName, 'begin');\n      try {\n        this.refreshingDeferred = new helpers_1.Deferred();\n        const {\n          data,\n          error\n        } = await this._refreshAccessToken(refreshToken);\n        if (error) throw error;\n        if (!data.session) throw new errors_1.AuthSessionMissingError();\n        await this._saveSession(data.session);\n        await this._notifyAllSubscribers('TOKEN_REFRESHED', data.session);\n        const result = {\n          session: data.session,\n          error: null\n        };\n        this.refreshingDeferred.resolve(result);\n        return result;\n      } catch (error) {\n        this._debug(debugName, 'error', error);\n        if ((0, errors_1.isAuthError)(error)) {\n          const result = {\n            session: null,\n            error\n          };\n          if (!(0, errors_1.isAuthRetryableFetchError)(error)) {\n            await this._removeSession();\n          }\n          (_a = this.refreshingDeferred) === null || _a === void 0 ? void 0 : _a.resolve(result);\n          return result;\n        }\n        (_b = this.refreshingDeferred) === null || _b === void 0 ? void 0 : _b.reject(error);\n        throw error;\n      } finally {\n        this.refreshingDeferred = null;\n        this._debug(debugName, 'end');\n      }\n    }\n    async _notifyAllSubscribers(event, session, broadcast = true) {\n      const debugName = `#_notifyAllSubscribers(${event})`;\n      this._debug(debugName, 'begin', session, `broadcast = ${broadcast}`);\n      try {\n        if (this.broadcastChannel && broadcast) {\n          this.broadcastChannel.postMessage({\n            event,\n            session\n          });\n        }\n        const errors = [];\n        const promises = Array.from(this.stateChangeEmitters.values()).map(async x => {\n          try {\n            await x.callback(event, session);\n          } catch (e) {\n            errors.push(e);\n          }\n        });\n        await Promise.all(promises);\n        if (errors.length > 0) {\n          for (let i = 0; i < errors.length; i += 1) {\n            console.error(errors[i]);\n          }\n          throw errors[0];\n        }\n      } finally {\n        this._debug(debugName, 'end');\n      }\n    }\n    /**\n     * set currentSession and currentUser\n     * process to _startAutoRefreshToken if possible\n     */\n    async _saveSession(session) {\n      this._debug('#_saveSession()', session);\n      // _saveSession is always called whenever a new session has been acquired\n      // so we can safely suppress the warning returned by future getSession calls\n      this.suppressGetSessionWarning = true;\n      // Create a shallow copy to work with, to avoid mutating the original session object if it's used elsewhere\n      const sessionToProcess = Object.assign({}, session);\n      const userIsProxy = sessionToProcess.user && sessionToProcess.user.__isUserNotAvailableProxy === true;\n      if (this.userStorage) {\n        if (!userIsProxy && sessionToProcess.user) {\n          // If it's a real user object, save it to userStorage.\n          await (0, helpers_1.setItemAsync)(this.userStorage, this.storageKey + '-user', {\n            user: sessionToProcess.user\n          });\n        } else if (userIsProxy) {\n          // If it's the proxy, it means user was not found in userStorage.\n          // We should ensure no stale user data for this key exists in userStorage if we were to save null,\n          // or simply not save the proxy. For now, we don't save the proxy here.\n          // If there's a need to clear userStorage if user becomes proxy, that logic would go here.\n        }\n        // Prepare the main session data for primary storage: remove the user property before cloning\n        // This is important because the original session.user might be the proxy\n        const mainSessionData = Object.assign({}, sessionToProcess);\n        delete mainSessionData.user; // Remove user (real or proxy) before cloning for main storage\n        const clonedMainSessionData = (0, helpers_1.deepClone)(mainSessionData);\n        await (0, helpers_1.setItemAsync)(this.storage, this.storageKey, clonedMainSessionData);\n      } else {\n        // No userStorage is configured.\n        // In this case, session.user should ideally not be a proxy.\n        // If it were, structuredClone would fail. This implies an issue elsewhere if user is a proxy here\n        const clonedSession = (0, helpers_1.deepClone)(sessionToProcess); // sessionToProcess still has its original user property\n        await (0, helpers_1.setItemAsync)(this.storage, this.storageKey, clonedSession);\n      }\n    }\n    async _removeSession() {\n      this._debug('#_removeSession()');\n      await (0, helpers_1.removeItemAsync)(this.storage, this.storageKey);\n      await (0, helpers_1.removeItemAsync)(this.storage, this.storageKey + '-code-verifier');\n      await (0, helpers_1.removeItemAsync)(this.storage, this.storageKey + '-user');\n      if (this.userStorage) {\n        await (0, helpers_1.removeItemAsync)(this.userStorage, this.storageKey + '-user');\n      }\n      await this._notifyAllSubscribers('SIGNED_OUT', null);\n    }\n    /**\n     * Removes any registered visibilitychange callback.\n     *\n     * {@see #startAutoRefresh}\n     * {@see #stopAutoRefresh}\n     */\n    _removeVisibilityChangedCallback() {\n      this._debug('#_removeVisibilityChangedCallback()');\n      const callback = this.visibilityChangedCallback;\n      this.visibilityChangedCallback = null;\n      try {\n        if (callback && (0, helpers_1.isBrowser)() && (window === null || window === void 0 ? void 0 : window.removeEventListener)) {\n          window.removeEventListener('visibilitychange', callback);\n        }\n      } catch (e) {\n        console.error('removing visibilitychange callback failed', e);\n      }\n    }\n    /**\n     * This is the private implementation of {@link #startAutoRefresh}. Use this\n     * within the library.\n     */\n    async _startAutoRefresh() {\n      await this._stopAutoRefresh();\n      this._debug('#_startAutoRefresh()');\n      const ticker = setInterval(() => this._autoRefreshTokenTick(), constants_1.AUTO_REFRESH_TICK_DURATION_MS);\n      this.autoRefreshTicker = ticker;\n      if (ticker && typeof ticker === 'object' && typeof ticker.unref === 'function') {\n        // ticker is a NodeJS Timeout object that has an `unref` method\n        // https://nodejs.org/api/timers.html#timeoutunref\n        // When auto refresh is used in NodeJS (like for testing) the\n        // `setInterval` is preventing the process from being marked as\n        // finished and tests run endlessly. This can be prevented by calling\n        // `unref()` on the returned object.\n        ticker.unref();\n        // @ts-expect-error TS has no context of Deno\n      } else if (typeof Deno !== 'undefined' && typeof Deno.unrefTimer === 'function') {\n        // similar like for NodeJS, but with the Deno API\n        // https://deno.land/api@latest?unstable&s=Deno.unrefTimer\n        // @ts-expect-error TS has no context of Deno\n        Deno.unrefTimer(ticker);\n      }\n      // run the tick immediately, but in the next pass of the event loop so that\n      // #_initialize can be allowed to complete without recursively waiting on\n      // itself\n      setTimeout(async () => {\n        await this.initializePromise;\n        await this._autoRefreshTokenTick();\n      }, 0);\n    }\n    /**\n     * This is the private implementation of {@link #stopAutoRefresh}. Use this\n     * within the library.\n     */\n    async _stopAutoRefresh() {\n      this._debug('#_stopAutoRefresh()');\n      const ticker = this.autoRefreshTicker;\n      this.autoRefreshTicker = null;\n      if (ticker) {\n        clearInterval(ticker);\n      }\n    }\n    /**\n     * Starts an auto-refresh process in the background. The session is checked\n     * every few seconds. Close to the time of expiration a process is started to\n     * refresh the session. If refreshing fails it will be retried for as long as\n     * necessary.\n     *\n     * If you set the {@link GoTrueClientOptions#autoRefreshToken} you don't need\n     * to call this function, it will be called for you.\n     *\n     * On browsers the refresh process works only when the tab/window is in the\n     * foreground to conserve resources as well as prevent race conditions and\n     * flooding auth with requests. If you call this method any managed\n     * visibility change callback will be removed and you must manage visibility\n     * changes on your own.\n     *\n     * On non-browser platforms the refresh process works *continuously* in the\n     * background, which may not be desirable. You should hook into your\n     * platform's foreground indication mechanism and call these methods\n     * appropriately to conserve resources.\n     *\n     * {@see #stopAutoRefresh}\n     */\n    async startAutoRefresh() {\n      this._removeVisibilityChangedCallback();\n      await this._startAutoRefresh();\n    }\n    /**\n     * Stops an active auto refresh process running in the background (if any).\n     *\n     * If you call this method any managed visibility change callback will be\n     * removed and you must manage visibility changes on your own.\n     *\n     * See {@link #startAutoRefresh} for more details.\n     */\n    async stopAutoRefresh() {\n      this._removeVisibilityChangedCallback();\n      await this._stopAutoRefresh();\n    }\n    /**\n     * Runs the auto refresh token tick.\n     */\n    async _autoRefreshTokenTick() {\n      this._debug('#_autoRefreshTokenTick()', 'begin');\n      try {\n        await this._acquireLock(0, async () => {\n          try {\n            const now = Date.now();\n            try {\n              return await this._useSession(async result => {\n                const {\n                  data: {\n                    session\n                  }\n                } = result;\n                if (!session || !session.refresh_token || !session.expires_at) {\n                  this._debug('#_autoRefreshTokenTick()', 'no session');\n                  return;\n                }\n                // session will expire in this many ticks (or has already expired if <= 0)\n                const expiresInTicks = Math.floor((session.expires_at * 1000 - now) / constants_1.AUTO_REFRESH_TICK_DURATION_MS);\n                this._debug('#_autoRefreshTokenTick()', `access token expires in ${expiresInTicks} ticks, a tick lasts ${constants_1.AUTO_REFRESH_TICK_DURATION_MS}ms, refresh threshold is ${constants_1.AUTO_REFRESH_TICK_THRESHOLD} ticks`);\n                if (expiresInTicks <= constants_1.AUTO_REFRESH_TICK_THRESHOLD) {\n                  await this._callRefreshToken(session.refresh_token);\n                }\n              });\n            } catch (e) {\n              console.error('Auto refresh tick failed with error. This is likely a transient error.', e);\n            }\n          } finally {\n            this._debug('#_autoRefreshTokenTick()', 'end');\n          }\n        });\n      } catch (e) {\n        if (e.isAcquireTimeout || e instanceof locks_1.LockAcquireTimeoutError) {\n          this._debug('auto refresh token tick lock not available');\n        } else {\n          throw e;\n        }\n      }\n    }\n    /**\n     * Registers callbacks on the browser / platform, which in-turn run\n     * algorithms when the browser window/tab are in foreground. On non-browser\n     * platforms it assumes always foreground.\n     */\n    async _handleVisibilityChange() {\n      this._debug('#_handleVisibilityChange()');\n      if (!(0, helpers_1.isBrowser)() || !(window === null || window === void 0 ? void 0 : window.addEventListener)) {\n        if (this.autoRefreshToken) {\n          // in non-browser environments the refresh token ticker runs always\n          this.startAutoRefresh();\n        }\n        return false;\n      }\n      try {\n        this.visibilityChangedCallback = async () => await this._onVisibilityChanged(false);\n        window === null || window === void 0 ? void 0 : window.addEventListener('visibilitychange', this.visibilityChangedCallback);\n        // now immediately call the visbility changed callback to setup with the\n        // current visbility state\n        await this._onVisibilityChanged(true); // initial call\n      } catch (error) {\n        console.error('_handleVisibilityChange', error);\n      }\n    }\n    /**\n     * Callback registered with `window.addEventListener('visibilitychange')`.\n     */\n    async _onVisibilityChanged(calledFromInitialize) {\n      const methodName = `#_onVisibilityChanged(${calledFromInitialize})`;\n      this._debug(methodName, 'visibilityState', document.visibilityState);\n      if (document.visibilityState === 'visible') {\n        if (this.autoRefreshToken) {\n          // in browser environments the refresh token ticker runs only on focused tabs\n          // which prevents race conditions\n          this._startAutoRefresh();\n        }\n        if (!calledFromInitialize) {\n          // called when the visibility has changed, i.e. the browser\n          // transitioned from hidden -> visible so we need to see if the session\n          // should be recovered immediately... but to do that we need to acquire\n          // the lock first asynchronously\n          await this.initializePromise;\n          await this._acquireLock(-1, async () => {\n            if (document.visibilityState !== 'visible') {\n              this._debug(methodName, 'acquired the lock to recover the session, but the browser visibilityState is no longer visible, aborting');\n              // visibility has changed while waiting for the lock, abort\n              return;\n            }\n            // recover the session\n            await this._recoverAndRefresh();\n          });\n        }\n      } else if (document.visibilityState === 'hidden') {\n        if (this.autoRefreshToken) {\n          this._stopAutoRefresh();\n        }\n      }\n    }\n    /**\n     * Generates the relevant login URL for a third-party provider.\n     * @param options.redirectTo A URL or mobile address to send the user to after they are confirmed.\n     * @param options.scopes A space-separated list of scopes granted to the OAuth application.\n     * @param options.queryParams An object of key-value pairs containing query parameters granted to the OAuth application.\n     */\n    async _getUrlForProvider(url, provider, options) {\n      const urlParams = [`provider=${encodeURIComponent(provider)}`];\n      if (options === null || options === void 0 ? void 0 : options.redirectTo) {\n        urlParams.push(`redirect_to=${encodeURIComponent(options.redirectTo)}`);\n      }\n      if (options === null || options === void 0 ? void 0 : options.scopes) {\n        urlParams.push(`scopes=${encodeURIComponent(options.scopes)}`);\n      }\n      if (this.flowType === 'pkce') {\n        const [codeChallenge, codeChallengeMethod] = await (0, helpers_1.getCodeChallengeAndMethod)(this.storage, this.storageKey);\n        const flowParams = new URLSearchParams({\n          code_challenge: `${encodeURIComponent(codeChallenge)}`,\n          code_challenge_method: `${encodeURIComponent(codeChallengeMethod)}`\n        });\n        urlParams.push(flowParams.toString());\n      }\n      if (options === null || options === void 0 ? void 0 : options.queryParams) {\n        const query = new URLSearchParams(options.queryParams);\n        urlParams.push(query.toString());\n      }\n      if (options === null || options === void 0 ? void 0 : options.skipBrowserRedirect) {\n        urlParams.push(`skip_http_redirect=${options.skipBrowserRedirect}`);\n      }\n      return `${url}?${urlParams.join('&')}`;\n    }\n    async _unenroll(params) {\n      try {\n        return await this._useSession(async result => {\n          var _a;\n          const {\n            data: sessionData,\n            error: sessionError\n          } = result;\n          if (sessionError) {\n            return {\n              data: null,\n              error: sessionError\n            };\n          }\n          return await (0, fetch_1._request)(this.fetch, 'DELETE', `${this.url}/factors/${params.factorId}`, {\n            headers: this.headers,\n            jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token\n          });\n        });\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    async _enroll(params) {\n      try {\n        return await this._useSession(async result => {\n          var _a, _b;\n          const {\n            data: sessionData,\n            error: sessionError\n          } = result;\n          if (sessionError) {\n            return {\n              data: null,\n              error: sessionError\n            };\n          }\n          const body = Object.assign({\n            friendly_name: params.friendlyName,\n            factor_type: params.factorType\n          }, params.factorType === 'phone' ? {\n            phone: params.phone\n          } : {\n            issuer: params.issuer\n          });\n          const {\n            data,\n            error\n          } = await (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/factors`, {\n            body,\n            headers: this.headers,\n            jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token\n          });\n          if (error) {\n            return {\n              data: null,\n              error\n            };\n          }\n          if (params.factorType === 'totp' && ((_b = data === null || data === void 0 ? void 0 : data.totp) === null || _b === void 0 ? void 0 : _b.qr_code)) {\n            data.totp.qr_code = `data:image/svg+xml;utf-8,${data.totp.qr_code}`;\n          }\n          return {\n            data,\n            error: null\n          };\n        });\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * {@see GoTrueMFAApi#verify}\n     */\n    async _verify(params) {\n      return this._acquireLock(-1, async () => {\n        try {\n          return await this._useSession(async result => {\n            var _a;\n            const {\n              data: sessionData,\n              error: sessionError\n            } = result;\n            if (sessionError) {\n              return {\n                data: null,\n                error: sessionError\n              };\n            }\n            const {\n              data,\n              error\n            } = await (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/factors/${params.factorId}/verify`, {\n              body: {\n                code: params.code,\n                challenge_id: params.challengeId\n              },\n              headers: this.headers,\n              jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token\n            });\n            if (error) {\n              return {\n                data: null,\n                error\n              };\n            }\n            await this._saveSession(Object.assign({\n              expires_at: Math.round(Date.now() / 1000) + data.expires_in\n            }, data));\n            await this._notifyAllSubscribers('MFA_CHALLENGE_VERIFIED', data);\n            return {\n              data,\n              error\n            };\n          });\n        } catch (error) {\n          if ((0, errors_1.isAuthError)(error)) {\n            return {\n              data: null,\n              error\n            };\n          }\n          throw error;\n        }\n      });\n    }\n    /**\n     * {@see GoTrueMFAApi#challenge}\n     */\n    async _challenge(params) {\n      return this._acquireLock(-1, async () => {\n        try {\n          return await this._useSession(async result => {\n            var _a;\n            const {\n              data: sessionData,\n              error: sessionError\n            } = result;\n            if (sessionError) {\n              return {\n                data: null,\n                error: sessionError\n              };\n            }\n            return await (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/factors/${params.factorId}/challenge`, {\n              body: {\n                channel: params.channel\n              },\n              headers: this.headers,\n              jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token\n            });\n          });\n        } catch (error) {\n          if ((0, errors_1.isAuthError)(error)) {\n            return {\n              data: null,\n              error\n            };\n          }\n          throw error;\n        }\n      });\n    }\n    /**\n     * {@see GoTrueMFAApi#challengeAndVerify}\n     */\n    async _challengeAndVerify(params) {\n      // both _challenge and _verify independently acquire the lock, so no need\n      // to acquire it here\n      const {\n        data: challengeData,\n        error: challengeError\n      } = await this._challenge({\n        factorId: params.factorId\n      });\n      if (challengeError) {\n        return {\n          data: null,\n          error: challengeError\n        };\n      }\n      return await this._verify({\n        factorId: params.factorId,\n        challengeId: challengeData.id,\n        code: params.code\n      });\n    }\n    /**\n     * {@see GoTrueMFAApi#listFactors}\n     */\n    async _listFactors() {\n      // use #getUser instead of #_getUser as the former acquires a lock\n      const {\n        data: {\n          user\n        },\n        error: userError\n      } = await this.getUser();\n      if (userError) {\n        return {\n          data: null,\n          error: userError\n        };\n      }\n      const factors = (user === null || user === void 0 ? void 0 : user.factors) || [];\n      const totp = factors.filter(factor => factor.factor_type === 'totp' && factor.status === 'verified');\n      const phone = factors.filter(factor => factor.factor_type === 'phone' && factor.status === 'verified');\n      return {\n        data: {\n          all: factors,\n          totp,\n          phone\n        },\n        error: null\n      };\n    }\n    /**\n     * {@see GoTrueMFAApi#getAuthenticatorAssuranceLevel}\n     */\n    async _getAuthenticatorAssuranceLevel() {\n      return this._acquireLock(-1, async () => {\n        return await this._useSession(async result => {\n          var _a, _b;\n          const {\n            data: {\n              session\n            },\n            error: sessionError\n          } = result;\n          if (sessionError) {\n            return {\n              data: null,\n              error: sessionError\n            };\n          }\n          if (!session) {\n            return {\n              data: {\n                currentLevel: null,\n                nextLevel: null,\n                currentAuthenticationMethods: []\n              },\n              error: null\n            };\n          }\n          const {\n            payload\n          } = (0, helpers_1.decodeJWT)(session.access_token);\n          let currentLevel = null;\n          if (payload.aal) {\n            currentLevel = payload.aal;\n          }\n          let nextLevel = currentLevel;\n          const verifiedFactors = (_b = (_a = session.user.factors) === null || _a === void 0 ? void 0 : _a.filter(factor => factor.status === 'verified')) !== null && _b !== void 0 ? _b : [];\n          if (verifiedFactors.length > 0) {\n            nextLevel = 'aal2';\n          }\n          const currentAuthenticationMethods = payload.amr || [];\n          return {\n            data: {\n              currentLevel,\n              nextLevel,\n              currentAuthenticationMethods\n            },\n            error: null\n          };\n        });\n      });\n    }\n    async fetchJwk(kid, jwks = {\n      keys: []\n    }) {\n      // try fetching from the supplied jwks\n      let jwk = jwks.keys.find(key => key.kid === kid);\n      if (jwk) {\n        return jwk;\n      }\n      const now = Date.now();\n      // try fetching from cache\n      jwk = this.jwks.keys.find(key => key.kid === kid);\n      // jwk exists and jwks isn't stale\n      if (jwk && this.jwks_cached_at + constants_1.JWKS_TTL > now) {\n        return jwk;\n      }\n      // jwk isn't cached in memory so we need to fetch it from the well-known endpoint\n      const {\n        data,\n        error\n      } = await (0, fetch_1._request)(this.fetch, 'GET', `${this.url}/.well-known/jwks.json`, {\n        headers: this.headers\n      });\n      if (error) {\n        throw error;\n      }\n      if (!data.keys || data.keys.length === 0) {\n        return null;\n      }\n      this.jwks = data;\n      this.jwks_cached_at = now;\n      // Find the signing key\n      jwk = data.keys.find(key => key.kid === kid);\n      if (!jwk) {\n        return null;\n      }\n      return jwk;\n    }\n    /**\n     * Extracts the JWT claims present in the access token by first verifying the\n     * JWT against the server's JSON Web Key Set endpoint\n     * `/.well-known/jwks.json` which is often cached, resulting in significantly\n     * faster responses. Prefer this method over {@link #getUser} which always\n     * sends a request to the Auth server for each JWT.\n     *\n     * If the project is not using an asymmetric JWT signing key (like ECC or\n     * RSA) it always sends a request to the Auth server (similar to {@link\n     * #getUser}) to verify the JWT.\n     *\n     * @param jwt An optional specific JWT you wish to verify, not the one you\n     *            can obtain from {@link #getSession}.\n     * @param options Various additional options that allow you to customize the\n     *                behavior of this method.\n     */\n    async getClaims(jwt, options = {}) {\n      try {\n        let token = jwt;\n        if (!token) {\n          const {\n            data,\n            error\n          } = await this.getSession();\n          if (error || !data.session) {\n            return {\n              data: null,\n              error\n            };\n          }\n          token = data.session.access_token;\n        }\n        const {\n          header,\n          payload,\n          signature,\n          raw: {\n            header: rawHeader,\n            payload: rawPayload\n          }\n        } = (0, helpers_1.decodeJWT)(token);\n        if (!(options === null || options === void 0 ? void 0 : options.allowExpired)) {\n          // Reject expired JWTs should only happen if jwt argument was passed\n          (0, helpers_1.validateExp)(payload.exp);\n        }\n        const signingKey = !header.alg || header.alg.startsWith('HS') || !header.kid || !('crypto' in globalThis && 'subtle' in globalThis.crypto) ? null : await this.fetchJwk(header.kid, (options === null || options === void 0 ? void 0 : options.keys) ? {\n          keys: options.keys\n        } : options === null || options === void 0 ? void 0 : options.jwks);\n        // If symmetric algorithm or WebCrypto API is unavailable, fallback to getUser()\n        if (!signingKey) {\n          const {\n            error\n          } = await this.getUser(token);\n          if (error) {\n            throw error;\n          }\n          // getUser succeeds so the claims in the JWT can be trusted\n          return {\n            data: {\n              claims: payload,\n              header,\n              signature\n            },\n            error: null\n          };\n        }\n        const algorithm = (0, helpers_1.getAlgorithm)(header.alg);\n        // Convert JWK to CryptoKey\n        const publicKey = await crypto.subtle.importKey('jwk', signingKey, algorithm, true, ['verify']);\n        // Verify the signature\n        const isValid = await crypto.subtle.verify(algorithm, publicKey, signature, (0, base64url_1.stringToUint8Array)(`${rawHeader}.${rawPayload}`));\n        if (!isValid) {\n          throw new errors_1.AuthInvalidJwtError('Invalid JWT signature');\n        }\n        // If verification succeeds, decode and return claims\n        return {\n          data: {\n            claims: payload,\n            header,\n            signature\n          },\n          error: null\n        };\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n        throw error;\n      }\n    }\n  }\n  exports.default = GoTrueClient;\n  GoTrueClient.nextInstanceID = 0;\n});","lineCount":3044,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[4,6,2,4,"__importDefault"],[4,21,2,19],[4,24,2,23],[4,28,2,27],[4,32,2,31],[4,36,2,35],[4,37,2,36,"__importDefault"],[4,52,2,51],[4,56,2,56],[4,66,2,66,"mod"],[4,69,2,69],[4,71,2,71],[5,4,3,4],[5,11,3,12,"mod"],[5,14,3,15],[5,18,3,19,"mod"],[5,21,3,22],[5,22,3,23,"__esModule"],[5,32,3,33],[5,35,3,37,"mod"],[5,38,3,40],[5,41,3,43],[6,6,3,45],[6,15,3,54],[6,17,3,56,"mod"],[7,4,3,60],[7,5,3,61],[8,2,4,0],[8,3,4,1],[9,2,5,0,"Object"],[9,8,5,6],[9,9,5,7,"defineProperty"],[9,23,5,21],[9,24,5,22,"exports"],[9,31,5,29],[9,33,5,31],[9,45,5,43],[9,47,5,45],[10,4,5,47,"value"],[10,9,5,52],[10,11,5,54],[11,2,5,59],[11,3,5,60],[11,4,5,61],[12,2,6,0],[12,8,6,6,"GoTrueAdminApi_1"],[12,24,6,22],[12,27,6,25,"__importDefault"],[12,42,6,40],[12,43,6,41,"require"],[12,50,6,48],[12,51,6,48,"_dependencyMap"],[12,65,6,48],[12,88,6,67],[12,89,6,68],[12,90,6,69],[13,2,7,0],[13,8,7,6,"constants_1"],[13,19,7,17],[13,22,7,20,"require"],[13,29,7,27],[13,30,7,27,"_dependencyMap"],[13,44,7,27],[13,66,7,45],[13,67,7,46],[14,2,8,0],[14,8,8,6,"errors_1"],[14,16,8,14],[14,19,8,17,"require"],[14,26,8,24],[14,27,8,24,"_dependencyMap"],[14,41,8,24],[14,60,8,39],[14,61,8,40],[15,2,9,0],[15,8,9,6,"fetch_1"],[15,15,9,13],[15,18,9,16,"require"],[15,25,9,23],[15,26,9,23,"_dependencyMap"],[15,40,9,23],[15,58,9,37],[15,59,9,38],[16,2,10,0],[16,8,10,6,"helpers_1"],[16,17,10,15],[16,20,10,18,"require"],[16,27,10,25],[16,28,10,25,"_dependencyMap"],[16,42,10,25],[16,62,10,41],[16,63,10,42],[17,2,11,0],[17,8,11,6,"local_storage_1"],[17,23,11,21],[17,26,11,24,"require"],[17,33,11,31],[17,34,11,31,"_dependencyMap"],[17,48,11,31],[17,74,11,53],[17,75,11,54],[18,2,12,0],[18,8,12,6,"polyfills_1"],[18,19,12,17],[18,22,12,20,"require"],[18,29,12,27],[18,30,12,27,"_dependencyMap"],[18,44,12,27],[18,66,12,45],[18,67,12,46],[19,2,13,0],[19,8,13,6,"version_1"],[19,17,13,15],[19,20,13,18,"require"],[19,27,13,25],[19,28,13,25,"_dependencyMap"],[19,42,13,25],[19,62,13,41],[19,63,13,42],[20,2,14,0],[20,8,14,6,"locks_1"],[20,15,14,13],[20,18,14,16,"require"],[20,25,14,23],[20,26,14,23,"_dependencyMap"],[20,40,14,23],[20,58,14,37],[20,59,14,38],[21,2,15,0],[21,8,15,6,"base64url_1"],[21,19,15,17],[21,22,15,20,"require"],[21,29,15,27],[21,30,15,27,"_dependencyMap"],[21,44,15,27],[21,66,15,45],[21,67,15,46],[22,2,16,0],[22,8,16,6,"ethereum_1"],[22,18,16,16],[22,21,16,19,"require"],[22,28,16,26],[22,29,16,26,"_dependencyMap"],[22,43,16,26],[22,70,16,48],[22,71,16,49],[23,2,17,0],[23,3,17,1],[23,4,17,2],[23,6,17,4,"polyfills_1"],[23,17,17,15],[23,18,17,16,"polyfillGlobalThis"],[23,36,17,34],[23,38,17,36],[23,39,17,37],[23,40,17,38],[23,41,17,39],[24,2,18,0],[24,8,18,6,"DEFAULT_OPTIONS"],[24,23,18,21],[24,26,18,24],[25,4,19,4,"url"],[25,7,19,7],[25,9,19,9,"constants_1"],[25,20,19,20],[25,21,19,21,"GOTRUE_URL"],[25,31,19,31],[26,4,20,4,"storageKey"],[26,14,20,14],[26,16,20,16,"constants_1"],[26,27,20,27],[26,28,20,28,"STORAGE_KEY"],[26,39,20,39],[27,4,21,4,"autoRefreshToken"],[27,20,21,20],[27,22,21,22],[27,26,21,26],[28,4,22,4,"persistSession"],[28,18,22,18],[28,20,22,20],[28,24,22,24],[29,4,23,4,"detectSessionInUrl"],[29,22,23,22],[29,24,23,24],[29,28,23,28],[30,4,24,4,"headers"],[30,11,24,11],[30,13,24,13,"constants_1"],[30,24,24,24],[30,25,24,25,"DEFAULT_HEADERS"],[30,40,24,40],[31,4,25,4,"flowType"],[31,12,25,12],[31,14,25,14],[31,24,25,24],[32,4,26,4,"debug"],[32,9,26,9],[32,11,26,11],[32,16,26,16],[33,4,27,4,"hasCustomAuthorizationHeader"],[33,32,27,32],[33,34,27,34],[34,2,28,0],[34,3,28,1],[35,2,29,0],[35,17,29,15,"lockNoOp"],[35,25,29,23,"lockNoOp"],[35,26,29,24,"name"],[35,30,29,28],[35,32,29,30,"acquireTimeout"],[35,46,29,44],[35,48,29,46,"fn"],[35,50,29,48],[35,52,29,50],[36,4,30,4],[36,11,30,11],[36,17,30,17,"fn"],[36,19,30,19],[36,20,30,20],[36,21,30,21],[37,2,31,0],[38,2,32,0],[39,0,33,0],[40,0,34,0],[41,0,35,0],[42,0,36,0],[43,0,37,0],[44,0,38,0],[45,0,39,0],[46,2,40,0],[46,8,40,6,"GLOBAL_JWKS"],[46,19,40,17],[46,22,40,20],[46,23,40,21],[46,24,40,22],[47,2,41,0],[47,8,41,6,"GoTrueClient"],[47,20,41,18],[47,21,41,19],[48,4,42,4],[49,0,43,0],[50,0,44,0],[51,4,45,4,"constructor"],[51,15,45,15,"constructor"],[51,16,45,16,"options"],[51,23,45,23],[51,25,45,25],[52,6,46,8],[52,10,46,12,"_a"],[52,12,46,14],[52,14,46,16,"_b"],[52,16,46,18],[53,6,47,8],[54,0,48,0],[55,0,49,0],[56,6,50,8],[56,10,50,12],[56,11,50,13,"userStorage"],[56,22,50,24],[56,25,50,27],[56,29,50,31],[57,6,51,8],[57,10,51,12],[57,11,51,13,"memoryStorage"],[57,24,51,26],[57,27,51,29],[57,31,51,33],[58,6,52,8],[58,10,52,12],[58,11,52,13,"stateChangeEmitters"],[58,30,52,32],[58,33,52,35],[58,37,52,39,"Map"],[58,40,52,42],[58,41,52,43],[58,42,52,44],[59,6,53,8],[59,10,53,12],[59,11,53,13,"autoRefreshTicker"],[59,28,53,30],[59,31,53,33],[59,35,53,37],[60,6,54,8],[60,10,54,12],[60,11,54,13,"visibilityChangedCallback"],[60,36,54,38],[60,39,54,41],[60,43,54,45],[61,6,55,8],[61,10,55,12],[61,11,55,13,"refreshingDeferred"],[61,29,55,31],[61,32,55,34],[61,36,55,38],[62,6,56,8],[63,0,57,0],[64,0,58,0],[65,0,59,0],[66,0,60,0],[67,0,61,0],[68,6,62,8],[68,10,62,12],[68,11,62,13,"initializePromise"],[68,28,62,30],[68,31,62,33],[68,35,62,37],[69,6,63,8],[69,10,63,12],[69,11,63,13,"detectSessionInUrl"],[69,29,63,31],[69,32,63,34],[69,36,63,38],[70,6,64,8],[70,10,64,12],[70,11,64,13,"hasCustomAuthorizationHeader"],[70,39,64,41],[70,42,64,44],[70,47,64,49],[71,6,65,8],[71,10,65,12],[71,11,65,13,"suppressGetSessionWarning"],[71,36,65,38],[71,39,65,41],[71,44,65,46],[72,6,66,8],[72,10,66,12],[72,11,66,13,"lockAcquired"],[72,23,66,25],[72,26,66,28],[72,31,66,33],[73,6,67,8],[73,10,67,12],[73,11,67,13,"pendingInLock"],[73,24,67,26],[73,27,67,29],[73,29,67,31],[74,6,68,8],[75,0,69,0],[76,0,70,0],[77,6,71,8],[77,10,71,12],[77,11,71,13,"broadcastChannel"],[77,27,71,29],[77,30,71,32],[77,34,71,36],[78,6,72,8],[78,10,72,12],[78,11,72,13,"logger"],[78,17,72,19],[78,20,72,22,"console"],[78,27,72,29],[78,28,72,30,"log"],[78,31,72,33],[79,6,73,8],[79,10,73,12],[79,11,73,13,"instanceID"],[79,21,73,23],[79,24,73,26,"GoTrueClient"],[79,36,73,38],[79,37,73,39,"nextInstanceID"],[79,51,73,53],[80,6,74,8,"GoTrueClient"],[80,18,74,20],[80,19,74,21,"nextInstanceID"],[80,33,74,35],[80,37,74,39],[80,38,74,40],[81,6,75,8],[81,10,75,12],[81,14,75,16],[81,15,75,17,"instanceID"],[81,25,75,27],[81,28,75,30],[81,29,75,31],[81,33,75,35],[81,34,75,36],[81,35,75,37],[81,37,75,39,"helpers_1"],[81,46,75,48],[81,47,75,49,"isBrowser"],[81,56,75,58],[81,58,75,60],[81,59,75,61],[81,61,75,63],[82,8,76,12,"console"],[82,15,76,19],[82,16,76,20,"warn"],[82,20,76,24],[82,21,76,25],[82,227,76,231],[82,228,76,232],[83,6,77,8],[84,6,78,8],[84,12,78,14,"settings"],[84,20,78,22],[84,23,78,25,"Object"],[84,29,78,31],[84,30,78,32,"assign"],[84,36,78,38],[84,37,78,39,"Object"],[84,43,78,45],[84,44,78,46,"assign"],[84,50,78,52],[84,51,78,53],[84,52,78,54],[84,53,78,55],[84,55,78,57,"DEFAULT_OPTIONS"],[84,70,78,72],[84,71,78,73],[84,73,78,75,"options"],[84,80,78,82],[84,81,78,83],[85,6,79,8],[85,10,79,12],[85,11,79,13,"logDebugMessages"],[85,27,79,29],[85,30,79,32],[85,31,79,33],[85,32,79,34,"settings"],[85,40,79,42],[85,41,79,43,"debug"],[85,46,79,48],[86,6,80,8],[86,10,80,12],[86,17,80,19,"settings"],[86,25,80,27],[86,26,80,28,"debug"],[86,31,80,33],[86,36,80,38],[86,46,80,48],[86,48,80,50],[87,8,81,12],[87,12,81,16],[87,13,81,17,"logger"],[87,19,81,23],[87,22,81,26,"settings"],[87,30,81,34],[87,31,81,35,"debug"],[87,36,81,40],[88,6,82,8],[89,6,83,8],[89,10,83,12],[89,11,83,13,"persistSession"],[89,25,83,27],[89,28,83,30,"settings"],[89,36,83,38],[89,37,83,39,"persistSession"],[89,51,83,53],[90,6,84,8],[90,10,84,12],[90,11,84,13,"storageKey"],[90,21,84,23],[90,24,84,26,"settings"],[90,32,84,34],[90,33,84,35,"storageKey"],[90,43,84,45],[91,6,85,8],[91,10,85,12],[91,11,85,13,"autoRefreshToken"],[91,27,85,29],[91,30,85,32,"settings"],[91,38,85,40],[91,39,85,41,"autoRefreshToken"],[91,55,85,57],[92,6,86,8],[92,10,86,12],[92,11,86,13,"admin"],[92,16,86,18],[92,19,86,21],[92,23,86,25,"GoTrueAdminApi_1"],[92,39,86,41],[92,40,86,42,"default"],[92,47,86,49],[92,48,86,50],[93,8,87,12,"url"],[93,11,87,15],[93,13,87,17,"settings"],[93,21,87,25],[93,22,87,26,"url"],[93,25,87,29],[94,8,88,12,"headers"],[94,15,88,19],[94,17,88,21,"settings"],[94,25,88,29],[94,26,88,30,"headers"],[94,33,88,37],[95,8,89,12,"fetch"],[95,13,89,17],[95,15,89,19,"settings"],[95,23,89,27],[95,24,89,28,"fetch"],[96,6,90,8],[96,7,90,9],[96,8,90,10],[97,6,91,8],[97,10,91,12],[97,11,91,13,"url"],[97,14,91,16],[97,17,91,19,"settings"],[97,25,91,27],[97,26,91,28,"url"],[97,29,91,31],[98,6,92,8],[98,10,92,12],[98,11,92,13,"headers"],[98,18,92,20],[98,21,92,23,"settings"],[98,29,92,31],[98,30,92,32,"headers"],[98,37,92,39],[99,6,93,8],[99,10,93,12],[99,11,93,13,"fetch"],[99,16,93,18],[99,19,93,21],[99,20,93,22],[99,21,93,23],[99,23,93,25,"helpers_1"],[99,32,93,34],[99,33,93,35,"resolveFetch"],[99,45,93,47],[99,47,93,49,"settings"],[99,55,93,57],[99,56,93,58,"fetch"],[99,61,93,63],[99,62,93,64],[100,6,94,8],[100,10,94,12],[100,11,94,13,"lock"],[100,15,94,17],[100,18,94,20,"settings"],[100,26,94,28],[100,27,94,29,"lock"],[100,31,94,33],[100,35,94,37,"lockNoOp"],[100,43,94,45],[101,6,95,8],[101,10,95,12],[101,11,95,13,"detectSessionInUrl"],[101,29,95,31],[101,32,95,34,"settings"],[101,40,95,42],[101,41,95,43,"detectSessionInUrl"],[101,59,95,61],[102,6,96,8],[102,10,96,12],[102,11,96,13,"flowType"],[102,19,96,21],[102,22,96,24,"settings"],[102,30,96,32],[102,31,96,33,"flowType"],[102,39,96,41],[103,6,97,8],[103,10,97,12],[103,11,97,13,"hasCustomAuthorizationHeader"],[103,39,97,41],[103,42,97,44,"settings"],[103,50,97,52],[103,51,97,53,"hasCustomAuthorizationHeader"],[103,79,97,81],[104,6,98,8],[104,10,98,12,"settings"],[104,18,98,20],[104,19,98,21,"lock"],[104,23,98,25],[104,25,98,27],[105,8,99,12],[105,12,99,16],[105,13,99,17,"lock"],[105,17,99,21],[105,20,99,24,"settings"],[105,28,99,32],[105,29,99,33,"lock"],[105,33,99,37],[106,6,100,8],[106,7,100,9],[106,13,101,13],[106,17,101,17],[106,18,101,18],[106,19,101,19],[106,21,101,21,"helpers_1"],[106,30,101,30],[106,31,101,31,"isBrowser"],[106,40,101,40],[106,42,101,42],[106,43,101,43],[106,48,101,48],[106,49,101,49,"_a"],[106,51,101,51],[106,54,101,54,"globalThis"],[106,64,101,64],[106,69,101,69],[106,73,101,73],[106,77,101,77,"globalThis"],[106,87,101,87],[106,92,101,92],[106,97,101,97],[106,98,101,98],[106,101,101,101],[106,106,101,106],[106,107,101,107],[106,110,101,110,"globalThis"],[106,120,101,120],[106,121,101,121,"navigator"],[106,130,101,130],[106,136,101,136],[106,140,101,140],[106,144,101,144,"_a"],[106,146,101,146],[106,151,101,151],[106,156,101,156],[106,157,101,157],[106,160,101,160],[106,165,101,165],[106,166,101,166],[106,169,101,169,"_a"],[106,171,101,171],[106,172,101,172,"locks"],[106,177,101,177],[106,178,101,178],[106,180,101,180],[107,8,102,12],[107,12,102,16],[107,13,102,17,"lock"],[107,17,102,21],[107,20,102,24,"locks_1"],[107,27,102,31],[107,28,102,32,"navigatorLock"],[107,41,102,45],[108,6,103,8],[108,7,103,9],[108,13,104,13],[109,8,105,12],[109,12,105,16],[109,13,105,17,"lock"],[109,17,105,21],[109,20,105,24,"lockNoOp"],[109,28,105,32],[110,6,106,8],[111,6,107,8],[111,10,107,12],[111,11,107,13],[111,15,107,17],[111,16,107,18,"jwks"],[111,20,107,22],[111,22,107,24],[112,8,108,12],[112,12,108,16],[112,13,108,17,"jwks"],[112,17,108,21],[112,20,108,24],[113,10,108,26,"keys"],[113,14,108,30],[113,16,108,32],[114,8,108,35],[114,9,108,36],[115,8,109,12],[115,12,109,16],[115,13,109,17,"jwks_cached_at"],[115,27,109,31],[115,30,109,34,"Number"],[115,36,109,40],[115,37,109,41,"MIN_SAFE_INTEGER"],[115,53,109,57],[116,6,110,8],[117,6,111,8],[117,10,111,12],[117,11,111,13,"mfa"],[117,14,111,16],[117,17,111,19],[118,8,112,12,"verify"],[118,14,112,18],[118,16,112,20],[118,20,112,24],[118,21,112,25,"_verify"],[118,28,112,32],[118,29,112,33,"bind"],[118,33,112,37],[118,34,112,38],[118,38,112,42],[118,39,112,43],[119,8,113,12,"enroll"],[119,14,113,18],[119,16,113,20],[119,20,113,24],[119,21,113,25,"_enroll"],[119,28,113,32],[119,29,113,33,"bind"],[119,33,113,37],[119,34,113,38],[119,38,113,42],[119,39,113,43],[120,8,114,12,"unenroll"],[120,16,114,20],[120,18,114,22],[120,22,114,26],[120,23,114,27,"_unenroll"],[120,32,114,36],[120,33,114,37,"bind"],[120,37,114,41],[120,38,114,42],[120,42,114,46],[120,43,114,47],[121,8,115,12,"challenge"],[121,17,115,21],[121,19,115,23],[121,23,115,27],[121,24,115,28,"_challenge"],[121,34,115,38],[121,35,115,39,"bind"],[121,39,115,43],[121,40,115,44],[121,44,115,48],[121,45,115,49],[122,8,116,12,"listFactors"],[122,19,116,23],[122,21,116,25],[122,25,116,29],[122,26,116,30,"_listFactors"],[122,38,116,42],[122,39,116,43,"bind"],[122,43,116,47],[122,44,116,48],[122,48,116,52],[122,49,116,53],[123,8,117,12,"challengeAndVerify"],[123,26,117,30],[123,28,117,32],[123,32,117,36],[123,33,117,37,"_challengeAndVerify"],[123,52,117,56],[123,53,117,57,"bind"],[123,57,117,61],[123,58,117,62],[123,62,117,66],[123,63,117,67],[124,8,118,12,"getAuthenticatorAssuranceLevel"],[124,38,118,42],[124,40,118,44],[124,44,118,48],[124,45,118,49,"_getAuthenticatorAssuranceLevel"],[124,76,118,80],[124,77,118,81,"bind"],[124,81,118,85],[124,82,118,86],[124,86,118,90],[125,6,119,8],[125,7,119,9],[126,6,120,8],[126,10,120,12],[126,14,120,16],[126,15,120,17,"persistSession"],[126,29,120,31],[126,31,120,33],[127,8,121,12],[127,12,121,16,"settings"],[127,20,121,24],[127,21,121,25,"storage"],[127,28,121,32],[127,30,121,34],[128,10,122,16],[128,14,122,20],[128,15,122,21,"storage"],[128,22,122,28],[128,25,122,31,"settings"],[128,33,122,39],[128,34,122,40,"storage"],[128,41,122,47],[129,8,123,12],[129,9,123,13],[129,15,124,17],[130,10,125,16],[130,14,125,20],[130,15,125,21],[130,16,125,22],[130,18,125,24,"helpers_1"],[130,27,125,33],[130,28,125,34,"supportsLocalStorage"],[130,48,125,54],[130,50,125,56],[130,51,125,57],[130,53,125,59],[131,12,126,20],[131,16,126,24],[131,17,126,25,"storage"],[131,24,126,32],[131,27,126,35,"globalThis"],[131,37,126,45],[131,38,126,46,"localStorage"],[131,50,126,58],[132,10,127,16],[132,11,127,17],[132,17,128,21],[133,12,129,20],[133,16,129,24],[133,17,129,25,"memoryStorage"],[133,30,129,38],[133,33,129,41],[133,34,129,42],[133,35,129,43],[134,12,130,20],[134,16,130,24],[134,17,130,25,"storage"],[134,24,130,32],[134,27,130,35],[134,28,130,36],[134,29,130,37],[134,31,130,39,"local_storage_1"],[134,46,130,54],[134,47,130,55,"memoryLocalStorageAdapter"],[134,72,130,80],[134,74,130,82],[134,78,130,86],[134,79,130,87,"memoryStorage"],[134,92,130,100],[134,93,130,101],[135,10,131,16],[136,8,132,12],[137,8,133,12],[137,12,133,16,"settings"],[137,20,133,24],[137,21,133,25,"userStorage"],[137,32,133,36],[137,34,133,38],[138,10,134,16],[138,14,134,20],[138,15,134,21,"userStorage"],[138,26,134,32],[138,29,134,35,"settings"],[138,37,134,43],[138,38,134,44,"userStorage"],[138,49,134,55],[139,8,135,12],[140,6,136,8],[140,7,136,9],[140,13,137,13],[141,8,138,12],[141,12,138,16],[141,13,138,17,"memoryStorage"],[141,26,138,30],[141,29,138,33],[141,30,138,34],[141,31,138,35],[142,8,139,12],[142,12,139,16],[142,13,139,17,"storage"],[142,20,139,24],[142,23,139,27],[142,24,139,28],[142,25,139,29],[142,27,139,31,"local_storage_1"],[142,42,139,46],[142,43,139,47,"memoryLocalStorageAdapter"],[142,68,139,72],[142,70,139,74],[142,74,139,78],[142,75,139,79,"memoryStorage"],[142,88,139,92],[142,89,139,93],[143,6,140,8],[144,6,141,8],[144,10,141,12],[144,11,141,13],[144,12,141,14],[144,14,141,16,"helpers_1"],[144,23,141,25],[144,24,141,26,"isBrowser"],[144,33,141,35],[144,35,141,37],[144,36,141,38],[144,40,141,42,"globalThis"],[144,50,141,52],[144,51,141,53,"BroadcastChannel"],[144,67,141,69],[144,71,141,73],[144,75,141,77],[144,76,141,78,"persistSession"],[144,90,141,92],[144,94,141,96],[144,98,141,100],[144,99,141,101,"storageKey"],[144,109,141,111],[144,111,141,113],[145,8,142,12],[145,12,142,16],[146,10,143,16],[146,14,143,20],[146,15,143,21,"broadcastChannel"],[146,31,143,37],[146,34,143,40],[146,38,143,44,"globalThis"],[146,48,143,54],[146,49,143,55,"BroadcastChannel"],[146,65,143,71],[146,66,143,72],[146,70,143,76],[146,71,143,77,"storageKey"],[146,81,143,87],[146,82,143,88],[147,8,144,12],[147,9,144,13],[147,10,145,12],[147,17,145,19,"e"],[147,18,145,20],[147,20,145,22],[148,10,146,16,"console"],[148,17,146,23],[148,18,146,24,"error"],[148,23,146,29],[148,24,146,30],[148,112,146,118],[148,114,146,120,"e"],[148,115,146,121],[148,116,146,122],[149,8,147,12],[150,8,148,12],[150,9,148,13,"_b"],[150,11,148,15],[150,14,148,18],[150,18,148,22],[150,19,148,23,"broadcastChannel"],[150,35,148,39],[150,41,148,45],[150,45,148,49],[150,49,148,53,"_b"],[150,51,148,55],[150,56,148,60],[150,61,148,65],[150,62,148,66],[150,65,148,69],[150,70,148,74],[150,71,148,75],[150,74,148,78,"_b"],[150,76,148,80],[150,77,148,81,"addEventListener"],[150,93,148,97],[150,94,148,98],[150,103,148,107],[150,105,148,109],[150,111,148,116,"event"],[150,116,148,121],[150,120,148,126],[151,10,149,16],[151,14,149,20],[151,15,149,21,"_debug"],[151,21,149,27],[151,22,149,28],[151,80,149,86],[151,82,149,88,"event"],[151,87,149,93],[151,88,149,94],[152,10,150,16],[152,16,150,22],[152,20,150,26],[152,21,150,27,"_notifyAllSubscribers"],[152,42,150,48],[152,43,150,49,"event"],[152,48,150,54],[152,49,150,55,"data"],[152,53,150,59],[152,54,150,60,"event"],[152,59,150,65],[152,61,150,67,"event"],[152,66,150,72],[152,67,150,73,"data"],[152,71,150,77],[152,72,150,78,"session"],[152,79,150,85],[152,81,150,87],[152,86,150,92],[152,87,150,93],[152,88,150,94],[152,89,150,95],[153,8,151,12],[153,9,151,13],[153,10,151,14],[154,6,152,8],[155,6,153,8],[155,10,153,12],[155,11,153,13,"initialize"],[155,21,153,23],[155,22,153,24],[155,23,153,25],[156,4,154,4],[157,4,155,4],[158,0,156,0],[159,0,157,0],[160,4,158,4],[160,8,158,8,"jwks"],[160,12,158,12,"jwks"],[160,13,158,12],[160,15,158,15],[161,6,159,8],[161,10,159,12,"_a"],[161,12,159,14],[161,14,159,16,"_b"],[161,16,159,18],[162,6,160,8],[162,13,160,15],[162,14,160,16,"_b"],[162,16,160,18],[162,19,160,21],[162,20,160,22,"_a"],[162,22,160,24],[162,25,160,27,"GLOBAL_JWKS"],[162,36,160,38],[162,37,160,39],[162,41,160,43],[162,42,160,44,"storageKey"],[162,52,160,54],[162,53,160,55],[162,59,160,61],[162,63,160,65],[162,67,160,69,"_a"],[162,69,160,71],[162,74,160,76],[162,79,160,81],[162,80,160,82],[162,83,160,85],[162,88,160,90],[162,89,160,91],[162,92,160,94,"_a"],[162,94,160,96],[162,95,160,97,"jwks"],[162,99,160,101],[162,105,160,107],[162,109,160,111],[162,113,160,115,"_b"],[162,115,160,117],[162,120,160,122],[162,125,160,127],[162,126,160,128],[162,129,160,131,"_b"],[162,131,160,133],[162,134,160,136],[163,8,160,138,"keys"],[163,12,160,142],[163,14,160,144],[164,6,160,147],[164,7,160,148],[165,4,161,4],[166,4,162,4],[166,8,162,8,"jwks"],[166,12,162,12,"jwks"],[166,13,162,13,"value"],[166,18,162,18],[166,20,162,20],[167,6,163,8,"GLOBAL_JWKS"],[167,17,163,19],[167,18,163,20],[167,22,163,24],[167,23,163,25,"storageKey"],[167,33,163,35],[167,34,163,36],[167,37,163,39,"Object"],[167,43,163,45],[167,44,163,46,"assign"],[167,50,163,52],[167,51,163,53,"Object"],[167,57,163,59],[167,58,163,60,"assign"],[167,64,163,66],[167,65,163,67],[167,66,163,68],[167,67,163,69],[167,69,163,71,"GLOBAL_JWKS"],[167,80,163,82],[167,81,163,83],[167,85,163,87],[167,86,163,88,"storageKey"],[167,96,163,98],[167,97,163,99],[167,98,163,100],[167,100,163,102],[168,8,163,104,"jwks"],[168,12,163,108],[168,14,163,110,"value"],[169,6,163,116],[169,7,163,117],[169,8,163,118],[170,4,164,4],[171,4,165,4],[171,8,165,8,"jwks_cached_at"],[171,22,165,22,"jwks_cached_at"],[171,23,165,22],[171,25,165,25],[172,6,166,8],[172,10,166,12,"_a"],[172,12,166,14],[172,14,166,16,"_b"],[172,16,166,18],[173,6,167,8],[173,13,167,15],[173,14,167,16,"_b"],[173,16,167,18],[173,19,167,21],[173,20,167,22,"_a"],[173,22,167,24],[173,25,167,27,"GLOBAL_JWKS"],[173,36,167,38],[173,37,167,39],[173,41,167,43],[173,42,167,44,"storageKey"],[173,52,167,54],[173,53,167,55],[173,59,167,61],[173,63,167,65],[173,67,167,69,"_a"],[173,69,167,71],[173,74,167,76],[173,79,167,81],[173,80,167,82],[173,83,167,85],[173,88,167,90],[173,89,167,91],[173,92,167,94,"_a"],[173,94,167,96],[173,95,167,97,"cachedAt"],[173,103,167,105],[173,109,167,111],[173,113,167,115],[173,117,167,119,"_b"],[173,119,167,121],[173,124,167,126],[173,129,167,131],[173,130,167,132],[173,133,167,135,"_b"],[173,135,167,137],[173,138,167,140,"Number"],[173,144,167,146],[173,145,167,147,"MIN_SAFE_INTEGER"],[173,161,167,163],[174,4,168,4],[175,4,169,4],[175,8,169,8,"jwks_cached_at"],[175,22,169,22,"jwks_cached_at"],[175,23,169,23,"value"],[175,28,169,28],[175,30,169,30],[176,6,170,8,"GLOBAL_JWKS"],[176,17,170,19],[176,18,170,20],[176,22,170,24],[176,23,170,25,"storageKey"],[176,33,170,35],[176,34,170,36],[176,37,170,39,"Object"],[176,43,170,45],[176,44,170,46,"assign"],[176,50,170,52],[176,51,170,53,"Object"],[176,57,170,59],[176,58,170,60,"assign"],[176,64,170,66],[176,65,170,67],[176,66,170,68],[176,67,170,69],[176,69,170,71,"GLOBAL_JWKS"],[176,80,170,82],[176,81,170,83],[176,85,170,87],[176,86,170,88,"storageKey"],[176,96,170,98],[176,97,170,99],[176,98,170,100],[176,100,170,102],[177,8,170,104,"cachedAt"],[177,16,170,112],[177,18,170,114,"value"],[178,6,170,120],[178,7,170,121],[178,8,170,122],[179,4,171,4],[180,4,172,4,"_debug"],[180,10,172,10,"_debug"],[180,11,172,11],[180,14,172,14,"args"],[180,18,172,18],[180,20,172,20],[181,6,173,8],[181,10,173,12],[181,14,173,16],[181,15,173,17,"logDebugMessages"],[181,31,173,33],[181,33,173,35],[182,8,174,12],[182,12,174,16],[182,13,174,17,"logger"],[182,19,174,23],[182,20,174,24],[182,36,174,40],[182,40,174,44],[182,41,174,45,"instanceID"],[182,51,174,55],[182,56,174,60,"version_1"],[182,65,174,69],[182,66,174,70,"version"],[182,73,174,77],[182,78,174,82],[182,82,174,86,"Date"],[182,86,174,90],[182,87,174,91],[182,88,174,92],[182,89,174,93,"toISOString"],[182,100,174,104],[182,101,174,105],[182,102,174,106],[182,104,174,108],[182,106,174,110],[182,109,174,113,"args"],[182,113,174,117],[182,114,174,118],[183,6,175,8],[184,6,176,8],[184,13,176,15],[184,17,176,19],[185,4,177,4],[186,4,178,4],[187,0,179,0],[188,0,180,0],[189,0,181,0],[190,0,182,0],[191,4,183,4],[191,10,183,10,"initialize"],[191,20,183,20,"initialize"],[191,21,183,20],[191,23,183,23],[192,6,184,8],[192,10,184,12],[192,14,184,16],[192,15,184,17,"initializePromise"],[192,32,184,34],[192,34,184,36],[193,8,185,12],[193,15,185,19],[193,21,185,25],[193,25,185,29],[193,26,185,30,"initializePromise"],[193,43,185,47],[194,6,186,8],[195,6,187,8],[195,10,187,12],[195,11,187,13,"initializePromise"],[195,28,187,30],[195,31,187,33],[195,32,187,34],[195,44,187,46],[196,8,188,12],[196,15,188,19],[196,21,188,25],[196,25,188,29],[196,26,188,30,"_acquireLock"],[196,38,188,42],[196,39,188,43],[196,40,188,44],[196,41,188,45],[196,43,188,47],[196,55,188,59],[197,10,189,16],[197,17,189,23],[197,23,189,29],[197,27,189,33],[197,28,189,34,"_initialize"],[197,39,189,45],[197,40,189,46],[197,41,189,47],[198,8,190,12],[198,9,190,13],[198,10,190,14],[199,6,191,8],[199,7,191,9],[199,9,191,11],[199,10,191,12],[200,6,192,8],[200,13,192,15],[200,19,192,21],[200,23,192,25],[200,24,192,26,"initializePromise"],[200,41,192,43],[201,4,193,4],[202,4,194,4],[203,0,195,0],[204,0,196,0],[205,0,197,0],[206,0,198,0],[207,0,199,0],[208,4,200,4],[208,10,200,10,"_initialize"],[208,21,200,21,"_initialize"],[208,22,200,21],[208,24,200,24],[209,6,201,8],[209,10,201,12,"_a"],[209,12,201,14],[210,6,202,8],[210,10,202,12],[211,8,203,12],[211,14,203,18,"params"],[211,20,203,24],[211,23,203,27],[211,24,203,28],[211,25,203,29],[211,27,203,31,"helpers_1"],[211,36,203,40],[211,37,203,41,"parseParametersFromURL"],[211,59,203,63],[211,61,203,65,"window"],[211,67,203,71],[211,68,203,72,"location"],[211,76,203,80],[211,77,203,81,"href"],[211,81,203,85],[211,82,203,86],[212,8,204,12],[212,12,204,16,"callbackUrlType"],[212,27,204,31],[212,30,204,34],[212,36,204,40],[213,8,205,12],[213,12,205,16],[213,16,205,20],[213,17,205,21,"_isImplicitGrantCallback"],[213,41,205,45],[213,42,205,46,"params"],[213,48,205,52],[213,49,205,53],[213,51,205,55],[214,10,206,16,"callbackUrlType"],[214,25,206,31],[214,28,206,34],[214,38,206,44],[215,8,207,12],[215,9,207,13],[215,15,208,17],[215,19,208,21],[215,25,208,27],[215,29,208,31],[215,30,208,32,"_isPKCECallback"],[215,45,208,47],[215,46,208,48,"params"],[215,52,208,54],[215,53,208,55],[215,55,208,57],[216,10,209,16,"callbackUrlType"],[216,25,209,31],[216,28,209,34],[216,34,209,40],[217,8,210,12],[218,8,211,12],[219,0,212,0],[220,0,213,0],[221,0,214,0],[222,0,215,0],[223,0,216,0],[224,8,217,12],[224,12,217,16],[224,13,217,17],[224,14,217,18],[224,16,217,20,"helpers_1"],[224,25,217,29],[224,26,217,30,"isBrowser"],[224,35,217,39],[224,37,217,41],[224,38,217,42],[224,42,217,46],[224,46,217,50],[224,47,217,51,"detectSessionInUrl"],[224,65,217,69],[224,69,217,73,"callbackUrlType"],[224,84,217,88],[224,89,217,93],[224,95,217,99],[224,97,217,101],[225,10,218,16],[225,16,218,22],[226,12,218,24,"data"],[226,16,218,28],[227,12,218,30,"error"],[228,10,218,36],[228,11,218,37],[228,14,218,40],[228,20,218,46],[228,24,218,50],[228,25,218,51,"_getSessionFromURL"],[228,43,218,69],[228,44,218,70,"params"],[228,50,218,76],[228,52,218,78,"callbackUrlType"],[228,67,218,93],[228,68,218,94],[229,10,219,16],[229,14,219,20,"error"],[229,19,219,25],[229,21,219,27],[230,12,220,20],[230,16,220,24],[230,17,220,25,"_debug"],[230,23,220,31],[230,24,220,32],[230,40,220,48],[230,42,220,50],[230,76,220,84],[230,78,220,86,"error"],[230,83,220,91],[230,84,220,92],[231,12,221,20],[231,16,221,24],[231,17,221,25],[231,18,221,26],[231,20,221,28,"errors_1"],[231,28,221,36],[231,29,221,37,"isAuthImplicitGrantRedirectError"],[231,61,221,69],[231,63,221,71,"error"],[231,68,221,76],[231,69,221,77],[231,71,221,79],[232,14,222,24],[232,20,222,30,"errorCode"],[232,29,222,39],[232,32,222,42],[232,33,222,43,"_a"],[232,35,222,45],[232,38,222,48,"error"],[232,43,222,53],[232,44,222,54,"details"],[232,51,222,61],[232,57,222,67],[232,61,222,71],[232,65,222,75,"_a"],[232,67,222,77],[232,72,222,82],[232,77,222,87],[232,78,222,88],[232,81,222,91],[232,86,222,96],[232,87,222,97],[232,90,222,100,"_a"],[232,92,222,102],[232,93,222,103,"code"],[232,97,222,107],[233,14,223,24],[233,18,223,28,"errorCode"],[233,27,223,37],[233,32,223,42],[233,57,223,67],[233,61,224,28,"errorCode"],[233,70,224,37],[233,75,224,42],[233,95,224,62],[233,99,225,28,"errorCode"],[233,108,225,37],[233,113,225,42],[233,144,225,73],[233,146,225,75],[234,16,226,28],[234,23,226,35],[235,18,226,37,"error"],[236,16,226,43],[236,17,226,44],[237,14,227,24],[238,12,228,20],[239,12,229,20],[240,12,230,20],[241,12,231,20],[241,18,231,26],[241,22,231,30],[241,23,231,31,"_removeSession"],[241,37,231,45],[241,38,231,46],[241,39,231,47],[242,12,232,20],[242,19,232,27],[243,14,232,29,"error"],[244,12,232,35],[244,13,232,36],[245,10,233,16],[246,10,234,16],[246,16,234,22],[247,12,234,24,"session"],[247,19,234,31],[248,12,234,33,"redirectType"],[249,10,234,46],[249,11,234,47],[249,14,234,50,"data"],[249,18,234,54],[250,10,235,16],[250,14,235,20],[250,15,235,21,"_debug"],[250,21,235,27],[250,22,235,28],[250,38,235,44],[250,40,235,46],[250,65,235,71],[250,67,235,73,"session"],[250,74,235,80],[250,76,235,82],[250,91,235,97],[250,93,235,99,"redirectType"],[250,105,235,111],[250,106,235,112],[251,10,236,16],[251,16,236,22],[251,20,236,26],[251,21,236,27,"_saveSession"],[251,33,236,39],[251,34,236,40,"session"],[251,41,236,47],[251,42,236,48],[252,10,237,16,"setTimeout"],[252,20,237,26],[252,21,237,27],[252,33,237,39],[253,12,238,20],[253,16,238,24,"redirectType"],[253,28,238,36],[253,33,238,41],[253,43,238,51],[253,45,238,53],[254,14,239,24],[254,20,239,30],[254,24,239,34],[254,25,239,35,"_notifyAllSubscribers"],[254,46,239,56],[254,47,239,57],[254,66,239,76],[254,68,239,78,"session"],[254,75,239,85],[254,76,239,86],[255,12,240,20],[255,13,240,21],[255,19,241,25],[256,14,242,24],[256,20,242,30],[256,24,242,34],[256,25,242,35,"_notifyAllSubscribers"],[256,46,242,56],[256,47,242,57],[256,58,242,68],[256,60,242,70,"session"],[256,67,242,77],[256,68,242,78],[257,12,243,20],[258,10,244,16],[258,11,244,17],[258,13,244,19],[258,14,244,20],[258,15,244,21],[259,10,245,16],[259,17,245,23],[260,12,245,25,"error"],[260,17,245,30],[260,19,245,32],[261,10,245,37],[261,11,245,38],[262,8,246,12],[263,8,247,12],[264,8,248,12],[264,14,248,18],[264,18,248,22],[264,19,248,23,"_recoverAndRefresh"],[264,37,248,41],[264,38,248,42],[264,39,248,43],[265,8,249,12],[265,15,249,19],[266,10,249,21,"error"],[266,15,249,26],[266,17,249,28],[267,8,249,33],[267,9,249,34],[268,6,250,8],[268,7,250,9],[268,8,251,8],[268,15,251,15,"error"],[268,20,251,20],[268,22,251,22],[269,8,252,12],[269,12,252,16],[269,13,252,17],[269,14,252,18],[269,16,252,20,"errors_1"],[269,24,252,28],[269,25,252,29,"isAuthError"],[269,36,252,40],[269,38,252,42,"error"],[269,43,252,47],[269,44,252,48],[269,46,252,50],[270,10,253,16],[270,17,253,23],[271,12,253,25,"error"],[272,10,253,31],[272,11,253,32],[273,8,254,12],[274,8,255,12],[274,15,255,19],[275,10,256,16,"error"],[275,15,256,21],[275,17,256,23],[275,21,256,27,"errors_1"],[275,29,256,35],[275,30,256,36,"AuthUnknownError"],[275,46,256,52],[275,47,256,53],[275,87,256,93],[275,89,256,95,"error"],[275,94,256,100],[276,8,257,12],[276,9,257,13],[277,6,258,8],[277,7,258,9],[277,16,259,16],[278,8,260,12],[278,14,260,18],[278,18,260,22],[278,19,260,23,"_handleVisibilityChange"],[278,42,260,46],[278,43,260,47],[278,44,260,48],[279,8,261,12],[279,12,261,16],[279,13,261,17,"_debug"],[279,19,261,23],[279,20,261,24],[279,36,261,40],[279,38,261,42],[279,43,261,47],[279,44,261,48],[280,6,262,8],[281,4,263,4],[282,4,264,4],[283,0,265,0],[284,0,266,0],[285,0,267,0],[286,0,268,0],[287,4,269,4],[287,10,269,10,"signInAnonymously"],[287,27,269,27,"signInAnonymously"],[287,28,269,28,"credentials"],[287,39,269,39],[287,41,269,41],[288,6,270,8],[288,10,270,12,"_a"],[288,12,270,14],[288,14,270,16,"_b"],[288,16,270,18],[288,18,270,20,"_c"],[288,20,270,22],[289,6,271,8],[289,10,271,12],[290,8,272,12],[290,14,272,18,"res"],[290,17,272,21],[290,20,272,24],[290,26,272,30],[290,27,272,31],[290,28,272,32],[290,30,272,34,"fetch_1"],[290,37,272,41],[290,38,272,42,"_request"],[290,46,272,50],[290,48,272,52],[290,52,272,56],[290,53,272,57,"fetch"],[290,58,272,62],[290,60,272,64],[290,66,272,70],[290,68,272,72],[290,71,272,75],[290,75,272,79],[290,76,272,80,"url"],[290,79,272,83],[290,88,272,92],[290,90,272,94],[291,10,273,16,"headers"],[291,17,273,23],[291,19,273,25],[291,23,273,29],[291,24,273,30,"headers"],[291,31,273,37],[292,10,274,16,"body"],[292,14,274,20],[292,16,274,22],[293,12,275,20,"data"],[293,16,275,24],[293,18,275,26],[293,19,275,27,"_b"],[293,21,275,29],[293,24,275,32],[293,25,275,33,"_a"],[293,27,275,35],[293,30,275,38,"credentials"],[293,41,275,49],[293,46,275,54],[293,50,275,58],[293,54,275,62,"credentials"],[293,65,275,73],[293,70,275,78],[293,75,275,83],[293,76,275,84],[293,79,275,87],[293,84,275,92],[293,85,275,93],[293,88,275,96,"credentials"],[293,99,275,107],[293,100,275,108,"options"],[293,107,275,115],[293,113,275,121],[293,117,275,125],[293,121,275,129,"_a"],[293,123,275,131],[293,128,275,136],[293,133,275,141],[293,134,275,142],[293,137,275,145],[293,142,275,150],[293,143,275,151],[293,146,275,154,"_a"],[293,148,275,156],[293,149,275,157,"data"],[293,153,275,161],[293,159,275,167],[293,163,275,171],[293,167,275,175,"_b"],[293,169,275,177],[293,174,275,182],[293,179,275,187],[293,180,275,188],[293,183,275,191,"_b"],[293,185,275,193],[293,188,275,196],[293,189,275,197],[293,190,275,198],[294,12,276,20,"gotrue_meta_security"],[294,32,276,40],[294,34,276,42],[295,14,276,44,"captcha_token"],[295,27,276,57],[295,29,276,59],[295,30,276,60,"_c"],[295,32,276,62],[295,35,276,65,"credentials"],[295,46,276,76],[295,51,276,81],[295,55,276,85],[295,59,276,89,"credentials"],[295,70,276,100],[295,75,276,105],[295,80,276,110],[295,81,276,111],[295,84,276,114],[295,89,276,119],[295,90,276,120],[295,93,276,123,"credentials"],[295,104,276,134],[295,105,276,135,"options"],[295,112,276,142],[295,118,276,148],[295,122,276,152],[295,126,276,156,"_c"],[295,128,276,158],[295,133,276,163],[295,138,276,168],[295,139,276,169],[295,142,276,172],[295,147,276,177],[295,148,276,178],[295,151,276,181,"_c"],[295,153,276,183],[295,154,276,184,"captchaToken"],[296,12,276,197],[297,10,277,16],[297,11,277,17],[298,10,278,16,"xform"],[298,15,278,21],[298,17,278,23,"fetch_1"],[298,24,278,30],[298,25,278,31,"_sessionResponse"],[299,8,279,12],[299,9,279,13],[299,10,279,14],[300,8,280,12],[300,14,280,18],[301,10,280,20,"data"],[301,14,280,24],[302,10,280,26,"error"],[303,8,280,32],[303,9,280,33],[303,12,280,36,"res"],[303,15,280,39],[304,8,281,12],[304,12,281,16,"error"],[304,17,281,21],[304,21,281,25],[304,22,281,26,"data"],[304,26,281,30],[304,28,281,32],[305,10,282,16],[305,17,282,23],[306,12,282,25,"data"],[306,16,282,29],[306,18,282,31],[307,14,282,33,"user"],[307,18,282,37],[307,20,282,39],[307,24,282,43],[308,14,282,45,"session"],[308,21,282,52],[308,23,282,54],[309,12,282,59],[309,13,282,60],[310,12,282,62,"error"],[310,17,282,67],[310,19,282,69,"error"],[311,10,282,75],[311,11,282,76],[312,8,283,12],[313,8,284,12],[313,14,284,18,"session"],[313,21,284,25],[313,24,284,28,"data"],[313,28,284,32],[313,29,284,33,"session"],[313,36,284,40],[314,8,285,12],[314,14,285,18,"user"],[314,18,285,22],[314,21,285,25,"data"],[314,25,285,29],[314,26,285,30,"user"],[314,30,285,34],[315,8,286,12],[315,12,286,16,"data"],[315,16,286,20],[315,17,286,21,"session"],[315,24,286,28],[315,26,286,30],[316,10,287,16],[316,16,287,22],[316,20,287,26],[316,21,287,27,"_saveSession"],[316,33,287,39],[316,34,287,40,"data"],[316,38,287,44],[316,39,287,45,"session"],[316,46,287,52],[316,47,287,53],[317,10,288,16],[317,16,288,22],[317,20,288,26],[317,21,288,27,"_notifyAllSubscribers"],[317,42,288,48],[317,43,288,49],[317,54,288,60],[317,56,288,62,"session"],[317,63,288,69],[317,64,288,70],[318,8,289,12],[319,8,290,12],[319,15,290,19],[320,10,290,21,"data"],[320,14,290,25],[320,16,290,27],[321,12,290,29,"user"],[321,16,290,33],[322,12,290,35,"session"],[323,10,290,43],[323,11,290,44],[324,10,290,46,"error"],[324,15,290,51],[324,17,290,53],[325,8,290,58],[325,9,290,59],[326,6,291,8],[326,7,291,9],[326,8,292,8],[326,15,292,15,"error"],[326,20,292,20],[326,22,292,22],[327,8,293,12],[327,12,293,16],[327,13,293,17],[327,14,293,18],[327,16,293,20,"errors_1"],[327,24,293,28],[327,25,293,29,"isAuthError"],[327,36,293,40],[327,38,293,42,"error"],[327,43,293,47],[327,44,293,48],[327,46,293,50],[328,10,294,16],[328,17,294,23],[329,12,294,25,"data"],[329,16,294,29],[329,18,294,31],[330,14,294,33,"user"],[330,18,294,37],[330,20,294,39],[330,24,294,43],[331,14,294,45,"session"],[331,21,294,52],[331,23,294,54],[332,12,294,59],[332,13,294,60],[333,12,294,62,"error"],[334,10,294,68],[334,11,294,69],[335,8,295,12],[336,8,296,12],[336,14,296,18,"error"],[336,19,296,23],[337,6,297,8],[338,4,298,4],[339,4,299,4],[340,0,300,0],[341,0,301,0],[342,0,302,0],[343,0,303,0],[344,0,304,0],[345,0,305,0],[346,0,306,0],[347,0,307,0],[348,0,308,0],[349,4,309,4],[349,10,309,10,"signUp"],[349,16,309,16,"signUp"],[349,17,309,17,"credentials"],[349,28,309,28],[349,30,309,30],[350,6,310,8],[350,10,310,12,"_a"],[350,12,310,14],[350,14,310,16,"_b"],[350,16,310,18],[350,18,310,20,"_c"],[350,20,310,22],[351,6,311,8],[351,10,311,12],[352,8,312,12],[352,12,312,16,"res"],[352,15,312,19],[353,8,313,12],[353,12,313,16],[353,19,313,23],[353,23,313,27,"credentials"],[353,34,313,38],[353,36,313,40],[354,10,314,16],[354,16,314,22],[355,12,314,24,"email"],[355,17,314,29],[356,12,314,31,"password"],[356,20,314,39],[357,12,314,41,"options"],[358,10,314,49],[358,11,314,50],[358,14,314,53,"credentials"],[358,25,314,64],[359,10,315,16],[359,14,315,20,"codeChallenge"],[359,27,315,33],[359,30,315,36],[359,34,315,40],[360,10,316,16],[360,14,316,20,"codeChallengeMethod"],[360,33,316,39],[360,36,316,42],[360,40,316,46],[361,10,317,16],[361,14,317,20],[361,18,317,24],[361,19,317,25,"flowType"],[361,27,317,33],[361,32,317,38],[361,38,317,44],[361,40,317,46],[362,12,318,20],[363,12,319,20],[363,13,319,21,"codeChallenge"],[363,26,319,34],[363,28,319,36,"codeChallengeMethod"],[363,47,319,55],[363,48,319,56],[363,51,319,59],[363,57,319,65],[363,58,319,66],[363,59,319,67],[363,61,319,69,"helpers_1"],[363,70,319,78],[363,71,319,79,"getCodeChallengeAndMethod"],[363,96,319,104],[363,98,319,106],[363,102,319,110],[363,103,319,111,"storage"],[363,110,319,118],[363,112,319,120],[363,116,319,124],[363,117,319,125,"storageKey"],[363,127,319,135],[363,128,319,136],[364,10,320,16],[365,10,321,16,"res"],[365,13,321,19],[365,16,321,22],[365,22,321,28],[365,23,321,29],[365,24,321,30],[365,26,321,32,"fetch_1"],[365,33,321,39],[365,34,321,40,"_request"],[365,42,321,48],[365,44,321,50],[365,48,321,54],[365,49,321,55,"fetch"],[365,54,321,60],[365,56,321,62],[365,62,321,68],[365,64,321,70],[365,67,321,73],[365,71,321,77],[365,72,321,78,"url"],[365,75,321,81],[365,84,321,90],[365,86,321,92],[366,12,322,20,"headers"],[366,19,322,27],[366,21,322,29],[366,25,322,33],[366,26,322,34,"headers"],[366,33,322,41],[367,12,323,20,"redirectTo"],[367,22,323,30],[367,24,323,32,"options"],[367,31,323,39],[367,36,323,44],[367,40,323,48],[367,44,323,52,"options"],[367,51,323,59],[367,56,323,64],[367,61,323,69],[367,62,323,70],[367,65,323,73],[367,70,323,78],[367,71,323,79],[367,74,323,82,"options"],[367,81,323,89],[367,82,323,90,"emailRedirectTo"],[367,97,323,105],[368,12,324,20,"body"],[368,16,324,24],[368,18,324,26],[369,14,325,24,"email"],[369,19,325,29],[370,14,326,24,"password"],[370,22,326,32],[371,14,327,24,"data"],[371,18,327,28],[371,20,327,30],[371,21,327,31,"_a"],[371,23,327,33],[371,26,327,36,"options"],[371,33,327,43],[371,38,327,48],[371,42,327,52],[371,46,327,56,"options"],[371,53,327,63],[371,58,327,68],[371,63,327,73],[371,64,327,74],[371,67,327,77],[371,72,327,82],[371,73,327,83],[371,76,327,86,"options"],[371,83,327,93],[371,84,327,94,"data"],[371,88,327,98],[371,94,327,104],[371,98,327,108],[371,102,327,112,"_a"],[371,104,327,114],[371,109,327,119],[371,114,327,124],[371,115,327,125],[371,118,327,128,"_a"],[371,120,327,130],[371,123,327,133],[371,124,327,134],[371,125,327,135],[372,14,328,24,"gotrue_meta_security"],[372,34,328,44],[372,36,328,46],[373,16,328,48,"captcha_token"],[373,29,328,61],[373,31,328,63,"options"],[373,38,328,70],[373,43,328,75],[373,47,328,79],[373,51,328,83,"options"],[373,58,328,90],[373,63,328,95],[373,68,328,100],[373,69,328,101],[373,72,328,104],[373,77,328,109],[373,78,328,110],[373,81,328,113,"options"],[373,88,328,120],[373,89,328,121,"captchaToken"],[374,14,328,134],[374,15,328,135],[375,14,329,24,"code_challenge"],[375,28,329,38],[375,30,329,40,"codeChallenge"],[375,43,329,53],[376,14,330,24,"code_challenge_method"],[376,35,330,45],[376,37,330,47,"codeChallengeMethod"],[377,12,331,20],[377,13,331,21],[378,12,332,20,"xform"],[378,17,332,25],[378,19,332,27,"fetch_1"],[378,26,332,34],[378,27,332,35,"_sessionResponse"],[379,10,333,16],[379,11,333,17],[379,12,333,18],[380,8,334,12],[380,9,334,13],[380,15,335,17],[380,19,335,21],[380,26,335,28],[380,30,335,32,"credentials"],[380,41,335,43],[380,43,335,45],[381,10,336,16],[381,16,336,22],[382,12,336,24,"phone"],[382,17,336,29],[383,12,336,31,"password"],[383,20,336,39],[384,12,336,41,"options"],[385,10,336,49],[385,11,336,50],[385,14,336,53,"credentials"],[385,25,336,64],[386,10,337,16,"res"],[386,13,337,19],[386,16,337,22],[386,22,337,28],[386,23,337,29],[386,24,337,30],[386,26,337,32,"fetch_1"],[386,33,337,39],[386,34,337,40,"_request"],[386,42,337,48],[386,44,337,50],[386,48,337,54],[386,49,337,55,"fetch"],[386,54,337,60],[386,56,337,62],[386,62,337,68],[386,64,337,70],[386,67,337,73],[386,71,337,77],[386,72,337,78,"url"],[386,75,337,81],[386,84,337,90],[386,86,337,92],[387,12,338,20,"headers"],[387,19,338,27],[387,21,338,29],[387,25,338,33],[387,26,338,34,"headers"],[387,33,338,41],[388,12,339,20,"body"],[388,16,339,24],[388,18,339,26],[389,14,340,24,"phone"],[389,19,340,29],[390,14,341,24,"password"],[390,22,341,32],[391,14,342,24,"data"],[391,18,342,28],[391,20,342,30],[391,21,342,31,"_b"],[391,23,342,33],[391,26,342,36,"options"],[391,33,342,43],[391,38,342,48],[391,42,342,52],[391,46,342,56,"options"],[391,53,342,63],[391,58,342,68],[391,63,342,73],[391,64,342,74],[391,67,342,77],[391,72,342,82],[391,73,342,83],[391,76,342,86,"options"],[391,83,342,93],[391,84,342,94,"data"],[391,88,342,98],[391,94,342,104],[391,98,342,108],[391,102,342,112,"_b"],[391,104,342,114],[391,109,342,119],[391,114,342,124],[391,115,342,125],[391,118,342,128,"_b"],[391,120,342,130],[391,123,342,133],[391,124,342,134],[391,125,342,135],[392,14,343,24,"channel"],[392,21,343,31],[392,23,343,33],[392,24,343,34,"_c"],[392,26,343,36],[392,29,343,39,"options"],[392,36,343,46],[392,41,343,51],[392,45,343,55],[392,49,343,59,"options"],[392,56,343,66],[392,61,343,71],[392,66,343,76],[392,67,343,77],[392,70,343,80],[392,75,343,85],[392,76,343,86],[392,79,343,89,"options"],[392,86,343,96],[392,87,343,97,"channel"],[392,94,343,104],[392,100,343,110],[392,104,343,114],[392,108,343,118,"_c"],[392,110,343,120],[392,115,343,125],[392,120,343,130],[392,121,343,131],[392,124,343,134,"_c"],[392,126,343,136],[392,129,343,139],[392,134,343,144],[393,14,344,24,"gotrue_meta_security"],[393,34,344,44],[393,36,344,46],[394,16,344,48,"captcha_token"],[394,29,344,61],[394,31,344,63,"options"],[394,38,344,70],[394,43,344,75],[394,47,344,79],[394,51,344,83,"options"],[394,58,344,90],[394,63,344,95],[394,68,344,100],[394,69,344,101],[394,72,344,104],[394,77,344,109],[394,78,344,110],[394,81,344,113,"options"],[394,88,344,120],[394,89,344,121,"captchaToken"],[395,14,344,134],[396,12,345,20],[396,13,345,21],[397,12,346,20,"xform"],[397,17,346,25],[397,19,346,27,"fetch_1"],[397,26,346,34],[397,27,346,35,"_sessionResponse"],[398,10,347,16],[398,11,347,17],[398,12,347,18],[399,8,348,12],[399,9,348,13],[399,15,349,17],[400,10,350,16],[400,16,350,22],[400,20,350,26,"errors_1"],[400,28,350,34],[400,29,350,35,"AuthInvalidCredentialsError"],[400,56,350,62],[400,57,350,63],[400,122,350,128],[400,123,350,129],[401,8,351,12],[402,8,352,12],[402,14,352,18],[403,10,352,20,"data"],[403,14,352,24],[404,10,352,26,"error"],[405,8,352,32],[405,9,352,33],[405,12,352,36,"res"],[405,15,352,39],[406,8,353,12],[406,12,353,16,"error"],[406,17,353,21],[406,21,353,25],[406,22,353,26,"data"],[406,26,353,30],[406,28,353,32],[407,10,354,16],[407,17,354,23],[408,12,354,25,"data"],[408,16,354,29],[408,18,354,31],[409,14,354,33,"user"],[409,18,354,37],[409,20,354,39],[409,24,354,43],[410,14,354,45,"session"],[410,21,354,52],[410,23,354,54],[411,12,354,59],[411,13,354,60],[412,12,354,62,"error"],[412,17,354,67],[412,19,354,69,"error"],[413,10,354,75],[413,11,354,76],[414,8,355,12],[415,8,356,12],[415,14,356,18,"session"],[415,21,356,25],[415,24,356,28,"data"],[415,28,356,32],[415,29,356,33,"session"],[415,36,356,40],[416,8,357,12],[416,14,357,18,"user"],[416,18,357,22],[416,21,357,25,"data"],[416,25,357,29],[416,26,357,30,"user"],[416,30,357,34],[417,8,358,12],[417,12,358,16,"data"],[417,16,358,20],[417,17,358,21,"session"],[417,24,358,28],[417,26,358,30],[418,10,359,16],[418,16,359,22],[418,20,359,26],[418,21,359,27,"_saveSession"],[418,33,359,39],[418,34,359,40,"data"],[418,38,359,44],[418,39,359,45,"session"],[418,46,359,52],[418,47,359,53],[419,10,360,16],[419,16,360,22],[419,20,360,26],[419,21,360,27,"_notifyAllSubscribers"],[419,42,360,48],[419,43,360,49],[419,54,360,60],[419,56,360,62,"session"],[419,63,360,69],[419,64,360,70],[420,8,361,12],[421,8,362,12],[421,15,362,19],[422,10,362,21,"data"],[422,14,362,25],[422,16,362,27],[423,12,362,29,"user"],[423,16,362,33],[424,12,362,35,"session"],[425,10,362,43],[425,11,362,44],[426,10,362,46,"error"],[426,15,362,51],[426,17,362,53],[427,8,362,58],[427,9,362,59],[428,6,363,8],[428,7,363,9],[428,8,364,8],[428,15,364,15,"error"],[428,20,364,20],[428,22,364,22],[429,8,365,12],[429,12,365,16],[429,13,365,17],[429,14,365,18],[429,16,365,20,"errors_1"],[429,24,365,28],[429,25,365,29,"isAuthError"],[429,36,365,40],[429,38,365,42,"error"],[429,43,365,47],[429,44,365,48],[429,46,365,50],[430,10,366,16],[430,17,366,23],[431,12,366,25,"data"],[431,16,366,29],[431,18,366,31],[432,14,366,33,"user"],[432,18,366,37],[432,20,366,39],[432,24,366,43],[433,14,366,45,"session"],[433,21,366,52],[433,23,366,54],[434,12,366,59],[434,13,366,60],[435,12,366,62,"error"],[436,10,366,68],[436,11,366,69],[437,8,367,12],[438,8,368,12],[438,14,368,18,"error"],[438,19,368,23],[439,6,369,8],[440,4,370,4],[441,4,371,4],[442,0,372,0],[443,0,373,0],[444,0,374,0],[445,0,375,0],[446,0,376,0],[447,0,377,0],[448,0,378,0],[449,4,379,4],[449,10,379,10,"signInWithPassword"],[449,28,379,28,"signInWithPassword"],[449,29,379,29,"credentials"],[449,40,379,40],[449,42,379,42],[450,6,380,8],[450,10,380,12],[451,8,381,12],[451,12,381,16,"res"],[451,15,381,19],[452,8,382,12],[452,12,382,16],[452,19,382,23],[452,23,382,27,"credentials"],[452,34,382,38],[452,36,382,40],[453,10,383,16],[453,16,383,22],[454,12,383,24,"email"],[454,17,383,29],[455,12,383,31,"password"],[455,20,383,39],[456,12,383,41,"options"],[457,10,383,49],[457,11,383,50],[457,14,383,53,"credentials"],[457,25,383,64],[458,10,384,16,"res"],[458,13,384,19],[458,16,384,22],[458,22,384,28],[458,23,384,29],[458,24,384,30],[458,26,384,32,"fetch_1"],[458,33,384,39],[458,34,384,40,"_request"],[458,42,384,48],[458,44,384,50],[458,48,384,54],[458,49,384,55,"fetch"],[458,54,384,60],[458,56,384,62],[458,62,384,68],[458,64,384,70],[458,67,384,73],[458,71,384,77],[458,72,384,78,"url"],[458,75,384,81],[458,103,384,109],[458,105,384,111],[459,12,385,20,"headers"],[459,19,385,27],[459,21,385,29],[459,25,385,33],[459,26,385,34,"headers"],[459,33,385,41],[460,12,386,20,"body"],[460,16,386,24],[460,18,386,26],[461,14,387,24,"email"],[461,19,387,29],[462,14,388,24,"password"],[462,22,388,32],[463,14,389,24,"gotrue_meta_security"],[463,34,389,44],[463,36,389,46],[464,16,389,48,"captcha_token"],[464,29,389,61],[464,31,389,63,"options"],[464,38,389,70],[464,43,389,75],[464,47,389,79],[464,51,389,83,"options"],[464,58,389,90],[464,63,389,95],[464,68,389,100],[464,69,389,101],[464,72,389,104],[464,77,389,109],[464,78,389,110],[464,81,389,113,"options"],[464,88,389,120],[464,89,389,121,"captchaToken"],[465,14,389,134],[466,12,390,20],[466,13,390,21],[467,12,391,20,"xform"],[467,17,391,25],[467,19,391,27,"fetch_1"],[467,26,391,34],[467,27,391,35,"_sessionResponsePassword"],[468,10,392,16],[468,11,392,17],[468,12,392,18],[469,8,393,12],[469,9,393,13],[469,15,394,17],[469,19,394,21],[469,26,394,28],[469,30,394,32,"credentials"],[469,41,394,43],[469,43,394,45],[470,10,395,16],[470,16,395,22],[471,12,395,24,"phone"],[471,17,395,29],[472,12,395,31,"password"],[472,20,395,39],[473,12,395,41,"options"],[474,10,395,49],[474,11,395,50],[474,14,395,53,"credentials"],[474,25,395,64],[475,10,396,16,"res"],[475,13,396,19],[475,16,396,22],[475,22,396,28],[475,23,396,29],[475,24,396,30],[475,26,396,32,"fetch_1"],[475,33,396,39],[475,34,396,40,"_request"],[475,42,396,48],[475,44,396,50],[475,48,396,54],[475,49,396,55,"fetch"],[475,54,396,60],[475,56,396,62],[475,62,396,68],[475,64,396,70],[475,67,396,73],[475,71,396,77],[475,72,396,78,"url"],[475,75,396,81],[475,103,396,109],[475,105,396,111],[476,12,397,20,"headers"],[476,19,397,27],[476,21,397,29],[476,25,397,33],[476,26,397,34,"headers"],[476,33,397,41],[477,12,398,20,"body"],[477,16,398,24],[477,18,398,26],[478,14,399,24,"phone"],[478,19,399,29],[479,14,400,24,"password"],[479,22,400,32],[480,14,401,24,"gotrue_meta_security"],[480,34,401,44],[480,36,401,46],[481,16,401,48,"captcha_token"],[481,29,401,61],[481,31,401,63,"options"],[481,38,401,70],[481,43,401,75],[481,47,401,79],[481,51,401,83,"options"],[481,58,401,90],[481,63,401,95],[481,68,401,100],[481,69,401,101],[481,72,401,104],[481,77,401,109],[481,78,401,110],[481,81,401,113,"options"],[481,88,401,120],[481,89,401,121,"captchaToken"],[482,14,401,134],[483,12,402,20],[483,13,402,21],[484,12,403,20,"xform"],[484,17,403,25],[484,19,403,27,"fetch_1"],[484,26,403,34],[484,27,403,35,"_sessionResponsePassword"],[485,10,404,16],[485,11,404,17],[485,12,404,18],[486,8,405,12],[486,9,405,13],[486,15,406,17],[487,10,407,16],[487,16,407,22],[487,20,407,26,"errors_1"],[487,28,407,34],[487,29,407,35,"AuthInvalidCredentialsError"],[487,56,407,62],[487,57,407,63],[487,122,407,128],[487,123,407,129],[488,8,408,12],[489,8,409,12],[489,14,409,18],[490,10,409,20,"data"],[490,14,409,24],[491,10,409,26,"error"],[492,8,409,32],[492,9,409,33],[492,12,409,36,"res"],[492,15,409,39],[493,8,410,12],[493,12,410,16,"error"],[493,17,410,21],[493,19,410,23],[494,10,411,16],[494,17,411,23],[495,12,411,25,"data"],[495,16,411,29],[495,18,411,31],[496,14,411,33,"user"],[496,18,411,37],[496,20,411,39],[496,24,411,43],[497,14,411,45,"session"],[497,21,411,52],[497,23,411,54],[498,12,411,59],[498,13,411,60],[499,12,411,62,"error"],[500,10,411,68],[500,11,411,69],[501,8,412,12],[501,9,412,13],[501,15,413,17],[501,19,413,21],[501,20,413,22,"data"],[501,24,413,26],[501,28,413,30],[501,29,413,31,"data"],[501,33,413,35],[501,34,413,36,"session"],[501,41,413,43],[501,45,413,47],[501,46,413,48,"data"],[501,50,413,52],[501,51,413,53,"user"],[501,55,413,57],[501,57,413,59],[502,10,414,16],[502,17,414,23],[503,12,414,25,"data"],[503,16,414,29],[503,18,414,31],[504,14,414,33,"user"],[504,18,414,37],[504,20,414,39],[504,24,414,43],[505,14,414,45,"session"],[505,21,414,52],[505,23,414,54],[506,12,414,59],[506,13,414,60],[507,12,414,62,"error"],[507,17,414,67],[507,19,414,69],[507,23,414,73,"errors_1"],[507,31,414,81],[507,32,414,82,"AuthInvalidTokenResponseError"],[507,61,414,111],[507,62,414,112],[508,10,414,114],[508,11,414,115],[509,8,415,12],[510,8,416,12],[510,12,416,16,"data"],[510,16,416,20],[510,17,416,21,"session"],[510,24,416,28],[510,26,416,30],[511,10,417,16],[511,16,417,22],[511,20,417,26],[511,21,417,27,"_saveSession"],[511,33,417,39],[511,34,417,40,"data"],[511,38,417,44],[511,39,417,45,"session"],[511,46,417,52],[511,47,417,53],[512,10,418,16],[512,16,418,22],[512,20,418,26],[512,21,418,27,"_notifyAllSubscribers"],[512,42,418,48],[512,43,418,49],[512,54,418,60],[512,56,418,62,"data"],[512,60,418,66],[512,61,418,67,"session"],[512,68,418,74],[512,69,418,75],[513,8,419,12],[514,8,420,12],[514,15,420,19],[515,10,421,16,"data"],[515,14,421,20],[515,16,421,22,"Object"],[515,22,421,28],[515,23,421,29,"assign"],[515,29,421,35],[515,30,421,36],[516,12,421,38,"user"],[516,16,421,42],[516,18,421,44,"data"],[516,22,421,48],[516,23,421,49,"user"],[516,27,421,53],[517,12,421,55,"session"],[517,19,421,62],[517,21,421,64,"data"],[517,25,421,68],[517,26,421,69,"session"],[518,10,421,77],[518,11,421,78],[518,13,421,81,"data"],[518,17,421,85],[518,18,421,86,"weak_password"],[518,31,421,99],[518,34,421,102],[519,12,421,104,"weakPassword"],[519,24,421,116],[519,26,421,118,"data"],[519,30,421,122],[519,31,421,123,"weak_password"],[520,10,421,137],[520,11,421,138],[520,14,421,141],[520,18,421,146],[520,19,421,147],[521,10,422,16,"error"],[522,8,423,12],[522,9,423,13],[523,6,424,8],[523,7,424,9],[523,8,425,8],[523,15,425,15,"error"],[523,20,425,20],[523,22,425,22],[524,8,426,12],[524,12,426,16],[524,13,426,17],[524,14,426,18],[524,16,426,20,"errors_1"],[524,24,426,28],[524,25,426,29,"isAuthError"],[524,36,426,40],[524,38,426,42,"error"],[524,43,426,47],[524,44,426,48],[524,46,426,50],[525,10,427,16],[525,17,427,23],[526,12,427,25,"data"],[526,16,427,29],[526,18,427,31],[527,14,427,33,"user"],[527,18,427,37],[527,20,427,39],[527,24,427,43],[528,14,427,45,"session"],[528,21,427,52],[528,23,427,54],[529,12,427,59],[529,13,427,60],[530,12,427,62,"error"],[531,10,427,68],[531,11,427,69],[532,8,428,12],[533,8,429,12],[533,14,429,18,"error"],[533,19,429,23],[534,6,430,8],[535,4,431,4],[536,4,432,4],[537,0,433,0],[538,0,434,0],[539,0,435,0],[540,4,436,4],[540,10,436,10,"signInWithOAuth"],[540,25,436,25,"signInWithOAuth"],[540,26,436,26,"credentials"],[540,37,436,37],[540,39,436,39],[541,6,437,8],[541,10,437,12,"_a"],[541,12,437,14],[541,14,437,16,"_b"],[541,16,437,18],[541,18,437,20,"_c"],[541,20,437,22],[541,22,437,24,"_d"],[541,24,437,26],[542,6,438,8],[542,13,438,15],[542,19,438,21],[542,23,438,25],[542,24,438,26,"_handleProviderSignIn"],[542,45,438,47],[542,46,438,48,"credentials"],[542,57,438,59],[542,58,438,60,"provider"],[542,66,438,68],[542,68,438,70],[543,8,439,12,"redirectTo"],[543,18,439,22],[543,20,439,24],[543,21,439,25,"_a"],[543,23,439,27],[543,26,439,30,"credentials"],[543,37,439,41],[543,38,439,42,"options"],[543,45,439,49],[543,51,439,55],[543,55,439,59],[543,59,439,63,"_a"],[543,61,439,65],[543,66,439,70],[543,71,439,75],[543,72,439,76],[543,75,439,79],[543,80,439,84],[543,81,439,85],[543,84,439,88,"_a"],[543,86,439,90],[543,87,439,91,"redirectTo"],[543,97,439,101],[544,8,440,12,"scopes"],[544,14,440,18],[544,16,440,20],[544,17,440,21,"_b"],[544,19,440,23],[544,22,440,26,"credentials"],[544,33,440,37],[544,34,440,38,"options"],[544,41,440,45],[544,47,440,51],[544,51,440,55],[544,55,440,59,"_b"],[544,57,440,61],[544,62,440,66],[544,67,440,71],[544,68,440,72],[544,71,440,75],[544,76,440,80],[544,77,440,81],[544,80,440,84,"_b"],[544,82,440,86],[544,83,440,87,"scopes"],[544,89,440,93],[545,8,441,12,"queryParams"],[545,19,441,23],[545,21,441,25],[545,22,441,26,"_c"],[545,24,441,28],[545,27,441,31,"credentials"],[545,38,441,42],[545,39,441,43,"options"],[545,46,441,50],[545,52,441,56],[545,56,441,60],[545,60,441,64,"_c"],[545,62,441,66],[545,67,441,71],[545,72,441,76],[545,73,441,77],[545,76,441,80],[545,81,441,85],[545,82,441,86],[545,85,441,89,"_c"],[545,87,441,91],[545,88,441,92,"queryParams"],[545,99,441,103],[546,8,442,12,"skipBrowserRedirect"],[546,27,442,31],[546,29,442,33],[546,30,442,34,"_d"],[546,32,442,36],[546,35,442,39,"credentials"],[546,46,442,50],[546,47,442,51,"options"],[546,54,442,58],[546,60,442,64],[546,64,442,68],[546,68,442,72,"_d"],[546,70,442,74],[546,75,442,79],[546,80,442,84],[546,81,442,85],[546,84,442,88],[546,89,442,93],[546,90,442,94],[546,93,442,97,"_d"],[546,95,442,99],[546,96,442,100,"skipBrowserRedirect"],[547,6,443,8],[547,7,443,9],[547,8,443,10],[548,4,444,4],[549,4,445,4],[550,0,446,0],[551,0,447,0],[552,4,448,4],[552,10,448,10,"exchangeCodeForSession"],[552,32,448,32,"exchangeCodeForSession"],[552,33,448,33,"authCode"],[552,41,448,41],[552,43,448,43],[553,6,449,8],[553,12,449,14],[553,16,449,18],[553,17,449,19,"initializePromise"],[553,34,449,36],[554,6,450,8],[554,13,450,15],[554,17,450,19],[554,18,450,20,"_acquireLock"],[554,30,450,32],[554,31,450,33],[554,32,450,34],[554,33,450,35],[554,35,450,37],[554,47,450,49],[555,8,451,12],[555,15,451,19],[555,19,451,23],[555,20,451,24,"_exchangeCodeForSession"],[555,43,451,47],[555,44,451,48,"authCode"],[555,52,451,56],[555,53,451,57],[556,6,452,8],[556,7,452,9],[556,8,452,10],[557,4,453,4],[558,4,454,4],[559,0,455,0],[560,0,456,0],[561,0,457,0],[562,0,458,0],[563,0,459,0],[564,0,460,0],[565,4,461,4],[565,10,461,10,"signInWithWeb3"],[565,24,461,24,"signInWithWeb3"],[565,25,461,25,"credentials"],[565,36,461,36],[565,38,461,38],[566,6,462,8],[566,12,462,14],[567,8,462,16,"chain"],[568,6,462,22],[568,7,462,23],[568,10,462,26,"credentials"],[568,21,462,37],[569,6,463,8],[569,14,463,16,"chain"],[569,19,463,21],[570,8,464,12],[570,13,464,17],[570,23,464,27],[571,10,465,16],[571,17,465,23],[571,23,465,29],[571,27,465,33],[571,28,465,34,"signInWithEthereum"],[571,46,465,52],[571,47,465,53,"credentials"],[571,58,465,64],[571,59,465,65],[572,8,466,12],[572,13,466,17],[572,21,466,25],[573,10,467,16],[573,17,467,23],[573,23,467,29],[573,27,467,33],[573,28,467,34,"signInWithSolana"],[573,44,467,50],[573,45,467,51,"credentials"],[573,56,467,62],[573,57,467,63],[574,8,468,12],[575,10,469,16],[575,16,469,22],[575,20,469,26,"Error"],[575,25,469,31],[575,26,469,32],[575,67,469,73,"chain"],[575,72,469,78],[575,75,469,81],[575,76,469,82],[576,6,470,8],[577,4,471,4],[578,4,472,4],[578,10,472,10,"signInWithEthereum"],[578,28,472,28,"signInWithEthereum"],[578,29,472,29,"credentials"],[578,40,472,40],[578,42,472,42],[579,6,473,8],[579,10,473,12,"_a"],[579,12,473,14],[579,14,473,16,"_b"],[579,16,473,18],[579,18,473,20,"_c"],[579,20,473,22],[579,22,473,24,"_d"],[579,24,473,26],[579,26,473,28,"_e"],[579,28,473,30],[579,30,473,32,"_f"],[579,32,473,34],[579,34,473,36,"_g"],[579,36,473,38],[579,38,473,40,"_h"],[579,40,473,42],[579,42,473,44,"_j"],[579,44,473,46],[579,46,473,48,"_k"],[579,48,473,50],[579,50,473,52,"_l"],[579,52,473,54],[580,6,474,8],[581,6,475,8],[581,10,475,12,"message"],[581,17,475,19],[582,6,476,8],[582,10,476,12,"signature"],[582,19,476,21],[583,6,477,8],[583,10,477,12],[583,19,477,21],[583,23,477,25,"credentials"],[583,34,477,36],[583,36,477,38],[584,8,478,12,"message"],[584,15,478,19],[584,18,478,22,"credentials"],[584,29,478,33],[584,30,478,34,"message"],[584,37,478,41],[585,8,479,12,"signature"],[585,17,479,21],[585,20,479,24,"credentials"],[585,31,479,35],[585,32,479,36,"signature"],[585,41,479,45],[586,6,480,8],[586,7,480,9],[586,13,481,13],[587,8,482,12],[587,14,482,18],[588,10,482,20,"chain"],[588,15,482,25],[589,10,482,27,"wallet"],[589,16,482,33],[590,10,482,35,"statement"],[590,19,482,44],[591,10,482,46,"options"],[592,8,482,54],[592,9,482,55],[592,12,482,58,"credentials"],[592,23,482,69],[593,8,483,12],[593,12,483,16,"resolvedWallet"],[593,26,483,30],[594,8,484,12],[594,12,484,16],[594,13,484,17],[594,14,484,18],[594,15,484,19],[594,17,484,21,"helpers_1"],[594,26,484,30],[594,27,484,31,"isBrowser"],[594,36,484,40],[594,38,484,42],[594,39,484,43],[594,41,484,45],[595,10,485,16],[595,14,485,20],[595,21,485,27,"wallet"],[595,27,485,33],[595,32,485,38],[595,40,485,46],[595,44,485,50],[595,46,485,52,"options"],[595,53,485,59],[595,58,485,64],[595,62,485,68],[595,66,485,72,"options"],[595,73,485,79],[595,78,485,84],[595,83,485,89],[595,84,485,90],[595,87,485,93],[595,92,485,98],[595,93,485,99],[595,96,485,102,"options"],[595,103,485,109],[595,104,485,110,"url"],[595,107,485,113],[595,108,485,114],[595,110,485,116],[596,12,486,20],[596,18,486,26],[596,22,486,30,"Error"],[596,27,486,35],[596,28,486,36],[596,115,486,123],[596,116,486,124],[597,10,487,16],[598,10,488,16,"resolvedWallet"],[598,24,488,30],[598,27,488,33,"wallet"],[598,33,488,39],[599,8,489,12],[599,9,489,13],[599,15,490,17],[599,19,490,21],[599,26,490,28,"wallet"],[599,32,490,34],[599,37,490,39],[599,45,490,47],[599,47,490,49],[600,10,491,16,"resolvedWallet"],[600,24,491,30],[600,27,491,33,"wallet"],[600,33,491,39],[601,8,492,12],[601,9,492,13],[601,15,493,17],[602,10,494,16],[602,16,494,22,"windowAny"],[602,25,494,31],[602,28,494,34,"window"],[602,34,494,40],[603,10,495,16],[603,14,495,20],[603,24,495,30],[603,28,495,34,"windowAny"],[603,37,495,43],[603,41,496,20],[603,48,496,27,"windowAny"],[603,57,496,36],[603,58,496,37,"ethereum"],[603,66,496,45],[603,71,496,50],[603,79,496,58],[603,83,497,20],[603,92,497,29],[603,96,497,33,"windowAny"],[603,105,497,42],[603,106,497,43,"ethereum"],[603,114,497,51],[603,118,498,20],[603,125,498,27,"windowAny"],[603,134,498,36],[603,135,498,37,"ethereum"],[603,143,498,45],[603,144,498,46,"request"],[603,151,498,53],[603,156,498,58],[603,166,498,68],[603,168,498,70],[604,12,499,20,"resolvedWallet"],[604,26,499,34],[604,29,499,37,"windowAny"],[604,38,499,46],[604,39,499,47,"ethereum"],[604,47,499,55],[605,10,500,16],[605,11,500,17],[605,17,501,21],[606,12,502,20],[606,18,502,26],[606,22,502,30,"Error"],[606,27,502,35],[606,28,502,36],[606,345,502,353],[606,346,502,354],[607,10,503,16],[608,8,504,12],[609,8,505,12],[609,14,505,18,"url"],[609,17,505,21],[609,20,505,24],[609,24,505,28,"URL"],[609,27,505,31],[609,28,505,32],[609,29,505,33,"_a"],[609,31,505,35],[609,34,505,38,"options"],[609,41,505,45],[609,46,505,50],[609,50,505,54],[609,54,505,58,"options"],[609,61,505,65],[609,66,505,70],[609,71,505,75],[609,72,505,76],[609,75,505,79],[609,80,505,84],[609,81,505,85],[609,84,505,88,"options"],[609,91,505,95],[609,92,505,96,"url"],[609,95,505,99],[609,101,505,105],[609,105,505,109],[609,109,505,113,"_a"],[609,111,505,115],[609,116,505,120],[609,121,505,125],[609,122,505,126],[609,125,505,129,"_a"],[609,127,505,131],[609,130,505,134,"window"],[609,136,505,140],[609,137,505,141,"location"],[609,145,505,149],[609,146,505,150,"href"],[609,150,505,154],[609,151,505,155],[610,8,506,12],[610,14,506,18,"accounts"],[610,22,506,26],[610,25,506,29],[610,31,506,35,"resolvedWallet"],[610,45,506,49],[610,46,507,17,"request"],[610,53,507,24],[610,54,507,25],[611,10,508,16,"method"],[611,16,508,22],[611,18,508,24],[612,8,509,12],[612,9,509,13],[612,10,509,14],[612,11,510,17,"then"],[612,15,510,21],[612,16,510,23,"accs"],[612,20,510,27],[612,24,510,32,"accs"],[612,28,510,36],[612,29,510,37],[612,30,511,17,"catch"],[612,35,511,22],[612,36,511,23],[612,42,511,29],[613,10,512,16],[613,16,512,22],[613,20,512,26,"Error"],[613,25,512,31],[613,26,512,32],[613,102,512,108],[613,103,512,109],[614,8,513,12],[614,9,513,13],[614,10,513,14],[615,8,514,12],[615,12,514,16],[615,13,514,17,"accounts"],[615,21,514,25],[615,25,514,29,"accounts"],[615,33,514,37],[615,34,514,38,"length"],[615,40,514,44],[615,45,514,49],[615,46,514,50],[615,48,514,52],[616,10,515,16],[616,16,515,22],[616,20,515,26,"Error"],[616,25,515,31],[616,26,515,32],[616,108,515,114],[616,109,515,115],[617,8,516,12],[618,8,517,12],[618,14,517,18,"address"],[618,21,517,25],[618,24,517,28],[618,25,517,29],[618,26,517,30],[618,28,517,32,"ethereum_1"],[618,38,517,42],[618,39,517,43,"getAddress"],[618,49,517,53],[618,51,517,55,"accounts"],[618,59,517,63],[618,60,517,64],[618,61,517,65],[618,62,517,66],[618,63,517,67],[619,8,518,12],[619,12,518,16,"chainId"],[619,19,518,23],[619,22,518,26],[619,23,518,27,"_b"],[619,25,518,29],[619,28,518,32,"options"],[619,35,518,39],[619,40,518,44],[619,44,518,48],[619,48,518,52,"options"],[619,55,518,59],[619,60,518,64],[619,65,518,69],[619,66,518,70],[619,69,518,73],[619,74,518,78],[619,75,518,79],[619,78,518,82,"options"],[619,85,518,89],[619,86,518,90,"signInWithEthereum"],[619,104,518,108],[619,110,518,114],[619,114,518,118],[619,118,518,122,"_b"],[619,120,518,124],[619,125,518,129],[619,130,518,134],[619,131,518,135],[619,134,518,138],[619,139,518,143],[619,140,518,144],[619,143,518,147,"_b"],[619,145,518,149],[619,146,518,150,"chainId"],[619,153,518,157],[620,8,519,12],[620,12,519,16],[620,13,519,17,"chainId"],[620,20,519,24],[620,22,519,26],[621,10,520,16],[621,16,520,22,"chainIdHex"],[621,26,520,32],[621,29,520,35],[621,35,520,41,"resolvedWallet"],[621,49,520,55],[621,50,520,56,"request"],[621,57,520,63],[621,58,520,64],[622,12,521,20,"method"],[622,18,521,26],[622,20,521,28],[623,10,522,16],[623,11,522,17],[623,12,522,18],[624,10,523,16,"chainId"],[624,17,523,23],[624,20,523,26],[624,21,523,27],[624,22,523,28],[624,24,523,30,"ethereum_1"],[624,34,523,40],[624,35,523,41,"fromHex"],[624,42,523,48],[624,44,523,50,"chainIdHex"],[624,54,523,60],[624,55,523,61],[625,8,524,12],[626,8,525,12],[626,14,525,18,"siweMessage"],[626,25,525,29],[626,28,525,32],[627,10,526,16,"domain"],[627,16,526,22],[627,18,526,24,"url"],[627,21,526,27],[627,22,526,28,"host"],[627,26,526,32],[628,10,527,16,"address"],[628,17,527,23],[628,19,527,25,"address"],[628,26,527,32],[629,10,528,16,"statement"],[629,19,528,25],[629,21,528,27,"statement"],[629,30,528,36],[630,10,529,16,"uri"],[630,13,529,19],[630,15,529,21,"url"],[630,18,529,24],[630,19,529,25,"href"],[630,23,529,29],[631,10,530,16,"version"],[631,17,530,23],[631,19,530,25],[631,22,530,28],[632,10,531,16,"chainId"],[632,17,531,23],[632,19,531,25,"chainId"],[632,26,531,32],[633,10,532,16,"nonce"],[633,15,532,21],[633,17,532,23],[633,18,532,24,"_c"],[633,20,532,26],[633,23,532,29,"options"],[633,30,532,36],[633,35,532,41],[633,39,532,45],[633,43,532,49,"options"],[633,50,532,56],[633,55,532,61],[633,60,532,66],[633,61,532,67],[633,64,532,70],[633,69,532,75],[633,70,532,76],[633,73,532,79,"options"],[633,80,532,86],[633,81,532,87,"signInWithEthereum"],[633,99,532,105],[633,105,532,111],[633,109,532,115],[633,113,532,119,"_c"],[633,115,532,121],[633,120,532,126],[633,125,532,131],[633,126,532,132],[633,129,532,135],[633,134,532,140],[633,135,532,141],[633,138,532,144,"_c"],[633,140,532,146],[633,141,532,147,"nonce"],[633,146,532,152],[634,10,533,16,"issuedAt"],[634,18,533,24],[634,20,533,26],[634,21,533,27,"_e"],[634,23,533,29],[634,26,533,32],[634,27,533,33,"_d"],[634,29,533,35],[634,32,533,38,"options"],[634,39,533,45],[634,44,533,50],[634,48,533,54],[634,52,533,58,"options"],[634,59,533,65],[634,64,533,70],[634,69,533,75],[634,70,533,76],[634,73,533,79],[634,78,533,84],[634,79,533,85],[634,82,533,88,"options"],[634,89,533,95],[634,90,533,96,"signInWithEthereum"],[634,108,533,114],[634,114,533,120],[634,118,533,124],[634,122,533,128,"_d"],[634,124,533,130],[634,129,533,135],[634,134,533,140],[634,135,533,141],[634,138,533,144],[634,143,533,149],[634,144,533,150],[634,147,533,153,"_d"],[634,149,533,155],[634,150,533,156,"issuedAt"],[634,158,533,164],[634,164,533,170],[634,168,533,174],[634,172,533,178,"_e"],[634,174,533,180],[634,179,533,185],[634,184,533,190],[634,185,533,191],[634,188,533,194,"_e"],[634,190,533,196],[634,193,533,199],[634,197,533,203,"Date"],[634,201,533,207],[634,202,533,208],[634,203,533,209],[635,10,534,16,"expirationTime"],[635,24,534,30],[635,26,534,32],[635,27,534,33,"_f"],[635,29,534,35],[635,32,534,38,"options"],[635,39,534,45],[635,44,534,50],[635,48,534,54],[635,52,534,58,"options"],[635,59,534,65],[635,64,534,70],[635,69,534,75],[635,70,534,76],[635,73,534,79],[635,78,534,84],[635,79,534,85],[635,82,534,88,"options"],[635,89,534,95],[635,90,534,96,"signInWithEthereum"],[635,108,534,114],[635,114,534,120],[635,118,534,124],[635,122,534,128,"_f"],[635,124,534,130],[635,129,534,135],[635,134,534,140],[635,135,534,141],[635,138,534,144],[635,143,534,149],[635,144,534,150],[635,147,534,153,"_f"],[635,149,534,155],[635,150,534,156,"expirationTime"],[635,164,534,170],[636,10,535,16,"notBefore"],[636,19,535,25],[636,21,535,27],[636,22,535,28,"_g"],[636,24,535,30],[636,27,535,33,"options"],[636,34,535,40],[636,39,535,45],[636,43,535,49],[636,47,535,53,"options"],[636,54,535,60],[636,59,535,65],[636,64,535,70],[636,65,535,71],[636,68,535,74],[636,73,535,79],[636,74,535,80],[636,77,535,83,"options"],[636,84,535,90],[636,85,535,91,"signInWithEthereum"],[636,103,535,109],[636,109,535,115],[636,113,535,119],[636,117,535,123,"_g"],[636,119,535,125],[636,124,535,130],[636,129,535,135],[636,130,535,136],[636,133,535,139],[636,138,535,144],[636,139,535,145],[636,142,535,148,"_g"],[636,144,535,150],[636,145,535,151,"notBefore"],[636,154,535,160],[637,10,536,16,"requestId"],[637,19,536,25],[637,21,536,27],[637,22,536,28,"_h"],[637,24,536,30],[637,27,536,33,"options"],[637,34,536,40],[637,39,536,45],[637,43,536,49],[637,47,536,53,"options"],[637,54,536,60],[637,59,536,65],[637,64,536,70],[637,65,536,71],[637,68,536,74],[637,73,536,79],[637,74,536,80],[637,77,536,83,"options"],[637,84,536,90],[637,85,536,91,"signInWithEthereum"],[637,103,536,109],[637,109,536,115],[637,113,536,119],[637,117,536,123,"_h"],[637,119,536,125],[637,124,536,130],[637,129,536,135],[637,130,536,136],[637,133,536,139],[637,138,536,144],[637,139,536,145],[637,142,536,148,"_h"],[637,144,536,150],[637,145,536,151,"requestId"],[637,154,536,160],[638,10,537,16,"resources"],[638,19,537,25],[638,21,537,27],[638,22,537,28,"_j"],[638,24,537,30],[638,27,537,33,"options"],[638,34,537,40],[638,39,537,45],[638,43,537,49],[638,47,537,53,"options"],[638,54,537,60],[638,59,537,65],[638,64,537,70],[638,65,537,71],[638,68,537,74],[638,73,537,79],[638,74,537,80],[638,77,537,83,"options"],[638,84,537,90],[638,85,537,91,"signInWithEthereum"],[638,103,537,109],[638,109,537,115],[638,113,537,119],[638,117,537,123,"_j"],[638,119,537,125],[638,124,537,130],[638,129,537,135],[638,130,537,136],[638,133,537,139],[638,138,537,144],[638,139,537,145],[638,142,537,148,"_j"],[638,144,537,150],[638,145,537,151,"resources"],[639,8,538,12],[639,9,538,13],[640,8,539,12,"message"],[640,15,539,19],[640,18,539,22],[640,19,539,23],[640,20,539,24],[640,22,539,26,"ethereum_1"],[640,32,539,36],[640,33,539,37,"createSiweMessage"],[640,50,539,54],[640,52,539,56,"siweMessage"],[640,63,539,67],[640,64,539,68],[641,8,540,12],[642,8,541,12,"signature"],[642,17,541,21],[642,20,541,25],[642,26,541,31,"resolvedWallet"],[642,40,541,45],[642,41,541,46,"request"],[642,48,541,53],[642,49,541,54],[643,10,542,16,"method"],[643,16,542,22],[643,18,542,24],[643,33,542,39],[644,10,543,16,"params"],[644,16,543,22],[644,18,543,24],[644,19,543,25],[644,20,543,26],[644,21,543,27],[644,23,543,29,"ethereum_1"],[644,33,543,39],[644,34,543,40,"toHex"],[644,39,543,45],[644,41,543,47,"message"],[644,48,543,54],[644,49,543,55],[644,51,543,57,"address"],[644,58,543,64],[645,8,544,12],[645,9,544,13],[645,10,544,15],[646,6,545,8],[647,6,546,8],[647,10,546,12],[648,8,547,12],[648,14,547,18],[649,10,547,20,"data"],[649,14,547,24],[650,10,547,26,"error"],[651,8,547,32],[651,9,547,33],[651,12,547,36],[651,18,547,42],[651,19,547,43],[651,20,547,44],[651,22,547,46,"fetch_1"],[651,29,547,53],[651,30,547,54,"_request"],[651,38,547,62],[651,40,547,64],[651,44,547,68],[651,45,547,69,"fetch"],[651,50,547,74],[651,52,547,76],[651,58,547,82],[651,60,547,84],[651,63,547,87],[651,67,547,91],[651,68,547,92,"url"],[651,71,547,95],[651,95,547,119],[651,97,547,121],[652,10,548,16,"headers"],[652,17,548,23],[652,19,548,25],[652,23,548,29],[652,24,548,30,"headers"],[652,31,548,37],[653,10,549,16,"body"],[653,14,549,20],[653,16,549,22,"Object"],[653,22,549,28],[653,23,549,29,"assign"],[653,29,549,35],[653,30,549,36],[654,12,549,38,"chain"],[654,17,549,43],[654,19,549,45],[654,29,549,55],[655,12,549,57,"message"],[655,19,549,64],[656,12,550,20,"signature"],[657,10,550,30],[657,11,550,31],[657,13,550,34],[657,14,550,35],[657,15,550,36,"_k"],[657,17,550,38],[657,20,550,41,"credentials"],[657,31,550,52],[657,32,550,53,"options"],[657,39,550,60],[657,45,550,66],[657,49,550,70],[657,53,550,74,"_k"],[657,55,550,76],[657,60,550,81],[657,65,550,86],[657,66,550,87],[657,69,550,90],[657,74,550,95],[657,75,550,96],[657,78,550,99,"_k"],[657,80,550,101],[657,81,550,102,"captchaToken"],[657,93,550,114],[657,97,551,22],[658,12,551,24,"gotrue_meta_security"],[658,32,551,44],[658,34,551,46],[659,14,551,48,"captcha_token"],[659,27,551,61],[659,29,551,63],[659,30,551,64,"_l"],[659,32,551,66],[659,35,551,69,"credentials"],[659,46,551,80],[659,47,551,81,"options"],[659,54,551,88],[659,60,551,94],[659,64,551,98],[659,68,551,102,"_l"],[659,70,551,104],[659,75,551,109],[659,80,551,114],[659,81,551,115],[659,84,551,118],[659,89,551,123],[659,90,551,124],[659,93,551,127,"_l"],[659,95,551,129],[659,96,551,130,"captchaToken"],[660,12,551,143],[661,10,551,145],[661,11,551,146],[661,14,552,22],[661,18,552,27],[661,19,552,28],[662,10,553,16,"xform"],[662,15,553,21],[662,17,553,23,"fetch_1"],[662,24,553,30],[662,25,553,31,"_sessionResponse"],[663,8,554,12],[663,9,554,13],[663,10,554,14],[664,8,555,12],[664,12,555,16,"error"],[664,17,555,21],[664,19,555,23],[665,10,556,16],[665,16,556,22,"error"],[665,21,556,27],[666,8,557,12],[667,8,558,12],[667,12,558,16],[667,13,558,17,"data"],[667,17,558,21],[667,21,558,25],[667,22,558,26,"data"],[667,26,558,30],[667,27,558,31,"session"],[667,34,558,38],[667,38,558,42],[667,39,558,43,"data"],[667,43,558,47],[667,44,558,48,"user"],[667,48,558,52],[667,50,558,54],[668,10,559,16],[668,17,559,23],[669,12,560,20,"data"],[669,16,560,24],[669,18,560,26],[670,14,560,28,"user"],[670,18,560,32],[670,20,560,34],[670,24,560,38],[671,14,560,40,"session"],[671,21,560,47],[671,23,560,49],[672,12,560,54],[672,13,560,55],[673,12,561,20,"error"],[673,17,561,25],[673,19,561,27],[673,23,561,31,"errors_1"],[673,31,561,39],[673,32,561,40,"AuthInvalidTokenResponseError"],[673,61,561,69],[673,62,561,70],[674,10,562,16],[674,11,562,17],[675,8,563,12],[676,8,564,12],[676,12,564,16,"data"],[676,16,564,20],[676,17,564,21,"session"],[676,24,564,28],[676,26,564,30],[677,10,565,16],[677,16,565,22],[677,20,565,26],[677,21,565,27,"_saveSession"],[677,33,565,39],[677,34,565,40,"data"],[677,38,565,44],[677,39,565,45,"session"],[677,46,565,52],[677,47,565,53],[678,10,566,16],[678,16,566,22],[678,20,566,26],[678,21,566,27,"_notifyAllSubscribers"],[678,42,566,48],[678,43,566,49],[678,54,566,60],[678,56,566,62,"data"],[678,60,566,66],[678,61,566,67,"session"],[678,68,566,74],[678,69,566,75],[679,8,567,12],[680,8,568,12],[680,15,568,19],[681,10,568,21,"data"],[681,14,568,25],[681,16,568,27,"Object"],[681,22,568,33],[681,23,568,34,"assign"],[681,29,568,40],[681,30,568,41],[681,31,568,42],[681,32,568,43],[681,34,568,45,"data"],[681,38,568,49],[681,39,568,50],[682,10,568,52,"error"],[683,8,568,58],[683,9,568,59],[684,6,569,8],[684,7,569,9],[684,8,570,8],[684,15,570,15,"error"],[684,20,570,20],[684,22,570,22],[685,8,571,12],[685,12,571,16],[685,13,571,17],[685,14,571,18],[685,16,571,20,"errors_1"],[685,24,571,28],[685,25,571,29,"isAuthError"],[685,36,571,40],[685,38,571,42,"error"],[685,43,571,47],[685,44,571,48],[685,46,571,50],[686,10,572,16],[686,17,572,23],[687,12,572,25,"data"],[687,16,572,29],[687,18,572,31],[688,14,572,33,"user"],[688,18,572,37],[688,20,572,39],[688,24,572,43],[689,14,572,45,"session"],[689,21,572,52],[689,23,572,54],[690,12,572,59],[690,13,572,60],[691,12,572,62,"error"],[692,10,572,68],[692,11,572,69],[693,8,573,12],[694,8,574,12],[694,14,574,18,"error"],[694,19,574,23],[695,6,575,8],[696,4,576,4],[697,4,577,4],[697,10,577,10,"signInWithSolana"],[697,26,577,26,"signInWithSolana"],[697,27,577,27,"credentials"],[697,38,577,38],[697,40,577,40],[698,6,578,8],[698,10,578,12,"_a"],[698,12,578,14],[698,14,578,16,"_b"],[698,16,578,18],[698,18,578,20,"_c"],[698,20,578,22],[698,22,578,24,"_d"],[698,24,578,26],[698,26,578,28,"_e"],[698,28,578,30],[698,30,578,32,"_f"],[698,32,578,34],[698,34,578,36,"_g"],[698,36,578,38],[698,38,578,40,"_h"],[698,40,578,42],[698,42,578,44,"_j"],[698,44,578,46],[698,46,578,48,"_k"],[698,48,578,50],[698,50,578,52,"_l"],[698,52,578,54],[698,54,578,56,"_m"],[698,56,578,58],[699,6,579,8],[699,10,579,12,"message"],[699,17,579,19],[700,6,580,8],[700,10,580,12,"signature"],[700,19,580,21],[701,6,581,8],[701,10,581,12],[701,19,581,21],[701,23,581,25,"credentials"],[701,34,581,36],[701,36,581,38],[702,8,582,12,"message"],[702,15,582,19],[702,18,582,22,"credentials"],[702,29,582,33],[702,30,582,34,"message"],[702,37,582,41],[703,8,583,12,"signature"],[703,17,583,21],[703,20,583,24,"credentials"],[703,31,583,35],[703,32,583,36,"signature"],[703,41,583,45],[704,6,584,8],[704,7,584,9],[704,13,585,13],[705,8,586,12],[705,14,586,18],[706,10,586,20,"chain"],[706,15,586,25],[707,10,586,27,"wallet"],[707,16,586,33],[708,10,586,35,"statement"],[708,19,586,44],[709,10,586,46,"options"],[710,8,586,54],[710,9,586,55],[710,12,586,58,"credentials"],[710,23,586,69],[711,8,587,12],[711,12,587,16,"resolvedWallet"],[711,26,587,30],[712,8,588,12],[712,12,588,16],[712,13,588,17],[712,14,588,18],[712,15,588,19],[712,17,588,21,"helpers_1"],[712,26,588,30],[712,27,588,31,"isBrowser"],[712,36,588,40],[712,38,588,42],[712,39,588,43],[712,41,588,45],[713,10,589,16],[713,14,589,20],[713,21,589,27,"wallet"],[713,27,589,33],[713,32,589,38],[713,40,589,46],[713,44,589,50],[713,46,589,52,"options"],[713,53,589,59],[713,58,589,64],[713,62,589,68],[713,66,589,72,"options"],[713,73,589,79],[713,78,589,84],[713,83,589,89],[713,84,589,90],[713,87,589,93],[713,92,589,98],[713,93,589,99],[713,96,589,102,"options"],[713,103,589,109],[713,104,589,110,"url"],[713,107,589,113],[713,108,589,114],[713,110,589,116],[714,12,590,20],[714,18,590,26],[714,22,590,30,"Error"],[714,27,590,35],[714,28,590,36],[714,115,590,123],[714,116,590,124],[715,10,591,16],[716,10,592,16,"resolvedWallet"],[716,24,592,30],[716,27,592,33,"wallet"],[716,33,592,39],[717,8,593,12],[717,9,593,13],[717,15,594,17],[717,19,594,21],[717,26,594,28,"wallet"],[717,32,594,34],[717,37,594,39],[717,45,594,47],[717,47,594,49],[718,10,595,16,"resolvedWallet"],[718,24,595,30],[718,27,595,33,"wallet"],[718,33,595,39],[719,8,596,12],[719,9,596,13],[719,15,597,17],[720,10,598,16],[720,16,598,22,"windowAny"],[720,25,598,31],[720,28,598,34,"window"],[720,34,598,40],[721,10,599,16],[721,14,599,20],[721,22,599,28],[721,26,599,32,"windowAny"],[721,35,599,41],[721,39,600,20],[721,46,600,27,"windowAny"],[721,55,600,36],[721,56,600,37,"solana"],[721,62,600,43],[721,67,600,48],[721,75,600,56],[721,80,601,22],[721,88,601,30],[721,92,601,34,"windowAny"],[721,101,601,43],[721,102,601,44,"solana"],[721,108,601,50],[721,112,601,54],[721,119,601,61,"windowAny"],[721,128,601,70],[721,129,601,71,"solana"],[721,135,601,77],[721,136,601,78,"signIn"],[721,142,601,84],[721,147,601,89],[721,157,601,99],[721,161,602,25],[721,174,602,38],[721,178,602,42,"windowAny"],[721,187,602,51],[721,188,602,52,"solana"],[721,194,602,58],[721,198,603,28],[721,205,603,35,"windowAny"],[721,214,603,44],[721,215,603,45,"solana"],[721,221,603,51],[721,222,603,52,"signMessage"],[721,233,603,63],[721,238,603,68],[721,248,603,79],[721,249,603,80],[721,251,603,82],[722,12,604,20,"resolvedWallet"],[722,26,604,34],[722,29,604,37,"windowAny"],[722,38,604,46],[722,39,604,47,"solana"],[722,45,604,53],[723,10,605,16],[723,11,605,17],[723,17,606,21],[724,12,607,20],[724,18,607,26],[724,22,607,30,"Error"],[724,27,607,35],[724,28,607,36],[724,339,607,347],[724,340,607,348],[725,10,608,16],[726,8,609,12],[727,8,610,12],[727,14,610,18,"url"],[727,17,610,21],[727,20,610,24],[727,24,610,28,"URL"],[727,27,610,31],[727,28,610,32],[727,29,610,33,"_a"],[727,31,610,35],[727,34,610,38,"options"],[727,41,610,45],[727,46,610,50],[727,50,610,54],[727,54,610,58,"options"],[727,61,610,65],[727,66,610,70],[727,71,610,75],[727,72,610,76],[727,75,610,79],[727,80,610,84],[727,81,610,85],[727,84,610,88,"options"],[727,91,610,95],[727,92,610,96,"url"],[727,95,610,99],[727,101,610,105],[727,105,610,109],[727,109,610,113,"_a"],[727,111,610,115],[727,116,610,120],[727,121,610,125],[727,122,610,126],[727,125,610,129,"_a"],[727,127,610,131],[727,130,610,134,"window"],[727,136,610,140],[727,137,610,141,"location"],[727,145,610,149],[727,146,610,150,"href"],[727,150,610,154],[727,151,610,155],[728,8,611,12],[728,12,611,16],[728,20,611,24],[728,24,611,28,"resolvedWallet"],[728,38,611,42],[728,42,611,46,"resolvedWallet"],[728,56,611,60],[728,57,611,61,"signIn"],[728,63,611,67],[728,65,611,69],[729,10,612,16],[729,16,612,22,"output"],[729,22,612,28],[729,25,612,31],[729,31,612,37,"resolvedWallet"],[729,45,612,51],[729,46,612,52,"signIn"],[729,52,612,58],[729,53,612,59,"Object"],[729,59,612,65],[729,60,612,66,"assign"],[729,66,612,72],[729,67,612,73,"Object"],[729,73,612,79],[729,74,612,80,"assign"],[729,80,612,86],[729,81,612,87,"Object"],[729,87,612,93],[729,88,612,94,"assign"],[729,94,612,100],[729,95,612,101],[730,12,612,103,"issuedAt"],[730,20,612,111],[730,22,612,113],[730,26,612,117,"Date"],[730,30,612,121],[730,31,612,122],[730,32,612,123],[730,33,612,124,"toISOString"],[730,44,612,135],[730,45,612,136],[731,10,612,138],[731,11,612,139],[731,13,612,141,"options"],[731,20,612,148],[731,25,612,153],[731,29,612,157],[731,33,612,161,"options"],[731,40,612,168],[731,45,612,173],[731,50,612,178],[731,51,612,179],[731,54,612,182],[731,59,612,187],[731,60,612,188],[731,63,612,191,"options"],[731,70,612,198],[731,71,612,199,"signInWithSolana"],[731,87,612,215],[731,88,612,216],[731,90,612,218],[732,12,613,20],[733,12,614,20,"version"],[733,19,614,27],[733,21,614,29],[733,24,614,32],[734,12,614,34,"domain"],[734,18,614,40],[734,20,614,42,"url"],[734,23,614,45],[734,24,614,46,"host"],[734,28,614,50],[735,12,614,52,"uri"],[735,15,614,55],[735,17,614,57,"url"],[735,20,614,60],[735,21,614,61,"href"],[736,10,614,66],[736,11,614,67],[736,12,614,68],[736,14,614,71,"statement"],[736,23,614,80],[736,26,614,83],[737,12,614,85,"statement"],[738,10,614,95],[738,11,614,96],[738,14,614,99],[738,18,614,104],[738,19,614,105],[738,20,614,106],[739,10,615,16],[739,14,615,20,"outputToProcess"],[739,29,615,35],[740,10,616,16],[740,14,616,20,"Array"],[740,19,616,25],[740,20,616,26,"isArray"],[740,27,616,33],[740,28,616,34,"output"],[740,34,616,40],[740,35,616,41],[740,39,616,45,"output"],[740,45,616,51],[740,46,616,52],[740,47,616,53],[740,48,616,54],[740,52,616,58],[740,59,616,65,"output"],[740,65,616,71],[740,66,616,72],[740,67,616,73],[740,68,616,74],[740,73,616,79],[740,81,616,87],[740,83,616,89],[741,12,617,20,"outputToProcess"],[741,27,617,35],[741,30,617,38,"output"],[741,36,617,44],[741,37,617,45],[741,38,617,46],[741,39,617,47],[742,10,618,16],[742,11,618,17],[742,17,619,21],[742,21,619,25,"output"],[742,27,619,31],[742,31,620,20],[742,38,620,27,"output"],[742,44,620,33],[742,49,620,38],[742,57,620,46],[742,61,621,20],[742,76,621,35],[742,80,621,39,"output"],[742,86,621,45],[742,90,622,20],[742,101,622,31],[742,105,622,35,"output"],[742,111,622,41],[742,113,622,43],[743,12,623,20,"outputToProcess"],[743,27,623,35],[743,30,623,38,"output"],[743,36,623,44],[744,10,624,16],[744,11,624,17],[744,17,625,21],[745,12,626,20],[745,18,626,26],[745,22,626,30,"Error"],[745,27,626,35],[745,28,626,36],[745,99,626,107],[745,100,626,108],[746,10,627,16],[747,10,628,16],[747,14,628,20],[747,29,628,35],[747,33,628,39,"outputToProcess"],[747,48,628,54],[747,52,629,20],[747,63,629,31],[747,67,629,35,"outputToProcess"],[747,82,629,50],[747,87,630,21],[747,94,630,28,"outputToProcess"],[747,109,630,43],[747,110,630,44,"signedMessage"],[747,123,630,57],[747,128,630,62],[747,136,630,70],[747,140,631,24,"outputToProcess"],[747,155,631,39],[747,156,631,40,"signedMessage"],[747,169,631,53],[747,181,631,65,"Uint8Array"],[747,191,631,75],[747,192,631,76],[747,196,632,20,"outputToProcess"],[747,211,632,35],[747,212,632,36,"signature"],[747,221,632,45],[747,233,632,57,"Uint8Array"],[747,243,632,67],[747,245,632,69],[748,12,633,20,"message"],[748,19,633,27],[748,22,634,24],[748,29,634,31,"outputToProcess"],[748,44,634,46],[748,45,634,47,"signedMessage"],[748,58,634,60],[748,63,634,65],[748,71,634,73],[748,74,635,30,"outputToProcess"],[748,89,635,45],[748,90,635,46,"signedMessage"],[748,103,635,59],[748,106,636,30],[748,110,636,34,"TextDecoder"],[748,121,636,45],[748,122,636,46],[748,123,636,47],[748,124,636,48,"decode"],[748,130,636,54],[748,131,636,55,"outputToProcess"],[748,146,636,70],[748,147,636,71,"signedMessage"],[748,160,636,84],[748,161,636,85],[749,12,637,20,"signature"],[749,21,637,29],[749,24,637,32,"outputToProcess"],[749,39,637,47],[749,40,637,48,"signature"],[749,49,637,57],[750,10,638,16],[750,11,638,17],[750,17,639,21],[751,12,640,20],[751,18,640,26],[751,22,640,30,"Error"],[751,27,640,35],[751,28,640,36],[751,134,640,142],[751,135,640,143],[752,10,641,16],[753,8,642,12],[753,9,642,13],[753,15,643,17],[754,10,644,16],[754,14,644,20],[754,16,644,22],[754,29,644,35],[754,33,644,39,"resolvedWallet"],[754,47,644,53],[754,48,644,54],[754,52,645,20],[754,59,645,27,"resolvedWallet"],[754,73,645,41],[754,74,645,42,"signMessage"],[754,85,645,53],[754,90,645,58],[754,100,645,68],[754,104,646,20],[754,106,646,22],[754,117,646,33],[754,121,646,37,"resolvedWallet"],[754,135,646,51],[754,136,646,52],[754,140,647,20],[754,147,647,27,"resolvedWallet"],[754,161,647,41],[754,166,647,46],[754,174,647,54],[754,178,648,20],[754,179,648,21,"resolvedWallet"],[754,193,648,35],[754,194,648,36,"publicKey"],[754,203,648,45],[754,207,649,20],[754,209,649,22],[754,219,649,32],[754,223,649,36,"resolvedWallet"],[754,237,649,50],[754,238,649,51,"publicKey"],[754,247,649,60],[754,248,649,61],[754,252,650,20],[754,259,650,27,"resolvedWallet"],[754,273,650,41],[754,274,650,42,"publicKey"],[754,283,650,51],[754,284,650,52,"toBase58"],[754,292,650,60],[754,297,650,65],[754,307,650,75],[754,309,650,77],[755,12,651,20],[755,18,651,26],[755,22,651,30,"Error"],[755,27,651,35],[755,28,651,36],[755,125,651,133],[755,126,651,134],[756,10,652,16],[757,10,653,16,"message"],[757,17,653,23],[757,20,653,26],[757,21,654,20],[757,24,654,23,"url"],[757,27,654,26],[757,28,654,27,"host"],[757,32,654,31],[757,81,654,80],[757,83,655,20,"resolvedWallet"],[757,97,655,34],[757,98,655,35,"publicKey"],[757,107,655,44],[757,108,655,45,"toBase58"],[757,116,655,53],[757,117,655,54],[757,118,655,55],[757,120,656,20],[757,124,656,24,"statement"],[757,133,656,33],[757,136,656,36],[757,137,656,37],[757,139,656,39],[757,141,656,41,"statement"],[757,150,656,50],[757,152,656,52],[757,154,656,54],[757,155,656,55],[757,158,656,58],[757,159,656,59],[757,161,656,61],[757,162,656,62],[757,163,656,63],[757,165,657,20],[757,177,657,32],[757,179,658,20],[757,187,658,28,"url"],[757,190,658,31],[757,191,658,32,"href"],[757,195,658,36],[757,197,658,38],[757,199,659,20],[757,213,659,34],[757,214,659,35,"_c"],[757,216,659,37],[757,219,659,40],[757,220,659,41,"_b"],[757,222,659,43],[757,225,659,46,"options"],[757,232,659,53],[757,237,659,58],[757,241,659,62],[757,245,659,66,"options"],[757,252,659,73],[757,257,659,78],[757,262,659,83],[757,263,659,84],[757,266,659,87],[757,271,659,92],[757,272,659,93],[757,275,659,96,"options"],[757,282,659,103],[757,283,659,104,"signInWithSolana"],[757,299,659,120],[757,305,659,126],[757,309,659,130],[757,313,659,134,"_b"],[757,315,659,136],[757,320,659,141],[757,325,659,146],[757,326,659,147],[757,329,659,150],[757,334,659,155],[757,335,659,156],[757,338,659,159,"_b"],[757,340,659,161],[757,341,659,162,"issuedAt"],[757,349,659,170],[757,355,659,176],[757,359,659,180],[757,363,659,184,"_c"],[757,365,659,186],[757,370,659,191],[757,375,659,196],[757,376,659,197],[757,379,659,200,"_c"],[757,381,659,202],[757,384,659,205],[757,388,659,209,"Date"],[757,392,659,213],[757,393,659,214],[757,394,659,215],[757,395,659,216,"toISOString"],[757,406,659,227],[757,407,659,228],[757,408,659,229],[757,410,659,231],[757,412,660,20],[757,416,660,24],[757,417,660,25],[757,418,660,26,"_d"],[757,420,660,28],[757,423,660,31,"options"],[757,430,660,38],[757,435,660,43],[757,439,660,47],[757,443,660,51,"options"],[757,450,660,58],[757,455,660,63],[757,460,660,68],[757,461,660,69],[757,464,660,72],[757,469,660,77],[757,470,660,78],[757,473,660,81,"options"],[757,480,660,88],[757,481,660,89,"signInWithSolana"],[757,497,660,105],[757,503,660,111],[757,507,660,115],[757,511,660,119,"_d"],[757,513,660,121],[757,518,660,126],[757,523,660,131],[757,524,660,132],[757,527,660,135],[757,532,660,140],[757,533,660,141],[757,536,660,144,"_d"],[757,538,660,146],[757,539,660,147,"notBefore"],[757,548,660,156],[757,552,661,26],[757,553,661,27],[757,568,661,42,"options"],[757,575,661,49],[757,576,661,50,"signInWithSolana"],[757,592,661,66],[757,593,661,67,"notBefore"],[757,602,661,76],[757,604,661,78],[757,605,661,79],[757,608,662,26],[757,610,662,28],[757,611,662,29],[757,613,663,20],[757,617,663,24],[757,618,663,25],[757,619,663,26,"_e"],[757,621,663,28],[757,624,663,31,"options"],[757,631,663,38],[757,636,663,43],[757,640,663,47],[757,644,663,51,"options"],[757,651,663,58],[757,656,663,63],[757,661,663,68],[757,662,663,69],[757,665,663,72],[757,670,663,77],[757,671,663,78],[757,674,663,81,"options"],[757,681,663,88],[757,682,663,89,"signInWithSolana"],[757,698,663,105],[757,704,663,111],[757,708,663,115],[757,712,663,119,"_e"],[757,714,663,121],[757,719,663,126],[757,724,663,131],[757,725,663,132],[757,728,663,135],[757,733,663,140],[757,734,663,141],[757,737,663,144,"_e"],[757,739,663,146],[757,740,663,147,"expirationTime"],[757,754,663,161],[757,758,664,26],[757,759,664,27],[757,779,664,47,"options"],[757,786,664,54],[757,787,664,55,"signInWithSolana"],[757,803,664,71],[757,804,664,72,"expirationTime"],[757,818,664,86],[757,820,664,88],[757,821,664,89],[757,824,665,26],[757,826,665,28],[757,827,665,29],[757,829,666,20],[757,833,666,24],[757,834,666,25],[757,835,666,26,"_f"],[757,837,666,28],[757,840,666,31,"options"],[757,847,666,38],[757,852,666,43],[757,856,666,47],[757,860,666,51,"options"],[757,867,666,58],[757,872,666,63],[757,877,666,68],[757,878,666,69],[757,881,666,72],[757,886,666,77],[757,887,666,78],[757,890,666,81,"options"],[757,897,666,88],[757,898,666,89,"signInWithSolana"],[757,914,666,105],[757,920,666,111],[757,924,666,115],[757,928,666,119,"_f"],[757,930,666,121],[757,935,666,126],[757,940,666,131],[757,941,666,132],[757,944,666,135],[757,949,666,140],[757,950,666,141],[757,953,666,144,"_f"],[757,955,666,146],[757,956,666,147,"chainId"],[757,963,666,154],[757,967,667,26],[757,968,667,27],[757,981,667,40,"options"],[757,988,667,47],[757,989,667,48,"signInWithSolana"],[757,1005,667,64],[757,1006,667,65,"chainId"],[757,1013,667,72],[757,1015,667,74],[757,1016,667,75],[757,1019,668,26],[757,1021,668,28],[757,1022,668,29],[757,1024,669,20],[757,1028,669,24],[757,1029,669,25],[757,1030,669,26,"_g"],[757,1032,669,28],[757,1035,669,31,"options"],[757,1042,669,38],[757,1047,669,43],[757,1051,669,47],[757,1055,669,51,"options"],[757,1062,669,58],[757,1067,669,63],[757,1072,669,68],[757,1073,669,69],[757,1076,669,72],[757,1081,669,77],[757,1082,669,78],[757,1085,669,81,"options"],[757,1092,669,88],[757,1093,669,89,"signInWithSolana"],[757,1109,669,105],[757,1115,669,111],[757,1119,669,115],[757,1123,669,119,"_g"],[757,1125,669,121],[757,1130,669,126],[757,1135,669,131],[757,1136,669,132],[757,1139,669,135],[757,1144,669,140],[757,1145,669,141],[757,1148,669,144,"_g"],[757,1150,669,146],[757,1151,669,147,"nonce"],[757,1156,669,152],[757,1160,669,156],[757,1161,669,157],[757,1171,669,167,"options"],[757,1178,669,174],[757,1179,669,175,"signInWithSolana"],[757,1195,669,191],[757,1196,669,192,"nonce"],[757,1201,669,197],[757,1203,669,199],[757,1204,669,200],[757,1207,669,203],[757,1209,669,205],[757,1210,669,206],[757,1212,670,20],[757,1216,670,24],[757,1217,670,25],[757,1218,670,26,"_h"],[757,1220,670,28],[757,1223,670,31,"options"],[757,1230,670,38],[757,1235,670,43],[757,1239,670,47],[757,1243,670,51,"options"],[757,1250,670,58],[757,1255,670,63],[757,1260,670,68],[757,1261,670,69],[757,1264,670,72],[757,1269,670,77],[757,1270,670,78],[757,1273,670,81,"options"],[757,1280,670,88],[757,1281,670,89,"signInWithSolana"],[757,1297,670,105],[757,1303,670,111],[757,1307,670,115],[757,1311,670,119,"_h"],[757,1313,670,121],[757,1318,670,126],[757,1323,670,131],[757,1324,670,132],[757,1327,670,135],[757,1332,670,140],[757,1333,670,141],[757,1336,670,144,"_h"],[757,1338,670,146],[757,1339,670,147,"requestId"],[757,1348,670,156],[757,1352,671,26],[757,1353,671,27],[757,1368,671,42,"options"],[757,1375,671,49],[757,1376,671,50,"signInWithSolana"],[757,1392,671,66],[757,1393,671,67,"requestId"],[757,1402,671,76],[757,1404,671,78],[757,1405,671,79],[757,1408,672,26],[757,1410,672,28],[757,1411,672,29],[757,1413,673,20],[757,1417,673,24],[757,1418,673,25],[757,1419,673,26,"_k"],[757,1421,673,28],[757,1424,673,31],[757,1425,673,32,"_j"],[757,1427,673,34],[757,1430,673,37,"options"],[757,1437,673,44],[757,1442,673,49],[757,1446,673,53],[757,1450,673,57,"options"],[757,1457,673,64],[757,1462,673,69],[757,1467,673,74],[757,1468,673,75],[757,1471,673,78],[757,1476,673,83],[757,1477,673,84],[757,1480,673,87,"options"],[757,1487,673,94],[757,1488,673,95,"signInWithSolana"],[757,1504,673,111],[757,1510,673,117],[757,1514,673,121],[757,1518,673,125,"_j"],[757,1520,673,127],[757,1525,673,132],[757,1530,673,137],[757,1531,673,138],[757,1534,673,141],[757,1539,673,146],[757,1540,673,147],[757,1543,673,150,"_j"],[757,1545,673,152],[757,1546,673,153,"resources"],[757,1555,673,162],[757,1561,673,168],[757,1565,673,172],[757,1569,673,176,"_k"],[757,1571,673,178],[757,1576,673,183],[757,1581,673,188],[757,1582,673,189],[757,1585,673,192],[757,1590,673,197],[757,1591,673,198],[757,1594,673,201,"_k"],[757,1596,673,203],[757,1597,673,204,"length"],[757,1603,673,210],[757,1607,674,26],[757,1608,675,28],[757,1619,675,39],[757,1621,676,28],[757,1624,676,31,"options"],[757,1631,676,38],[757,1632,676,39,"signInWithSolana"],[757,1648,676,55],[757,1649,676,56,"resources"],[757,1658,676,65],[757,1659,676,66,"map"],[757,1662,676,69],[757,1663,676,71,"resource"],[757,1671,676,79],[757,1675,676,84],[757,1680,676,89,"resource"],[757,1688,676,97],[757,1690,676,99],[757,1691,676,100],[757,1692,677,25],[757,1695,678,26],[757,1697,678,28],[757,1698,678,29],[757,1699,679,17],[757,1700,679,18,"join"],[757,1704,679,22],[757,1705,679,23],[757,1709,679,27],[757,1710,679,28],[758,10,680,16],[758,16,680,22,"maybeSignature"],[758,30,680,36],[758,33,680,39],[758,39,680,45,"resolvedWallet"],[758,53,680,59],[758,54,680,60,"signMessage"],[758,65,680,71],[758,66,680,72],[758,70,680,76,"TextEncoder"],[758,81,680,87],[758,82,680,88],[758,83,680,89],[758,84,680,90,"encode"],[758,90,680,96],[758,91,680,97,"message"],[758,98,680,104],[758,99,680,105],[758,101,680,107],[758,107,680,113],[758,108,680,114],[759,10,681,16],[759,14,681,20],[759,15,681,21,"maybeSignature"],[759,29,681,35],[759,33,681,39],[759,35,681,41,"maybeSignature"],[759,49,681,55],[759,61,681,67,"Uint8Array"],[759,71,681,77],[759,72,681,78],[759,74,681,80],[760,12,682,20],[760,18,682,26],[760,22,682,30,"Error"],[760,27,682,35],[760,28,682,36],[760,102,682,110],[760,103,682,111],[761,10,683,16],[762,10,684,16,"signature"],[762,19,684,25],[762,22,684,28,"maybeSignature"],[762,36,684,42],[763,8,685,12],[764,6,686,8],[765,6,687,8],[765,10,687,12],[766,8,688,12],[766,14,688,18],[767,10,688,20,"data"],[767,14,688,24],[768,10,688,26,"error"],[769,8,688,32],[769,9,688,33],[769,12,688,36],[769,18,688,42],[769,19,688,43],[769,20,688,44],[769,22,688,46,"fetch_1"],[769,29,688,53],[769,30,688,54,"_request"],[769,38,688,62],[769,40,688,64],[769,44,688,68],[769,45,688,69,"fetch"],[769,50,688,74],[769,52,688,76],[769,58,688,82],[769,60,688,84],[769,63,688,87],[769,67,688,91],[769,68,688,92,"url"],[769,71,688,95],[769,95,688,119],[769,97,688,121],[770,10,689,16,"headers"],[770,17,689,23],[770,19,689,25],[770,23,689,29],[770,24,689,30,"headers"],[770,31,689,37],[771,10,690,16,"body"],[771,14,690,20],[771,16,690,22,"Object"],[771,22,690,28],[771,23,690,29,"assign"],[771,29,690,35],[771,30,690,36],[772,12,690,38,"chain"],[772,17,690,43],[772,19,690,45],[772,27,690,53],[773,12,690,55,"message"],[773,19,690,62],[774,12,690,64,"signature"],[774,21,690,73],[774,23,690,75],[774,24,690,76],[774,25,690,77],[774,27,690,79,"base64url_1"],[774,38,690,90],[774,39,690,91,"bytesToBase64URL"],[774,55,690,107],[774,57,690,109,"signature"],[774,66,690,118],[775,10,690,120],[775,11,690,121],[775,13,690,124],[775,14,690,125],[775,15,690,126,"_l"],[775,17,690,128],[775,20,690,131,"credentials"],[775,31,690,142],[775,32,690,143,"options"],[775,39,690,150],[775,45,690,156],[775,49,690,160],[775,53,690,164,"_l"],[775,55,690,166],[775,60,690,171],[775,65,690,176],[775,66,690,177],[775,69,690,180],[775,74,690,185],[775,75,690,186],[775,78,690,189,"_l"],[775,80,690,191],[775,81,690,192,"captchaToken"],[775,93,690,204],[775,97,691,22],[776,12,691,24,"gotrue_meta_security"],[776,32,691,44],[776,34,691,46],[777,14,691,48,"captcha_token"],[777,27,691,61],[777,29,691,63],[777,30,691,64,"_m"],[777,32,691,66],[777,35,691,69,"credentials"],[777,46,691,80],[777,47,691,81,"options"],[777,54,691,88],[777,60,691,94],[777,64,691,98],[777,68,691,102,"_m"],[777,70,691,104],[777,75,691,109],[777,80,691,114],[777,81,691,115],[777,84,691,118],[777,89,691,123],[777,90,691,124],[777,93,691,127,"_m"],[777,95,691,129],[777,96,691,130,"captchaToken"],[778,12,691,143],[779,10,691,145],[779,11,691,146],[779,14,692,22],[779,18,692,27],[779,19,692,28],[780,10,693,16,"xform"],[780,15,693,21],[780,17,693,23,"fetch_1"],[780,24,693,30],[780,25,693,31,"_sessionResponse"],[781,8,694,12],[781,9,694,13],[781,10,694,14],[782,8,695,12],[782,12,695,16,"error"],[782,17,695,21],[782,19,695,23],[783,10,696,16],[783,16,696,22,"error"],[783,21,696,27],[784,8,697,12],[785,8,698,12],[785,12,698,16],[785,13,698,17,"data"],[785,17,698,21],[785,21,698,25],[785,22,698,26,"data"],[785,26,698,30],[785,27,698,31,"session"],[785,34,698,38],[785,38,698,42],[785,39,698,43,"data"],[785,43,698,47],[785,44,698,48,"user"],[785,48,698,52],[785,50,698,54],[786,10,699,16],[786,17,699,23],[787,12,700,20,"data"],[787,16,700,24],[787,18,700,26],[788,14,700,28,"user"],[788,18,700,32],[788,20,700,34],[788,24,700,38],[789,14,700,40,"session"],[789,21,700,47],[789,23,700,49],[790,12,700,54],[790,13,700,55],[791,12,701,20,"error"],[791,17,701,25],[791,19,701,27],[791,23,701,31,"errors_1"],[791,31,701,39],[791,32,701,40,"AuthInvalidTokenResponseError"],[791,61,701,69],[791,62,701,70],[792,10,702,16],[792,11,702,17],[793,8,703,12],[794,8,704,12],[794,12,704,16,"data"],[794,16,704,20],[794,17,704,21,"session"],[794,24,704,28],[794,26,704,30],[795,10,705,16],[795,16,705,22],[795,20,705,26],[795,21,705,27,"_saveSession"],[795,33,705,39],[795,34,705,40,"data"],[795,38,705,44],[795,39,705,45,"session"],[795,46,705,52],[795,47,705,53],[796,10,706,16],[796,16,706,22],[796,20,706,26],[796,21,706,27,"_notifyAllSubscribers"],[796,42,706,48],[796,43,706,49],[796,54,706,60],[796,56,706,62,"data"],[796,60,706,66],[796,61,706,67,"session"],[796,68,706,74],[796,69,706,75],[797,8,707,12],[798,8,708,12],[798,15,708,19],[799,10,708,21,"data"],[799,14,708,25],[799,16,708,27,"Object"],[799,22,708,33],[799,23,708,34,"assign"],[799,29,708,40],[799,30,708,41],[799,31,708,42],[799,32,708,43],[799,34,708,45,"data"],[799,38,708,49],[799,39,708,50],[800,10,708,52,"error"],[801,8,708,58],[801,9,708,59],[802,6,709,8],[802,7,709,9],[802,8,710,8],[802,15,710,15,"error"],[802,20,710,20],[802,22,710,22],[803,8,711,12],[803,12,711,16],[803,13,711,17],[803,14,711,18],[803,16,711,20,"errors_1"],[803,24,711,28],[803,25,711,29,"isAuthError"],[803,36,711,40],[803,38,711,42,"error"],[803,43,711,47],[803,44,711,48],[803,46,711,50],[804,10,712,16],[804,17,712,23],[805,12,712,25,"data"],[805,16,712,29],[805,18,712,31],[806,14,712,33,"user"],[806,18,712,37],[806,20,712,39],[806,24,712,43],[807,14,712,45,"session"],[807,21,712,52],[807,23,712,54],[808,12,712,59],[808,13,712,60],[809,12,712,62,"error"],[810,10,712,68],[810,11,712,69],[811,8,713,12],[812,8,714,12],[812,14,714,18,"error"],[812,19,714,23],[813,6,715,8],[814,4,716,4],[815,4,717,4],[815,10,717,10,"_exchangeCodeForSession"],[815,33,717,33,"_exchangeCodeForSession"],[815,34,717,34,"authCode"],[815,42,717,42],[815,44,717,44],[816,6,718,8],[816,12,718,14,"storageItem"],[816,23,718,25],[816,26,718,28],[816,32,718,34],[816,33,718,35],[816,34,718,36],[816,36,718,38,"helpers_1"],[816,45,718,47],[816,46,718,48,"getItemAsync"],[816,58,718,60],[816,60,718,62],[816,64,718,66],[816,65,718,67,"storage"],[816,72,718,74],[816,74,718,76],[816,77,718,79],[816,81,718,83],[816,82,718,84,"storageKey"],[816,92,718,94],[816,108,718,110],[816,109,718,111],[817,6,719,8],[817,12,719,14],[817,13,719,15,"codeVerifier"],[817,25,719,27],[817,27,719,29,"redirectType"],[817,39,719,41],[817,40,719,42],[817,43,719,45],[817,44,719,46,"storageItem"],[817,55,719,57],[817,60,719,62],[817,64,719,66],[817,68,719,70,"storageItem"],[817,79,719,81],[817,84,719,86],[817,89,719,91],[817,90,719,92],[817,93,719,95,"storageItem"],[817,104,719,106],[817,107,719,109],[817,109,719,111],[817,111,719,113,"split"],[817,116,719,118],[817,117,719,119],[817,120,719,122],[817,121,719,123],[818,6,720,8],[818,10,720,12],[819,8,721,12],[819,14,721,18],[820,10,721,20,"data"],[820,14,721,24],[821,10,721,26,"error"],[822,8,721,32],[822,9,721,33],[822,12,721,36],[822,18,721,42],[822,19,721,43],[822,20,721,44],[822,22,721,46,"fetch_1"],[822,29,721,53],[822,30,721,54,"_request"],[822,38,721,62],[822,40,721,64],[822,44,721,68],[822,45,721,69,"fetch"],[822,50,721,74],[822,52,721,76],[822,58,721,82],[822,60,721,84],[822,63,721,87],[822,67,721,91],[822,68,721,92,"url"],[822,71,721,95],[822,95,721,119],[822,97,721,121],[823,10,722,16,"headers"],[823,17,722,23],[823,19,722,25],[823,23,722,29],[823,24,722,30,"headers"],[823,31,722,37],[824,10,723,16,"body"],[824,14,723,20],[824,16,723,22],[825,12,724,20,"auth_code"],[825,21,724,29],[825,23,724,31,"authCode"],[825,31,724,39],[826,12,725,20,"code_verifier"],[826,25,725,33],[826,27,725,35,"codeVerifier"],[827,10,726,16],[827,11,726,17],[828,10,727,16,"xform"],[828,15,727,21],[828,17,727,23,"fetch_1"],[828,24,727,30],[828,25,727,31,"_sessionResponse"],[829,8,728,12],[829,9,728,13],[829,10,728,14],[830,8,729,12],[830,14,729,18],[830,15,729,19],[830,16,729,20],[830,18,729,22,"helpers_1"],[830,27,729,31],[830,28,729,32,"removeItemAsync"],[830,43,729,47],[830,45,729,49],[830,49,729,53],[830,50,729,54,"storage"],[830,57,729,61],[830,59,729,63],[830,62,729,66],[830,66,729,70],[830,67,729,71,"storageKey"],[830,77,729,81],[830,93,729,97],[830,94,729,98],[831,8,730,12],[831,12,730,16,"error"],[831,17,730,21],[831,19,730,23],[832,10,731,16],[832,16,731,22,"error"],[832,21,731,27],[833,8,732,12],[834,8,733,12],[834,12,733,16],[834,13,733,17,"data"],[834,17,733,21],[834,21,733,25],[834,22,733,26,"data"],[834,26,733,30],[834,27,733,31,"session"],[834,34,733,38],[834,38,733,42],[834,39,733,43,"data"],[834,43,733,47],[834,44,733,48,"user"],[834,48,733,52],[834,50,733,54],[835,10,734,16],[835,17,734,23],[836,12,735,20,"data"],[836,16,735,24],[836,18,735,26],[837,14,735,28,"user"],[837,18,735,32],[837,20,735,34],[837,24,735,38],[838,14,735,40,"session"],[838,21,735,47],[838,23,735,49],[838,27,735,53],[839,14,735,55,"redirectType"],[839,26,735,67],[839,28,735,69],[840,12,735,74],[840,13,735,75],[841,12,736,20,"error"],[841,17,736,25],[841,19,736,27],[841,23,736,31,"errors_1"],[841,31,736,39],[841,32,736,40,"AuthInvalidTokenResponseError"],[841,61,736,69],[841,62,736,70],[842,10,737,16],[842,11,737,17],[843,8,738,12],[844,8,739,12],[844,12,739,16,"data"],[844,16,739,20],[844,17,739,21,"session"],[844,24,739,28],[844,26,739,30],[845,10,740,16],[845,16,740,22],[845,20,740,26],[845,21,740,27,"_saveSession"],[845,33,740,39],[845,34,740,40,"data"],[845,38,740,44],[845,39,740,45,"session"],[845,46,740,52],[845,47,740,53],[846,10,741,16],[846,16,741,22],[846,20,741,26],[846,21,741,27,"_notifyAllSubscribers"],[846,42,741,48],[846,43,741,49],[846,54,741,60],[846,56,741,62,"data"],[846,60,741,66],[846,61,741,67,"session"],[846,68,741,74],[846,69,741,75],[847,8,742,12],[848,8,743,12],[848,15,743,19],[849,10,743,21,"data"],[849,14,743,25],[849,16,743,27,"Object"],[849,22,743,33],[849,23,743,34,"assign"],[849,29,743,40],[849,30,743,41,"Object"],[849,36,743,47],[849,37,743,48,"assign"],[849,43,743,54],[849,44,743,55],[849,45,743,56],[849,46,743,57],[849,48,743,59,"data"],[849,52,743,63],[849,53,743,64],[849,55,743,66],[850,12,743,68,"redirectType"],[850,24,743,80],[850,26,743,82,"redirectType"],[850,38,743,94],[850,43,743,99],[850,47,743,103],[850,51,743,107,"redirectType"],[850,63,743,119],[850,68,743,124],[850,73,743,129],[850,74,743,130],[850,77,743,133,"redirectType"],[850,89,743,145],[850,92,743,148],[851,10,743,153],[851,11,743,154],[851,12,743,155],[852,10,743,157,"error"],[853,8,743,163],[853,9,743,164],[854,6,744,8],[854,7,744,9],[854,8,745,8],[854,15,745,15,"error"],[854,20,745,20],[854,22,745,22],[855,8,746,12],[855,12,746,16],[855,13,746,17],[855,14,746,18],[855,16,746,20,"errors_1"],[855,24,746,28],[855,25,746,29,"isAuthError"],[855,36,746,40],[855,38,746,42,"error"],[855,43,746,47],[855,44,746,48],[855,46,746,50],[856,10,747,16],[856,17,747,23],[857,12,747,25,"data"],[857,16,747,29],[857,18,747,31],[858,14,747,33,"user"],[858,18,747,37],[858,20,747,39],[858,24,747,43],[859,14,747,45,"session"],[859,21,747,52],[859,23,747,54],[859,27,747,58],[860,14,747,60,"redirectType"],[860,26,747,72],[860,28,747,74],[861,12,747,79],[861,13,747,80],[862,12,747,82,"error"],[863,10,747,88],[863,11,747,89],[864,8,748,12],[865,8,749,12],[865,14,749,18,"error"],[865,19,749,23],[866,6,750,8],[867,4,751,4],[868,4,752,4],[869,0,753,0],[870,0,754,0],[871,0,755,0],[872,4,756,4],[872,10,756,10,"signInWithIdToken"],[872,27,756,27,"signInWithIdToken"],[872,28,756,28,"credentials"],[872,39,756,39],[872,41,756,41],[873,6,757,8],[873,10,757,12],[874,8,758,12],[874,14,758,18],[875,10,758,20,"options"],[875,17,758,27],[876,10,758,29,"provider"],[876,18,758,37],[877,10,758,39,"token"],[877,15,758,44],[878,10,758,46,"access_token"],[878,22,758,58],[879,10,758,60,"nonce"],[880,8,758,66],[880,9,758,67],[880,12,758,70,"credentials"],[880,23,758,81],[881,8,759,12],[881,14,759,18,"res"],[881,17,759,21],[881,20,759,24],[881,26,759,30],[881,27,759,31],[881,28,759,32],[881,30,759,34,"fetch_1"],[881,37,759,41],[881,38,759,42,"_request"],[881,46,759,50],[881,48,759,52],[881,52,759,56],[881,53,759,57,"fetch"],[881,58,759,62],[881,60,759,64],[881,66,759,70],[881,68,759,72],[881,71,759,75],[881,75,759,79],[881,76,759,80,"url"],[881,79,759,83],[881,107,759,111],[881,109,759,113],[882,10,760,16,"headers"],[882,17,760,23],[882,19,760,25],[882,23,760,29],[882,24,760,30,"headers"],[882,31,760,37],[883,10,761,16,"body"],[883,14,761,20],[883,16,761,22],[884,12,762,20,"provider"],[884,20,762,28],[885,12,763,20,"id_token"],[885,20,763,28],[885,22,763,30,"token"],[885,27,763,35],[886,12,764,20,"access_token"],[886,24,764,32],[887,12,765,20,"nonce"],[887,17,765,25],[888,12,766,20,"gotrue_meta_security"],[888,32,766,40],[888,34,766,42],[889,14,766,44,"captcha_token"],[889,27,766,57],[889,29,766,59,"options"],[889,36,766,66],[889,41,766,71],[889,45,766,75],[889,49,766,79,"options"],[889,56,766,86],[889,61,766,91],[889,66,766,96],[889,67,766,97],[889,70,766,100],[889,75,766,105],[889,76,766,106],[889,79,766,109,"options"],[889,86,766,116],[889,87,766,117,"captchaToken"],[890,12,766,130],[891,10,767,16],[891,11,767,17],[892,10,768,16,"xform"],[892,15,768,21],[892,17,768,23,"fetch_1"],[892,24,768,30],[892,25,768,31,"_sessionResponse"],[893,8,769,12],[893,9,769,13],[893,10,769,14],[894,8,770,12],[894,14,770,18],[895,10,770,20,"data"],[895,14,770,24],[896,10,770,26,"error"],[897,8,770,32],[897,9,770,33],[897,12,770,36,"res"],[897,15,770,39],[898,8,771,12],[898,12,771,16,"error"],[898,17,771,21],[898,19,771,23],[899,10,772,16],[899,17,772,23],[900,12,772,25,"data"],[900,16,772,29],[900,18,772,31],[901,14,772,33,"user"],[901,18,772,37],[901,20,772,39],[901,24,772,43],[902,14,772,45,"session"],[902,21,772,52],[902,23,772,54],[903,12,772,59],[903,13,772,60],[904,12,772,62,"error"],[905,10,772,68],[905,11,772,69],[906,8,773,12],[906,9,773,13],[906,15,774,17],[906,19,774,21],[906,20,774,22,"data"],[906,24,774,26],[906,28,774,30],[906,29,774,31,"data"],[906,33,774,35],[906,34,774,36,"session"],[906,41,774,43],[906,45,774,47],[906,46,774,48,"data"],[906,50,774,52],[906,51,774,53,"user"],[906,55,774,57],[906,57,774,59],[907,10,775,16],[907,17,775,23],[908,12,776,20,"data"],[908,16,776,24],[908,18,776,26],[909,14,776,28,"user"],[909,18,776,32],[909,20,776,34],[909,24,776,38],[910,14,776,40,"session"],[910,21,776,47],[910,23,776,49],[911,12,776,54],[911,13,776,55],[912,12,777,20,"error"],[912,17,777,25],[912,19,777,27],[912,23,777,31,"errors_1"],[912,31,777,39],[912,32,777,40,"AuthInvalidTokenResponseError"],[912,61,777,69],[912,62,777,70],[913,10,778,16],[913,11,778,17],[914,8,779,12],[915,8,780,12],[915,12,780,16,"data"],[915,16,780,20],[915,17,780,21,"session"],[915,24,780,28],[915,26,780,30],[916,10,781,16],[916,16,781,22],[916,20,781,26],[916,21,781,27,"_saveSession"],[916,33,781,39],[916,34,781,40,"data"],[916,38,781,44],[916,39,781,45,"session"],[916,46,781,52],[916,47,781,53],[917,10,782,16],[917,16,782,22],[917,20,782,26],[917,21,782,27,"_notifyAllSubscribers"],[917,42,782,48],[917,43,782,49],[917,54,782,60],[917,56,782,62,"data"],[917,60,782,66],[917,61,782,67,"session"],[917,68,782,74],[917,69,782,75],[918,8,783,12],[919,8,784,12],[919,15,784,19],[920,10,784,21,"data"],[920,14,784,25],[921,10,784,27,"error"],[922,8,784,33],[922,9,784,34],[923,6,785,8],[923,7,785,9],[923,8,786,8],[923,15,786,15,"error"],[923,20,786,20],[923,22,786,22],[924,8,787,12],[924,12,787,16],[924,13,787,17],[924,14,787,18],[924,16,787,20,"errors_1"],[924,24,787,28],[924,25,787,29,"isAuthError"],[924,36,787,40],[924,38,787,42,"error"],[924,43,787,47],[924,44,787,48],[924,46,787,50],[925,10,788,16],[925,17,788,23],[926,12,788,25,"data"],[926,16,788,29],[926,18,788,31],[927,14,788,33,"user"],[927,18,788,37],[927,20,788,39],[927,24,788,43],[928,14,788,45,"session"],[928,21,788,52],[928,23,788,54],[929,12,788,59],[929,13,788,60],[930,12,788,62,"error"],[931,10,788,68],[931,11,788,69],[932,8,789,12],[933,8,790,12],[933,14,790,18,"error"],[933,19,790,23],[934,6,791,8],[935,4,792,4],[936,4,793,4],[937,0,794,0],[938,0,795,0],[939,0,796,0],[940,0,797,0],[941,0,798,0],[942,0,799,0],[943,0,800,0],[944,0,801,0],[945,0,802,0],[946,0,803,0],[947,0,804,0],[948,0,805,0],[949,0,806,0],[950,0,807,0],[951,0,808,0],[952,0,809,0],[953,4,810,4],[953,10,810,10,"signInWithOtp"],[953,23,810,23,"signInWithOtp"],[953,24,810,24,"credentials"],[953,35,810,35],[953,37,810,37],[954,6,811,8],[954,10,811,12,"_a"],[954,12,811,14],[954,14,811,16,"_b"],[954,16,811,18],[954,18,811,20,"_c"],[954,20,811,22],[954,22,811,24,"_d"],[954,24,811,26],[954,26,811,28,"_e"],[954,28,811,30],[955,6,812,8],[955,10,812,12],[956,8,813,12],[956,12,813,16],[956,19,813,23],[956,23,813,27,"credentials"],[956,34,813,38],[956,36,813,40],[957,10,814,16],[957,16,814,22],[958,12,814,24,"email"],[958,17,814,29],[959,12,814,31,"options"],[960,10,814,39],[960,11,814,40],[960,14,814,43,"credentials"],[960,25,814,54],[961,10,815,16],[961,14,815,20,"codeChallenge"],[961,27,815,33],[961,30,815,36],[961,34,815,40],[962,10,816,16],[962,14,816,20,"codeChallengeMethod"],[962,33,816,39],[962,36,816,42],[962,40,816,46],[963,10,817,16],[963,14,817,20],[963,18,817,24],[963,19,817,25,"flowType"],[963,27,817,33],[963,32,817,38],[963,38,817,44],[963,40,817,46],[964,12,818,20],[965,12,819,20],[965,13,819,21,"codeChallenge"],[965,26,819,34],[965,28,819,36,"codeChallengeMethod"],[965,47,819,55],[965,48,819,56],[965,51,819,59],[965,57,819,65],[965,58,819,66],[965,59,819,67],[965,61,819,69,"helpers_1"],[965,70,819,78],[965,71,819,79,"getCodeChallengeAndMethod"],[965,96,819,104],[965,98,819,106],[965,102,819,110],[965,103,819,111,"storage"],[965,110,819,118],[965,112,819,120],[965,116,819,124],[965,117,819,125,"storageKey"],[965,127,819,135],[965,128,819,136],[966,10,820,16],[967,10,821,16],[967,16,821,22],[968,12,821,24,"error"],[969,10,821,30],[969,11,821,31],[969,14,821,34],[969,20,821,40],[969,21,821,41],[969,22,821,42],[969,24,821,44,"fetch_1"],[969,31,821,51],[969,32,821,52,"_request"],[969,40,821,60],[969,42,821,62],[969,46,821,66],[969,47,821,67,"fetch"],[969,52,821,72],[969,54,821,74],[969,60,821,80],[969,62,821,82],[969,65,821,85],[969,69,821,89],[969,70,821,90,"url"],[969,73,821,93],[969,79,821,99],[969,81,821,101],[970,12,822,20,"headers"],[970,19,822,27],[970,21,822,29],[970,25,822,33],[970,26,822,34,"headers"],[970,33,822,41],[971,12,823,20,"body"],[971,16,823,24],[971,18,823,26],[972,14,824,24,"email"],[972,19,824,29],[973,14,825,24,"data"],[973,18,825,28],[973,20,825,30],[973,21,825,31,"_a"],[973,23,825,33],[973,26,825,36,"options"],[973,33,825,43],[973,38,825,48],[973,42,825,52],[973,46,825,56,"options"],[973,53,825,63],[973,58,825,68],[973,63,825,73],[973,64,825,74],[973,67,825,77],[973,72,825,82],[973,73,825,83],[973,76,825,86,"options"],[973,83,825,93],[973,84,825,94,"data"],[973,88,825,98],[973,94,825,104],[973,98,825,108],[973,102,825,112,"_a"],[973,104,825,114],[973,109,825,119],[973,114,825,124],[973,115,825,125],[973,118,825,128,"_a"],[973,120,825,130],[973,123,825,133],[973,124,825,134],[973,125,825,135],[974,14,826,24,"create_user"],[974,25,826,35],[974,27,826,37],[974,28,826,38,"_b"],[974,30,826,40],[974,33,826,43,"options"],[974,40,826,50],[974,45,826,55],[974,49,826,59],[974,53,826,63,"options"],[974,60,826,70],[974,65,826,75],[974,70,826,80],[974,71,826,81],[974,74,826,84],[974,79,826,89],[974,80,826,90],[974,83,826,93,"options"],[974,90,826,100],[974,91,826,101,"shouldCreateUser"],[974,107,826,117],[974,113,826,123],[974,117,826,127],[974,121,826,131,"_b"],[974,123,826,133],[974,128,826,138],[974,133,826,143],[974,134,826,144],[974,137,826,147,"_b"],[974,139,826,149],[974,142,826,152],[974,146,826,156],[975,14,827,24,"gotrue_meta_security"],[975,34,827,44],[975,36,827,46],[976,16,827,48,"captcha_token"],[976,29,827,61],[976,31,827,63,"options"],[976,38,827,70],[976,43,827,75],[976,47,827,79],[976,51,827,83,"options"],[976,58,827,90],[976,63,827,95],[976,68,827,100],[976,69,827,101],[976,72,827,104],[976,77,827,109],[976,78,827,110],[976,81,827,113,"options"],[976,88,827,120],[976,89,827,121,"captchaToken"],[977,14,827,134],[977,15,827,135],[978,14,828,24,"code_challenge"],[978,28,828,38],[978,30,828,40,"codeChallenge"],[978,43,828,53],[979,14,829,24,"code_challenge_method"],[979,35,829,45],[979,37,829,47,"codeChallengeMethod"],[980,12,830,20],[980,13,830,21],[981,12,831,20,"redirectTo"],[981,22,831,30],[981,24,831,32,"options"],[981,31,831,39],[981,36,831,44],[981,40,831,48],[981,44,831,52,"options"],[981,51,831,59],[981,56,831,64],[981,61,831,69],[981,62,831,70],[981,65,831,73],[981,70,831,78],[981,71,831,79],[981,74,831,82,"options"],[981,81,831,89],[981,82,831,90,"emailRedirectTo"],[982,10,832,16],[982,11,832,17],[982,12,832,18],[983,10,833,16],[983,17,833,23],[984,12,833,25,"data"],[984,16,833,29],[984,18,833,31],[985,14,833,33,"user"],[985,18,833,37],[985,20,833,39],[985,24,833,43],[986,14,833,45,"session"],[986,21,833,52],[986,23,833,54],[987,12,833,59],[987,13,833,60],[988,12,833,62,"error"],[989,10,833,68],[989,11,833,69],[990,8,834,12],[991,8,835,12],[991,12,835,16],[991,19,835,23],[991,23,835,27,"credentials"],[991,34,835,38],[991,36,835,40],[992,10,836,16],[992,16,836,22],[993,12,836,24,"phone"],[993,17,836,29],[994,12,836,31,"options"],[995,10,836,39],[995,11,836,40],[995,14,836,43,"credentials"],[995,25,836,54],[996,10,837,16],[996,16,837,22],[997,12,837,24,"data"],[997,16,837,28],[998,12,837,30,"error"],[999,10,837,36],[999,11,837,37],[999,14,837,40],[999,20,837,46],[999,21,837,47],[999,22,837,48],[999,24,837,50,"fetch_1"],[999,31,837,57],[999,32,837,58,"_request"],[999,40,837,66],[999,42,837,68],[999,46,837,72],[999,47,837,73,"fetch"],[999,52,837,78],[999,54,837,80],[999,60,837,86],[999,62,837,88],[999,65,837,91],[999,69,837,95],[999,70,837,96,"url"],[999,73,837,99],[999,79,837,105],[999,81,837,107],[1000,12,838,20,"headers"],[1000,19,838,27],[1000,21,838,29],[1000,25,838,33],[1000,26,838,34,"headers"],[1000,33,838,41],[1001,12,839,20,"body"],[1001,16,839,24],[1001,18,839,26],[1002,14,840,24,"phone"],[1002,19,840,29],[1003,14,841,24,"data"],[1003,18,841,28],[1003,20,841,30],[1003,21,841,31,"_c"],[1003,23,841,33],[1003,26,841,36,"options"],[1003,33,841,43],[1003,38,841,48],[1003,42,841,52],[1003,46,841,56,"options"],[1003,53,841,63],[1003,58,841,68],[1003,63,841,73],[1003,64,841,74],[1003,67,841,77],[1003,72,841,82],[1003,73,841,83],[1003,76,841,86,"options"],[1003,83,841,93],[1003,84,841,94,"data"],[1003,88,841,98],[1003,94,841,104],[1003,98,841,108],[1003,102,841,112,"_c"],[1003,104,841,114],[1003,109,841,119],[1003,114,841,124],[1003,115,841,125],[1003,118,841,128,"_c"],[1003,120,841,130],[1003,123,841,133],[1003,124,841,134],[1003,125,841,135],[1004,14,842,24,"create_user"],[1004,25,842,35],[1004,27,842,37],[1004,28,842,38,"_d"],[1004,30,842,40],[1004,33,842,43,"options"],[1004,40,842,50],[1004,45,842,55],[1004,49,842,59],[1004,53,842,63,"options"],[1004,60,842,70],[1004,65,842,75],[1004,70,842,80],[1004,71,842,81],[1004,74,842,84],[1004,79,842,89],[1004,80,842,90],[1004,83,842,93,"options"],[1004,90,842,100],[1004,91,842,101,"shouldCreateUser"],[1004,107,842,117],[1004,113,842,123],[1004,117,842,127],[1004,121,842,131,"_d"],[1004,123,842,133],[1004,128,842,138],[1004,133,842,143],[1004,134,842,144],[1004,137,842,147,"_d"],[1004,139,842,149],[1004,142,842,152],[1004,146,842,156],[1005,14,843,24,"gotrue_meta_security"],[1005,34,843,44],[1005,36,843,46],[1006,16,843,48,"captcha_token"],[1006,29,843,61],[1006,31,843,63,"options"],[1006,38,843,70],[1006,43,843,75],[1006,47,843,79],[1006,51,843,83,"options"],[1006,58,843,90],[1006,63,843,95],[1006,68,843,100],[1006,69,843,101],[1006,72,843,104],[1006,77,843,109],[1006,78,843,110],[1006,81,843,113,"options"],[1006,88,843,120],[1006,89,843,121,"captchaToken"],[1007,14,843,134],[1007,15,843,135],[1008,14,844,24,"channel"],[1008,21,844,31],[1008,23,844,33],[1008,24,844,34,"_e"],[1008,26,844,36],[1008,29,844,39,"options"],[1008,36,844,46],[1008,41,844,51],[1008,45,844,55],[1008,49,844,59,"options"],[1008,56,844,66],[1008,61,844,71],[1008,66,844,76],[1008,67,844,77],[1008,70,844,80],[1008,75,844,85],[1008,76,844,86],[1008,79,844,89,"options"],[1008,86,844,96],[1008,87,844,97,"channel"],[1008,94,844,104],[1008,100,844,110],[1008,104,844,114],[1008,108,844,118,"_e"],[1008,110,844,120],[1008,115,844,125],[1008,120,844,130],[1008,121,844,131],[1008,124,844,134,"_e"],[1008,126,844,136],[1008,129,844,139],[1009,12,845,20],[1010,10,846,16],[1010,11,846,17],[1010,12,846,18],[1011,10,847,16],[1011,17,847,23],[1012,12,847,25,"data"],[1012,16,847,29],[1012,18,847,31],[1013,14,847,33,"user"],[1013,18,847,37],[1013,20,847,39],[1013,24,847,43],[1014,14,847,45,"session"],[1014,21,847,52],[1014,23,847,54],[1014,27,847,58],[1015,14,847,60,"messageId"],[1015,23,847,69],[1015,25,847,71,"data"],[1015,29,847,75],[1015,34,847,80],[1015,38,847,84],[1015,42,847,88,"data"],[1015,46,847,92],[1015,51,847,97],[1015,56,847,102],[1015,57,847,103],[1015,60,847,106],[1015,65,847,111],[1015,66,847,112],[1015,69,847,115,"data"],[1015,73,847,119],[1015,74,847,120,"message_id"],[1016,12,847,131],[1016,13,847,132],[1017,12,847,134,"error"],[1018,10,847,140],[1018,11,847,141],[1019,8,848,12],[1020,8,849,12],[1020,14,849,18],[1020,18,849,22,"errors_1"],[1020,26,849,30],[1020,27,849,31,"AuthInvalidCredentialsError"],[1020,54,849,58],[1020,55,849,59],[1020,106,849,110],[1020,107,849,111],[1021,6,850,8],[1021,7,850,9],[1021,8,851,8],[1021,15,851,15,"error"],[1021,20,851,20],[1021,22,851,22],[1022,8,852,12],[1022,12,852,16],[1022,13,852,17],[1022,14,852,18],[1022,16,852,20,"errors_1"],[1022,24,852,28],[1022,25,852,29,"isAuthError"],[1022,36,852,40],[1022,38,852,42,"error"],[1022,43,852,47],[1022,44,852,48],[1022,46,852,50],[1023,10,853,16],[1023,17,853,23],[1024,12,853,25,"data"],[1024,16,853,29],[1024,18,853,31],[1025,14,853,33,"user"],[1025,18,853,37],[1025,20,853,39],[1025,24,853,43],[1026,14,853,45,"session"],[1026,21,853,52],[1026,23,853,54],[1027,12,853,59],[1027,13,853,60],[1028,12,853,62,"error"],[1029,10,853,68],[1029,11,853,69],[1030,8,854,12],[1031,8,855,12],[1031,14,855,18,"error"],[1031,19,855,23],[1032,6,856,8],[1033,4,857,4],[1034,4,858,4],[1035,0,859,0],[1036,0,860,0],[1037,4,861,4],[1037,10,861,10,"verifyOtp"],[1037,19,861,19,"verifyOtp"],[1037,20,861,20,"params"],[1037,26,861,26],[1037,28,861,28],[1038,6,862,8],[1038,10,862,12,"_a"],[1038,12,862,14],[1038,14,862,16,"_b"],[1038,16,862,18],[1039,6,863,8],[1039,10,863,12],[1040,8,864,12],[1040,12,864,16,"redirectTo"],[1040,22,864,26],[1040,25,864,29,"undefined"],[1040,34,864,38],[1041,8,865,12],[1041,12,865,16,"captchaToken"],[1041,24,865,28],[1041,27,865,31,"undefined"],[1041,36,865,40],[1042,8,866,12],[1042,12,866,16],[1042,21,866,25],[1042,25,866,29,"params"],[1042,31,866,35],[1042,33,866,37],[1043,10,867,16,"redirectTo"],[1043,20,867,26],[1043,23,867,29],[1043,24,867,30,"_a"],[1043,26,867,32],[1043,29,867,35,"params"],[1043,35,867,41],[1043,36,867,42,"options"],[1043,43,867,49],[1043,49,867,55],[1043,53,867,59],[1043,57,867,63,"_a"],[1043,59,867,65],[1043,64,867,70],[1043,69,867,75],[1043,70,867,76],[1043,73,867,79],[1043,78,867,84],[1043,79,867,85],[1043,82,867,88,"_a"],[1043,84,867,90],[1043,85,867,91,"redirectTo"],[1043,95,867,101],[1044,10,868,16,"captchaToken"],[1044,22,868,28],[1044,25,868,31],[1044,26,868,32,"_b"],[1044,28,868,34],[1044,31,868,37,"params"],[1044,37,868,43],[1044,38,868,44,"options"],[1044,45,868,51],[1044,51,868,57],[1044,55,868,61],[1044,59,868,65,"_b"],[1044,61,868,67],[1044,66,868,72],[1044,71,868,77],[1044,72,868,78],[1044,75,868,81],[1044,80,868,86],[1044,81,868,87],[1044,84,868,90,"_b"],[1044,86,868,92],[1044,87,868,93,"captchaToken"],[1044,99,868,105],[1045,8,869,12],[1046,8,870,12],[1046,14,870,18],[1047,10,870,20,"data"],[1047,14,870,24],[1048,10,870,26,"error"],[1049,8,870,32],[1049,9,870,33],[1049,12,870,36],[1049,18,870,42],[1049,19,870,43],[1049,20,870,44],[1049,22,870,46,"fetch_1"],[1049,29,870,53],[1049,30,870,54,"_request"],[1049,38,870,62],[1049,40,870,64],[1049,44,870,68],[1049,45,870,69,"fetch"],[1049,50,870,74],[1049,52,870,76],[1049,58,870,82],[1049,60,870,84],[1049,63,870,87],[1049,67,870,91],[1049,68,870,92,"url"],[1049,71,870,95],[1049,80,870,104],[1049,82,870,106],[1050,10,871,16,"headers"],[1050,17,871,23],[1050,19,871,25],[1050,23,871,29],[1050,24,871,30,"headers"],[1050,31,871,37],[1051,10,872,16,"body"],[1051,14,872,20],[1051,16,872,22,"Object"],[1051,22,872,28],[1051,23,872,29,"assign"],[1051,29,872,35],[1051,30,872,36,"Object"],[1051,36,872,42],[1051,37,872,43,"assign"],[1051,43,872,49],[1051,44,872,50],[1051,45,872,51],[1051,46,872,52],[1051,48,872,54,"params"],[1051,54,872,60],[1051,55,872,61],[1051,57,872,63],[1052,12,872,65,"gotrue_meta_security"],[1052,32,872,85],[1052,34,872,87],[1053,14,872,89,"captcha_token"],[1053,27,872,102],[1053,29,872,104,"captchaToken"],[1054,12,872,117],[1055,10,872,119],[1055,11,872,120],[1055,12,872,121],[1056,10,873,16,"redirectTo"],[1056,20,873,26],[1057,10,874,16,"xform"],[1057,15,874,21],[1057,17,874,23,"fetch_1"],[1057,24,874,30],[1057,25,874,31,"_sessionResponse"],[1058,8,875,12],[1058,9,875,13],[1058,10,875,14],[1059,8,876,12],[1059,12,876,16,"error"],[1059,17,876,21],[1059,19,876,23],[1060,10,877,16],[1060,16,877,22,"error"],[1060,21,877,27],[1061,8,878,12],[1062,8,879,12],[1062,12,879,16],[1062,13,879,17,"data"],[1062,17,879,21],[1062,19,879,23],[1063,10,880,16],[1063,16,880,22],[1063,20,880,26,"Error"],[1063,25,880,31],[1063,26,880,32],[1063,68,880,74],[1063,69,880,75],[1064,8,881,12],[1065,8,882,12],[1065,14,882,18,"session"],[1065,21,882,25],[1065,24,882,28,"data"],[1065,28,882,32],[1065,29,882,33,"session"],[1065,36,882,40],[1066,8,883,12],[1066,14,883,18,"user"],[1066,18,883,22],[1066,21,883,25,"data"],[1066,25,883,29],[1066,26,883,30,"user"],[1066,30,883,34],[1067,8,884,12],[1067,12,884,16,"session"],[1067,19,884,23],[1067,24,884,28],[1067,28,884,32],[1067,32,884,36,"session"],[1067,39,884,43],[1067,44,884,48],[1067,49,884,53],[1067,50,884,54],[1067,53,884,57],[1067,58,884,62],[1067,59,884,63],[1067,62,884,66,"session"],[1067,69,884,73],[1067,70,884,74,"access_token"],[1067,82,884,86],[1067,84,884,88],[1068,10,885,16],[1068,16,885,22],[1068,20,885,26],[1068,21,885,27,"_saveSession"],[1068,33,885,39],[1068,34,885,40,"session"],[1068,41,885,47],[1068,42,885,48],[1069,10,886,16],[1069,16,886,22],[1069,20,886,26],[1069,21,886,27,"_notifyAllSubscribers"],[1069,42,886,48],[1069,43,886,49,"params"],[1069,49,886,55],[1069,50,886,56,"type"],[1069,54,886,60],[1069,58,886,64],[1069,68,886,74],[1069,71,886,77],[1069,90,886,96],[1069,93,886,99],[1069,104,886,110],[1069,106,886,112,"session"],[1069,113,886,119],[1069,114,886,120],[1070,8,887,12],[1071,8,888,12],[1071,15,888,19],[1072,10,888,21,"data"],[1072,14,888,25],[1072,16,888,27],[1073,12,888,29,"user"],[1073,16,888,33],[1074,12,888,35,"session"],[1075,10,888,43],[1075,11,888,44],[1076,10,888,46,"error"],[1076,15,888,51],[1076,17,888,53],[1077,8,888,58],[1077,9,888,59],[1078,6,889,8],[1078,7,889,9],[1078,8,890,8],[1078,15,890,15,"error"],[1078,20,890,20],[1078,22,890,22],[1079,8,891,12],[1079,12,891,16],[1079,13,891,17],[1079,14,891,18],[1079,16,891,20,"errors_1"],[1079,24,891,28],[1079,25,891,29,"isAuthError"],[1079,36,891,40],[1079,38,891,42,"error"],[1079,43,891,47],[1079,44,891,48],[1079,46,891,50],[1080,10,892,16],[1080,17,892,23],[1081,12,892,25,"data"],[1081,16,892,29],[1081,18,892,31],[1082,14,892,33,"user"],[1082,18,892,37],[1082,20,892,39],[1082,24,892,43],[1083,14,892,45,"session"],[1083,21,892,52],[1083,23,892,54],[1084,12,892,59],[1084,13,892,60],[1085,12,892,62,"error"],[1086,10,892,68],[1086,11,892,69],[1087,8,893,12],[1088,8,894,12],[1088,14,894,18,"error"],[1088,19,894,23],[1089,6,895,8],[1090,4,896,4],[1091,4,897,4],[1092,0,898,0],[1093,0,899,0],[1094,0,900,0],[1095,0,901,0],[1096,0,902,0],[1097,0,903,0],[1098,0,904,0],[1099,0,905,0],[1100,0,906,0],[1101,0,907,0],[1102,0,908,0],[1103,0,909,0],[1104,0,910,0],[1105,4,911,4],[1105,10,911,10,"signInWithSSO"],[1105,23,911,23,"signInWithSSO"],[1105,24,911,24,"params"],[1105,30,911,30],[1105,32,911,32],[1106,6,912,8],[1106,10,912,12,"_a"],[1106,12,912,14],[1106,14,912,16,"_b"],[1106,16,912,18],[1106,18,912,20,"_c"],[1106,20,912,22],[1107,6,913,8],[1107,10,913,12],[1108,8,914,12],[1108,12,914,16,"codeChallenge"],[1108,25,914,29],[1108,28,914,32],[1108,32,914,36],[1109,8,915,12],[1109,12,915,16,"codeChallengeMethod"],[1109,31,915,35],[1109,34,915,38],[1109,38,915,42],[1110,8,916,12],[1110,12,916,16],[1110,16,916,20],[1110,17,916,21,"flowType"],[1110,25,916,29],[1110,30,916,34],[1110,36,916,40],[1110,38,916,42],[1111,10,917,16],[1112,10,918,16],[1112,11,918,17,"codeChallenge"],[1112,24,918,30],[1112,26,918,32,"codeChallengeMethod"],[1112,45,918,51],[1112,46,918,52],[1112,49,918,55],[1112,55,918,61],[1112,56,918,62],[1112,57,918,63],[1112,59,918,65,"helpers_1"],[1112,68,918,74],[1112,69,918,75,"getCodeChallengeAndMethod"],[1112,94,918,100],[1112,96,918,102],[1112,100,918,106],[1112,101,918,107,"storage"],[1112,108,918,114],[1112,110,918,116],[1112,114,918,120],[1112,115,918,121,"storageKey"],[1112,125,918,131],[1112,126,918,132],[1113,8,919,12],[1114,8,920,12],[1114,15,920,19],[1114,21,920,25],[1114,22,920,26],[1114,23,920,27],[1114,25,920,29,"fetch_1"],[1114,32,920,36],[1114,33,920,37,"_request"],[1114,41,920,45],[1114,43,920,47],[1114,47,920,51],[1114,48,920,52,"fetch"],[1114,53,920,57],[1114,55,920,59],[1114,61,920,65],[1114,63,920,67],[1114,66,920,70],[1114,70,920,74],[1114,71,920,75,"url"],[1114,74,920,78],[1114,80,920,84],[1114,82,920,86],[1115,10,921,16,"body"],[1115,14,921,20],[1115,16,921,22,"Object"],[1115,22,921,28],[1115,23,921,29,"assign"],[1115,29,921,35],[1115,30,921,36,"Object"],[1115,36,921,42],[1115,37,921,43,"assign"],[1115,43,921,49],[1115,44,921,50,"Object"],[1115,50,921,56],[1115,51,921,57,"assign"],[1115,57,921,63],[1115,58,921,64,"Object"],[1115,64,921,70],[1115,65,921,71,"assign"],[1115,71,921,77],[1115,72,921,78,"Object"],[1115,78,921,84],[1115,79,921,85,"assign"],[1115,85,921,91],[1115,86,921,92],[1115,87,921,93],[1115,88,921,94],[1115,90,921,97],[1115,102,921,109],[1115,106,921,113,"params"],[1115,112,921,119],[1115,115,921,122],[1116,12,921,124,"provider_id"],[1116,23,921,135],[1116,25,921,137,"params"],[1116,31,921,143],[1116,32,921,144,"providerId"],[1117,10,921,155],[1117,11,921,156],[1117,14,921,159],[1117,18,921,164],[1117,19,921,165],[1117,21,921,168],[1117,29,921,176],[1117,33,921,180,"params"],[1117,39,921,186],[1117,42,921,189],[1118,12,921,191,"domain"],[1118,18,921,197],[1118,20,921,199,"params"],[1118,26,921,205],[1118,27,921,206,"domain"],[1119,10,921,213],[1119,11,921,214],[1119,14,921,217],[1119,18,921,222],[1119,19,921,223],[1119,21,921,225],[1120,12,921,227,"redirect_to"],[1120,23,921,238],[1120,25,921,240],[1120,26,921,241,"_b"],[1120,28,921,243],[1120,31,921,246],[1120,32,921,247,"_a"],[1120,34,921,249],[1120,37,921,252,"params"],[1120,43,921,258],[1120,44,921,259,"options"],[1120,51,921,266],[1120,57,921,272],[1120,61,921,276],[1120,65,921,280,"_a"],[1120,67,921,282],[1120,72,921,287],[1120,77,921,292],[1120,78,921,293],[1120,81,921,296],[1120,86,921,301],[1120,87,921,302],[1120,90,921,305,"_a"],[1120,92,921,307],[1120,93,921,308,"redirectTo"],[1120,103,921,318],[1120,109,921,324],[1120,113,921,328],[1120,117,921,332,"_b"],[1120,119,921,334],[1120,124,921,339],[1120,129,921,344],[1120,130,921,345],[1120,133,921,348,"_b"],[1120,135,921,350],[1120,138,921,353,"undefined"],[1121,10,921,363],[1121,11,921,364],[1121,12,921,365],[1121,14,921,368],[1121,15,921,369],[1121,16,921,370,"_c"],[1121,18,921,372],[1121,21,921,375,"params"],[1121,27,921,381],[1121,32,921,386],[1121,36,921,390],[1121,40,921,394,"params"],[1121,46,921,400],[1121,51,921,405],[1121,56,921,410],[1121,57,921,411],[1121,60,921,414],[1121,65,921,419],[1121,66,921,420],[1121,69,921,423,"params"],[1121,75,921,429],[1121,76,921,430,"options"],[1121,83,921,437],[1121,89,921,443],[1121,93,921,447],[1121,97,921,451,"_c"],[1121,99,921,453],[1121,104,921,458],[1121,109,921,463],[1121,110,921,464],[1121,113,921,467],[1121,118,921,472],[1121,119,921,473],[1121,122,921,476,"_c"],[1121,124,921,478],[1121,125,921,479,"captchaToken"],[1121,137,921,491],[1121,141,922,22],[1122,12,922,24,"gotrue_meta_security"],[1122,32,922,44],[1122,34,922,46],[1123,14,922,48,"captcha_token"],[1123,27,922,61],[1123,29,922,63,"params"],[1123,35,922,69],[1123,36,922,70,"options"],[1123,43,922,77],[1123,44,922,78,"captchaToken"],[1124,12,922,91],[1125,10,922,93],[1125,11,922,94],[1125,14,923,22],[1125,18,923,27],[1125,19,923,28],[1125,21,923,30],[1126,12,923,32,"skip_http_redirect"],[1126,30,923,50],[1126,32,923,52],[1126,36,923,56],[1127,12,923,58,"code_challenge"],[1127,26,923,72],[1127,28,923,74,"codeChallenge"],[1127,41,923,87],[1128,12,923,89,"code_challenge_method"],[1128,33,923,110],[1128,35,923,112,"codeChallengeMethod"],[1129,10,923,132],[1129,11,923,133],[1129,12,923,134],[1130,10,924,16,"headers"],[1130,17,924,23],[1130,19,924,25],[1130,23,924,29],[1130,24,924,30,"headers"],[1130,31,924,37],[1131,10,925,16,"xform"],[1131,15,925,21],[1131,17,925,23,"fetch_1"],[1131,24,925,30],[1131,25,925,31,"_ssoResponse"],[1132,8,926,12],[1132,9,926,13],[1132,10,926,14],[1133,6,927,8],[1133,7,927,9],[1133,8,928,8],[1133,15,928,15,"error"],[1133,20,928,20],[1133,22,928,22],[1134,8,929,12],[1134,12,929,16],[1134,13,929,17],[1134,14,929,18],[1134,16,929,20,"errors_1"],[1134,24,929,28],[1134,25,929,29,"isAuthError"],[1134,36,929,40],[1134,38,929,42,"error"],[1134,43,929,47],[1134,44,929,48],[1134,46,929,50],[1135,10,930,16],[1135,17,930,23],[1136,12,930,25,"data"],[1136,16,930,29],[1136,18,930,31],[1136,22,930,35],[1137,12,930,37,"error"],[1138,10,930,43],[1138,11,930,44],[1139,8,931,12],[1140,8,932,12],[1140,14,932,18,"error"],[1140,19,932,23],[1141,6,933,8],[1142,4,934,4],[1143,4,935,4],[1144,0,936,0],[1145,0,937,0],[1146,0,938,0],[1147,4,939,4],[1147,10,939,10,"reauthenticate"],[1147,24,939,24,"reauthenticate"],[1147,25,939,24],[1147,27,939,27],[1148,6,940,8],[1148,12,940,14],[1148,16,940,18],[1148,17,940,19,"initializePromise"],[1148,34,940,36],[1149,6,941,8],[1149,13,941,15],[1149,19,941,21],[1149,23,941,25],[1149,24,941,26,"_acquireLock"],[1149,36,941,38],[1149,37,941,39],[1149,38,941,40],[1149,39,941,41],[1149,41,941,43],[1149,53,941,55],[1150,8,942,12],[1150,15,942,19],[1150,21,942,25],[1150,25,942,29],[1150,26,942,30,"_reauthenticate"],[1150,41,942,45],[1150,42,942,46],[1150,43,942,47],[1151,6,943,8],[1151,7,943,9],[1151,8,943,10],[1152,4,944,4],[1153,4,945,4],[1153,10,945,10,"_reauthenticate"],[1153,25,945,25,"_reauthenticate"],[1153,26,945,25],[1153,28,945,28],[1154,6,946,8],[1154,10,946,12],[1155,8,947,12],[1155,15,947,19],[1155,21,947,25],[1155,25,947,29],[1155,26,947,30,"_useSession"],[1155,37,947,41],[1155,38,947,42],[1155,44,947,49,"result"],[1155,50,947,55],[1155,54,947,60],[1156,10,948,16],[1156,16,948,22],[1157,12,948,24,"data"],[1157,16,948,28],[1157,18,948,30],[1158,14,948,32,"session"],[1159,12,948,40],[1159,13,948,41],[1160,12,948,43,"error"],[1160,17,948,48],[1160,19,948,50,"sessionError"],[1161,10,948,64],[1161,11,948,65],[1161,14,948,68,"result"],[1161,20,948,74],[1162,10,949,16],[1162,14,949,20,"sessionError"],[1162,26,949,32],[1162,28,950,20],[1162,34,950,26,"sessionError"],[1162,46,950,38],[1163,10,951,16],[1163,14,951,20],[1163,15,951,21,"session"],[1163,22,951,28],[1163,24,952,20],[1163,30,952,26],[1163,34,952,30,"errors_1"],[1163,42,952,38],[1163,43,952,39,"AuthSessionMissingError"],[1163,66,952,62],[1163,67,952,63],[1163,68,952,64],[1164,10,953,16],[1164,16,953,22],[1165,12,953,24,"error"],[1166,10,953,30],[1166,11,953,31],[1166,14,953,34],[1166,20,953,40],[1166,21,953,41],[1166,22,953,42],[1166,24,953,44,"fetch_1"],[1166,31,953,51],[1166,32,953,52,"_request"],[1166,40,953,60],[1166,42,953,62],[1166,46,953,66],[1166,47,953,67,"fetch"],[1166,52,953,72],[1166,54,953,74],[1166,59,953,79],[1166,61,953,81],[1166,64,953,84],[1166,68,953,88],[1166,69,953,89,"url"],[1166,72,953,92],[1166,89,953,109],[1166,91,953,111],[1167,12,954,20,"headers"],[1167,19,954,27],[1167,21,954,29],[1167,25,954,33],[1167,26,954,34,"headers"],[1167,33,954,41],[1168,12,955,20,"jwt"],[1168,15,955,23],[1168,17,955,25,"session"],[1168,24,955,32],[1168,25,955,33,"access_token"],[1169,10,956,16],[1169,11,956,17],[1169,12,956,18],[1170,10,957,16],[1170,17,957,23],[1171,12,957,25,"data"],[1171,16,957,29],[1171,18,957,31],[1172,14,957,33,"user"],[1172,18,957,37],[1172,20,957,39],[1172,24,957,43],[1173,14,957,45,"session"],[1173,21,957,52],[1173,23,957,54],[1174,12,957,59],[1174,13,957,60],[1175,12,957,62,"error"],[1176,10,957,68],[1176,11,957,69],[1177,8,958,12],[1177,9,958,13],[1177,10,958,14],[1178,6,959,8],[1178,7,959,9],[1178,8,960,8],[1178,15,960,15,"error"],[1178,20,960,20],[1178,22,960,22],[1179,8,961,12],[1179,12,961,16],[1179,13,961,17],[1179,14,961,18],[1179,16,961,20,"errors_1"],[1179,24,961,28],[1179,25,961,29,"isAuthError"],[1179,36,961,40],[1179,38,961,42,"error"],[1179,43,961,47],[1179,44,961,48],[1179,46,961,50],[1180,10,962,16],[1180,17,962,23],[1181,12,962,25,"data"],[1181,16,962,29],[1181,18,962,31],[1182,14,962,33,"user"],[1182,18,962,37],[1182,20,962,39],[1182,24,962,43],[1183,14,962,45,"session"],[1183,21,962,52],[1183,23,962,54],[1184,12,962,59],[1184,13,962,60],[1185,12,962,62,"error"],[1186,10,962,68],[1186,11,962,69],[1187,8,963,12],[1188,8,964,12],[1188,14,964,18,"error"],[1188,19,964,23],[1189,6,965,8],[1190,4,966,4],[1191,4,967,4],[1192,0,968,0],[1193,0,969,0],[1194,4,970,4],[1194,10,970,10,"resend"],[1194,16,970,16,"resend"],[1194,17,970,17,"credentials"],[1194,28,970,28],[1194,30,970,30],[1195,6,971,8],[1195,10,971,12],[1196,8,972,12],[1196,14,972,18,"endpoint"],[1196,22,972,26],[1196,25,972,29],[1196,28,972,32],[1196,32,972,36],[1196,33,972,37,"url"],[1196,36,972,40],[1196,45,972,49],[1197,8,973,12],[1197,12,973,16],[1197,19,973,23],[1197,23,973,27,"credentials"],[1197,34,973,38],[1197,36,973,40],[1198,10,974,16],[1198,16,974,22],[1199,12,974,24,"email"],[1199,17,974,29],[1200,12,974,31,"type"],[1200,16,974,35],[1201,12,974,37,"options"],[1202,10,974,45],[1202,11,974,46],[1202,14,974,49,"credentials"],[1202,25,974,60],[1203,10,975,16],[1203,16,975,22],[1204,12,975,24,"error"],[1205,10,975,30],[1205,11,975,31],[1205,14,975,34],[1205,20,975,40],[1205,21,975,41],[1205,22,975,42],[1205,24,975,44,"fetch_1"],[1205,31,975,51],[1205,32,975,52,"_request"],[1205,40,975,60],[1205,42,975,62],[1205,46,975,66],[1205,47,975,67,"fetch"],[1205,52,975,72],[1205,54,975,74],[1205,60,975,80],[1205,62,975,82,"endpoint"],[1205,70,975,90],[1205,72,975,92],[1206,12,976,20,"headers"],[1206,19,976,27],[1206,21,976,29],[1206,25,976,33],[1206,26,976,34,"headers"],[1206,33,976,41],[1207,12,977,20,"body"],[1207,16,977,24],[1207,18,977,26],[1208,14,978,24,"email"],[1208,19,978,29],[1209,14,979,24,"type"],[1209,18,979,28],[1210,14,980,24,"gotrue_meta_security"],[1210,34,980,44],[1210,36,980,46],[1211,16,980,48,"captcha_token"],[1211,29,980,61],[1211,31,980,63,"options"],[1211,38,980,70],[1211,43,980,75],[1211,47,980,79],[1211,51,980,83,"options"],[1211,58,980,90],[1211,63,980,95],[1211,68,980,100],[1211,69,980,101],[1211,72,980,104],[1211,77,980,109],[1211,78,980,110],[1211,81,980,113,"options"],[1211,88,980,120],[1211,89,980,121,"captchaToken"],[1212,14,980,134],[1213,12,981,20],[1213,13,981,21],[1214,12,982,20,"redirectTo"],[1214,22,982,30],[1214,24,982,32,"options"],[1214,31,982,39],[1214,36,982,44],[1214,40,982,48],[1214,44,982,52,"options"],[1214,51,982,59],[1214,56,982,64],[1214,61,982,69],[1214,62,982,70],[1214,65,982,73],[1214,70,982,78],[1214,71,982,79],[1214,74,982,82,"options"],[1214,81,982,89],[1214,82,982,90,"emailRedirectTo"],[1215,10,983,16],[1215,11,983,17],[1215,12,983,18],[1216,10,984,16],[1216,17,984,23],[1217,12,984,25,"data"],[1217,16,984,29],[1217,18,984,31],[1218,14,984,33,"user"],[1218,18,984,37],[1218,20,984,39],[1218,24,984,43],[1219,14,984,45,"session"],[1219,21,984,52],[1219,23,984,54],[1220,12,984,59],[1220,13,984,60],[1221,12,984,62,"error"],[1222,10,984,68],[1222,11,984,69],[1223,8,985,12],[1223,9,985,13],[1223,15,986,17],[1223,19,986,21],[1223,26,986,28],[1223,30,986,32,"credentials"],[1223,41,986,43],[1223,43,986,45],[1224,10,987,16],[1224,16,987,22],[1225,12,987,24,"phone"],[1225,17,987,29],[1226,12,987,31,"type"],[1226,16,987,35],[1227,12,987,37,"options"],[1228,10,987,45],[1228,11,987,46],[1228,14,987,49,"credentials"],[1228,25,987,60],[1229,10,988,16],[1229,16,988,22],[1230,12,988,24,"data"],[1230,16,988,28],[1231,12,988,30,"error"],[1232,10,988,36],[1232,11,988,37],[1232,14,988,40],[1232,20,988,46],[1232,21,988,47],[1232,22,988,48],[1232,24,988,50,"fetch_1"],[1232,31,988,57],[1232,32,988,58,"_request"],[1232,40,988,66],[1232,42,988,68],[1232,46,988,72],[1232,47,988,73,"fetch"],[1232,52,988,78],[1232,54,988,80],[1232,60,988,86],[1232,62,988,88,"endpoint"],[1232,70,988,96],[1232,72,988,98],[1233,12,989,20,"headers"],[1233,19,989,27],[1233,21,989,29],[1233,25,989,33],[1233,26,989,34,"headers"],[1233,33,989,41],[1234,12,990,20,"body"],[1234,16,990,24],[1234,18,990,26],[1235,14,991,24,"phone"],[1235,19,991,29],[1236,14,992,24,"type"],[1236,18,992,28],[1237,14,993,24,"gotrue_meta_security"],[1237,34,993,44],[1237,36,993,46],[1238,16,993,48,"captcha_token"],[1238,29,993,61],[1238,31,993,63,"options"],[1238,38,993,70],[1238,43,993,75],[1238,47,993,79],[1238,51,993,83,"options"],[1238,58,993,90],[1238,63,993,95],[1238,68,993,100],[1238,69,993,101],[1238,72,993,104],[1238,77,993,109],[1238,78,993,110],[1238,81,993,113,"options"],[1238,88,993,120],[1238,89,993,121,"captchaToken"],[1239,14,993,134],[1240,12,994,20],[1241,10,995,16],[1241,11,995,17],[1241,12,995,18],[1242,10,996,16],[1242,17,996,23],[1243,12,996,25,"data"],[1243,16,996,29],[1243,18,996,31],[1244,14,996,33,"user"],[1244,18,996,37],[1244,20,996,39],[1244,24,996,43],[1245,14,996,45,"session"],[1245,21,996,52],[1245,23,996,54],[1245,27,996,58],[1246,14,996,60,"messageId"],[1246,23,996,69],[1246,25,996,71,"data"],[1246,29,996,75],[1246,34,996,80],[1246,38,996,84],[1246,42,996,88,"data"],[1246,46,996,92],[1246,51,996,97],[1246,56,996,102],[1246,57,996,103],[1246,60,996,106],[1246,65,996,111],[1246,66,996,112],[1246,69,996,115,"data"],[1246,73,996,119],[1246,74,996,120,"message_id"],[1247,12,996,131],[1247,13,996,132],[1248,12,996,134,"error"],[1249,10,996,140],[1249,11,996,141],[1250,8,997,12],[1251,8,998,12],[1251,14,998,18],[1251,18,998,22,"errors_1"],[1251,26,998,30],[1251,27,998,31,"AuthInvalidCredentialsError"],[1251,54,998,58],[1251,55,998,59],[1251,116,998,120],[1251,117,998,121],[1252,6,999,8],[1252,7,999,9],[1252,8,1000,8],[1252,15,1000,15,"error"],[1252,20,1000,20],[1252,22,1000,22],[1253,8,1001,12],[1253,12,1001,16],[1253,13,1001,17],[1253,14,1001,18],[1253,16,1001,20,"errors_1"],[1253,24,1001,28],[1253,25,1001,29,"isAuthError"],[1253,36,1001,40],[1253,38,1001,42,"error"],[1253,43,1001,47],[1253,44,1001,48],[1253,46,1001,50],[1254,10,1002,16],[1254,17,1002,23],[1255,12,1002,25,"data"],[1255,16,1002,29],[1255,18,1002,31],[1256,14,1002,33,"user"],[1256,18,1002,37],[1256,20,1002,39],[1256,24,1002,43],[1257,14,1002,45,"session"],[1257,21,1002,52],[1257,23,1002,54],[1258,12,1002,59],[1258,13,1002,60],[1259,12,1002,62,"error"],[1260,10,1002,68],[1260,11,1002,69],[1261,8,1003,12],[1262,8,1004,12],[1262,14,1004,18,"error"],[1262,19,1004,23],[1263,6,1005,8],[1264,4,1006,4],[1265,4,1007,4],[1266,0,1008,0],[1267,0,1009,0],[1268,0,1010,0],[1269,0,1011,0],[1270,0,1012,0],[1271,0,1013,0],[1272,0,1014,0],[1273,0,1015,0],[1274,0,1016,0],[1275,0,1017,0],[1276,4,1018,4],[1276,10,1018,10,"getSession"],[1276,20,1018,20,"getSession"],[1276,21,1018,20],[1276,23,1018,23],[1277,6,1019,8],[1277,12,1019,14],[1277,16,1019,18],[1277,17,1019,19,"initializePromise"],[1277,34,1019,36],[1278,6,1020,8],[1278,12,1020,14,"result"],[1278,18,1020,20],[1278,21,1020,23],[1278,27,1020,29],[1278,31,1020,33],[1278,32,1020,34,"_acquireLock"],[1278,44,1020,46],[1278,45,1020,47],[1278,46,1020,48],[1278,47,1020,49],[1278,49,1020,51],[1278,61,1020,63],[1279,8,1021,12],[1279,15,1021,19],[1279,19,1021,23],[1279,20,1021,24,"_useSession"],[1279,31,1021,35],[1279,32,1021,36],[1279,38,1021,43,"result"],[1279,44,1021,49],[1279,48,1021,54],[1280,10,1022,16],[1280,17,1022,23,"result"],[1280,23,1022,29],[1281,8,1023,12],[1281,9,1023,13],[1281,10,1023,14],[1282,6,1024,8],[1282,7,1024,9],[1282,8,1024,10],[1283,6,1025,8],[1283,13,1025,15,"result"],[1283,19,1025,21],[1284,4,1026,4],[1285,4,1027,4],[1286,0,1028,0],[1287,0,1029,0],[1288,4,1030,4],[1288,10,1030,10,"_acquireLock"],[1288,22,1030,22,"_acquireLock"],[1288,23,1030,23,"acquireTimeout"],[1288,37,1030,37],[1288,39,1030,39,"fn"],[1288,41,1030,41],[1288,43,1030,43],[1289,6,1031,8],[1289,10,1031,12],[1289,11,1031,13,"_debug"],[1289,17,1031,19],[1289,18,1031,20],[1289,33,1031,35],[1289,35,1031,37],[1289,42,1031,44],[1289,44,1031,46,"acquireTimeout"],[1289,58,1031,60],[1289,59,1031,61],[1290,6,1032,8],[1290,10,1032,12],[1291,8,1033,12],[1291,12,1033,16],[1291,16,1033,20],[1291,17,1033,21,"lockAcquired"],[1291,29,1033,33],[1291,31,1033,35],[1292,10,1034,16],[1292,16,1034,22,"last"],[1292,20,1034,26],[1292,23,1034,29],[1292,27,1034,33],[1292,28,1034,34,"pendingInLock"],[1292,41,1034,47],[1292,42,1034,48,"length"],[1292,48,1034,54],[1292,51,1035,22],[1292,55,1035,26],[1292,56,1035,27,"pendingInLock"],[1292,69,1035,40],[1292,70,1035,41],[1292,74,1035,45],[1292,75,1035,46,"pendingInLock"],[1292,88,1035,59],[1292,89,1035,60,"length"],[1292,95,1035,66],[1292,98,1035,69],[1292,99,1035,70],[1292,100,1035,71],[1292,103,1036,22,"Promise"],[1292,110,1036,29],[1292,111,1036,30,"resolve"],[1292,118,1036,37],[1292,119,1036,38],[1292,120,1036,39],[1293,10,1037,16],[1293,16,1037,22,"result"],[1293,22,1037,28],[1293,25,1037,31],[1293,26,1037,32],[1293,38,1037,44],[1294,12,1038,20],[1294,18,1038,26,"last"],[1294,22,1038,30],[1295,12,1039,20],[1295,19,1039,27],[1295,25,1039,33,"fn"],[1295,27,1039,35],[1295,28,1039,36],[1295,29,1039,37],[1296,10,1040,16],[1296,11,1040,17],[1296,13,1040,19],[1296,14,1040,20],[1297,10,1041,16],[1297,14,1041,20],[1297,15,1041,21,"pendingInLock"],[1297,28,1041,34],[1297,29,1041,35,"push"],[1297,33,1041,39],[1297,34,1041,40],[1297,35,1041,41],[1297,47,1041,53],[1298,12,1042,20],[1298,16,1042,24],[1299,14,1043,24],[1299,20,1043,30,"result"],[1299,26,1043,36],[1300,12,1044,20],[1300,13,1044,21],[1300,14,1045,20],[1300,21,1045,27,"e"],[1300,22,1045,28],[1300,24,1045,30],[1301,14,1046,24],[1302,12,1046,24],[1303,10,1048,16],[1303,11,1048,17],[1303,13,1048,19],[1303,14,1048,20],[1303,15,1048,21],[1304,10,1049,16],[1304,17,1049,23,"result"],[1304,23,1049,29],[1305,8,1050,12],[1306,8,1051,12],[1306,15,1051,19],[1306,21,1051,25],[1306,25,1051,29],[1306,26,1051,30,"lock"],[1306,30,1051,34],[1306,31,1051,35],[1306,39,1051,43],[1306,43,1051,47],[1306,44,1051,48,"storageKey"],[1306,54,1051,58],[1306,56,1051,60],[1306,58,1051,62,"acquireTimeout"],[1306,72,1051,76],[1306,74,1051,78],[1306,86,1051,90],[1307,10,1052,16],[1307,14,1052,20],[1307,15,1052,21,"_debug"],[1307,21,1052,27],[1307,22,1052,28],[1307,37,1052,43],[1307,39,1052,45],[1307,70,1052,76],[1307,72,1052,78],[1307,76,1052,82],[1307,77,1052,83,"storageKey"],[1307,87,1052,93],[1307,88,1052,94],[1308,10,1053,16],[1308,14,1053,20],[1309,12,1054,20],[1309,16,1054,24],[1309,17,1054,25,"lockAcquired"],[1309,29,1054,37],[1309,32,1054,40],[1309,36,1054,44],[1310,12,1055,20],[1310,18,1055,26,"result"],[1310,24,1055,32],[1310,27,1055,35,"fn"],[1310,29,1055,37],[1310,30,1055,38],[1310,31,1055,39],[1311,12,1056,20],[1311,16,1056,24],[1311,17,1056,25,"pendingInLock"],[1311,30,1056,38],[1311,31,1056,39,"push"],[1311,35,1056,43],[1311,36,1056,44],[1311,37,1056,45],[1311,49,1056,57],[1312,14,1057,24],[1312,18,1057,28],[1313,16,1058,28],[1313,22,1058,34,"result"],[1313,28,1058,40],[1314,14,1059,24],[1314,15,1059,25],[1314,16,1060,24],[1314,23,1060,31,"e"],[1314,24,1060,32],[1314,26,1060,34],[1315,16,1061,28],[1316,14,1061,28],[1317,12,1063,20],[1317,13,1063,21],[1317,15,1063,23],[1317,16,1063,24],[1317,17,1063,25],[1318,12,1064,20],[1318,18,1064,26,"result"],[1318,24,1064,32],[1319,12,1065,20],[1320,12,1066,20],[1320,19,1066,27],[1320,23,1066,31],[1320,24,1066,32,"pendingInLock"],[1320,37,1066,45],[1320,38,1066,46,"length"],[1320,44,1066,52],[1320,46,1066,54],[1321,14,1067,24],[1321,20,1067,30,"waitOn"],[1321,26,1067,36],[1321,29,1067,39],[1321,30,1067,40],[1321,33,1067,43],[1321,37,1067,47],[1321,38,1067,48,"pendingInLock"],[1321,51,1067,61],[1321,52,1067,62],[1322,14,1068,24],[1322,20,1068,30,"Promise"],[1322,27,1068,37],[1322,28,1068,38,"all"],[1322,31,1068,41],[1322,32,1068,42,"waitOn"],[1322,38,1068,48],[1322,39,1068,49],[1323,14,1069,24],[1323,18,1069,28],[1323,19,1069,29,"pendingInLock"],[1323,32,1069,42],[1323,33,1069,43,"splice"],[1323,39,1069,49],[1323,40,1069,50],[1323,41,1069,51],[1323,43,1069,53,"waitOn"],[1323,49,1069,59],[1323,50,1069,60,"length"],[1323,56,1069,66],[1323,57,1069,67],[1324,12,1070,20],[1325,12,1071,20],[1325,19,1071,27],[1325,25,1071,33,"result"],[1325,31,1071,39],[1326,10,1072,16],[1326,11,1072,17],[1326,20,1073,24],[1327,12,1074,20],[1327,16,1074,24],[1327,17,1074,25,"_debug"],[1327,23,1074,31],[1327,24,1074,32],[1327,39,1074,47],[1327,41,1074,49],[1327,72,1074,80],[1327,74,1074,82],[1327,78,1074,86],[1327,79,1074,87,"storageKey"],[1327,89,1074,97],[1327,90,1074,98],[1328,12,1075,20],[1328,16,1075,24],[1328,17,1075,25,"lockAcquired"],[1328,29,1075,37],[1328,32,1075,40],[1328,37,1075,45],[1329,10,1076,16],[1330,8,1077,12],[1330,9,1077,13],[1330,10,1077,14],[1331,6,1078,8],[1331,7,1078,9],[1331,16,1079,16],[1332,8,1080,12],[1332,12,1080,16],[1332,13,1080,17,"_debug"],[1332,19,1080,23],[1332,20,1080,24],[1332,35,1080,39],[1332,37,1080,41],[1332,42,1080,46],[1332,43,1080,47],[1333,6,1081,8],[1334,4,1082,4],[1335,4,1083,4],[1336,0,1084,0],[1337,0,1085,0],[1338,0,1086,0],[1339,0,1087,0],[1340,0,1088,0],[1341,4,1089,4],[1341,10,1089,10,"_useSession"],[1341,21,1089,21,"_useSession"],[1341,22,1089,22,"fn"],[1341,24,1089,24],[1341,26,1089,26],[1342,6,1090,8],[1342,10,1090,12],[1342,11,1090,13,"_debug"],[1342,17,1090,19],[1342,18,1090,20],[1342,32,1090,34],[1342,34,1090,36],[1342,41,1090,43],[1342,42,1090,44],[1343,6,1091,8],[1343,10,1091,12],[1344,8,1092,12],[1345,8,1093,12],[1345,14,1093,18,"result"],[1345,20,1093,24],[1345,23,1093,27],[1345,29,1093,33],[1345,33,1093,37],[1345,34,1093,38,"__loadSession"],[1345,47,1093,51],[1345,48,1093,52],[1345,49,1093,53],[1346,8,1094,12],[1346,15,1094,19],[1346,21,1094,25,"fn"],[1346,23,1094,27],[1346,24,1094,28,"result"],[1346,30,1094,34],[1346,31,1094,35],[1347,6,1095,8],[1347,7,1095,9],[1347,16,1096,16],[1348,8,1097,12],[1348,12,1097,16],[1348,13,1097,17,"_debug"],[1348,19,1097,23],[1348,20,1097,24],[1348,34,1097,38],[1348,36,1097,40],[1348,41,1097,45],[1348,42,1097,46],[1349,6,1098,8],[1350,4,1099,4],[1351,4,1100,4],[1352,0,1101,0],[1353,0,1102,0],[1354,0,1103,0],[1355,0,1104,0],[1356,4,1105,4],[1356,10,1105,10,"__loadSession"],[1356,23,1105,23,"__loadSession"],[1356,24,1105,23],[1356,26,1105,26],[1357,6,1106,8],[1357,10,1106,12],[1357,11,1106,13,"_debug"],[1357,17,1106,19],[1357,18,1106,20],[1357,36,1106,38],[1357,38,1106,40],[1357,45,1106,47],[1357,46,1106,48],[1358,6,1107,8],[1358,10,1107,12],[1358,11,1107,13],[1358,15,1107,17],[1358,16,1107,18,"lockAcquired"],[1358,28,1107,30],[1358,30,1107,32],[1359,8,1108,12],[1359,12,1108,16],[1359,13,1108,17,"_debug"],[1359,19,1108,23],[1359,20,1108,24],[1359,38,1108,42],[1359,40,1108,44],[1359,75,1108,79],[1359,77,1108,81],[1359,81,1108,85,"Error"],[1359,86,1108,90],[1359,87,1108,91],[1359,88,1108,92],[1359,89,1108,93,"stack"],[1359,94,1108,98],[1359,95,1108,99],[1360,6,1109,8],[1361,6,1110,8],[1361,10,1110,12],[1362,8,1111,12],[1362,12,1111,16,"currentSession"],[1362,26,1111,30],[1362,29,1111,33],[1362,33,1111,37],[1363,8,1112,12],[1363,14,1112,18,"maybeSession"],[1363,26,1112,30],[1363,29,1112,33],[1363,35,1112,39],[1363,36,1112,40],[1363,37,1112,41],[1363,39,1112,43,"helpers_1"],[1363,48,1112,52],[1363,49,1112,53,"getItemAsync"],[1363,61,1112,65],[1363,63,1112,67],[1363,67,1112,71],[1363,68,1112,72,"storage"],[1363,75,1112,79],[1363,77,1112,81],[1363,81,1112,85],[1363,82,1112,86,"storageKey"],[1363,92,1112,96],[1363,93,1112,97],[1364,8,1113,12],[1364,12,1113,16],[1364,13,1113,17,"_debug"],[1364,19,1113,23],[1364,20,1113,24],[1364,35,1113,39],[1364,37,1113,41],[1364,59,1113,63],[1364,61,1113,65,"maybeSession"],[1364,73,1113,77],[1364,74,1113,78],[1365,8,1114,12],[1365,12,1114,16,"maybeSession"],[1365,24,1114,28],[1365,29,1114,33],[1365,33,1114,37],[1365,35,1114,39],[1366,10,1115,16],[1366,14,1115,20],[1366,18,1115,24],[1366,19,1115,25,"_isValidSession"],[1366,34,1115,40],[1366,35,1115,41,"maybeSession"],[1366,47,1115,53],[1366,48,1115,54],[1366,50,1115,56],[1367,12,1116,20,"currentSession"],[1367,26,1116,34],[1367,29,1116,37,"maybeSession"],[1367,41,1116,49],[1368,10,1117,16],[1368,11,1117,17],[1368,17,1118,21],[1369,12,1119,20],[1369,16,1119,24],[1369,17,1119,25,"_debug"],[1369,23,1119,31],[1369,24,1119,32],[1369,39,1119,47],[1369,41,1119,49],[1369,76,1119,84],[1369,77,1119,85],[1370,12,1120,20],[1370,18,1120,26],[1370,22,1120,30],[1370,23,1120,31,"_removeSession"],[1370,37,1120,45],[1370,38,1120,46],[1370,39,1120,47],[1371,10,1121,16],[1372,8,1122,12],[1373,8,1123,12],[1373,12,1123,16],[1373,13,1123,17,"currentSession"],[1373,27,1123,31],[1373,29,1123,33],[1374,10,1124,16],[1374,17,1124,23],[1375,12,1124,25,"data"],[1375,16,1124,29],[1375,18,1124,31],[1376,14,1124,33,"session"],[1376,21,1124,40],[1376,23,1124,42],[1377,12,1124,47],[1377,13,1124,48],[1378,12,1124,50,"error"],[1378,17,1124,55],[1378,19,1124,57],[1379,10,1124,62],[1379,11,1124,63],[1380,8,1125,12],[1381,8,1126,12],[1382,8,1127,12],[1383,8,1128,12],[1384,8,1129,12],[1385,8,1130,12],[1386,8,1131,12],[1386,14,1131,18,"hasExpired"],[1386,24,1131,28],[1386,27,1131,31,"currentSession"],[1386,41,1131,45],[1386,42,1131,46,"expires_at"],[1386,52,1131,56],[1386,55,1132,18,"currentSession"],[1386,69,1132,32],[1386,70,1132,33,"expires_at"],[1386,80,1132,43],[1386,83,1132,46],[1386,87,1132,50],[1386,90,1132,53,"Date"],[1386,94,1132,57],[1386,95,1132,58,"now"],[1386,98,1132,61],[1386,99,1132,62],[1386,100,1132,63],[1386,103,1132,66,"constants_1"],[1386,114,1132,77],[1386,115,1132,78,"EXPIRY_MARGIN_MS"],[1386,131,1132,94],[1386,134,1133,18],[1386,139,1133,23],[1387,8,1134,12],[1387,12,1134,16],[1387,13,1134,17,"_debug"],[1387,19,1134,23],[1387,20,1134,24],[1387,38,1134,42],[1387,40,1134,44],[1387,54,1134,58,"hasExpired"],[1387,64,1134,68],[1387,67,1134,71],[1387,69,1134,73],[1387,72,1134,76],[1387,78,1134,82],[1387,88,1134,92],[1387,90,1134,94],[1387,102,1134,106],[1387,104,1134,108,"currentSession"],[1387,118,1134,122],[1387,119,1134,123,"expires_at"],[1387,129,1134,133],[1387,130,1134,134],[1388,8,1135,12],[1388,12,1135,16],[1388,13,1135,17,"hasExpired"],[1388,23,1135,27],[1388,25,1135,29],[1389,10,1136,16],[1389,14,1136,20],[1389,18,1136,24],[1389,19,1136,25,"userStorage"],[1389,30,1136,36],[1389,32,1136,38],[1390,12,1137,20],[1390,18,1137,26,"maybeUser"],[1390,27,1137,35],[1390,30,1137,39],[1390,36,1137,45],[1390,37,1137,46],[1390,38,1137,47],[1390,40,1137,49,"helpers_1"],[1390,49,1137,58],[1390,50,1137,59,"getItemAsync"],[1390,62,1137,71],[1390,64,1137,73],[1390,68,1137,77],[1390,69,1137,78,"userStorage"],[1390,80,1137,89],[1390,82,1137,91],[1390,86,1137,95],[1390,87,1137,96,"storageKey"],[1390,97,1137,106],[1390,100,1137,109],[1390,107,1137,116],[1390,108,1137,118],[1391,12,1138,20],[1391,16,1138,24,"maybeUser"],[1391,25,1138,33],[1391,30,1138,38],[1391,34,1138,42],[1391,38,1138,46,"maybeUser"],[1391,47,1138,55],[1391,52,1138,60],[1391,57,1138,65],[1391,58,1138,66],[1391,61,1138,69],[1391,66,1138,74],[1391,67,1138,75],[1391,70,1138,78,"maybeUser"],[1391,79,1138,87],[1391,80,1138,88,"user"],[1391,84,1138,92],[1391,86,1138,94],[1392,14,1139,24,"currentSession"],[1392,28,1139,38],[1392,29,1139,39,"user"],[1392,33,1139,43],[1392,36,1139,46,"maybeUser"],[1392,45,1139,55],[1392,46,1139,56,"user"],[1392,50,1139,60],[1393,12,1140,20],[1393,13,1140,21],[1393,19,1141,25],[1394,14,1142,24,"currentSession"],[1394,28,1142,38],[1394,29,1142,39,"user"],[1394,33,1142,43],[1394,36,1142,46],[1394,37,1142,47],[1394,38,1142,48],[1394,40,1142,50,"helpers_1"],[1394,49,1142,59],[1394,50,1142,60,"userNotAvailableProxy"],[1394,71,1142,81],[1394,73,1142,83],[1394,74,1142,84],[1395,12,1143,20],[1396,10,1144,16],[1397,10,1145,16],[1397,14,1145,20],[1397,18,1145,24],[1397,19,1145,25,"storage"],[1397,26,1145,32],[1397,27,1145,33,"isServer"],[1397,35,1145,41],[1397,39,1145,45,"currentSession"],[1397,53,1145,59],[1397,54,1145,60,"user"],[1397,58,1145,64],[1397,60,1145,66],[1398,12,1146,20],[1398,16,1146,24,"suppressWarning"],[1398,31,1146,39],[1398,34,1146,42],[1398,38,1146,46],[1398,39,1146,47,"suppressGetSessionWarning"],[1398,64,1146,72],[1399,12,1147,20],[1399,18,1147,26,"proxySession"],[1399,30,1147,38],[1399,33,1147,41],[1399,37,1147,45,"Proxy"],[1399,42,1147,50],[1399,43,1147,51,"currentSession"],[1399,57,1147,65],[1399,59,1147,67],[1400,14,1148,24,"get"],[1400,17,1148,27],[1400,19,1148,29,"get"],[1400,20,1148,30,"target"],[1400,26,1148,36],[1400,28,1148,38,"prop"],[1400,32,1148,42],[1400,34,1148,44,"receiver"],[1400,42,1148,52],[1400,47,1148,57],[1401,16,1149,28],[1401,20,1149,32],[1401,21,1149,33,"suppressWarning"],[1401,36,1149,48],[1401,40,1149,52,"prop"],[1401,44,1149,56],[1401,49,1149,61],[1401,55,1149,67],[1401,57,1149,69],[1402,18,1150,32],[1403,18,1151,32,"console"],[1403,25,1151,39],[1403,26,1151,40,"warn"],[1403,30,1151,44],[1403,31,1151,45],[1403,384,1151,398],[1403,385,1151,399],[1404,18,1152,32,"suppressWarning"],[1404,33,1152,47],[1404,36,1152,50],[1404,40,1152,54],[1404,41,1152,55],[1404,42,1152,56],[1405,18,1153,32],[1405,22,1153,36],[1405,23,1153,37,"suppressGetSessionWarning"],[1405,48,1153,62],[1405,51,1153,65],[1405,55,1153,69],[1405,56,1153,70],[1405,57,1153,71],[1406,16,1154,28],[1407,16,1155,28],[1407,23,1155,35,"Reflect"],[1407,30,1155,42],[1407,31,1155,43,"get"],[1407,34,1155,46],[1407,35,1155,47,"target"],[1407,41,1155,53],[1407,43,1155,55,"prop"],[1407,47,1155,59],[1407,49,1155,61,"receiver"],[1407,57,1155,69],[1407,58,1155,70],[1408,14,1156,24],[1409,12,1157,20],[1409,13,1157,21],[1409,14,1157,22],[1410,12,1158,20,"currentSession"],[1410,26,1158,34],[1410,29,1158,37,"proxySession"],[1410,41,1158,49],[1411,10,1159,16],[1412,10,1160,16],[1412,17,1160,23],[1413,12,1160,25,"data"],[1413,16,1160,29],[1413,18,1160,31],[1414,14,1160,33,"session"],[1414,21,1160,40],[1414,23,1160,42,"currentSession"],[1415,12,1160,57],[1415,13,1160,58],[1416,12,1160,60,"error"],[1416,17,1160,65],[1416,19,1160,67],[1417,10,1160,72],[1417,11,1160,73],[1418,8,1161,12],[1419,8,1162,12],[1419,14,1162,18],[1420,10,1162,20,"session"],[1420,17,1162,27],[1421,10,1162,29,"error"],[1422,8,1162,35],[1422,9,1162,36],[1422,12,1162,39],[1422,18,1162,45],[1422,22,1162,49],[1422,23,1162,50,"_callRefreshToken"],[1422,40,1162,67],[1422,41,1162,68,"currentSession"],[1422,55,1162,82],[1422,56,1162,83,"refresh_token"],[1422,69,1162,96],[1422,70,1162,97],[1423,8,1163,12],[1423,12,1163,16,"error"],[1423,17,1163,21],[1423,19,1163,23],[1424,10,1164,16],[1424,17,1164,23],[1425,12,1164,25,"data"],[1425,16,1164,29],[1425,18,1164,31],[1426,14,1164,33,"session"],[1426,21,1164,40],[1426,23,1164,42],[1427,12,1164,47],[1427,13,1164,48],[1428,12,1164,50,"error"],[1429,10,1164,56],[1429,11,1164,57],[1430,8,1165,12],[1431,8,1166,12],[1431,15,1166,19],[1432,10,1166,21,"data"],[1432,14,1166,25],[1432,16,1166,27],[1433,12,1166,29,"session"],[1434,10,1166,37],[1434,11,1166,38],[1435,10,1166,40,"error"],[1435,15,1166,45],[1435,17,1166,47],[1436,8,1166,52],[1436,9,1166,53],[1437,6,1167,8],[1437,7,1167,9],[1437,16,1168,16],[1438,8,1169,12],[1438,12,1169,16],[1438,13,1169,17,"_debug"],[1438,19,1169,23],[1438,20,1169,24],[1438,38,1169,42],[1438,40,1169,44],[1438,45,1169,49],[1438,46,1169,50],[1439,6,1170,8],[1440,4,1171,4],[1441,4,1172,4],[1442,0,1173,0],[1443,0,1174,0],[1444,0,1175,0],[1445,0,1176,0],[1446,0,1177,0],[1447,0,1178,0],[1448,4,1179,4],[1448,10,1179,10,"getUser"],[1448,17,1179,17,"getUser"],[1448,18,1179,18,"jwt"],[1448,21,1179,21],[1448,23,1179,23],[1449,6,1180,8],[1449,10,1180,12,"jwt"],[1449,13,1180,15],[1449,15,1180,17],[1450,8,1181,12],[1450,15,1181,19],[1450,21,1181,25],[1450,25,1181,29],[1450,26,1181,30,"_getUser"],[1450,34,1181,38],[1450,35,1181,39,"jwt"],[1450,38,1181,42],[1450,39,1181,43],[1451,6,1182,8],[1452,6,1183,8],[1452,12,1183,14],[1452,16,1183,18],[1452,17,1183,19,"initializePromise"],[1452,34,1183,36],[1453,6,1184,8],[1453,12,1184,14,"result"],[1453,18,1184,20],[1453,21,1184,23],[1453,27,1184,29],[1453,31,1184,33],[1453,32,1184,34,"_acquireLock"],[1453,44,1184,46],[1453,45,1184,47],[1453,46,1184,48],[1453,47,1184,49],[1453,49,1184,51],[1453,61,1184,63],[1454,8,1185,12],[1454,15,1185,19],[1454,21,1185,25],[1454,25,1185,29],[1454,26,1185,30,"_getUser"],[1454,34,1185,38],[1454,35,1185,39],[1454,36,1185,40],[1455,6,1186,8],[1455,7,1186,9],[1455,8,1186,10],[1456,6,1187,8],[1456,13,1187,15,"result"],[1456,19,1187,21],[1457,4,1188,4],[1458,4,1189,4],[1458,10,1189,10,"_getUser"],[1458,18,1189,18,"_getUser"],[1458,19,1189,19,"jwt"],[1458,22,1189,22],[1458,24,1189,24],[1459,6,1190,8],[1459,10,1190,12],[1460,8,1191,12],[1460,12,1191,16,"jwt"],[1460,15,1191,19],[1460,17,1191,21],[1461,10,1192,16],[1461,17,1192,23],[1461,23,1192,29],[1461,24,1192,30],[1461,25,1192,31],[1461,27,1192,33,"fetch_1"],[1461,34,1192,40],[1461,35,1192,41,"_request"],[1461,43,1192,49],[1461,45,1192,51],[1461,49,1192,55],[1461,50,1192,56,"fetch"],[1461,55,1192,61],[1461,57,1192,63],[1461,62,1192,68],[1461,64,1192,70],[1461,67,1192,73],[1461,71,1192,77],[1461,72,1192,78,"url"],[1461,75,1192,81],[1461,82,1192,88],[1461,84,1192,90],[1462,12,1193,20,"headers"],[1462,19,1193,27],[1462,21,1193,29],[1462,25,1193,33],[1462,26,1193,34,"headers"],[1462,33,1193,41],[1463,12,1194,20,"jwt"],[1463,15,1194,23],[1463,17,1194,25,"jwt"],[1463,20,1194,28],[1464,12,1195,20,"xform"],[1464,17,1195,25],[1464,19,1195,27,"fetch_1"],[1464,26,1195,34],[1464,27,1195,35,"_userResponse"],[1465,10,1196,16],[1465,11,1196,17],[1465,12,1196,18],[1466,8,1197,12],[1467,8,1198,12],[1467,15,1198,19],[1467,21,1198,25],[1467,25,1198,29],[1467,26,1198,30,"_useSession"],[1467,37,1198,41],[1467,38,1198,42],[1467,44,1198,49,"result"],[1467,50,1198,55],[1467,54,1198,60],[1468,10,1199,16],[1468,14,1199,20,"_a"],[1468,16,1199,22],[1468,18,1199,24,"_b"],[1468,20,1199,26],[1468,22,1199,28,"_c"],[1468,24,1199,30],[1469,10,1200,16],[1469,16,1200,22],[1470,12,1200,24,"data"],[1470,16,1200,28],[1471,12,1200,30,"error"],[1472,10,1200,36],[1472,11,1200,37],[1472,14,1200,40,"result"],[1472,20,1200,46],[1473,10,1201,16],[1473,14,1201,20,"error"],[1473,19,1201,25],[1473,21,1201,27],[1474,12,1202,20],[1474,18,1202,26,"error"],[1474,23,1202,31],[1475,10,1203,16],[1476,10,1204,16],[1477,10,1205,16],[1477,14,1205,20],[1477,16,1205,22],[1477,17,1205,23,"_a"],[1477,19,1205,25],[1477,22,1205,28,"data"],[1477,26,1205,32],[1477,27,1205,33,"session"],[1477,34,1205,40],[1477,40,1205,46],[1477,44,1205,50],[1477,48,1205,54,"_a"],[1477,50,1205,56],[1477,55,1205,61],[1477,60,1205,66],[1477,61,1205,67],[1477,64,1205,70],[1477,69,1205,75],[1477,70,1205,76],[1477,73,1205,79,"_a"],[1477,75,1205,81],[1477,76,1205,82,"access_token"],[1477,88,1205,94],[1477,89,1205,95],[1477,93,1205,99],[1477,94,1205,100],[1477,98,1205,104],[1477,99,1205,105,"hasCustomAuthorizationHeader"],[1477,127,1205,133],[1477,129,1205,135],[1478,12,1206,20],[1478,19,1206,27],[1479,14,1206,29,"data"],[1479,18,1206,33],[1479,20,1206,35],[1480,16,1206,37,"user"],[1480,20,1206,41],[1480,22,1206,43],[1481,14,1206,48],[1481,15,1206,49],[1482,14,1206,51,"error"],[1482,19,1206,56],[1482,21,1206,58],[1482,25,1206,62,"errors_1"],[1482,33,1206,70],[1482,34,1206,71,"AuthSessionMissingError"],[1482,57,1206,94],[1482,58,1206,95],[1483,12,1206,97],[1483,13,1206,98],[1484,10,1207,16],[1485,10,1208,16],[1485,17,1208,23],[1485,23,1208,29],[1485,24,1208,30],[1485,25,1208,31],[1485,27,1208,33,"fetch_1"],[1485,34,1208,40],[1485,35,1208,41,"_request"],[1485,43,1208,49],[1485,45,1208,51],[1485,49,1208,55],[1485,50,1208,56,"fetch"],[1485,55,1208,61],[1485,57,1208,63],[1485,62,1208,68],[1485,64,1208,70],[1485,67,1208,73],[1485,71,1208,77],[1485,72,1208,78,"url"],[1485,75,1208,81],[1485,82,1208,88],[1485,84,1208,90],[1486,12,1209,20,"headers"],[1486,19,1209,27],[1486,21,1209,29],[1486,25,1209,33],[1486,26,1209,34,"headers"],[1486,33,1209,41],[1487,12,1210,20,"jwt"],[1487,15,1210,23],[1487,17,1210,25],[1487,18,1210,26,"_c"],[1487,20,1210,28],[1487,23,1210,31],[1487,24,1210,32,"_b"],[1487,26,1210,34],[1487,29,1210,37,"data"],[1487,33,1210,41],[1487,34,1210,42,"session"],[1487,41,1210,49],[1487,47,1210,55],[1487,51,1210,59],[1487,55,1210,63,"_b"],[1487,57,1210,65],[1487,62,1210,70],[1487,67,1210,75],[1487,68,1210,76],[1487,71,1210,79],[1487,76,1210,84],[1487,77,1210,85],[1487,80,1210,88,"_b"],[1487,82,1210,90],[1487,83,1210,91,"access_token"],[1487,95,1210,103],[1487,101,1210,109],[1487,105,1210,113],[1487,109,1210,117,"_c"],[1487,111,1210,119],[1487,116,1210,124],[1487,121,1210,129],[1487,122,1210,130],[1487,125,1210,133,"_c"],[1487,127,1210,135],[1487,130,1210,138,"undefined"],[1487,139,1210,147],[1488,12,1211,20,"xform"],[1488,17,1211,25],[1488,19,1211,27,"fetch_1"],[1488,26,1211,34],[1488,27,1211,35,"_userResponse"],[1489,10,1212,16],[1489,11,1212,17],[1489,12,1212,18],[1490,8,1213,12],[1490,9,1213,13],[1490,10,1213,14],[1491,6,1214,8],[1491,7,1214,9],[1491,8,1215,8],[1491,15,1215,15,"error"],[1491,20,1215,20],[1491,22,1215,22],[1492,8,1216,12],[1492,12,1216,16],[1492,13,1216,17],[1492,14,1216,18],[1492,16,1216,20,"errors_1"],[1492,24,1216,28],[1492,25,1216,29,"isAuthError"],[1492,36,1216,40],[1492,38,1216,42,"error"],[1492,43,1216,47],[1492,44,1216,48],[1492,46,1216,50],[1493,10,1217,16],[1493,14,1217,20],[1493,15,1217,21],[1493,16,1217,22],[1493,18,1217,24,"errors_1"],[1493,26,1217,32],[1493,27,1217,33,"isAuthSessionMissingError"],[1493,52,1217,58],[1493,54,1217,60,"error"],[1493,59,1217,65],[1493,60,1217,66],[1493,62,1217,68],[1494,12,1218,20],[1495,12,1219,20],[1496,12,1220,20],[1496,18,1220,26],[1496,22,1220,30],[1496,23,1220,31,"_removeSession"],[1496,37,1220,45],[1496,38,1220,46],[1496,39,1220,47],[1497,12,1221,20],[1497,18,1221,26],[1497,19,1221,27],[1497,20,1221,28],[1497,22,1221,30,"helpers_1"],[1497,31,1221,39],[1497,32,1221,40,"removeItemAsync"],[1497,47,1221,55],[1497,49,1221,57],[1497,53,1221,61],[1497,54,1221,62,"storage"],[1497,61,1221,69],[1497,63,1221,71],[1497,66,1221,74],[1497,70,1221,78],[1497,71,1221,79,"storageKey"],[1497,81,1221,89],[1497,97,1221,105],[1497,98,1221,106],[1498,10,1222,16],[1499,10,1223,16],[1499,17,1223,23],[1500,12,1223,25,"data"],[1500,16,1223,29],[1500,18,1223,31],[1501,14,1223,33,"user"],[1501,18,1223,37],[1501,20,1223,39],[1502,12,1223,44],[1502,13,1223,45],[1503,12,1223,47,"error"],[1504,10,1223,53],[1504,11,1223,54],[1505,8,1224,12],[1506,8,1225,12],[1506,14,1225,18,"error"],[1506,19,1225,23],[1507,6,1226,8],[1508,4,1227,4],[1509,4,1228,4],[1510,0,1229,0],[1511,0,1230,0],[1512,4,1231,4],[1512,10,1231,10,"updateUser"],[1512,20,1231,20,"updateUser"],[1512,21,1231,21,"attributes"],[1512,31,1231,31],[1512,33,1231,33,"options"],[1512,40,1231,40],[1512,43,1231,43],[1512,44,1231,44],[1512,45,1231,45],[1512,47,1231,47],[1513,6,1232,8],[1513,12,1232,14],[1513,16,1232,18],[1513,17,1232,19,"initializePromise"],[1513,34,1232,36],[1514,6,1233,8],[1514,13,1233,15],[1514,19,1233,21],[1514,23,1233,25],[1514,24,1233,26,"_acquireLock"],[1514,36,1233,38],[1514,37,1233,39],[1514,38,1233,40],[1514,39,1233,41],[1514,41,1233,43],[1514,53,1233,55],[1515,8,1234,12],[1515,15,1234,19],[1515,21,1234,25],[1515,25,1234,29],[1515,26,1234,30,"_updateUser"],[1515,37,1234,41],[1515,38,1234,42,"attributes"],[1515,48,1234,52],[1515,50,1234,54,"options"],[1515,57,1234,61],[1515,58,1234,62],[1516,6,1235,8],[1516,7,1235,9],[1516,8,1235,10],[1517,4,1236,4],[1518,4,1237,4],[1518,10,1237,10,"_updateUser"],[1518,21,1237,21,"_updateUser"],[1518,22,1237,22,"attributes"],[1518,32,1237,32],[1518,34,1237,34,"options"],[1518,41,1237,41],[1518,44,1237,44],[1518,45,1237,45],[1518,46,1237,46],[1518,48,1237,48],[1519,6,1238,8],[1519,10,1238,12],[1520,8,1239,12],[1520,15,1239,19],[1520,21,1239,25],[1520,25,1239,29],[1520,26,1239,30,"_useSession"],[1520,37,1239,41],[1520,38,1239,42],[1520,44,1239,49,"result"],[1520,50,1239,55],[1520,54,1239,60],[1521,10,1240,16],[1521,16,1240,22],[1522,12,1240,24,"data"],[1522,16,1240,28],[1522,18,1240,30,"sessionData"],[1522,29,1240,41],[1523,12,1240,43,"error"],[1523,17,1240,48],[1523,19,1240,50,"sessionError"],[1524,10,1240,63],[1524,11,1240,64],[1524,14,1240,67,"result"],[1524,20,1240,73],[1525,10,1241,16],[1525,14,1241,20,"sessionError"],[1525,26,1241,32],[1525,28,1241,34],[1526,12,1242,20],[1526,18,1242,26,"sessionError"],[1526,30,1242,38],[1527,10,1243,16],[1528,10,1244,16],[1528,14,1244,20],[1528,15,1244,21,"sessionData"],[1528,26,1244,32],[1528,27,1244,33,"session"],[1528,34,1244,40],[1528,36,1244,42],[1529,12,1245,20],[1529,18,1245,26],[1529,22,1245,30,"errors_1"],[1529,30,1245,38],[1529,31,1245,39,"AuthSessionMissingError"],[1529,54,1245,62],[1529,55,1245,63],[1529,56,1245,64],[1530,10,1246,16],[1531,10,1247,16],[1531,16,1247,22,"session"],[1531,23,1247,29],[1531,26,1247,32,"sessionData"],[1531,37,1247,43],[1531,38,1247,44,"session"],[1531,45,1247,51],[1532,10,1248,16],[1532,14,1248,20,"codeChallenge"],[1532,27,1248,33],[1532,30,1248,36],[1532,34,1248,40],[1533,10,1249,16],[1533,14,1249,20,"codeChallengeMethod"],[1533,33,1249,39],[1533,36,1249,42],[1533,40,1249,46],[1534,10,1250,16],[1534,14,1250,20],[1534,18,1250,24],[1534,19,1250,25,"flowType"],[1534,27,1250,33],[1534,32,1250,38],[1534,38,1250,44],[1534,42,1250,48,"attributes"],[1534,52,1250,58],[1534,53,1250,59,"email"],[1534,58,1250,64],[1534,62,1250,68],[1534,66,1250,72],[1534,68,1250,74],[1535,12,1251,20],[1536,12,1252,20],[1536,13,1252,21,"codeChallenge"],[1536,26,1252,34],[1536,28,1252,36,"codeChallengeMethod"],[1536,47,1252,55],[1536,48,1252,56],[1536,51,1252,59],[1536,57,1252,65],[1536,58,1252,66],[1536,59,1252,67],[1536,61,1252,69,"helpers_1"],[1536,70,1252,78],[1536,71,1252,79,"getCodeChallengeAndMethod"],[1536,96,1252,104],[1536,98,1252,106],[1536,102,1252,110],[1536,103,1252,111,"storage"],[1536,110,1252,118],[1536,112,1252,120],[1536,116,1252,124],[1536,117,1252,125,"storageKey"],[1536,127,1252,135],[1536,128,1252,136],[1537,10,1253,16],[1538,10,1254,16],[1538,16,1254,22],[1539,12,1254,24,"data"],[1539,16,1254,28],[1540,12,1254,30,"error"],[1540,17,1254,35],[1540,19,1254,37,"userError"],[1541,10,1254,47],[1541,11,1254,48],[1541,14,1254,51],[1541,20,1254,57],[1541,21,1254,58],[1541,22,1254,59],[1541,24,1254,61,"fetch_1"],[1541,31,1254,68],[1541,32,1254,69,"_request"],[1541,40,1254,77],[1541,42,1254,79],[1541,46,1254,83],[1541,47,1254,84,"fetch"],[1541,52,1254,89],[1541,54,1254,91],[1541,59,1254,96],[1541,61,1254,98],[1541,64,1254,101],[1541,68,1254,105],[1541,69,1254,106,"url"],[1541,72,1254,109],[1541,79,1254,116],[1541,81,1254,118],[1542,12,1255,20,"headers"],[1542,19,1255,27],[1542,21,1255,29],[1542,25,1255,33],[1542,26,1255,34,"headers"],[1542,33,1255,41],[1543,12,1256,20,"redirectTo"],[1543,22,1256,30],[1543,24,1256,32,"options"],[1543,31,1256,39],[1543,36,1256,44],[1543,40,1256,48],[1543,44,1256,52,"options"],[1543,51,1256,59],[1543,56,1256,64],[1543,61,1256,69],[1543,62,1256,70],[1543,65,1256,73],[1543,70,1256,78],[1543,71,1256,79],[1543,74,1256,82,"options"],[1543,81,1256,89],[1543,82,1256,90,"emailRedirectTo"],[1543,97,1256,105],[1544,12,1257,20,"body"],[1544,16,1257,24],[1544,18,1257,26,"Object"],[1544,24,1257,32],[1544,25,1257,33,"assign"],[1544,31,1257,39],[1544,32,1257,40,"Object"],[1544,38,1257,46],[1544,39,1257,47,"assign"],[1544,45,1257,53],[1544,46,1257,54],[1544,47,1257,55],[1544,48,1257,56],[1544,50,1257,58,"attributes"],[1544,60,1257,68],[1544,61,1257,69],[1544,63,1257,71],[1545,14,1257,73,"code_challenge"],[1545,28,1257,87],[1545,30,1257,89,"codeChallenge"],[1545,43,1257,102],[1546,14,1257,104,"code_challenge_method"],[1546,35,1257,125],[1546,37,1257,127,"codeChallengeMethod"],[1547,12,1257,147],[1547,13,1257,148],[1547,14,1257,149],[1548,12,1258,20,"jwt"],[1548,15,1258,23],[1548,17,1258,25,"session"],[1548,24,1258,32],[1548,25,1258,33,"access_token"],[1548,37,1258,45],[1549,12,1259,20,"xform"],[1549,17,1259,25],[1549,19,1259,27,"fetch_1"],[1549,26,1259,34],[1549,27,1259,35,"_userResponse"],[1550,10,1260,16],[1550,11,1260,17],[1550,12,1260,18],[1551,10,1261,16],[1551,14,1261,20,"userError"],[1551,23,1261,29],[1551,25,1262,20],[1551,31,1262,26,"userError"],[1551,40,1262,35],[1552,10,1263,16,"session"],[1552,17,1263,23],[1552,18,1263,24,"user"],[1552,22,1263,28],[1552,25,1263,31,"data"],[1552,29,1263,35],[1552,30,1263,36,"user"],[1552,34,1263,40],[1553,10,1264,16],[1553,16,1264,22],[1553,20,1264,26],[1553,21,1264,27,"_saveSession"],[1553,33,1264,39],[1553,34,1264,40,"session"],[1553,41,1264,47],[1553,42,1264,48],[1554,10,1265,16],[1554,16,1265,22],[1554,20,1265,26],[1554,21,1265,27,"_notifyAllSubscribers"],[1554,42,1265,48],[1554,43,1265,49],[1554,57,1265,63],[1554,59,1265,65,"session"],[1554,66,1265,72],[1554,67,1265,73],[1555,10,1266,16],[1555,17,1266,23],[1556,12,1266,25,"data"],[1556,16,1266,29],[1556,18,1266,31],[1557,14,1266,33,"user"],[1557,18,1266,37],[1557,20,1266,39,"session"],[1557,27,1266,46],[1557,28,1266,47,"user"],[1558,12,1266,52],[1558,13,1266,53],[1559,12,1266,55,"error"],[1559,17,1266,60],[1559,19,1266,62],[1560,10,1266,67],[1560,11,1266,68],[1561,8,1267,12],[1561,9,1267,13],[1561,10,1267,14],[1562,6,1268,8],[1562,7,1268,9],[1562,8,1269,8],[1562,15,1269,15,"error"],[1562,20,1269,20],[1562,22,1269,22],[1563,8,1270,12],[1563,12,1270,16],[1563,13,1270,17],[1563,14,1270,18],[1563,16,1270,20,"errors_1"],[1563,24,1270,28],[1563,25,1270,29,"isAuthError"],[1563,36,1270,40],[1563,38,1270,42,"error"],[1563,43,1270,47],[1563,44,1270,48],[1563,46,1270,50],[1564,10,1271,16],[1564,17,1271,23],[1565,12,1271,25,"data"],[1565,16,1271,29],[1565,18,1271,31],[1566,14,1271,33,"user"],[1566,18,1271,37],[1566,20,1271,39],[1567,12,1271,44],[1567,13,1271,45],[1568,12,1271,47,"error"],[1569,10,1271,53],[1569,11,1271,54],[1570,8,1272,12],[1571,8,1273,12],[1571,14,1273,18,"error"],[1571,19,1273,23],[1572,6,1274,8],[1573,4,1275,4],[1574,4,1276,4],[1575,0,1277,0],[1576,0,1278,0],[1577,0,1279,0],[1578,0,1280,0],[1579,4,1281,4],[1579,10,1281,10,"setSession"],[1579,20,1281,20,"setSession"],[1579,21,1281,21,"currentSession"],[1579,35,1281,35],[1579,37,1281,37],[1580,6,1282,8],[1580,12,1282,14],[1580,16,1282,18],[1580,17,1282,19,"initializePromise"],[1580,34,1282,36],[1581,6,1283,8],[1581,13,1283,15],[1581,19,1283,21],[1581,23,1283,25],[1581,24,1283,26,"_acquireLock"],[1581,36,1283,38],[1581,37,1283,39],[1581,38,1283,40],[1581,39,1283,41],[1581,41,1283,43],[1581,53,1283,55],[1582,8,1284,12],[1582,15,1284,19],[1582,21,1284,25],[1582,25,1284,29],[1582,26,1284,30,"_setSession"],[1582,37,1284,41],[1582,38,1284,42,"currentSession"],[1582,52,1284,56],[1582,53,1284,57],[1583,6,1285,8],[1583,7,1285,9],[1583,8,1285,10],[1584,4,1286,4],[1585,4,1287,4],[1585,10,1287,10,"_setSession"],[1585,21,1287,21,"_setSession"],[1585,22,1287,22,"currentSession"],[1585,36,1287,36],[1585,38,1287,38],[1586,6,1288,8],[1586,10,1288,12],[1587,8,1289,12],[1587,12,1289,16],[1587,13,1289,17,"currentSession"],[1587,27,1289,31],[1587,28,1289,32,"access_token"],[1587,40,1289,44],[1587,44,1289,48],[1587,45,1289,49,"currentSession"],[1587,59,1289,63],[1587,60,1289,64,"refresh_token"],[1587,73,1289,77],[1587,75,1289,79],[1588,10,1290,16],[1588,16,1290,22],[1588,20,1290,26,"errors_1"],[1588,28,1290,34],[1588,29,1290,35,"AuthSessionMissingError"],[1588,52,1290,58],[1588,53,1290,59],[1588,54,1290,60],[1589,8,1291,12],[1590,8,1292,12],[1590,14,1292,18,"timeNow"],[1590,21,1292,25],[1590,24,1292,28,"Date"],[1590,28,1292,32],[1590,29,1292,33,"now"],[1590,32,1292,36],[1590,33,1292,37],[1590,34,1292,38],[1590,37,1292,41],[1590,41,1292,45],[1591,8,1293,12],[1591,12,1293,16,"expiresAt"],[1591,21,1293,25],[1591,24,1293,28,"timeNow"],[1591,31,1293,35],[1592,8,1294,12],[1592,12,1294,16,"hasExpired"],[1592,22,1294,26],[1592,25,1294,29],[1592,29,1294,33],[1593,8,1295,12],[1593,12,1295,16,"session"],[1593,19,1295,23],[1593,22,1295,26],[1593,26,1295,30],[1594,8,1296,12],[1594,14,1296,18],[1595,10,1296,20,"payload"],[1596,8,1296,28],[1596,9,1296,29],[1596,12,1296,32],[1596,13,1296,33],[1596,14,1296,34],[1596,16,1296,36,"helpers_1"],[1596,25,1296,45],[1596,26,1296,46,"decodeJWT"],[1596,35,1296,55],[1596,37,1296,57,"currentSession"],[1596,51,1296,71],[1596,52,1296,72,"access_token"],[1596,64,1296,84],[1596,65,1296,85],[1597,8,1297,12],[1597,12,1297,16,"payload"],[1597,19,1297,23],[1597,20,1297,24,"exp"],[1597,23,1297,27],[1597,25,1297,29],[1598,10,1298,16,"expiresAt"],[1598,19,1298,25],[1598,22,1298,28,"payload"],[1598,29,1298,35],[1598,30,1298,36,"exp"],[1598,33,1298,39],[1599,10,1299,16,"hasExpired"],[1599,20,1299,26],[1599,23,1299,29,"expiresAt"],[1599,32,1299,38],[1599,36,1299,42,"timeNow"],[1599,43,1299,49],[1600,8,1300,12],[1601,8,1301,12],[1601,12,1301,16,"hasExpired"],[1601,22,1301,26],[1601,24,1301,28],[1602,10,1302,16],[1602,16,1302,22],[1603,12,1302,24,"session"],[1603,19,1302,31],[1603,21,1302,33,"refreshedSession"],[1603,37,1302,49],[1604,12,1302,51,"error"],[1605,10,1302,57],[1605,11,1302,58],[1605,14,1302,61],[1605,20,1302,67],[1605,24,1302,71],[1605,25,1302,72,"_callRefreshToken"],[1605,42,1302,89],[1605,43,1302,90,"currentSession"],[1605,57,1302,104],[1605,58,1302,105,"refresh_token"],[1605,71,1302,118],[1605,72,1302,119],[1606,10,1303,16],[1606,14,1303,20,"error"],[1606,19,1303,25],[1606,21,1303,27],[1607,12,1304,20],[1607,19,1304,27],[1608,14,1304,29,"data"],[1608,18,1304,33],[1608,20,1304,35],[1609,16,1304,37,"user"],[1609,20,1304,41],[1609,22,1304,43],[1609,26,1304,47],[1610,16,1304,49,"session"],[1610,23,1304,56],[1610,25,1304,58],[1611,14,1304,63],[1611,15,1304,64],[1612,14,1304,66,"error"],[1612,19,1304,71],[1612,21,1304,73,"error"],[1613,12,1304,79],[1613,13,1304,80],[1614,10,1305,16],[1615,10,1306,16],[1615,14,1306,20],[1615,15,1306,21,"refreshedSession"],[1615,31,1306,37],[1615,33,1306,39],[1616,12,1307,20],[1616,19,1307,27],[1617,14,1307,29,"data"],[1617,18,1307,33],[1617,20,1307,35],[1618,16,1307,37,"user"],[1618,20,1307,41],[1618,22,1307,43],[1618,26,1307,47],[1619,16,1307,49,"session"],[1619,23,1307,56],[1619,25,1307,58],[1620,14,1307,63],[1620,15,1307,64],[1621,14,1307,66,"error"],[1621,19,1307,71],[1621,21,1307,73],[1622,12,1307,78],[1622,13,1307,79],[1623,10,1308,16],[1624,10,1309,16,"session"],[1624,17,1309,23],[1624,20,1309,26,"refreshedSession"],[1624,36,1309,42],[1625,8,1310,12],[1625,9,1310,13],[1625,15,1311,17],[1626,10,1312,16],[1626,16,1312,22],[1627,12,1312,24,"data"],[1627,16,1312,28],[1628,12,1312,30,"error"],[1629,10,1312,36],[1629,11,1312,37],[1629,14,1312,40],[1629,20,1312,46],[1629,24,1312,50],[1629,25,1312,51,"_getUser"],[1629,33,1312,59],[1629,34,1312,60,"currentSession"],[1629,48,1312,74],[1629,49,1312,75,"access_token"],[1629,61,1312,87],[1629,62,1312,88],[1630,10,1313,16],[1630,14,1313,20,"error"],[1630,19,1313,25],[1630,21,1313,27],[1631,12,1314,20],[1631,18,1314,26,"error"],[1631,23,1314,31],[1632,10,1315,16],[1633,10,1316,16,"session"],[1633,17,1316,23],[1633,20,1316,26],[1634,12,1317,20,"access_token"],[1634,24,1317,32],[1634,26,1317,34,"currentSession"],[1634,40,1317,48],[1634,41,1317,49,"access_token"],[1634,53,1317,61],[1635,12,1318,20,"refresh_token"],[1635,25,1318,33],[1635,27,1318,35,"currentSession"],[1635,41,1318,49],[1635,42,1318,50,"refresh_token"],[1635,55,1318,63],[1636,12,1319,20,"user"],[1636,16,1319,24],[1636,18,1319,26,"data"],[1636,22,1319,30],[1636,23,1319,31,"user"],[1636,27,1319,35],[1637,12,1320,20,"token_type"],[1637,22,1320,30],[1637,24,1320,32],[1637,32,1320,40],[1638,12,1321,20,"expires_in"],[1638,22,1321,30],[1638,24,1321,32,"expiresAt"],[1638,33,1321,41],[1638,36,1321,44,"timeNow"],[1638,43,1321,51],[1639,12,1322,20,"expires_at"],[1639,22,1322,30],[1639,24,1322,32,"expiresAt"],[1640,10,1323,16],[1640,11,1323,17],[1641,10,1324,16],[1641,16,1324,22],[1641,20,1324,26],[1641,21,1324,27,"_saveSession"],[1641,33,1324,39],[1641,34,1324,40,"session"],[1641,41,1324,47],[1641,42,1324,48],[1642,10,1325,16],[1642,16,1325,22],[1642,20,1325,26],[1642,21,1325,27,"_notifyAllSubscribers"],[1642,42,1325,48],[1642,43,1325,49],[1642,54,1325,60],[1642,56,1325,62,"session"],[1642,63,1325,69],[1642,64,1325,70],[1643,8,1326,12],[1644,8,1327,12],[1644,15,1327,19],[1645,10,1327,21,"data"],[1645,14,1327,25],[1645,16,1327,27],[1646,12,1327,29,"user"],[1646,16,1327,33],[1646,18,1327,35,"session"],[1646,25,1327,42],[1646,26,1327,43,"user"],[1646,30,1327,47],[1647,12,1327,49,"session"],[1648,10,1327,57],[1648,11,1327,58],[1649,10,1327,60,"error"],[1649,15,1327,65],[1649,17,1327,67],[1650,8,1327,72],[1650,9,1327,73],[1651,6,1328,8],[1651,7,1328,9],[1651,8,1329,8],[1651,15,1329,15,"error"],[1651,20,1329,20],[1651,22,1329,22],[1652,8,1330,12],[1652,12,1330,16],[1652,13,1330,17],[1652,14,1330,18],[1652,16,1330,20,"errors_1"],[1652,24,1330,28],[1652,25,1330,29,"isAuthError"],[1652,36,1330,40],[1652,38,1330,42,"error"],[1652,43,1330,47],[1652,44,1330,48],[1652,46,1330,50],[1653,10,1331,16],[1653,17,1331,23],[1654,12,1331,25,"data"],[1654,16,1331,29],[1654,18,1331,31],[1655,14,1331,33,"session"],[1655,21,1331,40],[1655,23,1331,42],[1655,27,1331,46],[1656,14,1331,48,"user"],[1656,18,1331,52],[1656,20,1331,54],[1657,12,1331,59],[1657,13,1331,60],[1658,12,1331,62,"error"],[1659,10,1331,68],[1659,11,1331,69],[1660,8,1332,12],[1661,8,1333,12],[1661,14,1333,18,"error"],[1661,19,1333,23],[1662,6,1334,8],[1663,4,1335,4],[1664,4,1336,4],[1665,0,1337,0],[1666,0,1338,0],[1667,0,1339,0],[1668,0,1340,0],[1669,0,1341,0],[1670,4,1342,4],[1670,10,1342,10,"refreshSession"],[1670,24,1342,24,"refreshSession"],[1670,25,1342,25,"currentSession"],[1670,39,1342,39],[1670,41,1342,41],[1671,6,1343,8],[1671,12,1343,14],[1671,16,1343,18],[1671,17,1343,19,"initializePromise"],[1671,34,1343,36],[1672,6,1344,8],[1672,13,1344,15],[1672,19,1344,21],[1672,23,1344,25],[1672,24,1344,26,"_acquireLock"],[1672,36,1344,38],[1672,37,1344,39],[1672,38,1344,40],[1672,39,1344,41],[1672,41,1344,43],[1672,53,1344,55],[1673,8,1345,12],[1673,15,1345,19],[1673,21,1345,25],[1673,25,1345,29],[1673,26,1345,30,"_refreshSession"],[1673,41,1345,45],[1673,42,1345,46,"currentSession"],[1673,56,1345,60],[1673,57,1345,61],[1674,6,1346,8],[1674,7,1346,9],[1674,8,1346,10],[1675,4,1347,4],[1676,4,1348,4],[1676,10,1348,10,"_refreshSession"],[1676,25,1348,25,"_refreshSession"],[1676,26,1348,26,"currentSession"],[1676,40,1348,40],[1676,42,1348,42],[1677,6,1349,8],[1677,10,1349,12],[1678,8,1350,12],[1678,15,1350,19],[1678,21,1350,25],[1678,25,1350,29],[1678,26,1350,30,"_useSession"],[1678,37,1350,41],[1678,38,1350,42],[1678,44,1350,49,"result"],[1678,50,1350,55],[1678,54,1350,60],[1679,10,1351,16],[1679,14,1351,20,"_a"],[1679,16,1351,22],[1680,10,1352,16],[1680,14,1352,20],[1680,15,1352,21,"currentSession"],[1680,29,1352,35],[1680,31,1352,37],[1681,12,1353,20],[1681,18,1353,26],[1682,14,1353,28,"data"],[1682,18,1353,32],[1683,14,1353,34,"error"],[1684,12,1353,40],[1684,13,1353,41],[1684,16,1353,44,"result"],[1684,22,1353,50],[1685,12,1354,20],[1685,16,1354,24,"error"],[1685,21,1354,29],[1685,23,1354,31],[1686,14,1355,24],[1686,20,1355,30,"error"],[1686,25,1355,35],[1687,12,1356,20],[1688,12,1357,20,"currentSession"],[1688,26,1357,34],[1688,29,1357,37],[1688,30,1357,38,"_a"],[1688,32,1357,40],[1688,35,1357,43,"data"],[1688,39,1357,47],[1688,40,1357,48,"session"],[1688,47,1357,55],[1688,53,1357,61],[1688,57,1357,65],[1688,61,1357,69,"_a"],[1688,63,1357,71],[1688,68,1357,76],[1688,73,1357,81],[1688,74,1357,82],[1688,77,1357,85,"_a"],[1688,79,1357,87],[1688,82,1357,90,"undefined"],[1688,91,1357,99],[1689,10,1358,16],[1690,10,1359,16],[1690,14,1359,20],[1690,16,1359,22,"currentSession"],[1690,30,1359,36],[1690,35,1359,41],[1690,39,1359,45],[1690,43,1359,49,"currentSession"],[1690,57,1359,63],[1690,62,1359,68],[1690,67,1359,73],[1690,68,1359,74],[1690,71,1359,77],[1690,76,1359,82],[1690,77,1359,83],[1690,80,1359,86,"currentSession"],[1690,94,1359,100],[1690,95,1359,101,"refresh_token"],[1690,108,1359,114],[1690,109,1359,115],[1690,111,1359,117],[1691,12,1360,20],[1691,18,1360,26],[1691,22,1360,30,"errors_1"],[1691,30,1360,38],[1691,31,1360,39,"AuthSessionMissingError"],[1691,54,1360,62],[1691,55,1360,63],[1691,56,1360,64],[1692,10,1361,16],[1693,10,1362,16],[1693,16,1362,22],[1694,12,1362,24,"session"],[1694,19,1362,31],[1695,12,1362,33,"error"],[1696,10,1362,39],[1696,11,1362,40],[1696,14,1362,43],[1696,20,1362,49],[1696,24,1362,53],[1696,25,1362,54,"_callRefreshToken"],[1696,42,1362,71],[1696,43,1362,72,"currentSession"],[1696,57,1362,86],[1696,58,1362,87,"refresh_token"],[1696,71,1362,100],[1696,72,1362,101],[1697,10,1363,16],[1697,14,1363,20,"error"],[1697,19,1363,25],[1697,21,1363,27],[1698,12,1364,20],[1698,19,1364,27],[1699,14,1364,29,"data"],[1699,18,1364,33],[1699,20,1364,35],[1700,16,1364,37,"user"],[1700,20,1364,41],[1700,22,1364,43],[1700,26,1364,47],[1701,16,1364,49,"session"],[1701,23,1364,56],[1701,25,1364,58],[1702,14,1364,63],[1702,15,1364,64],[1703,14,1364,66,"error"],[1703,19,1364,71],[1703,21,1364,73,"error"],[1704,12,1364,79],[1704,13,1364,80],[1705,10,1365,16],[1706,10,1366,16],[1706,14,1366,20],[1706,15,1366,21,"session"],[1706,22,1366,28],[1706,24,1366,30],[1707,12,1367,20],[1707,19,1367,27],[1708,14,1367,29,"data"],[1708,18,1367,33],[1708,20,1367,35],[1709,16,1367,37,"user"],[1709,20,1367,41],[1709,22,1367,43],[1709,26,1367,47],[1710,16,1367,49,"session"],[1710,23,1367,56],[1710,25,1367,58],[1711,14,1367,63],[1711,15,1367,64],[1712,14,1367,66,"error"],[1712,19,1367,71],[1712,21,1367,73],[1713,12,1367,78],[1713,13,1367,79],[1714,10,1368,16],[1715,10,1369,16],[1715,17,1369,23],[1716,12,1369,25,"data"],[1716,16,1369,29],[1716,18,1369,31],[1717,14,1369,33,"user"],[1717,18,1369,37],[1717,20,1369,39,"session"],[1717,27,1369,46],[1717,28,1369,47,"user"],[1717,32,1369,51],[1718,14,1369,53,"session"],[1719,12,1369,61],[1719,13,1369,62],[1720,12,1369,64,"error"],[1720,17,1369,69],[1720,19,1369,71],[1721,10,1369,76],[1721,11,1369,77],[1722,8,1370,12],[1722,9,1370,13],[1722,10,1370,14],[1723,6,1371,8],[1723,7,1371,9],[1723,8,1372,8],[1723,15,1372,15,"error"],[1723,20,1372,20],[1723,22,1372,22],[1724,8,1373,12],[1724,12,1373,16],[1724,13,1373,17],[1724,14,1373,18],[1724,16,1373,20,"errors_1"],[1724,24,1373,28],[1724,25,1373,29,"isAuthError"],[1724,36,1373,40],[1724,38,1373,42,"error"],[1724,43,1373,47],[1724,44,1373,48],[1724,46,1373,50],[1725,10,1374,16],[1725,17,1374,23],[1726,12,1374,25,"data"],[1726,16,1374,29],[1726,18,1374,31],[1727,14,1374,33,"user"],[1727,18,1374,37],[1727,20,1374,39],[1727,24,1374,43],[1728,14,1374,45,"session"],[1728,21,1374,52],[1728,23,1374,54],[1729,12,1374,59],[1729,13,1374,60],[1730,12,1374,62,"error"],[1731,10,1374,68],[1731,11,1374,69],[1732,8,1375,12],[1733,8,1376,12],[1733,14,1376,18,"error"],[1733,19,1376,23],[1734,6,1377,8],[1735,4,1378,4],[1736,4,1379,4],[1737,0,1380,0],[1738,0,1381,0],[1739,4,1382,4],[1739,10,1382,10,"_getSessionFromURL"],[1739,28,1382,28,"_getSessionFromURL"],[1739,29,1382,29,"params"],[1739,35,1382,35],[1739,37,1382,37,"callbackUrlType"],[1739,52,1382,52],[1739,54,1382,54],[1740,6,1383,8],[1740,10,1383,12],[1741,8,1384,12],[1741,12,1384,16],[1741,13,1384,17],[1741,14,1384,18],[1741,15,1384,19],[1741,17,1384,21,"helpers_1"],[1741,26,1384,30],[1741,27,1384,31,"isBrowser"],[1741,36,1384,40],[1741,38,1384,42],[1741,39,1384,43],[1741,41,1385,16],[1741,47,1385,22],[1741,51,1385,26,"errors_1"],[1741,59,1385,34],[1741,60,1385,35,"AuthImplicitGrantRedirectError"],[1741,90,1385,65],[1741,91,1385,66],[1741,113,1385,88],[1741,114,1385,89],[1742,8,1386,12],[1743,8,1387,12],[1743,12,1387,16,"params"],[1743,18,1387,22],[1743,19,1387,23,"error"],[1743,24,1387,28],[1743,28,1387,32,"params"],[1743,34,1387,38],[1743,35,1387,39,"error_description"],[1743,52,1387,56],[1743,56,1387,60,"params"],[1743,62,1387,66],[1743,63,1387,67,"error_code"],[1743,73,1387,77],[1743,75,1387,79],[1744,10,1388,16],[1745,10,1389,16],[1746,10,1390,16],[1746,16,1390,22],[1746,20,1390,26,"errors_1"],[1746,28,1390,34],[1746,29,1390,35,"AuthImplicitGrantRedirectError"],[1746,59,1390,65],[1746,60,1390,66,"params"],[1746,66,1390,72],[1746,67,1390,73,"error_description"],[1746,84,1390,90],[1746,88,1390,94],[1746,137,1390,143],[1746,139,1390,145],[1747,12,1391,20,"error"],[1747,17,1391,25],[1747,19,1391,27,"params"],[1747,25,1391,33],[1747,26,1391,34,"error"],[1747,31,1391,39],[1747,35,1391,43],[1747,54,1391,62],[1748,12,1392,20,"code"],[1748,16,1392,24],[1748,18,1392,26,"params"],[1748,24,1392,32],[1748,25,1392,33,"error_code"],[1748,35,1392,43],[1748,39,1392,47],[1749,10,1393,16],[1749,11,1393,17],[1749,12,1393,18],[1750,8,1394,12],[1751,8,1395,12],[1752,8,1396,12],[1752,16,1396,20,"callbackUrlType"],[1752,31,1396,35],[1753,10,1397,16],[1753,15,1397,21],[1753,25,1397,31],[1754,12,1398,20],[1754,16,1398,24],[1754,20,1398,28],[1754,21,1398,29,"flowType"],[1754,29,1398,37],[1754,34,1398,42],[1754,40,1398,48],[1754,42,1398,50],[1755,14,1399,24],[1755,20,1399,30],[1755,24,1399,34,"errors_1"],[1755,32,1399,42],[1755,33,1399,43,"AuthPKCEGrantCodeExchangeError"],[1755,63,1399,73],[1755,64,1399,74],[1755,92,1399,102],[1755,93,1399,103],[1756,12,1400,20],[1757,12,1401,20],[1758,10,1402,16],[1758,15,1402,21],[1758,21,1402,27],[1759,12,1403,20],[1759,16,1403,24],[1759,20,1403,28],[1759,21,1403,29,"flowType"],[1759,29,1403,37],[1759,34,1403,42],[1759,44,1403,52],[1759,46,1403,54],[1760,14,1404,24],[1760,20,1404,30],[1760,24,1404,34,"errors_1"],[1760,32,1404,42],[1760,33,1404,43,"AuthImplicitGrantRedirectError"],[1760,63,1404,73],[1760,64,1404,74],[1760,102,1404,112],[1760,103,1404,113],[1761,12,1405,20],[1762,12,1406,20],[1763,10,1407,16],[1764,10,1408,16],[1765,8,1409,12],[1766,8,1410,12],[1767,8,1411,12],[1767,12,1411,16,"callbackUrlType"],[1767,27,1411,31],[1767,32,1411,36],[1767,38,1411,42],[1767,40,1411,44],[1768,10,1412,16],[1768,14,1412,20],[1768,15,1412,21,"_debug"],[1768,21,1412,27],[1768,22,1412,28],[1768,38,1412,44],[1768,40,1412,46],[1768,47,1412,53],[1768,49,1412,55],[1768,63,1412,69],[1768,65,1412,71],[1768,69,1412,75],[1768,70,1412,76],[1769,10,1413,16],[1769,14,1413,20],[1769,15,1413,21,"params"],[1769,21,1413,27],[1769,22,1413,28,"code"],[1769,26,1413,32],[1769,28,1414,20],[1769,34,1414,26],[1769,38,1414,30,"errors_1"],[1769,46,1414,38],[1769,47,1414,39,"AuthPKCEGrantCodeExchangeError"],[1769,77,1414,69],[1769,78,1414,70],[1769,97,1414,89],[1769,98,1414,90],[1770,10,1415,16],[1770,16,1415,22],[1771,12,1415,24,"data"],[1771,16,1415,28],[1772,12,1415,30,"error"],[1773,10,1415,36],[1773,11,1415,37],[1773,14,1415,40],[1773,20,1415,46],[1773,24,1415,50],[1773,25,1415,51,"_exchangeCodeForSession"],[1773,48,1415,74],[1773,49,1415,75,"params"],[1773,55,1415,81],[1773,56,1415,82,"code"],[1773,60,1415,86],[1773,61,1415,87],[1774,10,1416,16],[1774,14,1416,20,"error"],[1774,19,1416,25],[1774,21,1417,20],[1774,27,1417,26,"error"],[1774,32,1417,31],[1775,10,1418,16],[1775,16,1418,22,"url"],[1775,19,1418,25],[1775,22,1418,28],[1775,26,1418,32,"URL"],[1775,29,1418,35],[1775,30,1418,36,"window"],[1775,36,1418,42],[1775,37,1418,43,"location"],[1775,45,1418,51],[1775,46,1418,52,"href"],[1775,50,1418,56],[1775,51,1418,57],[1776,10,1419,16,"url"],[1776,13,1419,19],[1776,14,1419,20,"searchParams"],[1776,26,1419,32],[1776,27,1419,33,"delete"],[1776,33,1419,39],[1776,34,1419,40],[1776,40,1419,46],[1776,41,1419,47],[1777,10,1420,16,"window"],[1777,16,1420,22],[1777,17,1420,23,"history"],[1777,24,1420,30],[1777,25,1420,31,"replaceState"],[1777,37,1420,43],[1777,38,1420,44,"window"],[1777,44,1420,50],[1777,45,1420,51,"history"],[1777,52,1420,58],[1777,53,1420,59,"state"],[1777,58,1420,64],[1777,60,1420,66],[1777,62,1420,68],[1777,64,1420,70,"url"],[1777,67,1420,73],[1777,68,1420,74,"toString"],[1777,76,1420,82],[1777,77,1420,83],[1777,78,1420,84],[1777,79,1420,85],[1778,10,1421,16],[1778,17,1421,23],[1779,12,1421,25,"data"],[1779,16,1421,29],[1779,18,1421,31],[1780,14,1421,33,"session"],[1780,21,1421,40],[1780,23,1421,42,"data"],[1780,27,1421,46],[1780,28,1421,47,"session"],[1780,35,1421,54],[1781,14,1421,56,"redirectType"],[1781,26,1421,68],[1781,28,1421,70],[1782,12,1421,75],[1782,13,1421,76],[1783,12,1421,78,"error"],[1783,17,1421,83],[1783,19,1421,85],[1784,10,1421,90],[1784,11,1421,91],[1785,8,1422,12],[1786,8,1423,12],[1786,14,1423,18],[1787,10,1423,20,"provider_token"],[1787,24,1423,34],[1788,10,1423,36,"provider_refresh_token"],[1788,32,1423,58],[1789,10,1423,60,"access_token"],[1789,22,1423,72],[1790,10,1423,74,"refresh_token"],[1790,23,1423,87],[1791,10,1423,89,"expires_in"],[1791,20,1423,99],[1792,10,1423,101,"expires_at"],[1792,20,1423,111],[1793,10,1423,113,"token_type"],[1794,8,1423,125],[1794,9,1423,126],[1794,12,1423,129,"params"],[1794,18,1423,135],[1795,8,1424,12],[1795,12,1424,16],[1795,13,1424,17,"access_token"],[1795,25,1424,29],[1795,29,1424,33],[1795,30,1424,34,"expires_in"],[1795,40,1424,44],[1795,44,1424,48],[1795,45,1424,49,"refresh_token"],[1795,58,1424,62],[1795,62,1424,66],[1795,63,1424,67,"token_type"],[1795,73,1424,77],[1795,75,1424,79],[1796,10,1425,16],[1796,16,1425,22],[1796,20,1425,26,"errors_1"],[1796,28,1425,34],[1796,29,1425,35,"AuthImplicitGrantRedirectError"],[1796,59,1425,65],[1796,60,1425,66],[1796,87,1425,93],[1796,88,1425,94],[1797,8,1426,12],[1798,8,1427,12],[1798,14,1427,18,"timeNow"],[1798,21,1427,25],[1798,24,1427,28,"Math"],[1798,28,1427,32],[1798,29,1427,33,"round"],[1798,34,1427,38],[1798,35,1427,39,"Date"],[1798,39,1427,43],[1798,40,1427,44,"now"],[1798,43,1427,47],[1798,44,1427,48],[1798,45,1427,49],[1798,48,1427,52],[1798,52,1427,56],[1798,53,1427,57],[1799,8,1428,12],[1799,14,1428,18,"expiresIn"],[1799,23,1428,27],[1799,26,1428,30,"parseInt"],[1799,34,1428,38],[1799,35,1428,39,"expires_in"],[1799,45,1428,49],[1799,46,1428,50],[1800,8,1429,12],[1800,12,1429,16,"expiresAt"],[1800,21,1429,25],[1800,24,1429,28,"timeNow"],[1800,31,1429,35],[1800,34,1429,38,"expiresIn"],[1800,43,1429,47],[1801,8,1430,12],[1801,12,1430,16,"expires_at"],[1801,22,1430,26],[1801,24,1430,28],[1802,10,1431,16,"expiresAt"],[1802,19,1431,25],[1802,22,1431,28,"parseInt"],[1802,30,1431,36],[1802,31,1431,37,"expires_at"],[1802,41,1431,47],[1802,42,1431,48],[1803,8,1432,12],[1804,8,1433,12],[1804,14,1433,18,"actuallyExpiresIn"],[1804,31,1433,35],[1804,34,1433,38,"expiresAt"],[1804,43,1433,47],[1804,46,1433,50,"timeNow"],[1804,53,1433,57],[1805,8,1434,12],[1805,12,1434,16,"actuallyExpiresIn"],[1805,29,1434,33],[1805,32,1434,36],[1805,36,1434,40],[1805,40,1434,44,"constants_1"],[1805,51,1434,55],[1805,52,1434,56,"AUTO_REFRESH_TICK_DURATION_MS"],[1805,81,1434,85],[1805,83,1434,87],[1806,10,1435,16,"console"],[1806,17,1435,23],[1806,18,1435,24,"warn"],[1806,22,1435,28],[1806,23,1435,29],[1806,88,1435,94,"actuallyExpiresIn"],[1806,105,1435,111],[1806,138,1435,144,"expiresIn"],[1806,147,1435,153],[1806,150,1435,156],[1806,151,1435,157],[1807,8,1436,12],[1808,8,1437,12],[1808,14,1437,18,"issuedAt"],[1808,22,1437,26],[1808,25,1437,29,"expiresAt"],[1808,34,1437,38],[1808,37,1437,41,"expiresIn"],[1808,46,1437,50],[1809,8,1438,12],[1809,12,1438,16,"timeNow"],[1809,19,1438,23],[1809,22,1438,26,"issuedAt"],[1809,30,1438,34],[1809,34,1438,38],[1809,37,1438,41],[1809,39,1438,43],[1810,10,1439,16,"console"],[1810,17,1439,23],[1810,18,1439,24,"warn"],[1810,22,1439,28],[1810,23,1439,29],[1810,120,1439,126],[1810,122,1439,128,"issuedAt"],[1810,130,1439,136],[1810,132,1439,138,"expiresAt"],[1810,141,1439,147],[1810,143,1439,149,"timeNow"],[1810,150,1439,156],[1810,151,1439,157],[1811,8,1440,12],[1811,9,1440,13],[1811,15,1441,17],[1811,19,1441,21,"timeNow"],[1811,26,1441,28],[1811,29,1441,31,"issuedAt"],[1811,37,1441,39],[1811,40,1441,42],[1811,41,1441,43],[1811,43,1441,45],[1812,10,1442,16,"console"],[1812,17,1442,23],[1812,18,1442,24,"warn"],[1812,22,1442,28],[1812,23,1442,29],[1812,133,1442,139],[1812,135,1442,141,"issuedAt"],[1812,143,1442,149],[1812,145,1442,151,"expiresAt"],[1812,154,1442,160],[1812,156,1442,162,"timeNow"],[1812,163,1442,169],[1812,164,1442,170],[1813,8,1443,12],[1814,8,1444,12],[1814,14,1444,18],[1815,10,1444,20,"data"],[1815,14,1444,24],[1816,10,1444,26,"error"],[1817,8,1444,32],[1817,9,1444,33],[1817,12,1444,36],[1817,18,1444,42],[1817,22,1444,46],[1817,23,1444,47,"_getUser"],[1817,31,1444,55],[1817,32,1444,56,"access_token"],[1817,44,1444,68],[1817,45,1444,69],[1818,8,1445,12],[1818,12,1445,16,"error"],[1818,17,1445,21],[1818,19,1446,16],[1818,25,1446,22,"error"],[1818,30,1446,27],[1819,8,1447,12],[1819,14,1447,18,"session"],[1819,21,1447,25],[1819,24,1447,28],[1820,10,1448,16,"provider_token"],[1820,24,1448,30],[1821,10,1449,16,"provider_refresh_token"],[1821,32,1449,38],[1822,10,1450,16,"access_token"],[1822,22,1450,28],[1823,10,1451,16,"expires_in"],[1823,20,1451,26],[1823,22,1451,28,"expiresIn"],[1823,31,1451,37],[1824,10,1452,16,"expires_at"],[1824,20,1452,26],[1824,22,1452,28,"expiresAt"],[1824,31,1452,37],[1825,10,1453,16,"refresh_token"],[1825,23,1453,29],[1826,10,1454,16,"token_type"],[1826,20,1454,26],[1827,10,1455,16,"user"],[1827,14,1455,20],[1827,16,1455,22,"data"],[1827,20,1455,26],[1827,21,1455,27,"user"],[1828,8,1456,12],[1828,9,1456,13],[1829,8,1457,12],[1830,8,1458,12,"window"],[1830,14,1458,18],[1830,15,1458,19,"location"],[1830,23,1458,27],[1830,24,1458,28,"hash"],[1830,28,1458,32],[1830,31,1458,35],[1830,33,1458,37],[1831,8,1459,12],[1831,12,1459,16],[1831,13,1459,17,"_debug"],[1831,19,1459,23],[1831,20,1459,24],[1831,43,1459,47],[1831,45,1459,49],[1831,76,1459,80],[1831,77,1459,81],[1832,8,1460,12],[1832,15,1460,19],[1833,10,1460,21,"data"],[1833,14,1460,25],[1833,16,1460,27],[1834,12,1460,29,"session"],[1834,19,1460,36],[1835,12,1460,38,"redirectType"],[1835,24,1460,50],[1835,26,1460,52,"params"],[1835,32,1460,58],[1835,33,1460,59,"type"],[1836,10,1460,64],[1836,11,1460,65],[1837,10,1460,67,"error"],[1837,15,1460,72],[1837,17,1460,74],[1838,8,1460,79],[1838,9,1460,80],[1839,6,1461,8],[1839,7,1461,9],[1839,8,1462,8],[1839,15,1462,15,"error"],[1839,20,1462,20],[1839,22,1462,22],[1840,8,1463,12],[1840,12,1463,16],[1840,13,1463,17],[1840,14,1463,18],[1840,16,1463,20,"errors_1"],[1840,24,1463,28],[1840,25,1463,29,"isAuthError"],[1840,36,1463,40],[1840,38,1463,42,"error"],[1840,43,1463,47],[1840,44,1463,48],[1840,46,1463,50],[1841,10,1464,16],[1841,17,1464,23],[1842,12,1464,25,"data"],[1842,16,1464,29],[1842,18,1464,31],[1843,14,1464,33,"session"],[1843,21,1464,40],[1843,23,1464,42],[1843,27,1464,46],[1844,14,1464,48,"redirectType"],[1844,26,1464,60],[1844,28,1464,62],[1845,12,1464,67],[1845,13,1464,68],[1846,12,1464,70,"error"],[1847,10,1464,76],[1847,11,1464,77],[1848,8,1465,12],[1849,8,1466,12],[1849,14,1466,18,"error"],[1849,19,1466,23],[1850,6,1467,8],[1851,4,1468,4],[1852,4,1469,4],[1853,0,1470,0],[1854,0,1471,0],[1855,4,1472,4,"_isImplicitGrantCallback"],[1855,28,1472,28,"_isImplicitGrantCallback"],[1855,29,1472,29,"params"],[1855,35,1472,35],[1855,37,1472,37],[1856,6,1473,8],[1856,13,1473,15,"Boolean"],[1856,20,1473,22],[1856,21,1473,23,"params"],[1856,27,1473,29],[1856,28,1473,30,"access_token"],[1856,40,1473,42],[1856,44,1473,46,"params"],[1856,50,1473,52],[1856,51,1473,53,"error_description"],[1856,68,1473,70],[1856,69,1473,71],[1857,4,1474,4],[1858,4,1475,4],[1859,0,1476,0],[1860,0,1477,0],[1861,4,1478,4],[1861,10,1478,10,"_isPKCECallback"],[1861,25,1478,25,"_isPKCECallback"],[1861,26,1478,26,"params"],[1861,32,1478,32],[1861,34,1478,34],[1862,6,1479,8],[1862,12,1479,14,"currentStorageContent"],[1862,33,1479,35],[1862,36,1479,38],[1862,42,1479,44],[1862,43,1479,45],[1862,44,1479,46],[1862,46,1479,48,"helpers_1"],[1862,55,1479,57],[1862,56,1479,58,"getItemAsync"],[1862,68,1479,70],[1862,70,1479,72],[1862,74,1479,76],[1862,75,1479,77,"storage"],[1862,82,1479,84],[1862,84,1479,86],[1862,87,1479,89],[1862,91,1479,93],[1862,92,1479,94,"storageKey"],[1862,102,1479,104],[1862,118,1479,120],[1862,119,1479,121],[1863,6,1480,8],[1863,13,1480,15],[1863,14,1480,16],[1863,16,1480,18,"params"],[1863,22,1480,24],[1863,23,1480,25,"code"],[1863,27,1480,29],[1863,31,1480,33,"currentStorageContent"],[1863,52,1480,54],[1863,53,1480,55],[1864,4,1481,4],[1865,4,1482,4],[1866,0,1483,0],[1867,0,1484,0],[1868,0,1485,0],[1869,0,1486,0],[1870,0,1487,0],[1871,0,1488,0],[1872,0,1489,0],[1873,4,1490,4],[1873,10,1490,10,"signOut"],[1873,17,1490,17,"signOut"],[1873,18,1490,18,"options"],[1873,25,1490,25],[1873,28,1490,28],[1874,6,1490,30,"scope"],[1874,11,1490,35],[1874,13,1490,37],[1875,4,1490,46],[1875,5,1490,47],[1875,7,1490,49],[1876,6,1491,8],[1876,12,1491,14],[1876,16,1491,18],[1876,17,1491,19,"initializePromise"],[1876,34,1491,36],[1877,6,1492,8],[1877,13,1492,15],[1877,19,1492,21],[1877,23,1492,25],[1877,24,1492,26,"_acquireLock"],[1877,36,1492,38],[1877,37,1492,39],[1877,38,1492,40],[1877,39,1492,41],[1877,41,1492,43],[1877,53,1492,55],[1878,8,1493,12],[1878,15,1493,19],[1878,21,1493,25],[1878,25,1493,29],[1878,26,1493,30,"_signOut"],[1878,34,1493,38],[1878,35,1493,39,"options"],[1878,42,1493,46],[1878,43,1493,47],[1879,6,1494,8],[1879,7,1494,9],[1879,8,1494,10],[1880,4,1495,4],[1881,4,1496,4],[1881,10,1496,10,"_signOut"],[1881,18,1496,18,"_signOut"],[1881,19,1496,19],[1882,6,1496,21,"scope"],[1883,4,1496,27],[1883,5,1496,28],[1883,8,1496,31],[1884,6,1496,33,"scope"],[1884,11,1496,38],[1884,13,1496,40],[1885,4,1496,49],[1885,5,1496,50],[1885,7,1496,52],[1886,6,1497,8],[1886,13,1497,15],[1886,19,1497,21],[1886,23,1497,25],[1886,24,1497,26,"_useSession"],[1886,35,1497,37],[1886,36,1497,38],[1886,42,1497,45,"result"],[1886,48,1497,51],[1886,52,1497,56],[1887,8,1498,12],[1887,12,1498,16,"_a"],[1887,14,1498,18],[1888,8,1499,12],[1888,14,1499,18],[1889,10,1499,20,"data"],[1889,14,1499,24],[1890,10,1499,26,"error"],[1890,15,1499,31],[1890,17,1499,33,"sessionError"],[1891,8,1499,46],[1891,9,1499,47],[1891,12,1499,50,"result"],[1891,18,1499,56],[1892,8,1500,12],[1892,12,1500,16,"sessionError"],[1892,24,1500,28],[1892,26,1500,30],[1893,10,1501,16],[1893,17,1501,23],[1894,12,1501,25,"error"],[1894,17,1501,30],[1894,19,1501,32,"sessionError"],[1895,10,1501,45],[1895,11,1501,46],[1896,8,1502,12],[1897,8,1503,12],[1897,14,1503,18,"accessToken"],[1897,25,1503,29],[1897,28,1503,32],[1897,29,1503,33,"_a"],[1897,31,1503,35],[1897,34,1503,38,"data"],[1897,38,1503,42],[1897,39,1503,43,"session"],[1897,46,1503,50],[1897,52,1503,56],[1897,56,1503,60],[1897,60,1503,64,"_a"],[1897,62,1503,66],[1897,67,1503,71],[1897,72,1503,76],[1897,73,1503,77],[1897,76,1503,80],[1897,81,1503,85],[1897,82,1503,86],[1897,85,1503,89,"_a"],[1897,87,1503,91],[1897,88,1503,92,"access_token"],[1897,100,1503,104],[1898,8,1504,12],[1898,12,1504,16,"accessToken"],[1898,23,1504,27],[1898,25,1504,29],[1899,10,1505,16],[1899,16,1505,22],[1900,12,1505,24,"error"],[1901,10,1505,30],[1901,11,1505,31],[1901,14,1505,34],[1901,20,1505,40],[1901,24,1505,44],[1901,25,1505,45,"admin"],[1901,30,1505,50],[1901,31,1505,51,"signOut"],[1901,38,1505,58],[1901,39,1505,59,"accessToken"],[1901,50,1505,70],[1901,52,1505,72,"scope"],[1901,57,1505,77],[1901,58,1505,78],[1902,10,1506,16],[1902,14,1506,20,"error"],[1902,19,1506,25],[1902,21,1506,27],[1903,12,1507,20],[1904,12,1508,20],[1905,12,1509,20],[1905,16,1509,24],[1905,18,1509,26],[1905,19,1509,27],[1905,20,1509,28],[1905,22,1509,30,"errors_1"],[1905,30,1509,38],[1905,31,1509,39,"isAuthApiError"],[1905,45,1509,53],[1905,47,1509,55,"error"],[1905,52,1509,60],[1905,53,1509,61],[1905,58,1510,25,"error"],[1905,63,1510,30],[1905,64,1510,31,"status"],[1905,70,1510,37],[1905,75,1510,42],[1905,78,1510,45],[1905,82,1510,49,"error"],[1905,87,1510,54],[1905,88,1510,55,"status"],[1905,94,1510,61],[1905,99,1510,66],[1905,102,1510,69],[1905,106,1510,73,"error"],[1905,111,1510,78],[1905,112,1510,79,"status"],[1905,118,1510,85],[1905,123,1510,90],[1905,126,1510,93],[1905,127,1510,94],[1905,128,1510,95],[1905,130,1510,97],[1906,14,1511,24],[1906,21,1511,31],[1907,16,1511,33,"error"],[1908,14,1511,39],[1908,15,1511,40],[1909,12,1512,20],[1910,10,1513,16],[1911,8,1514,12],[1912,8,1515,12],[1912,12,1515,16,"scope"],[1912,17,1515,21],[1912,22,1515,26],[1912,30,1515,34],[1912,32,1515,36],[1913,10,1516,16],[1913,16,1516,22],[1913,20,1516,26],[1913,21,1516,27,"_removeSession"],[1913,35,1516,41],[1913,36,1516,42],[1913,37,1516,43],[1914,10,1517,16],[1914,16,1517,22],[1914,17,1517,23],[1914,18,1517,24],[1914,20,1517,26,"helpers_1"],[1914,29,1517,35],[1914,30,1517,36,"removeItemAsync"],[1914,45,1517,51],[1914,47,1517,53],[1914,51,1517,57],[1914,52,1517,58,"storage"],[1914,59,1517,65],[1914,61,1517,67],[1914,64,1517,70],[1914,68,1517,74],[1914,69,1517,75,"storageKey"],[1914,79,1517,85],[1914,95,1517,101],[1914,96,1517,102],[1915,8,1518,12],[1916,8,1519,12],[1916,15,1519,19],[1917,10,1519,21,"error"],[1917,15,1519,26],[1917,17,1519,28],[1918,8,1519,33],[1918,9,1519,34],[1919,6,1520,8],[1919,7,1520,9],[1919,8,1520,10],[1920,4,1521,4],[1921,4,1522,4],[1922,0,1523,0],[1923,0,1524,0],[1924,0,1525,0],[1925,4,1526,4,"onAuthStateChange"],[1925,21,1526,21,"onAuthStateChange"],[1925,22,1526,22,"callback"],[1925,30,1526,30],[1925,32,1526,32],[1926,6,1527,8],[1926,12,1527,14,"id"],[1926,14,1527,16],[1926,17,1527,19],[1926,18,1527,20],[1926,19,1527,21],[1926,21,1527,23,"helpers_1"],[1926,30,1527,32],[1926,31,1527,33,"uuid"],[1926,35,1527,37],[1926,37,1527,39],[1926,38,1527,40],[1927,6,1528,8],[1927,12,1528,14,"subscription"],[1927,24,1528,26],[1927,27,1528,29],[1928,8,1529,12,"id"],[1928,10,1529,14],[1929,8,1530,12,"callback"],[1929,16,1530,20],[1930,8,1531,12,"unsubscribe"],[1930,19,1531,23],[1930,21,1531,25,"unsubscribe"],[1930,22,1531,25],[1930,27,1531,31],[1931,10,1532,16],[1931,14,1532,20],[1931,15,1532,21,"_debug"],[1931,21,1532,27],[1931,22,1532,28],[1931,38,1532,44],[1931,40,1532,46],[1931,79,1532,85],[1931,81,1532,87,"id"],[1931,83,1532,89],[1931,84,1532,90],[1932,10,1533,16],[1932,14,1533,20],[1932,15,1533,21,"stateChangeEmitters"],[1932,34,1533,40],[1932,35,1533,41,"delete"],[1932,41,1533,47],[1932,42,1533,48,"id"],[1932,44,1533,50],[1932,45,1533,51],[1933,8,1534,12],[1934,6,1535,8],[1934,7,1535,9],[1935,6,1536,8],[1935,10,1536,12],[1935,11,1536,13,"_debug"],[1935,17,1536,19],[1935,18,1536,20],[1935,40,1536,42],[1935,42,1536,44],[1935,71,1536,73],[1935,73,1536,75,"id"],[1935,75,1536,77],[1935,76,1536,78],[1936,6,1537,8],[1936,10,1537,12],[1936,11,1537,13,"stateChangeEmitters"],[1936,30,1537,32],[1936,31,1537,33,"set"],[1936,34,1537,36],[1936,35,1537,37,"id"],[1936,37,1537,39],[1936,39,1537,41,"subscription"],[1936,51,1537,53],[1936,52,1537,54],[1937,6,1538,8],[1937,7,1538,9],[1937,19,1538,21],[1938,8,1539,12],[1938,14,1539,18],[1938,18,1539,22],[1938,19,1539,23,"initializePromise"],[1938,36,1539,40],[1939,8,1540,12],[1939,14,1540,18],[1939,18,1540,22],[1939,19,1540,23,"_acquireLock"],[1939,31,1540,35],[1939,32,1540,36],[1939,33,1540,37],[1939,34,1540,38],[1939,36,1540,40],[1939,48,1540,52],[1940,10,1541,16],[1940,14,1541,20],[1940,15,1541,21,"_emitInitialSession"],[1940,34,1541,40],[1940,35,1541,41,"id"],[1940,37,1541,43],[1940,38,1541,44],[1941,8,1542,12],[1941,9,1542,13],[1941,10,1542,14],[1942,6,1543,8],[1942,7,1543,9],[1942,9,1543,11],[1942,10,1543,12],[1943,6,1544,8],[1943,13,1544,15],[1944,8,1544,17,"data"],[1944,12,1544,21],[1944,14,1544,23],[1945,10,1544,25,"subscription"],[1946,8,1544,38],[1947,6,1544,40],[1947,7,1544,41],[1948,4,1545,4],[1949,4,1546,4],[1949,10,1546,10,"_emitInitialSession"],[1949,29,1546,29,"_emitInitialSession"],[1949,30,1546,30,"id"],[1949,32,1546,32],[1949,34,1546,34],[1950,6,1547,8],[1950,13,1547,15],[1950,19,1547,21],[1950,23,1547,25],[1950,24,1547,26,"_useSession"],[1950,35,1547,37],[1950,36,1547,38],[1950,42,1547,45,"result"],[1950,48,1547,51],[1950,52,1547,56],[1951,8,1548,12],[1951,12,1548,16,"_a"],[1951,14,1548,18],[1951,16,1548,20,"_b"],[1951,18,1548,22],[1952,8,1549,12],[1952,12,1549,16],[1953,10,1550,16],[1953,16,1550,22],[1954,12,1550,24,"data"],[1954,16,1550,28],[1954,18,1550,30],[1955,14,1550,32,"session"],[1956,12,1550,40],[1956,13,1550,41],[1957,12,1550,43,"error"],[1958,10,1550,50],[1958,11,1550,51],[1958,14,1550,54,"result"],[1958,20,1550,60],[1959,10,1551,16],[1959,14,1551,20,"error"],[1959,19,1551,25],[1959,21,1552,20],[1959,27,1552,26,"error"],[1959,32,1552,31],[1960,10,1553,16],[1960,17,1553,23],[1960,18,1553,24,"_a"],[1960,20,1553,26],[1960,23,1553,29],[1960,27,1553,33],[1960,28,1553,34,"stateChangeEmitters"],[1960,47,1553,53],[1960,48,1553,54,"get"],[1960,51,1553,57],[1960,52,1553,58,"id"],[1960,54,1553,60],[1960,55,1553,61],[1960,61,1553,67],[1960,65,1553,71],[1960,69,1553,75,"_a"],[1960,71,1553,77],[1960,76,1553,82],[1960,81,1553,87],[1960,82,1553,88],[1960,85,1553,91],[1960,90,1553,96],[1960,91,1553,97],[1960,94,1553,100,"_a"],[1960,96,1553,102],[1960,97,1553,103,"callback"],[1960,105,1553,111],[1960,106,1553,112],[1960,123,1553,129],[1960,125,1553,131,"session"],[1960,132,1553,138],[1960,133,1553,139],[1960,134,1553,140],[1961,10,1554,16],[1961,14,1554,20],[1961,15,1554,21,"_debug"],[1961,21,1554,27],[1961,22,1554,28],[1961,39,1554,45],[1961,41,1554,47],[1961,54,1554,60],[1961,56,1554,62,"id"],[1961,58,1554,64],[1961,60,1554,66],[1961,69,1554,75],[1961,71,1554,77,"session"],[1961,78,1554,84],[1961,79,1554,85],[1962,8,1555,12],[1962,9,1555,13],[1962,10,1556,12],[1962,17,1556,19,"err"],[1962,20,1556,22],[1962,22,1556,24],[1963,10,1557,16],[1963,17,1557,23],[1963,18,1557,24,"_b"],[1963,20,1557,26],[1963,23,1557,29],[1963,27,1557,33],[1963,28,1557,34,"stateChangeEmitters"],[1963,47,1557,53],[1963,48,1557,54,"get"],[1963,51,1557,57],[1963,52,1557,58,"id"],[1963,54,1557,60],[1963,55,1557,61],[1963,61,1557,67],[1963,65,1557,71],[1963,69,1557,75,"_b"],[1963,71,1557,77],[1963,76,1557,82],[1963,81,1557,87],[1963,82,1557,88],[1963,85,1557,91],[1963,90,1557,96],[1963,91,1557,97],[1963,94,1557,100,"_b"],[1963,96,1557,102],[1963,97,1557,103,"callback"],[1963,105,1557,111],[1963,106,1557,112],[1963,123,1557,129],[1963,125,1557,131],[1963,129,1557,135],[1963,130,1557,136],[1963,131,1557,137],[1964,10,1558,16],[1964,14,1558,20],[1964,15,1558,21,"_debug"],[1964,21,1558,27],[1964,22,1558,28],[1964,39,1558,45],[1964,41,1558,47],[1964,54,1558,60],[1964,56,1558,62,"id"],[1964,58,1558,64],[1964,60,1558,66],[1964,67,1558,73],[1964,69,1558,75,"err"],[1964,72,1558,78],[1964,73,1558,79],[1965,10,1559,16,"console"],[1965,17,1559,23],[1965,18,1559,24,"error"],[1965,23,1559,29],[1965,24,1559,30,"err"],[1965,27,1559,33],[1965,28,1559,34],[1966,8,1560,12],[1967,6,1561,8],[1967,7,1561,9],[1967,8,1561,10],[1968,4,1562,4],[1969,4,1563,4],[1970,0,1564,0],[1971,0,1565,0],[1972,0,1566,0],[1973,0,1567,0],[1974,0,1568,0],[1975,0,1569,0],[1976,4,1570,4],[1976,10,1570,10,"resetPasswordForEmail"],[1976,31,1570,31,"resetPasswordForEmail"],[1976,32,1570,32,"email"],[1976,37,1570,37],[1976,39,1570,39,"options"],[1976,46,1570,46],[1976,49,1570,49],[1976,50,1570,50],[1976,51,1570,51],[1976,53,1570,53],[1977,6,1571,8],[1977,10,1571,12,"codeChallenge"],[1977,23,1571,25],[1977,26,1571,28],[1977,30,1571,32],[1978,6,1572,8],[1978,10,1572,12,"codeChallengeMethod"],[1978,29,1572,31],[1978,32,1572,34],[1978,36,1572,38],[1979,6,1573,8],[1979,10,1573,12],[1979,14,1573,16],[1979,15,1573,17,"flowType"],[1979,23,1573,25],[1979,28,1573,30],[1979,34,1573,36],[1979,36,1573,38],[1980,8,1574,12],[1981,8,1575,12],[1981,9,1575,13,"codeChallenge"],[1981,22,1575,26],[1981,24,1575,28,"codeChallengeMethod"],[1981,43,1575,47],[1981,44,1575,48],[1981,47,1575,51],[1981,53,1575,57],[1981,54,1575,58],[1981,55,1575,59],[1981,57,1575,61,"helpers_1"],[1981,66,1575,70],[1981,67,1575,71,"getCodeChallengeAndMethod"],[1981,92,1575,96],[1981,94,1575,98],[1981,98,1575,102],[1981,99,1575,103,"storage"],[1981,106,1575,110],[1981,108,1575,112],[1981,112,1575,116],[1981,113,1575,117,"storageKey"],[1981,123,1575,127],[1981,125,1575,129],[1981,129,1575,133],[1981,130,1575,134],[1982,8,1576,12],[1982,9,1576,13],[1983,6,1577,8],[1984,6,1578,8],[1984,10,1578,12],[1985,8,1579,12],[1985,15,1579,19],[1985,21,1579,25],[1985,22,1579,26],[1985,23,1579,27],[1985,25,1579,29,"fetch_1"],[1985,32,1579,36],[1985,33,1579,37,"_request"],[1985,41,1579,45],[1985,43,1579,47],[1985,47,1579,51],[1985,48,1579,52,"fetch"],[1985,53,1579,57],[1985,55,1579,59],[1985,61,1579,65],[1985,63,1579,67],[1985,66,1579,70],[1985,70,1579,74],[1985,71,1579,75,"url"],[1985,74,1579,78],[1985,84,1579,88],[1985,86,1579,90],[1986,10,1580,16,"body"],[1986,14,1580,20],[1986,16,1580,22],[1987,12,1581,20,"email"],[1987,17,1581,25],[1988,12,1582,20,"code_challenge"],[1988,26,1582,34],[1988,28,1582,36,"codeChallenge"],[1988,41,1582,49],[1989,12,1583,20,"code_challenge_method"],[1989,33,1583,41],[1989,35,1583,43,"codeChallengeMethod"],[1989,54,1583,62],[1990,12,1584,20,"gotrue_meta_security"],[1990,32,1584,40],[1990,34,1584,42],[1991,14,1584,44,"captcha_token"],[1991,27,1584,57],[1991,29,1584,59,"options"],[1991,36,1584,66],[1991,37,1584,67,"captchaToken"],[1992,12,1584,80],[1993,10,1585,16],[1993,11,1585,17],[1994,10,1586,16,"headers"],[1994,17,1586,23],[1994,19,1586,25],[1994,23,1586,29],[1994,24,1586,30,"headers"],[1994,31,1586,37],[1995,10,1587,16,"redirectTo"],[1995,20,1587,26],[1995,22,1587,28,"options"],[1995,29,1587,35],[1995,30,1587,36,"redirectTo"],[1996,8,1588,12],[1996,9,1588,13],[1996,10,1588,14],[1997,6,1589,8],[1997,7,1589,9],[1997,8,1590,8],[1997,15,1590,15,"error"],[1997,20,1590,20],[1997,22,1590,22],[1998,8,1591,12],[1998,12,1591,16],[1998,13,1591,17],[1998,14,1591,18],[1998,16,1591,20,"errors_1"],[1998,24,1591,28],[1998,25,1591,29,"isAuthError"],[1998,36,1591,40],[1998,38,1591,42,"error"],[1998,43,1591,47],[1998,44,1591,48],[1998,46,1591,50],[1999,10,1592,16],[1999,17,1592,23],[2000,12,1592,25,"data"],[2000,16,1592,29],[2000,18,1592,31],[2000,22,1592,35],[2001,12,1592,37,"error"],[2002,10,1592,43],[2002,11,1592,44],[2003,8,1593,12],[2004,8,1594,12],[2004,14,1594,18,"error"],[2004,19,1594,23],[2005,6,1595,8],[2006,4,1596,4],[2007,4,1597,4],[2008,0,1598,0],[2009,0,1599,0],[2010,4,1600,4],[2010,10,1600,10,"getUserIdentities"],[2010,27,1600,27,"getUserIdentities"],[2010,28,1600,27],[2010,30,1600,30],[2011,6,1601,8],[2011,10,1601,12,"_a"],[2011,12,1601,14],[2012,6,1602,8],[2012,10,1602,12],[2013,8,1603,12],[2013,14,1603,18],[2014,10,1603,20,"data"],[2014,14,1603,24],[2015,10,1603,26,"error"],[2016,8,1603,32],[2016,9,1603,33],[2016,12,1603,36],[2016,18,1603,42],[2016,22,1603,46],[2016,23,1603,47,"getUser"],[2016,30,1603,54],[2016,31,1603,55],[2016,32,1603,56],[2017,8,1604,12],[2017,12,1604,16,"error"],[2017,17,1604,21],[2017,19,1605,16],[2017,25,1605,22,"error"],[2017,30,1605,27],[2018,8,1606,12],[2018,15,1606,19],[2019,10,1606,21,"data"],[2019,14,1606,25],[2019,16,1606,27],[2020,12,1606,29,"identities"],[2020,22,1606,39],[2020,24,1606,41],[2020,25,1606,42,"_a"],[2020,27,1606,44],[2020,30,1606,47,"data"],[2020,34,1606,51],[2020,35,1606,52,"user"],[2020,39,1606,56],[2020,40,1606,57,"identities"],[2020,50,1606,67],[2020,56,1606,73],[2020,60,1606,77],[2020,64,1606,81,"_a"],[2020,66,1606,83],[2020,71,1606,88],[2020,76,1606,93],[2020,77,1606,94],[2020,80,1606,97,"_a"],[2020,82,1606,99],[2020,85,1606,102],[2021,10,1606,105],[2021,11,1606,106],[2022,10,1606,108,"error"],[2022,15,1606,113],[2022,17,1606,115],[2023,8,1606,120],[2023,9,1606,121],[2024,6,1607,8],[2024,7,1607,9],[2024,8,1608,8],[2024,15,1608,15,"error"],[2024,20,1608,20],[2024,22,1608,22],[2025,8,1609,12],[2025,12,1609,16],[2025,13,1609,17],[2025,14,1609,18],[2025,16,1609,20,"errors_1"],[2025,24,1609,28],[2025,25,1609,29,"isAuthError"],[2025,36,1609,40],[2025,38,1609,42,"error"],[2025,43,1609,47],[2025,44,1609,48],[2025,46,1609,50],[2026,10,1610,16],[2026,17,1610,23],[2027,12,1610,25,"data"],[2027,16,1610,29],[2027,18,1610,31],[2027,22,1610,35],[2028,12,1610,37,"error"],[2029,10,1610,43],[2029,11,1610,44],[2030,8,1611,12],[2031,8,1612,12],[2031,14,1612,18,"error"],[2031,19,1612,23],[2032,6,1613,8],[2033,4,1614,4],[2034,4,1615,4],[2035,0,1616,0],[2036,0,1617,0],[2037,0,1618,0],[2038,4,1619,4],[2038,10,1619,10,"linkIdentity"],[2038,22,1619,22,"linkIdentity"],[2038,23,1619,23,"credentials"],[2038,34,1619,34],[2038,36,1619,36],[2039,6,1620,8],[2039,10,1620,12,"_a"],[2039,12,1620,14],[2040,6,1621,8],[2040,10,1621,12],[2041,8,1622,12],[2041,14,1622,18],[2042,10,1622,20,"data"],[2042,14,1622,24],[2043,10,1622,26,"error"],[2044,8,1622,32],[2044,9,1622,33],[2044,12,1622,36],[2044,18,1622,42],[2044,22,1622,46],[2044,23,1622,47,"_useSession"],[2044,34,1622,58],[2044,35,1622,59],[2044,41,1622,66,"result"],[2044,47,1622,72],[2044,51,1622,77],[2045,10,1623,16],[2045,14,1623,20,"_a"],[2045,16,1623,22],[2045,18,1623,24,"_b"],[2045,20,1623,26],[2045,22,1623,28,"_c"],[2045,24,1623,30],[2045,26,1623,32,"_d"],[2045,28,1623,34],[2045,30,1623,36,"_e"],[2045,32,1623,38],[2046,10,1624,16],[2046,16,1624,22],[2047,12,1624,24,"data"],[2047,16,1624,28],[2048,12,1624,30,"error"],[2049,10,1624,36],[2049,11,1624,37],[2049,14,1624,40,"result"],[2049,20,1624,46],[2050,10,1625,16],[2050,14,1625,20,"error"],[2050,19,1625,25],[2050,21,1626,20],[2050,27,1626,26,"error"],[2050,32,1626,31],[2051,10,1627,16],[2051,16,1627,22,"url"],[2051,19,1627,25],[2051,22,1627,28],[2051,28,1627,34],[2051,32,1627,38],[2051,33,1627,39,"_getUrlForProvider"],[2051,51,1627,57],[2051,52,1627,58],[2051,55,1627,61],[2051,59,1627,65],[2051,60,1627,66,"url"],[2051,63,1627,69],[2051,91,1627,97],[2051,93,1627,99,"credentials"],[2051,104,1627,110],[2051,105,1627,111,"provider"],[2051,113,1627,119],[2051,115,1627,121],[2052,12,1628,20,"redirectTo"],[2052,22,1628,30],[2052,24,1628,32],[2052,25,1628,33,"_a"],[2052,27,1628,35],[2052,30,1628,38,"credentials"],[2052,41,1628,49],[2052,42,1628,50,"options"],[2052,49,1628,57],[2052,55,1628,63],[2052,59,1628,67],[2052,63,1628,71,"_a"],[2052,65,1628,73],[2052,70,1628,78],[2052,75,1628,83],[2052,76,1628,84],[2052,79,1628,87],[2052,84,1628,92],[2052,85,1628,93],[2052,88,1628,96,"_a"],[2052,90,1628,98],[2052,91,1628,99,"redirectTo"],[2052,101,1628,109],[2053,12,1629,20,"scopes"],[2053,18,1629,26],[2053,20,1629,28],[2053,21,1629,29,"_b"],[2053,23,1629,31],[2053,26,1629,34,"credentials"],[2053,37,1629,45],[2053,38,1629,46,"options"],[2053,45,1629,53],[2053,51,1629,59],[2053,55,1629,63],[2053,59,1629,67,"_b"],[2053,61,1629,69],[2053,66,1629,74],[2053,71,1629,79],[2053,72,1629,80],[2053,75,1629,83],[2053,80,1629,88],[2053,81,1629,89],[2053,84,1629,92,"_b"],[2053,86,1629,94],[2053,87,1629,95,"scopes"],[2053,93,1629,101],[2054,12,1630,20,"queryParams"],[2054,23,1630,31],[2054,25,1630,33],[2054,26,1630,34,"_c"],[2054,28,1630,36],[2054,31,1630,39,"credentials"],[2054,42,1630,50],[2054,43,1630,51,"options"],[2054,50,1630,58],[2054,56,1630,64],[2054,60,1630,68],[2054,64,1630,72,"_c"],[2054,66,1630,74],[2054,71,1630,79],[2054,76,1630,84],[2054,77,1630,85],[2054,80,1630,88],[2054,85,1630,93],[2054,86,1630,94],[2054,89,1630,97,"_c"],[2054,91,1630,99],[2054,92,1630,100,"queryParams"],[2054,103,1630,111],[2055,12,1631,20,"skipBrowserRedirect"],[2055,31,1631,39],[2055,33,1631,41],[2056,10,1632,16],[2056,11,1632,17],[2056,12,1632,18],[2057,10,1633,16],[2057,17,1633,23],[2057,23,1633,29],[2057,24,1633,30],[2057,25,1633,31],[2057,27,1633,33,"fetch_1"],[2057,34,1633,40],[2057,35,1633,41,"_request"],[2057,43,1633,49],[2057,45,1633,51],[2057,49,1633,55],[2057,50,1633,56,"fetch"],[2057,55,1633,61],[2057,57,1633,63],[2057,62,1633,68],[2057,64,1633,70,"url"],[2057,67,1633,73],[2057,69,1633,75],[2058,12,1634,20,"headers"],[2058,19,1634,27],[2058,21,1634,29],[2058,25,1634,33],[2058,26,1634,34,"headers"],[2058,33,1634,41],[2059,12,1635,20,"jwt"],[2059,15,1635,23],[2059,17,1635,25],[2059,18,1635,26,"_e"],[2059,20,1635,28],[2059,23,1635,31],[2059,24,1635,32,"_d"],[2059,26,1635,34],[2059,29,1635,37,"data"],[2059,33,1635,41],[2059,34,1635,42,"session"],[2059,41,1635,49],[2059,47,1635,55],[2059,51,1635,59],[2059,55,1635,63,"_d"],[2059,57,1635,65],[2059,62,1635,70],[2059,67,1635,75],[2059,68,1635,76],[2059,71,1635,79],[2059,76,1635,84],[2059,77,1635,85],[2059,80,1635,88,"_d"],[2059,82,1635,90],[2059,83,1635,91,"access_token"],[2059,95,1635,103],[2059,101,1635,109],[2059,105,1635,113],[2059,109,1635,117,"_e"],[2059,111,1635,119],[2059,116,1635,124],[2059,121,1635,129],[2059,122,1635,130],[2059,125,1635,133,"_e"],[2059,127,1635,135],[2059,130,1635,138,"undefined"],[2060,10,1636,16],[2060,11,1636,17],[2060,12,1636,18],[2061,8,1637,12],[2061,9,1637,13],[2061,10,1637,14],[2062,8,1638,12],[2062,12,1638,16,"error"],[2062,17,1638,21],[2062,19,1639,16],[2062,25,1639,22,"error"],[2062,30,1639,27],[2063,8,1640,12],[2063,12,1640,16],[2063,13,1640,17],[2063,14,1640,18],[2063,16,1640,20,"helpers_1"],[2063,25,1640,29],[2063,26,1640,30,"isBrowser"],[2063,35,1640,39],[2063,37,1640,41],[2063,38,1640,42],[2063,42,1640,46],[2063,44,1640,48],[2063,45,1640,49,"_a"],[2063,47,1640,51],[2063,50,1640,54,"credentials"],[2063,61,1640,65],[2063,62,1640,66,"options"],[2063,69,1640,73],[2063,75,1640,79],[2063,79,1640,83],[2063,83,1640,87,"_a"],[2063,85,1640,89],[2063,90,1640,94],[2063,95,1640,99],[2063,96,1640,100],[2063,99,1640,103],[2063,104,1640,108],[2063,105,1640,109],[2063,108,1640,112,"_a"],[2063,110,1640,114],[2063,111,1640,115,"skipBrowserRedirect"],[2063,130,1640,134],[2063,131,1640,135],[2063,133,1640,137],[2064,10,1641,16,"window"],[2064,16,1641,22],[2064,17,1641,23,"location"],[2064,25,1641,31],[2064,26,1641,32,"assign"],[2064,32,1641,38],[2064,33,1641,39,"data"],[2064,37,1641,43],[2064,42,1641,48],[2064,46,1641,52],[2064,50,1641,56,"data"],[2064,54,1641,60],[2064,59,1641,65],[2064,64,1641,70],[2064,65,1641,71],[2064,68,1641,74],[2064,73,1641,79],[2064,74,1641,80],[2064,77,1641,83,"data"],[2064,81,1641,87],[2064,82,1641,88,"url"],[2064,85,1641,91],[2064,86,1641,92],[2065,8,1642,12],[2066,8,1643,12],[2066,15,1643,19],[2067,10,1643,21,"data"],[2067,14,1643,25],[2067,16,1643,27],[2068,12,1643,29,"provider"],[2068,20,1643,37],[2068,22,1643,39,"credentials"],[2068,33,1643,50],[2068,34,1643,51,"provider"],[2068,42,1643,59],[2069,12,1643,61,"url"],[2069,15,1643,64],[2069,17,1643,66,"data"],[2069,21,1643,70],[2069,26,1643,75],[2069,30,1643,79],[2069,34,1643,83,"data"],[2069,38,1643,87],[2069,43,1643,92],[2069,48,1643,97],[2069,49,1643,98],[2069,52,1643,101],[2069,57,1643,106],[2069,58,1643,107],[2069,61,1643,110,"data"],[2069,65,1643,114],[2069,66,1643,115,"url"],[2070,10,1643,119],[2070,11,1643,120],[2071,10,1643,122,"error"],[2071,15,1643,127],[2071,17,1643,129],[2072,8,1643,134],[2072,9,1643,135],[2073,6,1644,8],[2073,7,1644,9],[2073,8,1645,8],[2073,15,1645,15,"error"],[2073,20,1645,20],[2073,22,1645,22],[2074,8,1646,12],[2074,12,1646,16],[2074,13,1646,17],[2074,14,1646,18],[2074,16,1646,20,"errors_1"],[2074,24,1646,28],[2074,25,1646,29,"isAuthError"],[2074,36,1646,40],[2074,38,1646,42,"error"],[2074,43,1646,47],[2074,44,1646,48],[2074,46,1646,50],[2075,10,1647,16],[2075,17,1647,23],[2076,12,1647,25,"data"],[2076,16,1647,29],[2076,18,1647,31],[2077,14,1647,33,"provider"],[2077,22,1647,41],[2077,24,1647,43,"credentials"],[2077,35,1647,54],[2077,36,1647,55,"provider"],[2077,44,1647,63],[2078,14,1647,65,"url"],[2078,17,1647,68],[2078,19,1647,70],[2079,12,1647,75],[2079,13,1647,76],[2080,12,1647,78,"error"],[2081,10,1647,84],[2081,11,1647,85],[2082,8,1648,12],[2083,8,1649,12],[2083,14,1649,18,"error"],[2083,19,1649,23],[2084,6,1650,8],[2085,4,1651,4],[2086,4,1652,4],[2087,0,1653,0],[2088,0,1654,0],[2089,4,1655,4],[2089,10,1655,10,"unlinkIdentity"],[2089,24,1655,24,"unlinkIdentity"],[2089,25,1655,25,"identity"],[2089,33,1655,33],[2089,35,1655,35],[2090,6,1656,8],[2090,10,1656,12],[2091,8,1657,12],[2091,15,1657,19],[2091,21,1657,25],[2091,25,1657,29],[2091,26,1657,30,"_useSession"],[2091,37,1657,41],[2091,38,1657,42],[2091,44,1657,49,"result"],[2091,50,1657,55],[2091,54,1657,60],[2092,10,1658,16],[2092,14,1658,20,"_a"],[2092,16,1658,22],[2092,18,1658,24,"_b"],[2092,20,1658,26],[2093,10,1659,16],[2093,16,1659,22],[2094,12,1659,24,"data"],[2094,16,1659,28],[2095,12,1659,30,"error"],[2096,10,1659,36],[2096,11,1659,37],[2096,14,1659,40,"result"],[2096,20,1659,46],[2097,10,1660,16],[2097,14,1660,20,"error"],[2097,19,1660,25],[2097,21,1660,27],[2098,12,1661,20],[2098,18,1661,26,"error"],[2098,23,1661,31],[2099,10,1662,16],[2100,10,1663,16],[2100,17,1663,23],[2100,23,1663,29],[2100,24,1663,30],[2100,25,1663,31],[2100,27,1663,33,"fetch_1"],[2100,34,1663,40],[2100,35,1663,41,"_request"],[2100,43,1663,49],[2100,45,1663,51],[2100,49,1663,55],[2100,50,1663,56,"fetch"],[2100,55,1663,61],[2100,57,1663,63],[2100,65,1663,71],[2100,67,1663,73],[2100,70,1663,76],[2100,74,1663,80],[2100,75,1663,81,"url"],[2100,78,1663,84],[2100,98,1663,104,"identity"],[2100,106,1663,112],[2100,107,1663,113,"identity_id"],[2100,118,1663,124],[2100,120,1663,126],[2100,122,1663,128],[2101,12,1664,20,"headers"],[2101,19,1664,27],[2101,21,1664,29],[2101,25,1664,33],[2101,26,1664,34,"headers"],[2101,33,1664,41],[2102,12,1665,20,"jwt"],[2102,15,1665,23],[2102,17,1665,25],[2102,18,1665,26,"_b"],[2102,20,1665,28],[2102,23,1665,31],[2102,24,1665,32,"_a"],[2102,26,1665,34],[2102,29,1665,37,"data"],[2102,33,1665,41],[2102,34,1665,42,"session"],[2102,41,1665,49],[2102,47,1665,55],[2102,51,1665,59],[2102,55,1665,63,"_a"],[2102,57,1665,65],[2102,62,1665,70],[2102,67,1665,75],[2102,68,1665,76],[2102,71,1665,79],[2102,76,1665,84],[2102,77,1665,85],[2102,80,1665,88,"_a"],[2102,82,1665,90],[2102,83,1665,91,"access_token"],[2102,95,1665,103],[2102,101,1665,109],[2102,105,1665,113],[2102,109,1665,117,"_b"],[2102,111,1665,119],[2102,116,1665,124],[2102,121,1665,129],[2102,122,1665,130],[2102,125,1665,133,"_b"],[2102,127,1665,135],[2102,130,1665,138,"undefined"],[2103,10,1666,16],[2103,11,1666,17],[2103,12,1666,18],[2104,8,1667,12],[2104,9,1667,13],[2104,10,1667,14],[2105,6,1668,8],[2105,7,1668,9],[2105,8,1669,8],[2105,15,1669,15,"error"],[2105,20,1669,20],[2105,22,1669,22],[2106,8,1670,12],[2106,12,1670,16],[2106,13,1670,17],[2106,14,1670,18],[2106,16,1670,20,"errors_1"],[2106,24,1670,28],[2106,25,1670,29,"isAuthError"],[2106,36,1670,40],[2106,38,1670,42,"error"],[2106,43,1670,47],[2106,44,1670,48],[2106,46,1670,50],[2107,10,1671,16],[2107,17,1671,23],[2108,12,1671,25,"data"],[2108,16,1671,29],[2108,18,1671,31],[2108,22,1671,35],[2109,12,1671,37,"error"],[2110,10,1671,43],[2110,11,1671,44],[2111,8,1672,12],[2112,8,1673,12],[2112,14,1673,18,"error"],[2112,19,1673,23],[2113,6,1674,8],[2114,4,1675,4],[2115,4,1676,4],[2116,0,1677,0],[2117,0,1678,0],[2118,0,1679,0],[2119,4,1680,4],[2119,10,1680,10,"_refreshAccessToken"],[2119,29,1680,29,"_refreshAccessToken"],[2119,30,1680,30,"refreshToken"],[2119,42,1680,42],[2119,44,1680,44],[2120,6,1681,8],[2120,12,1681,14,"debugName"],[2120,21,1681,23],[2120,24,1681,26],[2120,48,1681,50,"refreshToken"],[2120,60,1681,62],[2120,61,1681,63,"substring"],[2120,70,1681,72],[2120,71,1681,73],[2120,72,1681,74],[2120,74,1681,76],[2120,75,1681,77],[2120,76,1681,78],[2120,82,1681,84],[2121,6,1682,8],[2121,10,1682,12],[2121,11,1682,13,"_debug"],[2121,17,1682,19],[2121,18,1682,20,"debugName"],[2121,27,1682,29],[2121,29,1682,31],[2121,36,1682,38],[2121,37,1682,39],[2122,6,1683,8],[2122,10,1683,12],[2123,8,1684,12],[2123,14,1684,18,"startedAt"],[2123,23,1684,27],[2123,26,1684,30,"Date"],[2123,30,1684,34],[2123,31,1684,35,"now"],[2123,34,1684,38],[2123,35,1684,39],[2123,36,1684,40],[2124,8,1685,12],[2125,8,1686,12],[2125,15,1686,19],[2125,21,1686,25],[2125,22,1686,26],[2125,23,1686,27],[2125,25,1686,29,"helpers_1"],[2125,34,1686,38],[2125,35,1686,39,"retryable"],[2125,44,1686,48],[2125,46,1686,50],[2125,52,1686,57,"attempt"],[2125,59,1686,64],[2125,63,1686,69],[2126,10,1687,16],[2126,14,1687,20,"attempt"],[2126,21,1687,27],[2126,24,1687,30],[2126,25,1687,31],[2126,27,1687,33],[2127,12,1688,20],[2127,18,1688,26],[2127,19,1688,27],[2127,20,1688,28],[2127,22,1688,30,"helpers_1"],[2127,31,1688,39],[2127,32,1688,40,"sleep"],[2127,37,1688,45],[2127,39,1688,47],[2127,42,1688,50],[2127,45,1688,53,"Math"],[2127,49,1688,57],[2127,50,1688,58,"pow"],[2127,53,1688,61],[2127,54,1688,62],[2127,55,1688,63],[2127,57,1688,65,"attempt"],[2127,64,1688,72],[2127,67,1688,75],[2127,68,1688,76],[2127,69,1688,77],[2127,70,1688,78],[2127,71,1688,79],[2127,72,1688,80],[2128,10,1689,16],[2129,10,1690,16],[2129,14,1690,20],[2129,15,1690,21,"_debug"],[2129,21,1690,27],[2129,22,1690,28,"debugName"],[2129,31,1690,37],[2129,33,1690,39],[2129,53,1690,59],[2129,55,1690,61,"attempt"],[2129,62,1690,68],[2129,63,1690,69],[2130,10,1691,16],[2130,17,1691,23],[2130,23,1691,29],[2130,24,1691,30],[2130,25,1691,31],[2130,27,1691,33,"fetch_1"],[2130,34,1691,40],[2130,35,1691,41,"_request"],[2130,43,1691,49],[2130,45,1691,51],[2130,49,1691,55],[2130,50,1691,56,"fetch"],[2130,55,1691,61],[2130,57,1691,63],[2130,63,1691,69],[2130,65,1691,71],[2130,68,1691,74],[2130,72,1691,78],[2130,73,1691,79,"url"],[2130,76,1691,82],[2130,109,1691,115],[2130,111,1691,117],[2131,12,1692,20,"body"],[2131,16,1692,24],[2131,18,1692,26],[2132,14,1692,28,"refresh_token"],[2132,27,1692,41],[2132,29,1692,43,"refreshToken"],[2133,12,1692,56],[2133,13,1692,57],[2134,12,1693,20,"headers"],[2134,19,1693,27],[2134,21,1693,29],[2134,25,1693,33],[2134,26,1693,34,"headers"],[2134,33,1693,41],[2135,12,1694,20,"xform"],[2135,17,1694,25],[2135,19,1694,27,"fetch_1"],[2135,26,1694,34],[2135,27,1694,35,"_sessionResponse"],[2136,10,1695,16],[2136,11,1695,17],[2136,12,1695,18],[2137,8,1696,12],[2137,9,1696,13],[2137,11,1696,15],[2137,12,1696,16,"attempt"],[2137,19,1696,23],[2137,21,1696,25,"error"],[2137,26,1696,30],[2137,31,1696,35],[2138,10,1697,16],[2138,16,1697,22,"nextBackOffInterval"],[2138,35,1697,41],[2138,38,1697,44],[2138,41,1697,47],[2138,44,1697,50,"Math"],[2138,48,1697,54],[2138,49,1697,55,"pow"],[2138,52,1697,58],[2138,53,1697,59],[2138,54,1697,60],[2138,56,1697,62,"attempt"],[2138,63,1697,69],[2138,64,1697,70],[2139,10,1698,16],[2139,17,1698,24,"error"],[2139,22,1698,29],[2139,26,1699,20],[2139,27,1699,21],[2139,28,1699,22],[2139,30,1699,24,"errors_1"],[2139,38,1699,32],[2139,39,1699,33,"isAuthRetryableFetchError"],[2139,64,1699,58],[2139,66,1699,60,"error"],[2139,71,1699,65],[2139,72,1699,66],[2140,10,1700,20],[2141,10,1701,20,"Date"],[2141,14,1701,24],[2141,15,1701,25,"now"],[2141,18,1701,28],[2141,19,1701,29],[2141,20,1701,30],[2141,23,1701,33,"nextBackOffInterval"],[2141,42,1701,52],[2141,45,1701,55,"startedAt"],[2141,54,1701,64],[2141,57,1701,67,"constants_1"],[2141,68,1701,78],[2141,69,1701,79,"AUTO_REFRESH_TICK_DURATION_MS"],[2141,98,1701,108],[2142,8,1702,12],[2142,9,1702,13],[2142,10,1702,14],[2143,6,1703,8],[2143,7,1703,9],[2143,8,1704,8],[2143,15,1704,15,"error"],[2143,20,1704,20],[2143,22,1704,22],[2144,8,1705,12],[2144,12,1705,16],[2144,13,1705,17,"_debug"],[2144,19,1705,23],[2144,20,1705,24,"debugName"],[2144,29,1705,33],[2144,31,1705,35],[2144,38,1705,42],[2144,40,1705,44,"error"],[2144,45,1705,49],[2144,46,1705,50],[2145,8,1706,12],[2145,12,1706,16],[2145,13,1706,17],[2145,14,1706,18],[2145,16,1706,20,"errors_1"],[2145,24,1706,28],[2145,25,1706,29,"isAuthError"],[2145,36,1706,40],[2145,38,1706,42,"error"],[2145,43,1706,47],[2145,44,1706,48],[2145,46,1706,50],[2146,10,1707,16],[2146,17,1707,23],[2147,12,1707,25,"data"],[2147,16,1707,29],[2147,18,1707,31],[2148,14,1707,33,"session"],[2148,21,1707,40],[2148,23,1707,42],[2148,27,1707,46],[2149,14,1707,48,"user"],[2149,18,1707,52],[2149,20,1707,54],[2150,12,1707,59],[2150,13,1707,60],[2151,12,1707,62,"error"],[2152,10,1707,68],[2152,11,1707,69],[2153,8,1708,12],[2154,8,1709,12],[2154,14,1709,18,"error"],[2154,19,1709,23],[2155,6,1710,8],[2155,7,1710,9],[2155,16,1711,16],[2156,8,1712,12],[2156,12,1712,16],[2156,13,1712,17,"_debug"],[2156,19,1712,23],[2156,20,1712,24,"debugName"],[2156,29,1712,33],[2156,31,1712,35],[2156,36,1712,40],[2156,37,1712,41],[2157,6,1713,8],[2158,4,1714,4],[2159,4,1715,4,"_isValidSession"],[2159,19,1715,19,"_isValidSession"],[2159,20,1715,20,"maybeSession"],[2159,32,1715,32],[2159,34,1715,34],[2160,6,1716,8],[2160,12,1716,14,"isValidSession"],[2160,26,1716,28],[2160,29,1716,31],[2160,36,1716,38,"maybeSession"],[2160,48,1716,50],[2160,53,1716,55],[2160,61,1716,63],[2160,65,1717,12,"maybeSession"],[2160,77,1717,24],[2160,82,1717,29],[2160,86,1717,33],[2160,90,1718,12],[2160,104,1718,26],[2160,108,1718,30,"maybeSession"],[2160,120,1718,42],[2160,124,1719,12],[2160,139,1719,27],[2160,143,1719,31,"maybeSession"],[2160,155,1719,43],[2160,159,1720,12],[2160,171,1720,24],[2160,175,1720,28,"maybeSession"],[2160,187,1720,40],[2161,6,1721,8],[2161,13,1721,15,"isValidSession"],[2161,27,1721,29],[2162,4,1722,4],[2163,4,1723,4],[2163,10,1723,10,"_handleProviderSignIn"],[2163,31,1723,31,"_handleProviderSignIn"],[2163,32,1723,32,"provider"],[2163,40,1723,40],[2163,42,1723,42,"options"],[2163,49,1723,49],[2163,51,1723,51],[2164,6,1724,8],[2164,12,1724,14,"url"],[2164,15,1724,17],[2164,18,1724,20],[2164,24,1724,26],[2164,28,1724,30],[2164,29,1724,31,"_getUrlForProvider"],[2164,47,1724,49],[2164,48,1724,50],[2164,51,1724,53],[2164,55,1724,57],[2164,56,1724,58,"url"],[2164,59,1724,61],[2164,71,1724,73],[2164,73,1724,75,"provider"],[2164,81,1724,83],[2164,83,1724,85],[2165,8,1725,12,"redirectTo"],[2165,18,1725,22],[2165,20,1725,24,"options"],[2165,27,1725,31],[2165,28,1725,32,"redirectTo"],[2165,38,1725,42],[2166,8,1726,12,"scopes"],[2166,14,1726,18],[2166,16,1726,20,"options"],[2166,23,1726,27],[2166,24,1726,28,"scopes"],[2166,30,1726,34],[2167,8,1727,12,"queryParams"],[2167,19,1727,23],[2167,21,1727,25,"options"],[2167,28,1727,32],[2167,29,1727,33,"queryParams"],[2168,6,1728,8],[2168,7,1728,9],[2168,8,1728,10],[2169,6,1729,8],[2169,10,1729,12],[2169,11,1729,13,"_debug"],[2169,17,1729,19],[2169,18,1729,20],[2169,44,1729,46],[2169,46,1729,48],[2169,56,1729,58],[2169,58,1729,60,"provider"],[2169,66,1729,68],[2169,68,1729,70],[2169,77,1729,79],[2169,79,1729,81,"options"],[2169,86,1729,88],[2169,88,1729,90],[2169,93,1729,95],[2169,95,1729,97,"url"],[2169,98,1729,100],[2169,99,1729,101],[2170,6,1730,8],[2171,6,1731,8],[2171,10,1731,12],[2171,11,1731,13],[2171,12,1731,14],[2171,14,1731,16,"helpers_1"],[2171,23,1731,25],[2171,24,1731,26,"isBrowser"],[2171,33,1731,35],[2171,35,1731,37],[2171,36,1731,38],[2171,40,1731,42],[2171,41,1731,43,"options"],[2171,48,1731,50],[2171,49,1731,51,"skipBrowserRedirect"],[2171,68,1731,70],[2171,70,1731,72],[2172,8,1732,12,"window"],[2172,14,1732,18],[2172,15,1732,19,"location"],[2172,23,1732,27],[2172,24,1732,28,"assign"],[2172,30,1732,34],[2172,31,1732,35,"url"],[2172,34,1732,38],[2172,35,1732,39],[2173,6,1733,8],[2174,6,1734,8],[2174,13,1734,15],[2175,8,1734,17,"data"],[2175,12,1734,21],[2175,14,1734,23],[2176,10,1734,25,"provider"],[2176,18,1734,33],[2177,10,1734,35,"url"],[2178,8,1734,39],[2178,9,1734,40],[2179,8,1734,42,"error"],[2179,13,1734,47],[2179,15,1734,49],[2180,6,1734,54],[2180,7,1734,55],[2181,4,1735,4],[2182,4,1736,4],[2183,0,1737,0],[2184,0,1738,0],[2185,0,1739,0],[2186,4,1740,4],[2186,10,1740,10,"_recoverAndRefresh"],[2186,28,1740,28,"_recoverAndRefresh"],[2186,29,1740,28],[2186,31,1740,31],[2187,6,1741,8],[2187,10,1741,12,"_a"],[2187,12,1741,14],[2187,14,1741,16,"_b"],[2187,16,1741,18],[2188,6,1742,8],[2188,12,1742,14,"debugName"],[2188,21,1742,23],[2188,24,1742,26],[2188,47,1742,49],[2189,6,1743,8],[2189,10,1743,12],[2189,11,1743,13,"_debug"],[2189,17,1743,19],[2189,18,1743,20,"debugName"],[2189,27,1743,29],[2189,29,1743,31],[2189,36,1743,38],[2189,37,1743,39],[2190,6,1744,8],[2190,10,1744,12],[2191,8,1745,12],[2191,14,1745,18,"currentSession"],[2191,28,1745,32],[2191,31,1745,36],[2191,37,1745,42],[2191,38,1745,43],[2191,39,1745,44],[2191,41,1745,46,"helpers_1"],[2191,50,1745,55],[2191,51,1745,56,"getItemAsync"],[2191,63,1745,68],[2191,65,1745,70],[2191,69,1745,74],[2191,70,1745,75,"storage"],[2191,77,1745,82],[2191,79,1745,84],[2191,83,1745,88],[2191,84,1745,89,"storageKey"],[2191,94,1745,99],[2191,95,1745,101],[2192,8,1746,12],[2192,12,1746,16,"currentSession"],[2192,26,1746,30],[2192,30,1746,34],[2192,34,1746,38],[2192,35,1746,39,"userStorage"],[2192,46,1746,50],[2192,48,1746,52],[2193,10,1747,16],[2193,14,1747,20,"maybeUser"],[2193,23,1747,29],[2193,26,1747,33],[2193,32,1747,39],[2193,33,1747,40],[2193,34,1747,41],[2193,36,1747,43,"helpers_1"],[2193,45,1747,52],[2193,46,1747,53,"getItemAsync"],[2193,58,1747,65],[2193,60,1747,67],[2193,64,1747,71],[2193,65,1747,72,"userStorage"],[2193,76,1747,83],[2193,78,1747,85],[2193,82,1747,89],[2193,83,1747,90,"storageKey"],[2193,93,1747,100],[2193,96,1747,103],[2193,103,1747,110],[2193,104,1747,112],[2194,10,1748,16],[2194,14,1748,20],[2194,15,1748,21],[2194,19,1748,25],[2194,20,1748,26,"storage"],[2194,27,1748,33],[2194,28,1748,34,"isServer"],[2194,36,1748,42],[2194,40,1748,46,"Object"],[2194,46,1748,52],[2194,47,1748,53,"is"],[2194,49,1748,55],[2194,50,1748,56],[2194,54,1748,60],[2194,55,1748,61,"storage"],[2194,62,1748,68],[2194,64,1748,70],[2194,68,1748,74],[2194,69,1748,75,"userStorage"],[2194,80,1748,86],[2194,81,1748,87],[2194,85,1748,91],[2194,86,1748,92,"maybeUser"],[2194,95,1748,101],[2194,97,1748,103],[2195,12,1749,20],[2196,12,1750,20],[2197,12,1751,20],[2198,12,1752,20],[2199,12,1753,20,"maybeUser"],[2199,21,1753,29],[2199,24,1753,32],[2200,14,1753,34,"user"],[2200,18,1753,38],[2200,20,1753,40,"currentSession"],[2200,34,1753,54],[2200,35,1753,55,"user"],[2201,12,1753,60],[2201,13,1753,61],[2202,12,1754,20],[2202,18,1754,26],[2202,19,1754,27],[2202,20,1754,28],[2202,22,1754,30,"helpers_1"],[2202,31,1754,39],[2202,32,1754,40,"setItemAsync"],[2202,44,1754,52],[2202,46,1754,54],[2202,50,1754,58],[2202,51,1754,59,"userStorage"],[2202,62,1754,70],[2202,64,1754,72],[2202,68,1754,76],[2202,69,1754,77,"storageKey"],[2202,79,1754,87],[2202,82,1754,90],[2202,89,1754,97],[2202,91,1754,99,"maybeUser"],[2202,100,1754,108],[2202,101,1754,109],[2203,10,1755,16],[2204,10,1756,16,"currentSession"],[2204,24,1756,30],[2204,25,1756,31,"user"],[2204,29,1756,35],[2204,32,1756,38],[2204,33,1756,39,"_a"],[2204,35,1756,41],[2204,38,1756,44,"maybeUser"],[2204,47,1756,53],[2204,52,1756,58],[2204,56,1756,62],[2204,60,1756,66,"maybeUser"],[2204,69,1756,75],[2204,74,1756,80],[2204,79,1756,85],[2204,80,1756,86],[2204,83,1756,89],[2204,88,1756,94],[2204,89,1756,95],[2204,92,1756,98,"maybeUser"],[2204,101,1756,107],[2204,102,1756,108,"user"],[2204,106,1756,112],[2204,112,1756,118],[2204,116,1756,122],[2204,120,1756,126,"_a"],[2204,122,1756,128],[2204,127,1756,133],[2204,132,1756,138],[2204,133,1756,139],[2204,136,1756,142,"_a"],[2204,138,1756,144],[2204,141,1756,147],[2204,142,1756,148],[2204,143,1756,149],[2204,145,1756,151,"helpers_1"],[2204,154,1756,160],[2204,155,1756,161,"userNotAvailableProxy"],[2204,176,1756,182],[2204,178,1756,184],[2204,179,1756,185],[2205,8,1757,12],[2205,9,1757,13],[2205,15,1758,17],[2205,19,1758,21,"currentSession"],[2205,33,1758,35],[2205,37,1758,39],[2205,38,1758,40,"currentSession"],[2205,52,1758,54],[2205,53,1758,55,"user"],[2205,57,1758,59],[2205,59,1758,61],[2206,10,1759,16],[2207,10,1760,16],[2208,10,1761,16],[2208,14,1761,20],[2208,15,1761,21,"currentSession"],[2208,29,1761,35],[2208,30,1761,36,"user"],[2208,34,1761,40],[2208,36,1761,42],[2209,12,1762,20],[2210,12,1763,20],[2210,18,1763,26,"separateUser"],[2210,30,1763,38],[2210,33,1763,42],[2210,39,1763,48],[2210,40,1763,49],[2210,41,1763,50],[2210,43,1763,52,"helpers_1"],[2210,52,1763,61],[2210,53,1763,62,"getItemAsync"],[2210,65,1763,74],[2210,67,1763,76],[2210,71,1763,80],[2210,72,1763,81,"storage"],[2210,79,1763,88],[2210,81,1763,90],[2210,85,1763,94],[2210,86,1763,95,"storageKey"],[2210,96,1763,105],[2210,99,1763,108],[2210,106,1763,115],[2210,107,1763,117],[2211,12,1764,20],[2211,16,1764,24,"separateUser"],[2211,28,1764,36],[2211,33,1764,41,"separateUser"],[2211,45,1764,53],[2211,50,1764,58],[2211,54,1764,62],[2211,58,1764,66,"separateUser"],[2211,70,1764,78],[2211,75,1764,83],[2211,80,1764,88],[2211,81,1764,89],[2211,84,1764,92],[2211,89,1764,97],[2211,90,1764,98],[2211,93,1764,101,"separateUser"],[2211,105,1764,113],[2211,106,1764,114,"user"],[2211,110,1764,118],[2211,111,1764,119],[2211,113,1764,121],[2212,14,1765,24,"currentSession"],[2212,28,1765,38],[2212,29,1765,39,"user"],[2212,33,1765,43],[2212,36,1765,46,"separateUser"],[2212,48,1765,58],[2212,49,1765,59,"user"],[2212,53,1765,63],[2213,14,1766,24],[2213,20,1766,30],[2213,21,1766,31],[2213,22,1766,32],[2213,24,1766,34,"helpers_1"],[2213,33,1766,43],[2213,34,1766,44,"removeItemAsync"],[2213,49,1766,59],[2213,51,1766,61],[2213,55,1766,65],[2213,56,1766,66,"storage"],[2213,63,1766,73],[2213,65,1766,75],[2213,69,1766,79],[2213,70,1766,80,"storageKey"],[2213,80,1766,90],[2213,83,1766,93],[2213,90,1766,100],[2213,91,1766,101],[2214,14,1767,24],[2214,20,1767,30],[2214,21,1767,31],[2214,22,1767,32],[2214,24,1767,34,"helpers_1"],[2214,33,1767,43],[2214,34,1767,44,"setItemAsync"],[2214,46,1767,56],[2214,48,1767,58],[2214,52,1767,62],[2214,53,1767,63,"storage"],[2214,60,1767,70],[2214,62,1767,72],[2214,66,1767,76],[2214,67,1767,77,"storageKey"],[2214,77,1767,87],[2214,79,1767,89,"currentSession"],[2214,93,1767,103],[2214,94,1767,104],[2215,12,1768,20],[2215,13,1768,21],[2215,19,1769,25],[2216,14,1770,24,"currentSession"],[2216,28,1770,38],[2216,29,1770,39,"user"],[2216,33,1770,43],[2216,36,1770,46],[2216,37,1770,47],[2216,38,1770,48],[2216,40,1770,50,"helpers_1"],[2216,49,1770,59],[2216,50,1770,60,"userNotAvailableProxy"],[2216,71,1770,81],[2216,73,1770,83],[2216,74,1770,84],[2217,12,1771,20],[2218,10,1772,16],[2219,8,1773,12],[2220,8,1774,12],[2220,12,1774,16],[2220,13,1774,17,"_debug"],[2220,19,1774,23],[2220,20,1774,24,"debugName"],[2220,29,1774,33],[2220,31,1774,35],[2220,53,1774,57],[2220,55,1774,59,"currentSession"],[2220,69,1774,73],[2220,70,1774,74],[2221,8,1775,12],[2221,12,1775,16],[2221,13,1775,17],[2221,17,1775,21],[2221,18,1775,22,"_isValidSession"],[2221,33,1775,37],[2221,34,1775,38,"currentSession"],[2221,48,1775,52],[2221,49,1775,53],[2221,51,1775,55],[2222,10,1776,16],[2222,14,1776,20],[2222,15,1776,21,"_debug"],[2222,21,1776,27],[2222,22,1776,28,"debugName"],[2222,31,1776,37],[2222,33,1776,39],[2222,55,1776,61],[2222,56,1776,62],[2223,10,1777,16],[2223,14,1777,20,"currentSession"],[2223,28,1777,34],[2223,33,1777,39],[2223,37,1777,43],[2223,39,1777,45],[2224,12,1778,20],[2224,18,1778,26],[2224,22,1778,30],[2224,23,1778,31,"_removeSession"],[2224,37,1778,45],[2224,38,1778,46],[2224,39,1778,47],[2225,10,1779,16],[2226,10,1780,16],[2227,8,1781,12],[2228,8,1782,12],[2228,14,1782,18,"expiresWithMargin"],[2228,31,1782,35],[2228,34,1782,38],[2228,35,1782,39],[2228,36,1782,40,"_b"],[2228,38,1782,42],[2228,41,1782,45,"currentSession"],[2228,55,1782,59],[2228,56,1782,60,"expires_at"],[2228,66,1782,70],[2228,72,1782,76],[2228,76,1782,80],[2228,80,1782,84,"_b"],[2228,82,1782,86],[2228,87,1782,91],[2228,92,1782,96],[2228,93,1782,97],[2228,96,1782,100,"_b"],[2228,98,1782,102],[2228,101,1782,105,"Infinity"],[2228,109,1782,113],[2228,113,1782,117],[2228,117,1782,121],[2228,120,1782,124,"Date"],[2228,124,1782,128],[2228,125,1782,129,"now"],[2228,128,1782,132],[2228,129,1782,133],[2228,130,1782,134],[2228,133,1782,137,"constants_1"],[2228,144,1782,148],[2228,145,1782,149,"EXPIRY_MARGIN_MS"],[2228,161,1782,165],[2229,8,1783,12],[2229,12,1783,16],[2229,13,1783,17,"_debug"],[2229,19,1783,23],[2229,20,1783,24,"debugName"],[2229,29,1783,33],[2229,31,1783,35],[2229,45,1783,49,"expiresWithMargin"],[2229,62,1783,66],[2229,65,1783,69],[2229,67,1783,71],[2229,70,1783,74],[2229,76,1783,80],[2229,103,1783,107,"constants_1"],[2229,114,1783,118],[2229,115,1783,119,"EXPIRY_MARGIN_MS"],[2229,131,1783,135],[2229,134,1783,138],[2229,135,1783,139],[2230,8,1784,12],[2230,12,1784,16,"expiresWithMargin"],[2230,29,1784,33],[2230,31,1784,35],[2231,10,1785,16],[2231,14,1785,20],[2231,18,1785,24],[2231,19,1785,25,"autoRefreshToken"],[2231,35,1785,41],[2231,39,1785,45,"currentSession"],[2231,53,1785,59],[2231,54,1785,60,"refresh_token"],[2231,67,1785,73],[2231,69,1785,75],[2232,12,1786,20],[2232,18,1786,26],[2233,14,1786,28,"error"],[2234,12,1786,34],[2234,13,1786,35],[2234,16,1786,38],[2234,22,1786,44],[2234,26,1786,48],[2234,27,1786,49,"_callRefreshToken"],[2234,44,1786,66],[2234,45,1786,67,"currentSession"],[2234,59,1786,81],[2234,60,1786,82,"refresh_token"],[2234,73,1786,95],[2234,74,1786,96],[2235,12,1787,20],[2235,16,1787,24,"error"],[2235,21,1787,29],[2235,23,1787,31],[2236,14,1788,24,"console"],[2236,21,1788,31],[2236,22,1788,32,"error"],[2236,27,1788,37],[2236,28,1788,38,"error"],[2236,33,1788,43],[2236,34,1788,44],[2237,14,1789,24],[2237,18,1789,28],[2237,19,1789,29],[2237,20,1789,30],[2237,21,1789,31],[2237,23,1789,33,"errors_1"],[2237,31,1789,41],[2237,32,1789,42,"isAuthRetryableFetchError"],[2237,57,1789,67],[2237,59,1789,69,"error"],[2237,64,1789,74],[2237,65,1789,75],[2237,67,1789,77],[2238,16,1790,28],[2238,20,1790,32],[2238,21,1790,33,"_debug"],[2238,27,1790,39],[2238,28,1790,40,"debugName"],[2238,37,1790,49],[2238,39,1790,51],[2238,104,1790,116],[2238,106,1790,118,"error"],[2238,111,1790,123],[2238,112,1790,124],[2239,16,1791,28],[2239,22,1791,34],[2239,26,1791,38],[2239,27,1791,39,"_removeSession"],[2239,41,1791,53],[2239,42,1791,54],[2239,43,1791,55],[2240,14,1792,24],[2241,12,1793,20],[2242,10,1794,16],[2243,8,1795,12],[2243,9,1795,13],[2243,15,1796,17],[2243,19,1796,21,"currentSession"],[2243,33,1796,35],[2243,34,1796,36,"user"],[2243,38,1796,40],[2243,42,1797,16,"currentSession"],[2243,56,1797,30],[2243,57,1797,31,"user"],[2243,61,1797,35],[2243,62,1797,36,"__isUserNotAvailableProxy"],[2243,87,1797,61],[2243,92,1797,66],[2243,96,1797,70],[2243,98,1797,72],[2244,10,1798,16],[2245,10,1799,16],[2245,14,1799,20],[2246,12,1800,20],[2246,18,1800,26],[2247,14,1800,28,"data"],[2247,18,1800,32],[2248,14,1800,34,"error"],[2248,19,1800,39],[2248,21,1800,41,"userError"],[2249,12,1800,51],[2249,13,1800,52],[2249,16,1800,55],[2249,22,1800,61],[2249,26,1800,65],[2249,27,1800,66,"_getUser"],[2249,35,1800,74],[2249,36,1800,75,"currentSession"],[2249,50,1800,89],[2249,51,1800,90,"access_token"],[2249,63,1800,102],[2249,64,1800,103],[2250,12,1801,20],[2250,16,1801,24],[2250,17,1801,25,"userError"],[2250,26,1801,34],[2250,31,1801,39,"data"],[2250,35,1801,43],[2250,40,1801,48],[2250,44,1801,52],[2250,48,1801,56,"data"],[2250,52,1801,60],[2250,57,1801,65],[2250,62,1801,70],[2250,63,1801,71],[2250,66,1801,74],[2250,71,1801,79],[2250,72,1801,80],[2250,75,1801,83,"data"],[2250,79,1801,87],[2250,80,1801,88,"user"],[2250,84,1801,92],[2250,85,1801,93],[2250,87,1801,95],[2251,14,1802,24,"currentSession"],[2251,28,1802,38],[2251,29,1802,39,"user"],[2251,33,1802,43],[2251,36,1802,46,"data"],[2251,40,1802,50],[2251,41,1802,51,"user"],[2251,45,1802,55],[2252,14,1803,24],[2252,20,1803,30],[2252,24,1803,34],[2252,25,1803,35,"_saveSession"],[2252,37,1803,47],[2252,38,1803,48,"currentSession"],[2252,52,1803,62],[2252,53,1803,63],[2253,14,1804,24],[2253,20,1804,30],[2253,24,1804,34],[2253,25,1804,35,"_notifyAllSubscribers"],[2253,46,1804,56],[2253,47,1804,57],[2253,58,1804,68],[2253,60,1804,70,"currentSession"],[2253,74,1804,84],[2253,75,1804,85],[2254,12,1805,20],[2254,13,1805,21],[2254,19,1806,25],[2255,14,1807,24],[2255,18,1807,28],[2255,19,1807,29,"_debug"],[2255,25,1807,35],[2255,26,1807,36,"debugName"],[2255,35,1807,45],[2255,37,1807,47],[2255,95,1807,105],[2255,96,1807,106],[2256,12,1808,20],[2257,10,1809,16],[2257,11,1809,17],[2257,12,1810,16],[2257,19,1810,23,"getUserError"],[2257,31,1810,35],[2257,33,1810,37],[2258,12,1811,20,"console"],[2258,19,1811,27],[2258,20,1811,28,"error"],[2258,25,1811,33],[2258,26,1811,34],[2258,52,1811,60],[2258,54,1811,62,"getUserError"],[2258,66,1811,74],[2258,67,1811,75],[2259,12,1812,20],[2259,16,1812,24],[2259,17,1812,25,"_debug"],[2259,23,1812,31],[2259,24,1812,32,"debugName"],[2259,33,1812,41],[2259,35,1812,43],[2259,93,1812,101],[2259,95,1812,103,"getUserError"],[2259,107,1812,115],[2259,108,1812,116],[2260,10,1813,16],[2261,8,1814,12],[2261,9,1814,13],[2261,15,1815,17],[2262,10,1816,16],[2263,10,1817,16],[2264,10,1818,16],[2265,10,1819,16],[2265,16,1819,22],[2265,20,1819,26],[2265,21,1819,27,"_notifyAllSubscribers"],[2265,42,1819,48],[2265,43,1819,49],[2265,54,1819,60],[2265,56,1819,62,"currentSession"],[2265,70,1819,76],[2265,71,1819,77],[2266,8,1820,12],[2267,6,1821,8],[2267,7,1821,9],[2267,8,1822,8],[2267,15,1822,15,"err"],[2267,18,1822,18],[2267,20,1822,20],[2268,8,1823,12],[2268,12,1823,16],[2268,13,1823,17,"_debug"],[2268,19,1823,23],[2268,20,1823,24,"debugName"],[2268,29,1823,33],[2268,31,1823,35],[2268,38,1823,42],[2268,40,1823,44,"err"],[2268,43,1823,47],[2268,44,1823,48],[2269,8,1824,12,"console"],[2269,15,1824,19],[2269,16,1824,20,"error"],[2269,21,1824,25],[2269,22,1824,26,"err"],[2269,25,1824,29],[2269,26,1824,30],[2270,8,1825,12],[2271,6,1826,8],[2271,7,1826,9],[2271,16,1827,16],[2272,8,1828,12],[2272,12,1828,16],[2272,13,1828,17,"_debug"],[2272,19,1828,23],[2272,20,1828,24,"debugName"],[2272,29,1828,33],[2272,31,1828,35],[2272,36,1828,40],[2272,37,1828,41],[2273,6,1829,8],[2274,4,1830,4],[2275,4,1831,4],[2275,10,1831,10,"_callRefreshToken"],[2275,27,1831,27,"_callRefreshToken"],[2275,28,1831,28,"refreshToken"],[2275,40,1831,40],[2275,42,1831,42],[2276,6,1832,8],[2276,10,1832,12,"_a"],[2276,12,1832,14],[2276,14,1832,16,"_b"],[2276,16,1832,18],[2277,6,1833,8],[2277,10,1833,12],[2277,11,1833,13,"refreshToken"],[2277,23,1833,25],[2277,25,1833,27],[2278,8,1834,12],[2278,14,1834,18],[2278,18,1834,22,"errors_1"],[2278,26,1834,30],[2278,27,1834,31,"AuthSessionMissingError"],[2278,50,1834,54],[2278,51,1834,55],[2278,52,1834,56],[2279,6,1835,8],[2280,6,1836,8],[2281,6,1837,8],[2281,10,1837,12],[2281,14,1837,16],[2281,15,1837,17,"refreshingDeferred"],[2281,33,1837,35],[2281,35,1837,37],[2282,8,1838,12],[2282,15,1838,19],[2282,19,1838,23],[2282,20,1838,24,"refreshingDeferred"],[2282,38,1838,42],[2282,39,1838,43,"promise"],[2282,46,1838,50],[2283,6,1839,8],[2284,6,1840,8],[2284,12,1840,14,"debugName"],[2284,21,1840,23],[2284,24,1840,26],[2284,46,1840,48,"refreshToken"],[2284,58,1840,60],[2284,59,1840,61,"substring"],[2284,68,1840,70],[2284,69,1840,71],[2284,70,1840,72],[2284,72,1840,74],[2284,73,1840,75],[2284,74,1840,76],[2284,80,1840,82],[2285,6,1841,8],[2285,10,1841,12],[2285,11,1841,13,"_debug"],[2285,17,1841,19],[2285,18,1841,20,"debugName"],[2285,27,1841,29],[2285,29,1841,31],[2285,36,1841,38],[2285,37,1841,39],[2286,6,1842,8],[2286,10,1842,12],[2287,8,1843,12],[2287,12,1843,16],[2287,13,1843,17,"refreshingDeferred"],[2287,31,1843,35],[2287,34,1843,38],[2287,38,1843,42,"helpers_1"],[2287,47,1843,51],[2287,48,1843,52,"Deferred"],[2287,56,1843,60],[2287,57,1843,61],[2287,58,1843,62],[2288,8,1844,12],[2288,14,1844,18],[2289,10,1844,20,"data"],[2289,14,1844,24],[2290,10,1844,26,"error"],[2291,8,1844,32],[2291,9,1844,33],[2291,12,1844,36],[2291,18,1844,42],[2291,22,1844,46],[2291,23,1844,47,"_refreshAccessToken"],[2291,42,1844,66],[2291,43,1844,67,"refreshToken"],[2291,55,1844,79],[2291,56,1844,80],[2292,8,1845,12],[2292,12,1845,16,"error"],[2292,17,1845,21],[2292,19,1846,16],[2292,25,1846,22,"error"],[2292,30,1846,27],[2293,8,1847,12],[2293,12,1847,16],[2293,13,1847,17,"data"],[2293,17,1847,21],[2293,18,1847,22,"session"],[2293,25,1847,29],[2293,27,1848,16],[2293,33,1848,22],[2293,37,1848,26,"errors_1"],[2293,45,1848,34],[2293,46,1848,35,"AuthSessionMissingError"],[2293,69,1848,58],[2293,70,1848,59],[2293,71,1848,60],[2294,8,1849,12],[2294,14,1849,18],[2294,18,1849,22],[2294,19,1849,23,"_saveSession"],[2294,31,1849,35],[2294,32,1849,36,"data"],[2294,36,1849,40],[2294,37,1849,41,"session"],[2294,44,1849,48],[2294,45,1849,49],[2295,8,1850,12],[2295,14,1850,18],[2295,18,1850,22],[2295,19,1850,23,"_notifyAllSubscribers"],[2295,40,1850,44],[2295,41,1850,45],[2295,58,1850,62],[2295,60,1850,64,"data"],[2295,64,1850,68],[2295,65,1850,69,"session"],[2295,72,1850,76],[2295,73,1850,77],[2296,8,1851,12],[2296,14,1851,18,"result"],[2296,20,1851,24],[2296,23,1851,27],[2297,10,1851,29,"session"],[2297,17,1851,36],[2297,19,1851,38,"data"],[2297,23,1851,42],[2297,24,1851,43,"session"],[2297,31,1851,50],[2298,10,1851,52,"error"],[2298,15,1851,57],[2298,17,1851,59],[2299,8,1851,64],[2299,9,1851,65],[2300,8,1852,12],[2300,12,1852,16],[2300,13,1852,17,"refreshingDeferred"],[2300,31,1852,35],[2300,32,1852,36,"resolve"],[2300,39,1852,43],[2300,40,1852,44,"result"],[2300,46,1852,50],[2300,47,1852,51],[2301,8,1853,12],[2301,15,1853,19,"result"],[2301,21,1853,25],[2302,6,1854,8],[2302,7,1854,9],[2302,8,1855,8],[2302,15,1855,15,"error"],[2302,20,1855,20],[2302,22,1855,22],[2303,8,1856,12],[2303,12,1856,16],[2303,13,1856,17,"_debug"],[2303,19,1856,23],[2303,20,1856,24,"debugName"],[2303,29,1856,33],[2303,31,1856,35],[2303,38,1856,42],[2303,40,1856,44,"error"],[2303,45,1856,49],[2303,46,1856,50],[2304,8,1857,12],[2304,12,1857,16],[2304,13,1857,17],[2304,14,1857,18],[2304,16,1857,20,"errors_1"],[2304,24,1857,28],[2304,25,1857,29,"isAuthError"],[2304,36,1857,40],[2304,38,1857,42,"error"],[2304,43,1857,47],[2304,44,1857,48],[2304,46,1857,50],[2305,10,1858,16],[2305,16,1858,22,"result"],[2305,22,1858,28],[2305,25,1858,31],[2306,12,1858,33,"session"],[2306,19,1858,40],[2306,21,1858,42],[2306,25,1858,46],[2307,12,1858,48,"error"],[2308,10,1858,54],[2308,11,1858,55],[2309,10,1859,16],[2309,14,1859,20],[2309,15,1859,21],[2309,16,1859,22],[2309,17,1859,23],[2309,19,1859,25,"errors_1"],[2309,27,1859,33],[2309,28,1859,34,"isAuthRetryableFetchError"],[2309,53,1859,59],[2309,55,1859,61,"error"],[2309,60,1859,66],[2309,61,1859,67],[2309,63,1859,69],[2310,12,1860,20],[2310,18,1860,26],[2310,22,1860,30],[2310,23,1860,31,"_removeSession"],[2310,37,1860,45],[2310,38,1860,46],[2310,39,1860,47],[2311,10,1861,16],[2312,10,1862,16],[2312,11,1862,17,"_a"],[2312,13,1862,19],[2312,16,1862,22],[2312,20,1862,26],[2312,21,1862,27,"refreshingDeferred"],[2312,39,1862,45],[2312,45,1862,51],[2312,49,1862,55],[2312,53,1862,59,"_a"],[2312,55,1862,61],[2312,60,1862,66],[2312,65,1862,71],[2312,66,1862,72],[2312,69,1862,75],[2312,74,1862,80],[2312,75,1862,81],[2312,78,1862,84,"_a"],[2312,80,1862,86],[2312,81,1862,87,"resolve"],[2312,88,1862,94],[2312,89,1862,95,"result"],[2312,95,1862,101],[2312,96,1862,102],[2313,10,1863,16],[2313,17,1863,23,"result"],[2313,23,1863,29],[2314,8,1864,12],[2315,8,1865,12],[2315,9,1865,13,"_b"],[2315,11,1865,15],[2315,14,1865,18],[2315,18,1865,22],[2315,19,1865,23,"refreshingDeferred"],[2315,37,1865,41],[2315,43,1865,47],[2315,47,1865,51],[2315,51,1865,55,"_b"],[2315,53,1865,57],[2315,58,1865,62],[2315,63,1865,67],[2315,64,1865,68],[2315,67,1865,71],[2315,72,1865,76],[2315,73,1865,77],[2315,76,1865,80,"_b"],[2315,78,1865,82],[2315,79,1865,83,"reject"],[2315,85,1865,89],[2315,86,1865,90,"error"],[2315,91,1865,95],[2315,92,1865,96],[2316,8,1866,12],[2316,14,1866,18,"error"],[2316,19,1866,23],[2317,6,1867,8],[2317,7,1867,9],[2317,16,1868,16],[2318,8,1869,12],[2318,12,1869,16],[2318,13,1869,17,"refreshingDeferred"],[2318,31,1869,35],[2318,34,1869,38],[2318,38,1869,42],[2319,8,1870,12],[2319,12,1870,16],[2319,13,1870,17,"_debug"],[2319,19,1870,23],[2319,20,1870,24,"debugName"],[2319,29,1870,33],[2319,31,1870,35],[2319,36,1870,40],[2319,37,1870,41],[2320,6,1871,8],[2321,4,1872,4],[2322,4,1873,4],[2322,10,1873,10,"_notifyAllSubscribers"],[2322,31,1873,31,"_notifyAllSubscribers"],[2322,32,1873,32,"event"],[2322,37,1873,37],[2322,39,1873,39,"session"],[2322,46,1873,46],[2322,48,1873,48,"broadcast"],[2322,57,1873,57],[2322,60,1873,60],[2322,64,1873,64],[2322,66,1873,66],[2323,6,1874,8],[2323,12,1874,14,"debugName"],[2323,21,1874,23],[2323,24,1874,26],[2323,50,1874,52,"event"],[2323,55,1874,57],[2323,58,1874,60],[2324,6,1875,8],[2324,10,1875,12],[2324,11,1875,13,"_debug"],[2324,17,1875,19],[2324,18,1875,20,"debugName"],[2324,27,1875,29],[2324,29,1875,31],[2324,36,1875,38],[2324,38,1875,40,"session"],[2324,45,1875,47],[2324,47,1875,49],[2324,62,1875,64,"broadcast"],[2324,71,1875,73],[2324,73,1875,75],[2324,74,1875,76],[2325,6,1876,8],[2325,10,1876,12],[2326,8,1877,12],[2326,12,1877,16],[2326,16,1877,20],[2326,17,1877,21,"broadcastChannel"],[2326,33,1877,37],[2326,37,1877,41,"broadcast"],[2326,46,1877,50],[2326,48,1877,52],[2327,10,1878,16],[2327,14,1878,20],[2327,15,1878,21,"broadcastChannel"],[2327,31,1878,37],[2327,32,1878,38,"postMessage"],[2327,43,1878,49],[2327,44,1878,50],[2328,12,1878,52,"event"],[2328,17,1878,57],[2329,12,1878,59,"session"],[2330,10,1878,67],[2330,11,1878,68],[2330,12,1878,69],[2331,8,1879,12],[2332,8,1880,12],[2332,14,1880,18,"errors"],[2332,20,1880,24],[2332,23,1880,27],[2332,25,1880,29],[2333,8,1881,12],[2333,14,1881,18,"promises"],[2333,22,1881,26],[2333,25,1881,29,"Array"],[2333,30,1881,34],[2333,31,1881,35,"from"],[2333,35,1881,39],[2333,36,1881,40],[2333,40,1881,44],[2333,41,1881,45,"stateChangeEmitters"],[2333,60,1881,64],[2333,61,1881,65,"values"],[2333,67,1881,71],[2333,68,1881,72],[2333,69,1881,73],[2333,70,1881,74],[2333,71,1881,75,"map"],[2333,74,1881,78],[2333,75,1881,79],[2333,81,1881,86,"x"],[2333,82,1881,87],[2333,86,1881,92],[2334,10,1882,16],[2334,14,1882,20],[2335,12,1883,20],[2335,18,1883,26,"x"],[2335,19,1883,27],[2335,20,1883,28,"callback"],[2335,28,1883,36],[2335,29,1883,37,"event"],[2335,34,1883,42],[2335,36,1883,44,"session"],[2335,43,1883,51],[2335,44,1883,52],[2336,10,1884,16],[2336,11,1884,17],[2336,12,1885,16],[2336,19,1885,23,"e"],[2336,20,1885,24],[2336,22,1885,26],[2337,12,1886,20,"errors"],[2337,18,1886,26],[2337,19,1886,27,"push"],[2337,23,1886,31],[2337,24,1886,32,"e"],[2337,25,1886,33],[2337,26,1886,34],[2338,10,1887,16],[2339,8,1888,12],[2339,9,1888,13],[2339,10,1888,14],[2340,8,1889,12],[2340,14,1889,18,"Promise"],[2340,21,1889,25],[2340,22,1889,26,"all"],[2340,25,1889,29],[2340,26,1889,30,"promises"],[2340,34,1889,38],[2340,35,1889,39],[2341,8,1890,12],[2341,12,1890,16,"errors"],[2341,18,1890,22],[2341,19,1890,23,"length"],[2341,25,1890,29],[2341,28,1890,32],[2341,29,1890,33],[2341,31,1890,35],[2342,10,1891,16],[2342,15,1891,21],[2342,19,1891,25,"i"],[2342,20,1891,26],[2342,23,1891,29],[2342,24,1891,30],[2342,26,1891,32,"i"],[2342,27,1891,33],[2342,30,1891,36,"errors"],[2342,36,1891,42],[2342,37,1891,43,"length"],[2342,43,1891,49],[2342,45,1891,51,"i"],[2342,46,1891,52],[2342,50,1891,56],[2342,51,1891,57],[2342,53,1891,59],[2343,12,1892,20,"console"],[2343,19,1892,27],[2343,20,1892,28,"error"],[2343,25,1892,33],[2343,26,1892,34,"errors"],[2343,32,1892,40],[2343,33,1892,41,"i"],[2343,34,1892,42],[2343,35,1892,43],[2343,36,1892,44],[2344,10,1893,16],[2345,10,1894,16],[2345,16,1894,22,"errors"],[2345,22,1894,28],[2345,23,1894,29],[2345,24,1894,30],[2345,25,1894,31],[2346,8,1895,12],[2347,6,1896,8],[2347,7,1896,9],[2347,16,1897,16],[2348,8,1898,12],[2348,12,1898,16],[2348,13,1898,17,"_debug"],[2348,19,1898,23],[2348,20,1898,24,"debugName"],[2348,29,1898,33],[2348,31,1898,35],[2348,36,1898,40],[2348,37,1898,41],[2349,6,1899,8],[2350,4,1900,4],[2351,4,1901,4],[2352,0,1902,0],[2353,0,1903,0],[2354,0,1904,0],[2355,4,1905,4],[2355,10,1905,10,"_saveSession"],[2355,22,1905,22,"_saveSession"],[2355,23,1905,23,"session"],[2355,30,1905,30],[2355,32,1905,32],[2356,6,1906,8],[2356,10,1906,12],[2356,11,1906,13,"_debug"],[2356,17,1906,19],[2356,18,1906,20],[2356,35,1906,37],[2356,37,1906,39,"session"],[2356,44,1906,46],[2356,45,1906,47],[2357,6,1907,8],[2358,6,1908,8],[2359,6,1909,8],[2359,10,1909,12],[2359,11,1909,13,"suppressGetSessionWarning"],[2359,36,1909,38],[2359,39,1909,41],[2359,43,1909,45],[2360,6,1910,8],[2361,6,1911,8],[2361,12,1911,14,"sessionToProcess"],[2361,28,1911,30],[2361,31,1911,33,"Object"],[2361,37,1911,39],[2361,38,1911,40,"assign"],[2361,44,1911,46],[2361,45,1911,47],[2361,46,1911,48],[2361,47,1911,49],[2361,49,1911,51,"session"],[2361,56,1911,58],[2361,57,1911,59],[2362,6,1912,8],[2362,12,1912,14,"userIsProxy"],[2362,23,1912,25],[2362,26,1912,28,"sessionToProcess"],[2362,42,1912,44],[2362,43,1912,45,"user"],[2362,47,1912,49],[2362,51,1912,53,"sessionToProcess"],[2362,67,1912,69],[2362,68,1912,70,"user"],[2362,72,1912,74],[2362,73,1912,75,"__isUserNotAvailableProxy"],[2362,98,1912,100],[2362,103,1912,105],[2362,107,1912,109],[2363,6,1913,8],[2363,10,1913,12],[2363,14,1913,16],[2363,15,1913,17,"userStorage"],[2363,26,1913,28],[2363,28,1913,30],[2364,8,1914,12],[2364,12,1914,16],[2364,13,1914,17,"userIsProxy"],[2364,24,1914,28],[2364,28,1914,32,"sessionToProcess"],[2364,44,1914,48],[2364,45,1914,49,"user"],[2364,49,1914,53],[2364,51,1914,55],[2365,10,1915,16],[2366,10,1916,16],[2366,16,1916,22],[2366,17,1916,23],[2366,18,1916,24],[2366,20,1916,26,"helpers_1"],[2366,29,1916,35],[2366,30,1916,36,"setItemAsync"],[2366,42,1916,48],[2366,44,1916,50],[2366,48,1916,54],[2366,49,1916,55,"userStorage"],[2366,60,1916,66],[2366,62,1916,68],[2366,66,1916,72],[2366,67,1916,73,"storageKey"],[2366,77,1916,83],[2366,80,1916,86],[2366,87,1916,93],[2366,89,1916,95],[2367,12,1917,20,"user"],[2367,16,1917,24],[2367,18,1917,26,"sessionToProcess"],[2367,34,1917,42],[2367,35,1917,43,"user"],[2368,10,1918,16],[2368,11,1918,17],[2368,12,1918,18],[2369,8,1919,12],[2369,9,1919,13],[2369,15,1920,17],[2369,19,1920,21,"userIsProxy"],[2369,30,1920,32],[2369,32,1920,34],[2370,10,1921,16],[2371,10,1922,16],[2372,10,1923,16],[2373,10,1924,16],[2374,8,1924,16],[2375,8,1926,12],[2376,8,1927,12],[2377,8,1928,12],[2377,14,1928,18,"mainSessionData"],[2377,29,1928,33],[2377,32,1928,36,"Object"],[2377,38,1928,42],[2377,39,1928,43,"assign"],[2377,45,1928,49],[2377,46,1928,50],[2377,47,1928,51],[2377,48,1928,52],[2377,50,1928,54,"sessionToProcess"],[2377,66,1928,70],[2377,67,1928,71],[2378,8,1929,12],[2378,15,1929,19,"mainSessionData"],[2378,30,1929,34],[2378,31,1929,35,"user"],[2378,35,1929,39],[2378,36,1929,40],[2378,37,1929,41],[2379,8,1930,12],[2379,14,1930,18,"clonedMainSessionData"],[2379,35,1930,39],[2379,38,1930,42],[2379,39,1930,43],[2379,40,1930,44],[2379,42,1930,46,"helpers_1"],[2379,51,1930,55],[2379,52,1930,56,"deepClone"],[2379,61,1930,65],[2379,63,1930,67,"mainSessionData"],[2379,78,1930,82],[2379,79,1930,83],[2380,8,1931,12],[2380,14,1931,18],[2380,15,1931,19],[2380,16,1931,20],[2380,18,1931,22,"helpers_1"],[2380,27,1931,31],[2380,28,1931,32,"setItemAsync"],[2380,40,1931,44],[2380,42,1931,46],[2380,46,1931,50],[2380,47,1931,51,"storage"],[2380,54,1931,58],[2380,56,1931,60],[2380,60,1931,64],[2380,61,1931,65,"storageKey"],[2380,71,1931,75],[2380,73,1931,77,"clonedMainSessionData"],[2380,94,1931,98],[2380,95,1931,99],[2381,6,1932,8],[2381,7,1932,9],[2381,13,1933,13],[2382,8,1934,12],[2383,8,1935,12],[2384,8,1936,12],[2385,8,1937,12],[2385,14,1937,18,"clonedSession"],[2385,27,1937,31],[2385,30,1937,34],[2385,31,1937,35],[2385,32,1937,36],[2385,34,1937,38,"helpers_1"],[2385,43,1937,47],[2385,44,1937,48,"deepClone"],[2385,53,1937,57],[2385,55,1937,59,"sessionToProcess"],[2385,71,1937,75],[2385,72,1937,76],[2385,73,1937,77],[2385,74,1937,78],[2386,8,1938,12],[2386,14,1938,18],[2386,15,1938,19],[2386,16,1938,20],[2386,18,1938,22,"helpers_1"],[2386,27,1938,31],[2386,28,1938,32,"setItemAsync"],[2386,40,1938,44],[2386,42,1938,46],[2386,46,1938,50],[2386,47,1938,51,"storage"],[2386,54,1938,58],[2386,56,1938,60],[2386,60,1938,64],[2386,61,1938,65,"storageKey"],[2386,71,1938,75],[2386,73,1938,77,"clonedSession"],[2386,86,1938,90],[2386,87,1938,91],[2387,6,1939,8],[2388,4,1940,4],[2389,4,1941,4],[2389,10,1941,10,"_removeSession"],[2389,24,1941,24,"_removeSession"],[2389,25,1941,24],[2389,27,1941,27],[2390,6,1942,8],[2390,10,1942,12],[2390,11,1942,13,"_debug"],[2390,17,1942,19],[2390,18,1942,20],[2390,37,1942,39],[2390,38,1942,40],[2391,6,1943,8],[2391,12,1943,14],[2391,13,1943,15],[2391,14,1943,16],[2391,16,1943,18,"helpers_1"],[2391,25,1943,27],[2391,26,1943,28,"removeItemAsync"],[2391,41,1943,43],[2391,43,1943,45],[2391,47,1943,49],[2391,48,1943,50,"storage"],[2391,55,1943,57],[2391,57,1943,59],[2391,61,1943,63],[2391,62,1943,64,"storageKey"],[2391,72,1943,74],[2391,73,1943,75],[2392,6,1944,8],[2392,12,1944,14],[2392,13,1944,15],[2392,14,1944,16],[2392,16,1944,18,"helpers_1"],[2392,25,1944,27],[2392,26,1944,28,"removeItemAsync"],[2392,41,1944,43],[2392,43,1944,45],[2392,47,1944,49],[2392,48,1944,50,"storage"],[2392,55,1944,57],[2392,57,1944,59],[2392,61,1944,63],[2392,62,1944,64,"storageKey"],[2392,72,1944,74],[2392,75,1944,77],[2392,91,1944,93],[2392,92,1944,94],[2393,6,1945,8],[2393,12,1945,14],[2393,13,1945,15],[2393,14,1945,16],[2393,16,1945,18,"helpers_1"],[2393,25,1945,27],[2393,26,1945,28,"removeItemAsync"],[2393,41,1945,43],[2393,43,1945,45],[2393,47,1945,49],[2393,48,1945,50,"storage"],[2393,55,1945,57],[2393,57,1945,59],[2393,61,1945,63],[2393,62,1945,64,"storageKey"],[2393,72,1945,74],[2393,75,1945,77],[2393,82,1945,84],[2393,83,1945,85],[2394,6,1946,8],[2394,10,1946,12],[2394,14,1946,16],[2394,15,1946,17,"userStorage"],[2394,26,1946,28],[2394,28,1946,30],[2395,8,1947,12],[2395,14,1947,18],[2395,15,1947,19],[2395,16,1947,20],[2395,18,1947,22,"helpers_1"],[2395,27,1947,31],[2395,28,1947,32,"removeItemAsync"],[2395,43,1947,47],[2395,45,1947,49],[2395,49,1947,53],[2395,50,1947,54,"userStorage"],[2395,61,1947,65],[2395,63,1947,67],[2395,67,1947,71],[2395,68,1947,72,"storageKey"],[2395,78,1947,82],[2395,81,1947,85],[2395,88,1947,92],[2395,89,1947,93],[2396,6,1948,8],[2397,6,1949,8],[2397,12,1949,14],[2397,16,1949,18],[2397,17,1949,19,"_notifyAllSubscribers"],[2397,38,1949,40],[2397,39,1949,41],[2397,51,1949,53],[2397,53,1949,55],[2397,57,1949,59],[2397,58,1949,60],[2398,4,1950,4],[2399,4,1951,4],[2400,0,1952,0],[2401,0,1953,0],[2402,0,1954,0],[2403,0,1955,0],[2404,0,1956,0],[2405,4,1957,4,"_removeVisibilityChangedCallback"],[2405,36,1957,36,"_removeVisibilityChangedCallback"],[2405,37,1957,36],[2405,39,1957,39],[2406,6,1958,8],[2406,10,1958,12],[2406,11,1958,13,"_debug"],[2406,17,1958,19],[2406,18,1958,20],[2406,55,1958,57],[2406,56,1958,58],[2407,6,1959,8],[2407,12,1959,14,"callback"],[2407,20,1959,22],[2407,23,1959,25],[2407,27,1959,29],[2407,28,1959,30,"visibilityChangedCallback"],[2407,53,1959,55],[2408,6,1960,8],[2408,10,1960,12],[2408,11,1960,13,"visibilityChangedCallback"],[2408,36,1960,38],[2408,39,1960,41],[2408,43,1960,45],[2409,6,1961,8],[2409,10,1961,12],[2410,8,1962,12],[2410,12,1962,16,"callback"],[2410,20,1962,24],[2410,24,1962,28],[2410,25,1962,29],[2410,26,1962,30],[2410,28,1962,32,"helpers_1"],[2410,37,1962,41],[2410,38,1962,42,"isBrowser"],[2410,47,1962,51],[2410,49,1962,53],[2410,50,1962,54],[2410,55,1962,59,"window"],[2410,61,1962,65],[2410,66,1962,70],[2410,70,1962,74],[2410,74,1962,78,"window"],[2410,80,1962,84],[2410,85,1962,89],[2410,90,1962,94],[2410,91,1962,95],[2410,94,1962,98],[2410,99,1962,103],[2410,100,1962,104],[2410,103,1962,107,"window"],[2410,109,1962,113],[2410,110,1962,114,"removeEventListener"],[2410,129,1962,133],[2410,130,1962,134],[2410,132,1962,136],[2411,10,1963,16,"window"],[2411,16,1963,22],[2411,17,1963,23,"removeEventListener"],[2411,36,1963,42],[2411,37,1963,43],[2411,55,1963,61],[2411,57,1963,63,"callback"],[2411,65,1963,71],[2411,66,1963,72],[2412,8,1964,12],[2413,6,1965,8],[2413,7,1965,9],[2413,8,1966,8],[2413,15,1966,15,"e"],[2413,16,1966,16],[2413,18,1966,18],[2414,8,1967,12,"console"],[2414,15,1967,19],[2414,16,1967,20,"error"],[2414,21,1967,25],[2414,22,1967,26],[2414,65,1967,69],[2414,67,1967,71,"e"],[2414,68,1967,72],[2414,69,1967,73],[2415,6,1968,8],[2416,4,1969,4],[2417,4,1970,4],[2418,0,1971,0],[2419,0,1972,0],[2420,0,1973,0],[2421,4,1974,4],[2421,10,1974,10,"_startAutoRefresh"],[2421,27,1974,27,"_startAutoRefresh"],[2421,28,1974,27],[2421,30,1974,30],[2422,6,1975,8],[2422,12,1975,14],[2422,16,1975,18],[2422,17,1975,19,"_stopAutoRefresh"],[2422,33,1975,35],[2422,34,1975,36],[2422,35,1975,37],[2423,6,1976,8],[2423,10,1976,12],[2423,11,1976,13,"_debug"],[2423,17,1976,19],[2423,18,1976,20],[2423,40,1976,42],[2423,41,1976,43],[2424,6,1977,8],[2424,12,1977,14,"ticker"],[2424,18,1977,20],[2424,21,1977,23,"setInterval"],[2424,32,1977,34],[2424,33,1977,35],[2424,39,1977,41],[2424,43,1977,45],[2424,44,1977,46,"_autoRefreshTokenTick"],[2424,65,1977,67],[2424,66,1977,68],[2424,67,1977,69],[2424,69,1977,71,"constants_1"],[2424,80,1977,82],[2424,81,1977,83,"AUTO_REFRESH_TICK_DURATION_MS"],[2424,110,1977,112],[2424,111,1977,113],[2425,6,1978,8],[2425,10,1978,12],[2425,11,1978,13,"autoRefreshTicker"],[2425,28,1978,30],[2425,31,1978,33,"ticker"],[2425,37,1978,39],[2426,6,1979,8],[2426,10,1979,12,"ticker"],[2426,16,1979,18],[2426,20,1979,22],[2426,27,1979,29,"ticker"],[2426,33,1979,35],[2426,38,1979,40],[2426,46,1979,48],[2426,50,1979,52],[2426,57,1979,59,"ticker"],[2426,63,1979,65],[2426,64,1979,66,"unref"],[2426,69,1979,71],[2426,74,1979,76],[2426,84,1979,86],[2426,86,1979,88],[2427,8,1980,12],[2428,8,1981,12],[2429,8,1982,12],[2430,8,1983,12],[2431,8,1984,12],[2432,8,1985,12],[2433,8,1986,12,"ticker"],[2433,14,1986,18],[2433,15,1986,19,"unref"],[2433,20,1986,24],[2433,21,1986,25],[2433,22,1986,26],[2434,8,1987,12],[2435,6,1988,8],[2435,7,1988,9],[2435,13,1989,13],[2435,17,1989,17],[2435,24,1989,24,"Deno"],[2435,28,1989,28],[2435,33,1989,33],[2435,44,1989,44],[2435,48,1989,48],[2435,55,1989,55,"Deno"],[2435,59,1989,59],[2435,60,1989,60,"unrefTimer"],[2435,70,1989,70],[2435,75,1989,75],[2435,85,1989,85],[2435,87,1989,87],[2436,8,1990,12],[2437,8,1991,12],[2438,8,1992,12],[2439,8,1993,12,"Deno"],[2439,12,1993,16],[2439,13,1993,17,"unrefTimer"],[2439,23,1993,27],[2439,24,1993,28,"ticker"],[2439,30,1993,34],[2439,31,1993,35],[2440,6,1994,8],[2441,6,1995,8],[2442,6,1996,8],[2443,6,1997,8],[2444,6,1998,8,"setTimeout"],[2444,16,1998,18],[2444,17,1998,19],[2444,29,1998,31],[2445,8,1999,12],[2445,14,1999,18],[2445,18,1999,22],[2445,19,1999,23,"initializePromise"],[2445,36,1999,40],[2446,8,2000,12],[2446,14,2000,18],[2446,18,2000,22],[2446,19,2000,23,"_autoRefreshTokenTick"],[2446,40,2000,44],[2446,41,2000,45],[2446,42,2000,46],[2447,6,2001,8],[2447,7,2001,9],[2447,9,2001,11],[2447,10,2001,12],[2447,11,2001,13],[2448,4,2002,4],[2449,4,2003,4],[2450,0,2004,0],[2451,0,2005,0],[2452,0,2006,0],[2453,4,2007,4],[2453,10,2007,10,"_stopAutoRefresh"],[2453,26,2007,26,"_stopAutoRefresh"],[2453,27,2007,26],[2453,29,2007,29],[2454,6,2008,8],[2454,10,2008,12],[2454,11,2008,13,"_debug"],[2454,17,2008,19],[2454,18,2008,20],[2454,39,2008,41],[2454,40,2008,42],[2455,6,2009,8],[2455,12,2009,14,"ticker"],[2455,18,2009,20],[2455,21,2009,23],[2455,25,2009,27],[2455,26,2009,28,"autoRefreshTicker"],[2455,43,2009,45],[2456,6,2010,8],[2456,10,2010,12],[2456,11,2010,13,"autoRefreshTicker"],[2456,28,2010,30],[2456,31,2010,33],[2456,35,2010,37],[2457,6,2011,8],[2457,10,2011,12,"ticker"],[2457,16,2011,18],[2457,18,2011,20],[2458,8,2012,12,"clearInterval"],[2458,21,2012,25],[2458,22,2012,26,"ticker"],[2458,28,2012,32],[2458,29,2012,33],[2459,6,2013,8],[2460,4,2014,4],[2461,4,2015,4],[2462,0,2016,0],[2463,0,2017,0],[2464,0,2018,0],[2465,0,2019,0],[2466,0,2020,0],[2467,0,2021,0],[2468,0,2022,0],[2469,0,2023,0],[2470,0,2024,0],[2471,0,2025,0],[2472,0,2026,0],[2473,0,2027,0],[2474,0,2028,0],[2475,0,2029,0],[2476,0,2030,0],[2477,0,2031,0],[2478,0,2032,0],[2479,0,2033,0],[2480,0,2034,0],[2481,0,2035,0],[2482,0,2036,0],[2483,4,2037,4],[2483,10,2037,10,"startAutoRefresh"],[2483,26,2037,26,"startAutoRefresh"],[2483,27,2037,26],[2483,29,2037,29],[2484,6,2038,8],[2484,10,2038,12],[2484,11,2038,13,"_removeVisibilityChangedCallback"],[2484,43,2038,45],[2484,44,2038,46],[2484,45,2038,47],[2485,6,2039,8],[2485,12,2039,14],[2485,16,2039,18],[2485,17,2039,19,"_startAutoRefresh"],[2485,34,2039,36],[2485,35,2039,37],[2485,36,2039,38],[2486,4,2040,4],[2487,4,2041,4],[2488,0,2042,0],[2489,0,2043,0],[2490,0,2044,0],[2491,0,2045,0],[2492,0,2046,0],[2493,0,2047,0],[2494,0,2048,0],[2495,4,2049,4],[2495,10,2049,10,"stopAutoRefresh"],[2495,25,2049,25,"stopAutoRefresh"],[2495,26,2049,25],[2495,28,2049,28],[2496,6,2050,8],[2496,10,2050,12],[2496,11,2050,13,"_removeVisibilityChangedCallback"],[2496,43,2050,45],[2496,44,2050,46],[2496,45,2050,47],[2497,6,2051,8],[2497,12,2051,14],[2497,16,2051,18],[2497,17,2051,19,"_stopAutoRefresh"],[2497,33,2051,35],[2497,34,2051,36],[2497,35,2051,37],[2498,4,2052,4],[2499,4,2053,4],[2500,0,2054,0],[2501,0,2055,0],[2502,4,2056,4],[2502,10,2056,10,"_autoRefreshTokenTick"],[2502,31,2056,31,"_autoRefreshTokenTick"],[2502,32,2056,31],[2502,34,2056,34],[2503,6,2057,8],[2503,10,2057,12],[2503,11,2057,13,"_debug"],[2503,17,2057,19],[2503,18,2057,20],[2503,44,2057,46],[2503,46,2057,48],[2503,53,2057,55],[2503,54,2057,56],[2504,6,2058,8],[2504,10,2058,12],[2505,8,2059,12],[2505,14,2059,18],[2505,18,2059,22],[2505,19,2059,23,"_acquireLock"],[2505,31,2059,35],[2505,32,2059,36],[2505,33,2059,37],[2505,35,2059,39],[2505,47,2059,51],[2506,10,2060,16],[2506,14,2060,20],[2507,12,2061,20],[2507,18,2061,26,"now"],[2507,21,2061,29],[2507,24,2061,32,"Date"],[2507,28,2061,36],[2507,29,2061,37,"now"],[2507,32,2061,40],[2507,33,2061,41],[2507,34,2061,42],[2508,12,2062,20],[2508,16,2062,24],[2509,14,2063,24],[2509,21,2063,31],[2509,27,2063,37],[2509,31,2063,41],[2509,32,2063,42,"_useSession"],[2509,43,2063,53],[2509,44,2063,54],[2509,50,2063,61,"result"],[2509,56,2063,67],[2509,60,2063,72],[2510,16,2064,28],[2510,22,2064,34],[2511,18,2064,36,"data"],[2511,22,2064,40],[2511,24,2064,42],[2512,20,2064,44,"session"],[2513,18,2064,52],[2514,16,2064,55],[2514,17,2064,56],[2514,20,2064,59,"result"],[2514,26,2064,65],[2515,16,2065,28],[2515,20,2065,32],[2515,21,2065,33,"session"],[2515,28,2065,40],[2515,32,2065,44],[2515,33,2065,45,"session"],[2515,40,2065,52],[2515,41,2065,53,"refresh_token"],[2515,54,2065,66],[2515,58,2065,70],[2515,59,2065,71,"session"],[2515,66,2065,78],[2515,67,2065,79,"expires_at"],[2515,77,2065,89],[2515,79,2065,91],[2516,18,2066,32],[2516,22,2066,36],[2516,23,2066,37,"_debug"],[2516,29,2066,43],[2516,30,2066,44],[2516,56,2066,70],[2516,58,2066,72],[2516,70,2066,84],[2516,71,2066,85],[2517,18,2067,32],[2518,16,2068,28],[2519,16,2069,28],[2520,16,2070,28],[2520,22,2070,34,"expiresInTicks"],[2520,36,2070,48],[2520,39,2070,51,"Math"],[2520,43,2070,55],[2520,44,2070,56,"floor"],[2520,49,2070,61],[2520,50,2070,62],[2520,51,2070,63,"session"],[2520,58,2070,70],[2520,59,2070,71,"expires_at"],[2520,69,2070,81],[2520,72,2070,84],[2520,76,2070,88],[2520,79,2070,91,"now"],[2520,82,2070,94],[2520,86,2070,98,"constants_1"],[2520,97,2070,109],[2520,98,2070,110,"AUTO_REFRESH_TICK_DURATION_MS"],[2520,127,2070,139],[2520,128,2070,140],[2521,16,2071,28],[2521,20,2071,32],[2521,21,2071,33,"_debug"],[2521,27,2071,39],[2521,28,2071,40],[2521,54,2071,66],[2521,56,2071,68],[2521,83,2071,95,"expiresInTicks"],[2521,97,2071,109],[2521,121,2071,133,"constants_1"],[2521,132,2071,144],[2521,133,2071,145,"AUTO_REFRESH_TICK_DURATION_MS"],[2521,162,2071,174],[2521,190,2071,202,"constants_1"],[2521,201,2071,213],[2521,202,2071,214,"AUTO_REFRESH_TICK_THRESHOLD"],[2521,229,2071,241],[2521,237,2071,249],[2521,238,2071,250],[2522,16,2072,28],[2522,20,2072,32,"expiresInTicks"],[2522,34,2072,46],[2522,38,2072,50,"constants_1"],[2522,49,2072,61],[2522,50,2072,62,"AUTO_REFRESH_TICK_THRESHOLD"],[2522,77,2072,89],[2522,79,2072,91],[2523,18,2073,32],[2523,24,2073,38],[2523,28,2073,42],[2523,29,2073,43,"_callRefreshToken"],[2523,46,2073,60],[2523,47,2073,61,"session"],[2523,54,2073,68],[2523,55,2073,69,"refresh_token"],[2523,68,2073,82],[2523,69,2073,83],[2524,16,2074,28],[2525,14,2075,24],[2525,15,2075,25],[2525,16,2075,26],[2526,12,2076,20],[2526,13,2076,21],[2526,14,2077,20],[2526,21,2077,27,"e"],[2526,22,2077,28],[2526,24,2077,30],[2527,14,2078,24,"console"],[2527,21,2078,31],[2527,22,2078,32,"error"],[2527,27,2078,37],[2527,28,2078,38],[2527,100,2078,110],[2527,102,2078,112,"e"],[2527,103,2078,113],[2527,104,2078,114],[2528,12,2079,20],[2529,10,2080,16],[2529,11,2080,17],[2529,20,2081,24],[2530,12,2082,20],[2530,16,2082,24],[2530,17,2082,25,"_debug"],[2530,23,2082,31],[2530,24,2082,32],[2530,50,2082,58],[2530,52,2082,60],[2530,57,2082,65],[2530,58,2082,66],[2531,10,2083,16],[2532,8,2084,12],[2532,9,2084,13],[2532,10,2084,14],[2533,6,2085,8],[2533,7,2085,9],[2533,8,2086,8],[2533,15,2086,15,"e"],[2533,16,2086,16],[2533,18,2086,18],[2534,8,2087,12],[2534,12,2087,16,"e"],[2534,13,2087,17],[2534,14,2087,18,"isAcquireTimeout"],[2534,30,2087,34],[2534,34,2087,38,"e"],[2534,35,2087,39],[2534,47,2087,51,"locks_1"],[2534,54,2087,58],[2534,55,2087,59,"LockAcquireTimeoutError"],[2534,78,2087,82],[2534,80,2087,84],[2535,10,2088,16],[2535,14,2088,20],[2535,15,2088,21,"_debug"],[2535,21,2088,27],[2535,22,2088,28],[2535,66,2088,72],[2535,67,2088,73],[2536,8,2089,12],[2536,9,2089,13],[2536,15,2090,17],[2537,10,2091,16],[2537,16,2091,22,"e"],[2537,17,2091,23],[2538,8,2092,12],[2539,6,2093,8],[2540,4,2094,4],[2541,4,2095,4],[2542,0,2096,0],[2543,0,2097,0],[2544,0,2098,0],[2545,0,2099,0],[2546,4,2100,4],[2546,10,2100,10,"_handleVisibilityChange"],[2546,33,2100,33,"_handleVisibilityChange"],[2546,34,2100,33],[2546,36,2100,36],[2547,6,2101,8],[2547,10,2101,12],[2547,11,2101,13,"_debug"],[2547,17,2101,19],[2547,18,2101,20],[2547,46,2101,48],[2547,47,2101,49],[2548,6,2102,8],[2548,10,2102,12],[2548,11,2102,13],[2548,12,2102,14],[2548,13,2102,15],[2548,15,2102,17,"helpers_1"],[2548,24,2102,26],[2548,25,2102,27,"isBrowser"],[2548,34,2102,36],[2548,36,2102,38],[2548,37,2102,39],[2548,41,2102,43],[2548,43,2102,45,"window"],[2548,49,2102,51],[2548,54,2102,56],[2548,58,2102,60],[2548,62,2102,64,"window"],[2548,68,2102,70],[2548,73,2102,75],[2548,78,2102,80],[2548,79,2102,81],[2548,82,2102,84],[2548,87,2102,89],[2548,88,2102,90],[2548,91,2102,93,"window"],[2548,97,2102,99],[2548,98,2102,100,"addEventListener"],[2548,114,2102,116],[2548,115,2102,117],[2548,117,2102,119],[2549,8,2103,12],[2549,12,2103,16],[2549,16,2103,20],[2549,17,2103,21,"autoRefreshToken"],[2549,33,2103,37],[2549,35,2103,39],[2550,10,2104,16],[2551,10,2105,16],[2551,14,2105,20],[2551,15,2105,21,"startAutoRefresh"],[2551,31,2105,37],[2551,32,2105,38],[2551,33,2105,39],[2552,8,2106,12],[2553,8,2107,12],[2553,15,2107,19],[2553,20,2107,24],[2554,6,2108,8],[2555,6,2109,8],[2555,10,2109,12],[2556,8,2110,12],[2556,12,2110,16],[2556,13,2110,17,"visibilityChangedCallback"],[2556,38,2110,42],[2556,41,2110,45],[2556,53,2110,57],[2556,59,2110,63],[2556,63,2110,67],[2556,64,2110,68,"_onVisibilityChanged"],[2556,84,2110,88],[2556,85,2110,89],[2556,90,2110,94],[2556,91,2110,95],[2557,8,2111,12,"window"],[2557,14,2111,18],[2557,19,2111,23],[2557,23,2111,27],[2557,27,2111,31,"window"],[2557,33,2111,37],[2557,38,2111,42],[2557,43,2111,47],[2557,44,2111,48],[2557,47,2111,51],[2557,52,2111,56],[2557,53,2111,57],[2557,56,2111,60,"window"],[2557,62,2111,66],[2557,63,2111,67,"addEventListener"],[2557,79,2111,83],[2557,80,2111,84],[2557,98,2111,102],[2557,100,2111,104],[2557,104,2111,108],[2557,105,2111,109,"visibilityChangedCallback"],[2557,130,2111,134],[2557,131,2111,135],[2558,8,2112,12],[2559,8,2113,12],[2560,8,2114,12],[2560,14,2114,18],[2560,18,2114,22],[2560,19,2114,23,"_onVisibilityChanged"],[2560,39,2114,43],[2560,40,2114,44],[2560,44,2114,48],[2560,45,2114,49],[2560,46,2114,50],[2560,47,2114,51],[2561,6,2115,8],[2561,7,2115,9],[2561,8,2116,8],[2561,15,2116,15,"error"],[2561,20,2116,20],[2561,22,2116,22],[2562,8,2117,12,"console"],[2562,15,2117,19],[2562,16,2117,20,"error"],[2562,21,2117,25],[2562,22,2117,26],[2562,47,2117,51],[2562,49,2117,53,"error"],[2562,54,2117,58],[2562,55,2117,59],[2563,6,2118,8],[2564,4,2119,4],[2565,4,2120,4],[2566,0,2121,0],[2567,0,2122,0],[2568,4,2123,4],[2568,10,2123,10,"_onVisibilityChanged"],[2568,30,2123,30,"_onVisibilityChanged"],[2568,31,2123,31,"calledFromInitialize"],[2568,51,2123,51],[2568,53,2123,53],[2569,6,2124,8],[2569,12,2124,14,"methodName"],[2569,22,2124,24],[2569,25,2124,27],[2569,50,2124,52,"calledFromInitialize"],[2569,70,2124,72],[2569,73,2124,75],[2570,6,2125,8],[2570,10,2125,12],[2570,11,2125,13,"_debug"],[2570,17,2125,19],[2570,18,2125,20,"methodName"],[2570,28,2125,30],[2570,30,2125,32],[2570,47,2125,49],[2570,49,2125,51,"document"],[2570,57,2125,59],[2570,58,2125,60,"visibilityState"],[2570,73,2125,75],[2570,74,2125,76],[2571,6,2126,8],[2571,10,2126,12,"document"],[2571,18,2126,20],[2571,19,2126,21,"visibilityState"],[2571,34,2126,36],[2571,39,2126,41],[2571,48,2126,50],[2571,50,2126,52],[2572,8,2127,12],[2572,12,2127,16],[2572,16,2127,20],[2572,17,2127,21,"autoRefreshToken"],[2572,33,2127,37],[2572,35,2127,39],[2573,10,2128,16],[2574,10,2129,16],[2575,10,2130,16],[2575,14,2130,20],[2575,15,2130,21,"_startAutoRefresh"],[2575,32,2130,38],[2575,33,2130,39],[2575,34,2130,40],[2576,8,2131,12],[2577,8,2132,12],[2577,12,2132,16],[2577,13,2132,17,"calledFromInitialize"],[2577,33,2132,37],[2577,35,2132,39],[2578,10,2133,16],[2579,10,2134,16],[2580,10,2135,16],[2581,10,2136,16],[2582,10,2137,16],[2582,16,2137,22],[2582,20,2137,26],[2582,21,2137,27,"initializePromise"],[2582,38,2137,44],[2583,10,2138,16],[2583,16,2138,22],[2583,20,2138,26],[2583,21,2138,27,"_acquireLock"],[2583,33,2138,39],[2583,34,2138,40],[2583,35,2138,41],[2583,36,2138,42],[2583,38,2138,44],[2583,50,2138,56],[2584,12,2139,20],[2584,16,2139,24,"document"],[2584,24,2139,32],[2584,25,2139,33,"visibilityState"],[2584,40,2139,48],[2584,45,2139,53],[2584,54,2139,62],[2584,56,2139,64],[2585,14,2140,24],[2585,18,2140,28],[2585,19,2140,29,"_debug"],[2585,25,2140,35],[2585,26,2140,36,"methodName"],[2585,36,2140,46],[2585,38,2140,48],[2585,144,2140,154],[2585,145,2140,155],[2586,14,2141,24],[2587,14,2142,24],[2588,12,2143,20],[2589,12,2144,20],[2590,12,2145,20],[2590,18,2145,26],[2590,22,2145,30],[2590,23,2145,31,"_recoverAndRefresh"],[2590,41,2145,49],[2590,42,2145,50],[2590,43,2145,51],[2591,10,2146,16],[2591,11,2146,17],[2591,12,2146,18],[2592,8,2147,12],[2593,6,2148,8],[2593,7,2148,9],[2593,13,2149,13],[2593,17,2149,17,"document"],[2593,25,2149,25],[2593,26,2149,26,"visibilityState"],[2593,41,2149,41],[2593,46,2149,46],[2593,54,2149,54],[2593,56,2149,56],[2594,8,2150,12],[2594,12,2150,16],[2594,16,2150,20],[2594,17,2150,21,"autoRefreshToken"],[2594,33,2150,37],[2594,35,2150,39],[2595,10,2151,16],[2595,14,2151,20],[2595,15,2151,21,"_stopAutoRefresh"],[2595,31,2151,37],[2595,32,2151,38],[2595,33,2151,39],[2596,8,2152,12],[2597,6,2153,8],[2598,4,2154,4],[2599,4,2155,4],[2600,0,2156,0],[2601,0,2157,0],[2602,0,2158,0],[2603,0,2159,0],[2604,0,2160,0],[2605,4,2161,4],[2605,10,2161,10,"_getUrlForProvider"],[2605,28,2161,28,"_getUrlForProvider"],[2605,29,2161,29,"url"],[2605,32,2161,32],[2605,34,2161,34,"provider"],[2605,42,2161,42],[2605,44,2161,44,"options"],[2605,51,2161,51],[2605,53,2161,53],[2606,6,2162,8],[2606,12,2162,14,"urlParams"],[2606,21,2162,23],[2606,24,2162,26],[2606,25,2162,27],[2606,37,2162,39,"encodeURIComponent"],[2606,55,2162,57],[2606,56,2162,58,"provider"],[2606,64,2162,66],[2606,65,2162,67],[2606,67,2162,69],[2606,68,2162,70],[2607,6,2163,8],[2607,10,2163,12,"options"],[2607,17,2163,19],[2607,22,2163,24],[2607,26,2163,28],[2607,30,2163,32,"options"],[2607,37,2163,39],[2607,42,2163,44],[2607,47,2163,49],[2607,48,2163,50],[2607,51,2163,53],[2607,56,2163,58],[2607,57,2163,59],[2607,60,2163,62,"options"],[2607,67,2163,69],[2607,68,2163,70,"redirectTo"],[2607,78,2163,80],[2607,80,2163,82],[2608,8,2164,12,"urlParams"],[2608,17,2164,21],[2608,18,2164,22,"push"],[2608,22,2164,26],[2608,23,2164,27],[2608,38,2164,42,"encodeURIComponent"],[2608,56,2164,60],[2608,57,2164,61,"options"],[2608,64,2164,68],[2608,65,2164,69,"redirectTo"],[2608,75,2164,79],[2608,76,2164,80],[2608,78,2164,82],[2608,79,2164,83],[2609,6,2165,8],[2610,6,2166,8],[2610,10,2166,12,"options"],[2610,17,2166,19],[2610,22,2166,24],[2610,26,2166,28],[2610,30,2166,32,"options"],[2610,37,2166,39],[2610,42,2166,44],[2610,47,2166,49],[2610,48,2166,50],[2610,51,2166,53],[2610,56,2166,58],[2610,57,2166,59],[2610,60,2166,62,"options"],[2610,67,2166,69],[2610,68,2166,70,"scopes"],[2610,74,2166,76],[2610,76,2166,78],[2611,8,2167,12,"urlParams"],[2611,17,2167,21],[2611,18,2167,22,"push"],[2611,22,2167,26],[2611,23,2167,27],[2611,33,2167,37,"encodeURIComponent"],[2611,51,2167,55],[2611,52,2167,56,"options"],[2611,59,2167,63],[2611,60,2167,64,"scopes"],[2611,66,2167,70],[2611,67,2167,71],[2611,69,2167,73],[2611,70,2167,74],[2612,6,2168,8],[2613,6,2169,8],[2613,10,2169,12],[2613,14,2169,16],[2613,15,2169,17,"flowType"],[2613,23,2169,25],[2613,28,2169,30],[2613,34,2169,36],[2613,36,2169,38],[2614,8,2170,12],[2614,14,2170,18],[2614,15,2170,19,"codeChallenge"],[2614,28,2170,32],[2614,30,2170,34,"codeChallengeMethod"],[2614,49,2170,53],[2614,50,2170,54],[2614,53,2170,57],[2614,59,2170,63],[2614,60,2170,64],[2614,61,2170,65],[2614,63,2170,67,"helpers_1"],[2614,72,2170,76],[2614,73,2170,77,"getCodeChallengeAndMethod"],[2614,98,2170,102],[2614,100,2170,104],[2614,104,2170,108],[2614,105,2170,109,"storage"],[2614,112,2170,116],[2614,114,2170,118],[2614,118,2170,122],[2614,119,2170,123,"storageKey"],[2614,129,2170,133],[2614,130,2170,134],[2615,8,2171,12],[2615,14,2171,18,"flowParams"],[2615,24,2171,28],[2615,27,2171,31],[2615,31,2171,35,"URLSearchParams"],[2615,46,2171,50],[2615,47,2171,51],[2616,10,2172,16,"code_challenge"],[2616,24,2172,30],[2616,26,2172,32],[2616,29,2172,35,"encodeURIComponent"],[2616,47,2172,53],[2616,48,2172,54,"codeChallenge"],[2616,61,2172,67],[2616,62,2172,68],[2616,64,2172,70],[2617,10,2173,16,"code_challenge_method"],[2617,31,2173,37],[2617,33,2173,39],[2617,36,2173,42,"encodeURIComponent"],[2617,54,2173,60],[2617,55,2173,61,"codeChallengeMethod"],[2617,74,2173,80],[2617,75,2173,81],[2618,8,2174,12],[2618,9,2174,13],[2618,10,2174,14],[2619,8,2175,12,"urlParams"],[2619,17,2175,21],[2619,18,2175,22,"push"],[2619,22,2175,26],[2619,23,2175,27,"flowParams"],[2619,33,2175,37],[2619,34,2175,38,"toString"],[2619,42,2175,46],[2619,43,2175,47],[2619,44,2175,48],[2619,45,2175,49],[2620,6,2176,8],[2621,6,2177,8],[2621,10,2177,12,"options"],[2621,17,2177,19],[2621,22,2177,24],[2621,26,2177,28],[2621,30,2177,32,"options"],[2621,37,2177,39],[2621,42,2177,44],[2621,47,2177,49],[2621,48,2177,50],[2621,51,2177,53],[2621,56,2177,58],[2621,57,2177,59],[2621,60,2177,62,"options"],[2621,67,2177,69],[2621,68,2177,70,"queryParams"],[2621,79,2177,81],[2621,81,2177,83],[2622,8,2178,12],[2622,14,2178,18,"query"],[2622,19,2178,23],[2622,22,2178,26],[2622,26,2178,30,"URLSearchParams"],[2622,41,2178,45],[2622,42,2178,46,"options"],[2622,49,2178,53],[2622,50,2178,54,"queryParams"],[2622,61,2178,65],[2622,62,2178,66],[2623,8,2179,12,"urlParams"],[2623,17,2179,21],[2623,18,2179,22,"push"],[2623,22,2179,26],[2623,23,2179,27,"query"],[2623,28,2179,32],[2623,29,2179,33,"toString"],[2623,37,2179,41],[2623,38,2179,42],[2623,39,2179,43],[2623,40,2179,44],[2624,6,2180,8],[2625,6,2181,8],[2625,10,2181,12,"options"],[2625,17,2181,19],[2625,22,2181,24],[2625,26,2181,28],[2625,30,2181,32,"options"],[2625,37,2181,39],[2625,42,2181,44],[2625,47,2181,49],[2625,48,2181,50],[2625,51,2181,53],[2625,56,2181,58],[2625,57,2181,59],[2625,60,2181,62,"options"],[2625,67,2181,69],[2625,68,2181,70,"skipBrowserRedirect"],[2625,87,2181,89],[2625,89,2181,91],[2626,8,2182,12,"urlParams"],[2626,17,2182,21],[2626,18,2182,22,"push"],[2626,22,2182,26],[2626,23,2182,27],[2626,45,2182,49,"options"],[2626,52,2182,56],[2626,53,2182,57,"skipBrowserRedirect"],[2626,72,2182,76],[2626,74,2182,78],[2626,75,2182,79],[2627,6,2183,8],[2628,6,2184,8],[2628,13,2184,15],[2628,16,2184,18,"url"],[2628,19,2184,21],[2628,23,2184,25,"urlParams"],[2628,32,2184,34],[2628,33,2184,35,"join"],[2628,37,2184,39],[2628,38,2184,40],[2628,41,2184,43],[2628,42,2184,44],[2628,44,2184,46],[2629,4,2185,4],[2630,4,2186,4],[2630,10,2186,10,"_unenroll"],[2630,19,2186,19,"_unenroll"],[2630,20,2186,20,"params"],[2630,26,2186,26],[2630,28,2186,28],[2631,6,2187,8],[2631,10,2187,12],[2632,8,2188,12],[2632,15,2188,19],[2632,21,2188,25],[2632,25,2188,29],[2632,26,2188,30,"_useSession"],[2632,37,2188,41],[2632,38,2188,42],[2632,44,2188,49,"result"],[2632,50,2188,55],[2632,54,2188,60],[2633,10,2189,16],[2633,14,2189,20,"_a"],[2633,16,2189,22],[2634,10,2190,16],[2634,16,2190,22],[2635,12,2190,24,"data"],[2635,16,2190,28],[2635,18,2190,30,"sessionData"],[2635,29,2190,41],[2636,12,2190,43,"error"],[2636,17,2190,48],[2636,19,2190,50,"sessionError"],[2637,10,2190,63],[2637,11,2190,64],[2637,14,2190,67,"result"],[2637,20,2190,73],[2638,10,2191,16],[2638,14,2191,20,"sessionError"],[2638,26,2191,32],[2638,28,2191,34],[2639,12,2192,20],[2639,19,2192,27],[2640,14,2192,29,"data"],[2640,18,2192,33],[2640,20,2192,35],[2640,24,2192,39],[2641,14,2192,41,"error"],[2641,19,2192,46],[2641,21,2192,48,"sessionError"],[2642,12,2192,61],[2642,13,2192,62],[2643,10,2193,16],[2644,10,2194,16],[2644,17,2194,23],[2644,23,2194,29],[2644,24,2194,30],[2644,25,2194,31],[2644,27,2194,33,"fetch_1"],[2644,34,2194,40],[2644,35,2194,41,"_request"],[2644,43,2194,49],[2644,45,2194,51],[2644,49,2194,55],[2644,50,2194,56,"fetch"],[2644,55,2194,61],[2644,57,2194,63],[2644,65,2194,71],[2644,67,2194,73],[2644,70,2194,76],[2644,74,2194,80],[2644,75,2194,81,"url"],[2644,78,2194,84],[2644,90,2194,96,"params"],[2644,96,2194,102],[2644,97,2194,103,"factorId"],[2644,105,2194,111],[2644,107,2194,113],[2644,109,2194,115],[2645,12,2195,20,"headers"],[2645,19,2195,27],[2645,21,2195,29],[2645,25,2195,33],[2645,26,2195,34,"headers"],[2645,33,2195,41],[2646,12,2196,20,"jwt"],[2646,15,2196,23],[2646,17,2196,25],[2646,18,2196,26,"_a"],[2646,20,2196,28],[2646,23,2196,31,"sessionData"],[2646,34,2196,42],[2646,39,2196,47],[2646,43,2196,51],[2646,47,2196,55,"sessionData"],[2646,58,2196,66],[2646,63,2196,71],[2646,68,2196,76],[2646,69,2196,77],[2646,72,2196,80],[2646,77,2196,85],[2646,78,2196,86],[2646,81,2196,89,"sessionData"],[2646,92,2196,100],[2646,93,2196,101,"session"],[2646,100,2196,108],[2646,106,2196,114],[2646,110,2196,118],[2646,114,2196,122,"_a"],[2646,116,2196,124],[2646,121,2196,129],[2646,126,2196,134],[2646,127,2196,135],[2646,130,2196,138],[2646,135,2196,143],[2646,136,2196,144],[2646,139,2196,147,"_a"],[2646,141,2196,149],[2646,142,2196,150,"access_token"],[2647,10,2197,16],[2647,11,2197,17],[2647,12,2197,18],[2648,8,2198,12],[2648,9,2198,13],[2648,10,2198,14],[2649,6,2199,8],[2649,7,2199,9],[2649,8,2200,8],[2649,15,2200,15,"error"],[2649,20,2200,20],[2649,22,2200,22],[2650,8,2201,12],[2650,12,2201,16],[2650,13,2201,17],[2650,14,2201,18],[2650,16,2201,20,"errors_1"],[2650,24,2201,28],[2650,25,2201,29,"isAuthError"],[2650,36,2201,40],[2650,38,2201,42,"error"],[2650,43,2201,47],[2650,44,2201,48],[2650,46,2201,50],[2651,10,2202,16],[2651,17,2202,23],[2652,12,2202,25,"data"],[2652,16,2202,29],[2652,18,2202,31],[2652,22,2202,35],[2653,12,2202,37,"error"],[2654,10,2202,43],[2654,11,2202,44],[2655,8,2203,12],[2656,8,2204,12],[2656,14,2204,18,"error"],[2656,19,2204,23],[2657,6,2205,8],[2658,4,2206,4],[2659,4,2207,4],[2659,10,2207,10,"_enroll"],[2659,17,2207,17,"_enroll"],[2659,18,2207,18,"params"],[2659,24,2207,24],[2659,26,2207,26],[2660,6,2208,8],[2660,10,2208,12],[2661,8,2209,12],[2661,15,2209,19],[2661,21,2209,25],[2661,25,2209,29],[2661,26,2209,30,"_useSession"],[2661,37,2209,41],[2661,38,2209,42],[2661,44,2209,49,"result"],[2661,50,2209,55],[2661,54,2209,60],[2662,10,2210,16],[2662,14,2210,20,"_a"],[2662,16,2210,22],[2662,18,2210,24,"_b"],[2662,20,2210,26],[2663,10,2211,16],[2663,16,2211,22],[2664,12,2211,24,"data"],[2664,16,2211,28],[2664,18,2211,30,"sessionData"],[2664,29,2211,41],[2665,12,2211,43,"error"],[2665,17,2211,48],[2665,19,2211,50,"sessionError"],[2666,10,2211,63],[2666,11,2211,64],[2666,14,2211,67,"result"],[2666,20,2211,73],[2667,10,2212,16],[2667,14,2212,20,"sessionError"],[2667,26,2212,32],[2667,28,2212,34],[2668,12,2213,20],[2668,19,2213,27],[2669,14,2213,29,"data"],[2669,18,2213,33],[2669,20,2213,35],[2669,24,2213,39],[2670,14,2213,41,"error"],[2670,19,2213,46],[2670,21,2213,48,"sessionError"],[2671,12,2213,61],[2671,13,2213,62],[2672,10,2214,16],[2673,10,2215,16],[2673,16,2215,22,"body"],[2673,20,2215,26],[2673,23,2215,29,"Object"],[2673,29,2215,35],[2673,30,2215,36,"assign"],[2673,36,2215,42],[2673,37,2215,43],[2674,12,2215,45,"friendly_name"],[2674,25,2215,58],[2674,27,2215,60,"params"],[2674,33,2215,66],[2674,34,2215,67,"friendlyName"],[2674,46,2215,79],[2675,12,2215,81,"factor_type"],[2675,23,2215,92],[2675,25,2215,94,"params"],[2675,31,2215,100],[2675,32,2215,101,"factorType"],[2676,10,2215,112],[2676,11,2215,113],[2676,13,2215,116,"params"],[2676,19,2215,122],[2676,20,2215,123,"factorType"],[2676,30,2215,133],[2676,35,2215,138],[2676,42,2215,145],[2676,45,2215,148],[2677,12,2215,150,"phone"],[2677,17,2215,155],[2677,19,2215,157,"params"],[2677,25,2215,163],[2677,26,2215,164,"phone"],[2678,10,2215,170],[2678,11,2215,171],[2678,14,2215,174],[2679,12,2215,176,"issuer"],[2679,18,2215,182],[2679,20,2215,184,"params"],[2679,26,2215,190],[2679,27,2215,191,"issuer"],[2680,10,2215,198],[2680,11,2215,200],[2680,12,2215,201],[2681,10,2216,16],[2681,16,2216,22],[2682,12,2216,24,"data"],[2682,16,2216,28],[2683,12,2216,30,"error"],[2684,10,2216,36],[2684,11,2216,37],[2684,14,2216,40],[2684,20,2216,46],[2684,21,2216,47],[2684,22,2216,48],[2684,24,2216,50,"fetch_1"],[2684,31,2216,57],[2684,32,2216,58,"_request"],[2684,40,2216,66],[2684,42,2216,68],[2684,46,2216,72],[2684,47,2216,73,"fetch"],[2684,52,2216,78],[2684,54,2216,80],[2684,60,2216,86],[2684,62,2216,88],[2684,65,2216,91],[2684,69,2216,95],[2684,70,2216,96,"url"],[2684,73,2216,99],[2684,83,2216,109],[2684,85,2216,111],[2685,12,2217,20,"body"],[2685,16,2217,24],[2686,12,2218,20,"headers"],[2686,19,2218,27],[2686,21,2218,29],[2686,25,2218,33],[2686,26,2218,34,"headers"],[2686,33,2218,41],[2687,12,2219,20,"jwt"],[2687,15,2219,23],[2687,17,2219,25],[2687,18,2219,26,"_a"],[2687,20,2219,28],[2687,23,2219,31,"sessionData"],[2687,34,2219,42],[2687,39,2219,47],[2687,43,2219,51],[2687,47,2219,55,"sessionData"],[2687,58,2219,66],[2687,63,2219,71],[2687,68,2219,76],[2687,69,2219,77],[2687,72,2219,80],[2687,77,2219,85],[2687,78,2219,86],[2687,81,2219,89,"sessionData"],[2687,92,2219,100],[2687,93,2219,101,"session"],[2687,100,2219,108],[2687,106,2219,114],[2687,110,2219,118],[2687,114,2219,122,"_a"],[2687,116,2219,124],[2687,121,2219,129],[2687,126,2219,134],[2687,127,2219,135],[2687,130,2219,138],[2687,135,2219,143],[2687,136,2219,144],[2687,139,2219,147,"_a"],[2687,141,2219,149],[2687,142,2219,150,"access_token"],[2688,10,2220,16],[2688,11,2220,17],[2688,12,2220,18],[2689,10,2221,16],[2689,14,2221,20,"error"],[2689,19,2221,25],[2689,21,2221,27],[2690,12,2222,20],[2690,19,2222,27],[2691,14,2222,29,"data"],[2691,18,2222,33],[2691,20,2222,35],[2691,24,2222,39],[2692,14,2222,41,"error"],[2693,12,2222,47],[2693,13,2222,48],[2694,10,2223,16],[2695,10,2224,16],[2695,14,2224,20,"params"],[2695,20,2224,26],[2695,21,2224,27,"factorType"],[2695,31,2224,37],[2695,36,2224,42],[2695,42,2224,48],[2695,47,2224,53],[2695,48,2224,54,"_b"],[2695,50,2224,56],[2695,53,2224,59,"data"],[2695,57,2224,63],[2695,62,2224,68],[2695,66,2224,72],[2695,70,2224,76,"data"],[2695,74,2224,80],[2695,79,2224,85],[2695,84,2224,90],[2695,85,2224,91],[2695,88,2224,94],[2695,93,2224,99],[2695,94,2224,100],[2695,97,2224,103,"data"],[2695,101,2224,107],[2695,102,2224,108,"totp"],[2695,106,2224,112],[2695,112,2224,118],[2695,116,2224,122],[2695,120,2224,126,"_b"],[2695,122,2224,128],[2695,127,2224,133],[2695,132,2224,138],[2695,133,2224,139],[2695,136,2224,142],[2695,141,2224,147],[2695,142,2224,148],[2695,145,2224,151,"_b"],[2695,147,2224,153],[2695,148,2224,154,"qr_code"],[2695,155,2224,161],[2695,156,2224,162],[2695,158,2224,164],[2696,12,2225,20,"data"],[2696,16,2225,24],[2696,17,2225,25,"totp"],[2696,21,2225,29],[2696,22,2225,30,"qr_code"],[2696,29,2225,37],[2696,32,2225,40],[2696,60,2225,68,"data"],[2696,64,2225,72],[2696,65,2225,73,"totp"],[2696,69,2225,77],[2696,70,2225,78,"qr_code"],[2696,77,2225,85],[2696,79,2225,87],[2697,10,2226,16],[2698,10,2227,16],[2698,17,2227,23],[2699,12,2227,25,"data"],[2699,16,2227,29],[2700,12,2227,31,"error"],[2700,17,2227,36],[2700,19,2227,38],[2701,10,2227,43],[2701,11,2227,44],[2702,8,2228,12],[2702,9,2228,13],[2702,10,2228,14],[2703,6,2229,8],[2703,7,2229,9],[2703,8,2230,8],[2703,15,2230,15,"error"],[2703,20,2230,20],[2703,22,2230,22],[2704,8,2231,12],[2704,12,2231,16],[2704,13,2231,17],[2704,14,2231,18],[2704,16,2231,20,"errors_1"],[2704,24,2231,28],[2704,25,2231,29,"isAuthError"],[2704,36,2231,40],[2704,38,2231,42,"error"],[2704,43,2231,47],[2704,44,2231,48],[2704,46,2231,50],[2705,10,2232,16],[2705,17,2232,23],[2706,12,2232,25,"data"],[2706,16,2232,29],[2706,18,2232,31],[2706,22,2232,35],[2707,12,2232,37,"error"],[2708,10,2232,43],[2708,11,2232,44],[2709,8,2233,12],[2710,8,2234,12],[2710,14,2234,18,"error"],[2710,19,2234,23],[2711,6,2235,8],[2712,4,2236,4],[2713,4,2237,4],[2714,0,2238,0],[2715,0,2239,0],[2716,4,2240,4],[2716,10,2240,10,"_verify"],[2716,17,2240,17,"_verify"],[2716,18,2240,18,"params"],[2716,24,2240,24],[2716,26,2240,26],[2717,6,2241,8],[2717,13,2241,15],[2717,17,2241,19],[2717,18,2241,20,"_acquireLock"],[2717,30,2241,32],[2717,31,2241,33],[2717,32,2241,34],[2717,33,2241,35],[2717,35,2241,37],[2717,47,2241,49],[2718,8,2242,12],[2718,12,2242,16],[2719,10,2243,16],[2719,17,2243,23],[2719,23,2243,29],[2719,27,2243,33],[2719,28,2243,34,"_useSession"],[2719,39,2243,45],[2719,40,2243,46],[2719,46,2243,53,"result"],[2719,52,2243,59],[2719,56,2243,64],[2720,12,2244,20],[2720,16,2244,24,"_a"],[2720,18,2244,26],[2721,12,2245,20],[2721,18,2245,26],[2722,14,2245,28,"data"],[2722,18,2245,32],[2722,20,2245,34,"sessionData"],[2722,31,2245,45],[2723,14,2245,47,"error"],[2723,19,2245,52],[2723,21,2245,54,"sessionError"],[2724,12,2245,67],[2724,13,2245,68],[2724,16,2245,71,"result"],[2724,22,2245,77],[2725,12,2246,20],[2725,16,2246,24,"sessionError"],[2725,28,2246,36],[2725,30,2246,38],[2726,14,2247,24],[2726,21,2247,31],[2727,16,2247,33,"data"],[2727,20,2247,37],[2727,22,2247,39],[2727,26,2247,43],[2728,16,2247,45,"error"],[2728,21,2247,50],[2728,23,2247,52,"sessionError"],[2729,14,2247,65],[2729,15,2247,66],[2730,12,2248,20],[2731,12,2249,20],[2731,18,2249,26],[2732,14,2249,28,"data"],[2732,18,2249,32],[2733,14,2249,34,"error"],[2734,12,2249,40],[2734,13,2249,41],[2734,16,2249,44],[2734,22,2249,50],[2734,23,2249,51],[2734,24,2249,52],[2734,26,2249,54,"fetch_1"],[2734,33,2249,61],[2734,34,2249,62,"_request"],[2734,42,2249,70],[2734,44,2249,72],[2734,48,2249,76],[2734,49,2249,77,"fetch"],[2734,54,2249,82],[2734,56,2249,84],[2734,62,2249,90],[2734,64,2249,92],[2734,67,2249,95],[2734,71,2249,99],[2734,72,2249,100,"url"],[2734,75,2249,103],[2734,87,2249,115,"params"],[2734,93,2249,121],[2734,94,2249,122,"factorId"],[2734,102,2249,130],[2734,111,2249,139],[2734,113,2249,141],[2735,14,2250,24,"body"],[2735,18,2250,28],[2735,20,2250,30],[2736,16,2250,32,"code"],[2736,20,2250,36],[2736,22,2250,38,"params"],[2736,28,2250,44],[2736,29,2250,45,"code"],[2736,33,2250,49],[2737,16,2250,51,"challenge_id"],[2737,28,2250,63],[2737,30,2250,65,"params"],[2737,36,2250,71],[2737,37,2250,72,"challengeId"],[2738,14,2250,84],[2738,15,2250,85],[2739,14,2251,24,"headers"],[2739,21,2251,31],[2739,23,2251,33],[2739,27,2251,37],[2739,28,2251,38,"headers"],[2739,35,2251,45],[2740,14,2252,24,"jwt"],[2740,17,2252,27],[2740,19,2252,29],[2740,20,2252,30,"_a"],[2740,22,2252,32],[2740,25,2252,35,"sessionData"],[2740,36,2252,46],[2740,41,2252,51],[2740,45,2252,55],[2740,49,2252,59,"sessionData"],[2740,60,2252,70],[2740,65,2252,75],[2740,70,2252,80],[2740,71,2252,81],[2740,74,2252,84],[2740,79,2252,89],[2740,80,2252,90],[2740,83,2252,93,"sessionData"],[2740,94,2252,104],[2740,95,2252,105,"session"],[2740,102,2252,112],[2740,108,2252,118],[2740,112,2252,122],[2740,116,2252,126,"_a"],[2740,118,2252,128],[2740,123,2252,133],[2740,128,2252,138],[2740,129,2252,139],[2740,132,2252,142],[2740,137,2252,147],[2740,138,2252,148],[2740,141,2252,151,"_a"],[2740,143,2252,153],[2740,144,2252,154,"access_token"],[2741,12,2253,20],[2741,13,2253,21],[2741,14,2253,22],[2742,12,2254,20],[2742,16,2254,24,"error"],[2742,21,2254,29],[2742,23,2254,31],[2743,14,2255,24],[2743,21,2255,31],[2744,16,2255,33,"data"],[2744,20,2255,37],[2744,22,2255,39],[2744,26,2255,43],[2745,16,2255,45,"error"],[2746,14,2255,51],[2746,15,2255,52],[2747,12,2256,20],[2748,12,2257,20],[2748,18,2257,26],[2748,22,2257,30],[2748,23,2257,31,"_saveSession"],[2748,35,2257,43],[2748,36,2257,44,"Object"],[2748,42,2257,50],[2748,43,2257,51,"assign"],[2748,49,2257,57],[2748,50,2257,58],[2749,14,2257,60,"expires_at"],[2749,24,2257,70],[2749,26,2257,72,"Math"],[2749,30,2257,76],[2749,31,2257,77,"round"],[2749,36,2257,82],[2749,37,2257,83,"Date"],[2749,41,2257,87],[2749,42,2257,88,"now"],[2749,45,2257,91],[2749,46,2257,92],[2749,47,2257,93],[2749,50,2257,96],[2749,54,2257,100],[2749,55,2257,101],[2749,58,2257,104,"data"],[2749,62,2257,108],[2749,63,2257,109,"expires_in"],[2750,12,2257,120],[2750,13,2257,121],[2750,15,2257,123,"data"],[2750,19,2257,127],[2750,20,2257,128],[2750,21,2257,129],[2751,12,2258,20],[2751,18,2258,26],[2751,22,2258,30],[2751,23,2258,31,"_notifyAllSubscribers"],[2751,44,2258,52],[2751,45,2258,53],[2751,69,2258,77],[2751,71,2258,79,"data"],[2751,75,2258,83],[2751,76,2258,84],[2752,12,2259,20],[2752,19,2259,27],[2753,14,2259,29,"data"],[2753,18,2259,33],[2754,14,2259,35,"error"],[2755,12,2259,41],[2755,13,2259,42],[2756,10,2260,16],[2756,11,2260,17],[2756,12,2260,18],[2757,8,2261,12],[2757,9,2261,13],[2757,10,2262,12],[2757,17,2262,19,"error"],[2757,22,2262,24],[2757,24,2262,26],[2758,10,2263,16],[2758,14,2263,20],[2758,15,2263,21],[2758,16,2263,22],[2758,18,2263,24,"errors_1"],[2758,26,2263,32],[2758,27,2263,33,"isAuthError"],[2758,38,2263,44],[2758,40,2263,46,"error"],[2758,45,2263,51],[2758,46,2263,52],[2758,48,2263,54],[2759,12,2264,20],[2759,19,2264,27],[2760,14,2264,29,"data"],[2760,18,2264,33],[2760,20,2264,35],[2760,24,2264,39],[2761,14,2264,41,"error"],[2762,12,2264,47],[2762,13,2264,48],[2763,10,2265,16],[2764,10,2266,16],[2764,16,2266,22,"error"],[2764,21,2266,27],[2765,8,2267,12],[2766,6,2268,8],[2766,7,2268,9],[2766,8,2268,10],[2767,4,2269,4],[2768,4,2270,4],[2769,0,2271,0],[2770,0,2272,0],[2771,4,2273,4],[2771,10,2273,10,"_challenge"],[2771,20,2273,20,"_challenge"],[2771,21,2273,21,"params"],[2771,27,2273,27],[2771,29,2273,29],[2772,6,2274,8],[2772,13,2274,15],[2772,17,2274,19],[2772,18,2274,20,"_acquireLock"],[2772,30,2274,32],[2772,31,2274,33],[2772,32,2274,34],[2772,33,2274,35],[2772,35,2274,37],[2772,47,2274,49],[2773,8,2275,12],[2773,12,2275,16],[2774,10,2276,16],[2774,17,2276,23],[2774,23,2276,29],[2774,27,2276,33],[2774,28,2276,34,"_useSession"],[2774,39,2276,45],[2774,40,2276,46],[2774,46,2276,53,"result"],[2774,52,2276,59],[2774,56,2276,64],[2775,12,2277,20],[2775,16,2277,24,"_a"],[2775,18,2277,26],[2776,12,2278,20],[2776,18,2278,26],[2777,14,2278,28,"data"],[2777,18,2278,32],[2777,20,2278,34,"sessionData"],[2777,31,2278,45],[2778,14,2278,47,"error"],[2778,19,2278,52],[2778,21,2278,54,"sessionError"],[2779,12,2278,67],[2779,13,2278,68],[2779,16,2278,71,"result"],[2779,22,2278,77],[2780,12,2279,20],[2780,16,2279,24,"sessionError"],[2780,28,2279,36],[2780,30,2279,38],[2781,14,2280,24],[2781,21,2280,31],[2782,16,2280,33,"data"],[2782,20,2280,37],[2782,22,2280,39],[2782,26,2280,43],[2783,16,2280,45,"error"],[2783,21,2280,50],[2783,23,2280,52,"sessionError"],[2784,14,2280,65],[2784,15,2280,66],[2785,12,2281,20],[2786,12,2282,20],[2786,19,2282,27],[2786,25,2282,33],[2786,26,2282,34],[2786,27,2282,35],[2786,29,2282,37,"fetch_1"],[2786,36,2282,44],[2786,37,2282,45,"_request"],[2786,45,2282,53],[2786,47,2282,55],[2786,51,2282,59],[2786,52,2282,60,"fetch"],[2786,57,2282,65],[2786,59,2282,67],[2786,65,2282,73],[2786,67,2282,75],[2786,70,2282,78],[2786,74,2282,82],[2786,75,2282,83,"url"],[2786,78,2282,86],[2786,90,2282,98,"params"],[2786,96,2282,104],[2786,97,2282,105,"factorId"],[2786,105,2282,113],[2786,117,2282,125],[2786,119,2282,127],[2787,14,2283,24,"body"],[2787,18,2283,28],[2787,20,2283,30],[2788,16,2283,32,"channel"],[2788,23,2283,39],[2788,25,2283,41,"params"],[2788,31,2283,47],[2788,32,2283,48,"channel"],[2789,14,2283,56],[2789,15,2283,57],[2790,14,2284,24,"headers"],[2790,21,2284,31],[2790,23,2284,33],[2790,27,2284,37],[2790,28,2284,38,"headers"],[2790,35,2284,45],[2791,14,2285,24,"jwt"],[2791,17,2285,27],[2791,19,2285,29],[2791,20,2285,30,"_a"],[2791,22,2285,32],[2791,25,2285,35,"sessionData"],[2791,36,2285,46],[2791,41,2285,51],[2791,45,2285,55],[2791,49,2285,59,"sessionData"],[2791,60,2285,70],[2791,65,2285,75],[2791,70,2285,80],[2791,71,2285,81],[2791,74,2285,84],[2791,79,2285,89],[2791,80,2285,90],[2791,83,2285,93,"sessionData"],[2791,94,2285,104],[2791,95,2285,105,"session"],[2791,102,2285,112],[2791,108,2285,118],[2791,112,2285,122],[2791,116,2285,126,"_a"],[2791,118,2285,128],[2791,123,2285,133],[2791,128,2285,138],[2791,129,2285,139],[2791,132,2285,142],[2791,137,2285,147],[2791,138,2285,148],[2791,141,2285,151,"_a"],[2791,143,2285,153],[2791,144,2285,154,"access_token"],[2792,12,2286,20],[2792,13,2286,21],[2792,14,2286,22],[2793,10,2287,16],[2793,11,2287,17],[2793,12,2287,18],[2794,8,2288,12],[2794,9,2288,13],[2794,10,2289,12],[2794,17,2289,19,"error"],[2794,22,2289,24],[2794,24,2289,26],[2795,10,2290,16],[2795,14,2290,20],[2795,15,2290,21],[2795,16,2290,22],[2795,18,2290,24,"errors_1"],[2795,26,2290,32],[2795,27,2290,33,"isAuthError"],[2795,38,2290,44],[2795,40,2290,46,"error"],[2795,45,2290,51],[2795,46,2290,52],[2795,48,2290,54],[2796,12,2291,20],[2796,19,2291,27],[2797,14,2291,29,"data"],[2797,18,2291,33],[2797,20,2291,35],[2797,24,2291,39],[2798,14,2291,41,"error"],[2799,12,2291,47],[2799,13,2291,48],[2800,10,2292,16],[2801,10,2293,16],[2801,16,2293,22,"error"],[2801,21,2293,27],[2802,8,2294,12],[2803,6,2295,8],[2803,7,2295,9],[2803,8,2295,10],[2804,4,2296,4],[2805,4,2297,4],[2806,0,2298,0],[2807,0,2299,0],[2808,4,2300,4],[2808,10,2300,10,"_challengeAndVerify"],[2808,29,2300,29,"_challengeAndVerify"],[2808,30,2300,30,"params"],[2808,36,2300,36],[2808,38,2300,38],[2809,6,2301,8],[2810,6,2302,8],[2811,6,2303,8],[2811,12,2303,14],[2812,8,2303,16,"data"],[2812,12,2303,20],[2812,14,2303,22,"challengeData"],[2812,27,2303,35],[2813,8,2303,37,"error"],[2813,13,2303,42],[2813,15,2303,44,"challengeError"],[2814,6,2303,59],[2814,7,2303,60],[2814,10,2303,63],[2814,16,2303,69],[2814,20,2303,73],[2814,21,2303,74,"_challenge"],[2814,31,2303,84],[2814,32,2303,85],[2815,8,2304,12,"factorId"],[2815,16,2304,20],[2815,18,2304,22,"params"],[2815,24,2304,28],[2815,25,2304,29,"factorId"],[2816,6,2305,8],[2816,7,2305,9],[2816,8,2305,10],[2817,6,2306,8],[2817,10,2306,12,"challengeError"],[2817,24,2306,26],[2817,26,2306,28],[2818,8,2307,12],[2818,15,2307,19],[2819,10,2307,21,"data"],[2819,14,2307,25],[2819,16,2307,27],[2819,20,2307,31],[2820,10,2307,33,"error"],[2820,15,2307,38],[2820,17,2307,40,"challengeError"],[2821,8,2307,55],[2821,9,2307,56],[2822,6,2308,8],[2823,6,2309,8],[2823,13,2309,15],[2823,19,2309,21],[2823,23,2309,25],[2823,24,2309,26,"_verify"],[2823,31,2309,33],[2823,32,2309,34],[2824,8,2310,12,"factorId"],[2824,16,2310,20],[2824,18,2310,22,"params"],[2824,24,2310,28],[2824,25,2310,29,"factorId"],[2824,33,2310,37],[2825,8,2311,12,"challengeId"],[2825,19,2311,23],[2825,21,2311,25,"challengeData"],[2825,34,2311,38],[2825,35,2311,39,"id"],[2825,37,2311,41],[2826,8,2312,12,"code"],[2826,12,2312,16],[2826,14,2312,18,"params"],[2826,20,2312,24],[2826,21,2312,25,"code"],[2827,6,2313,8],[2827,7,2313,9],[2827,8,2313,10],[2828,4,2314,4],[2829,4,2315,4],[2830,0,2316,0],[2831,0,2317,0],[2832,4,2318,4],[2832,10,2318,10,"_listFactors"],[2832,22,2318,22,"_listFactors"],[2832,23,2318,22],[2832,25,2318,25],[2833,6,2319,8],[2834,6,2320,8],[2834,12,2320,14],[2835,8,2320,16,"data"],[2835,12,2320,20],[2835,14,2320,22],[2836,10,2320,24,"user"],[2837,8,2320,29],[2837,9,2320,30],[2838,8,2320,32,"error"],[2838,13,2320,37],[2838,15,2320,39,"userError"],[2839,6,2320,50],[2839,7,2320,51],[2839,10,2320,54],[2839,16,2320,60],[2839,20,2320,64],[2839,21,2320,65,"getUser"],[2839,28,2320,72],[2839,29,2320,73],[2839,30,2320,74],[2840,6,2321,8],[2840,10,2321,12,"userError"],[2840,19,2321,21],[2840,21,2321,23],[2841,8,2322,12],[2841,15,2322,19],[2842,10,2322,21,"data"],[2842,14,2322,25],[2842,16,2322,27],[2842,20,2322,31],[2843,10,2322,33,"error"],[2843,15,2322,38],[2843,17,2322,40,"userError"],[2844,8,2322,50],[2844,9,2322,51],[2845,6,2323,8],[2846,6,2324,8],[2846,12,2324,14,"factors"],[2846,19,2324,21],[2846,22,2324,24],[2846,23,2324,25,"user"],[2846,27,2324,29],[2846,32,2324,34],[2846,36,2324,38],[2846,40,2324,42,"user"],[2846,44,2324,46],[2846,49,2324,51],[2846,54,2324,56],[2846,55,2324,57],[2846,58,2324,60],[2846,63,2324,65],[2846,64,2324,66],[2846,67,2324,69,"user"],[2846,71,2324,73],[2846,72,2324,74,"factors"],[2846,79,2324,81],[2846,84,2324,86],[2846,86,2324,88],[2847,6,2325,8],[2847,12,2325,14,"totp"],[2847,16,2325,18],[2847,19,2325,21,"factors"],[2847,26,2325,28],[2847,27,2325,29,"filter"],[2847,33,2325,35],[2847,34,2325,37,"factor"],[2847,40,2325,43],[2847,44,2325,48,"factor"],[2847,50,2325,54],[2847,51,2325,55,"factor_type"],[2847,62,2325,66],[2847,67,2325,71],[2847,73,2325,77],[2847,77,2325,81,"factor"],[2847,83,2325,87],[2847,84,2325,88,"status"],[2847,90,2325,94],[2847,95,2325,99],[2847,105,2325,109],[2847,106,2325,110],[2848,6,2326,8],[2848,12,2326,14,"phone"],[2848,17,2326,19],[2848,20,2326,22,"factors"],[2848,27,2326,29],[2848,28,2326,30,"filter"],[2848,34,2326,36],[2848,35,2326,38,"factor"],[2848,41,2326,44],[2848,45,2326,49,"factor"],[2848,51,2326,55],[2848,52,2326,56,"factor_type"],[2848,63,2326,67],[2848,68,2326,72],[2848,75,2326,79],[2848,79,2326,83,"factor"],[2848,85,2326,89],[2848,86,2326,90,"status"],[2848,92,2326,96],[2848,97,2326,101],[2848,107,2326,111],[2848,108,2326,112],[2849,6,2327,8],[2849,13,2327,15],[2850,8,2328,12,"data"],[2850,12,2328,16],[2850,14,2328,18],[2851,10,2329,16,"all"],[2851,13,2329,19],[2851,15,2329,21,"factors"],[2851,22,2329,28],[2852,10,2330,16,"totp"],[2852,14,2330,20],[2853,10,2331,16,"phone"],[2854,8,2332,12],[2854,9,2332,13],[2855,8,2333,12,"error"],[2855,13,2333,17],[2855,15,2333,19],[2856,6,2334,8],[2856,7,2334,9],[2857,4,2335,4],[2858,4,2336,4],[2859,0,2337,0],[2860,0,2338,0],[2861,4,2339,4],[2861,10,2339,10,"_getAuthenticatorAssuranceLevel"],[2861,41,2339,41,"_getAuthenticatorAssuranceLevel"],[2861,42,2339,41],[2861,44,2339,44],[2862,6,2340,8],[2862,13,2340,15],[2862,17,2340,19],[2862,18,2340,20,"_acquireLock"],[2862,30,2340,32],[2862,31,2340,33],[2862,32,2340,34],[2862,33,2340,35],[2862,35,2340,37],[2862,47,2340,49],[2863,8,2341,12],[2863,15,2341,19],[2863,21,2341,25],[2863,25,2341,29],[2863,26,2341,30,"_useSession"],[2863,37,2341,41],[2863,38,2341,42],[2863,44,2341,49,"result"],[2863,50,2341,55],[2863,54,2341,60],[2864,10,2342,16],[2864,14,2342,20,"_a"],[2864,16,2342,22],[2864,18,2342,24,"_b"],[2864,20,2342,26],[2865,10,2343,16],[2865,16,2343,22],[2866,12,2343,24,"data"],[2866,16,2343,28],[2866,18,2343,30],[2867,14,2343,32,"session"],[2868,12,2343,40],[2868,13,2343,41],[2869,12,2343,43,"error"],[2869,17,2343,48],[2869,19,2343,50,"sessionError"],[2870,10,2343,64],[2870,11,2343,65],[2870,14,2343,68,"result"],[2870,20,2343,74],[2871,10,2344,16],[2871,14,2344,20,"sessionError"],[2871,26,2344,32],[2871,28,2344,34],[2872,12,2345,20],[2872,19,2345,27],[2873,14,2345,29,"data"],[2873,18,2345,33],[2873,20,2345,35],[2873,24,2345,39],[2874,14,2345,41,"error"],[2874,19,2345,46],[2874,21,2345,48,"sessionError"],[2875,12,2345,61],[2875,13,2345,62],[2876,10,2346,16],[2877,10,2347,16],[2877,14,2347,20],[2877,15,2347,21,"session"],[2877,22,2347,28],[2877,24,2347,30],[2878,12,2348,20],[2878,19,2348,27],[2879,14,2349,24,"data"],[2879,18,2349,28],[2879,20,2349,30],[2880,16,2349,32,"currentLevel"],[2880,28,2349,44],[2880,30,2349,46],[2880,34,2349,50],[2881,16,2349,52,"nextLevel"],[2881,25,2349,61],[2881,27,2349,63],[2881,31,2349,67],[2882,16,2349,69,"currentAuthenticationMethods"],[2882,44,2349,97],[2882,46,2349,99],[2883,14,2349,102],[2883,15,2349,103],[2884,14,2350,24,"error"],[2884,19,2350,29],[2884,21,2350,31],[2885,12,2351,20],[2885,13,2351,21],[2886,10,2352,16],[2887,10,2353,16],[2887,16,2353,22],[2888,12,2353,24,"payload"],[2889,10,2353,32],[2889,11,2353,33],[2889,14,2353,36],[2889,15,2353,37],[2889,16,2353,38],[2889,18,2353,40,"helpers_1"],[2889,27,2353,49],[2889,28,2353,50,"decodeJWT"],[2889,37,2353,59],[2889,39,2353,61,"session"],[2889,46,2353,68],[2889,47,2353,69,"access_token"],[2889,59,2353,81],[2889,60,2353,82],[2890,10,2354,16],[2890,14,2354,20,"currentLevel"],[2890,26,2354,32],[2890,29,2354,35],[2890,33,2354,39],[2891,10,2355,16],[2891,14,2355,20,"payload"],[2891,21,2355,27],[2891,22,2355,28,"aal"],[2891,25,2355,31],[2891,27,2355,33],[2892,12,2356,20,"currentLevel"],[2892,24,2356,32],[2892,27,2356,35,"payload"],[2892,34,2356,42],[2892,35,2356,43,"aal"],[2892,38,2356,46],[2893,10,2357,16],[2894,10,2358,16],[2894,14,2358,20,"nextLevel"],[2894,23,2358,29],[2894,26,2358,32,"currentLevel"],[2894,38,2358,44],[2895,10,2359,16],[2895,16,2359,22,"verifiedFactors"],[2895,31,2359,37],[2895,34,2359,40],[2895,35,2359,41,"_b"],[2895,37,2359,43],[2895,40,2359,46],[2895,41,2359,47,"_a"],[2895,43,2359,49],[2895,46,2359,52,"session"],[2895,53,2359,59],[2895,54,2359,60,"user"],[2895,58,2359,64],[2895,59,2359,65,"factors"],[2895,66,2359,72],[2895,72,2359,78],[2895,76,2359,82],[2895,80,2359,86,"_a"],[2895,82,2359,88],[2895,87,2359,93],[2895,92,2359,98],[2895,93,2359,99],[2895,96,2359,102],[2895,101,2359,107],[2895,102,2359,108],[2895,105,2359,111,"_a"],[2895,107,2359,113],[2895,108,2359,114,"filter"],[2895,114,2359,120],[2895,115,2359,122,"factor"],[2895,121,2359,128],[2895,125,2359,133,"factor"],[2895,131,2359,139],[2895,132,2359,140,"status"],[2895,138,2359,146],[2895,143,2359,151],[2895,153,2359,161],[2895,154,2359,162],[2895,160,2359,168],[2895,164,2359,172],[2895,168,2359,176,"_b"],[2895,170,2359,178],[2895,175,2359,183],[2895,180,2359,188],[2895,181,2359,189],[2895,184,2359,192,"_b"],[2895,186,2359,194],[2895,189,2359,197],[2895,191,2359,199],[2896,10,2360,16],[2896,14,2360,20,"verifiedFactors"],[2896,29,2360,35],[2896,30,2360,36,"length"],[2896,36,2360,42],[2896,39,2360,45],[2896,40,2360,46],[2896,42,2360,48],[2897,12,2361,20,"nextLevel"],[2897,21,2361,29],[2897,24,2361,32],[2897,30,2361,38],[2898,10,2362,16],[2899,10,2363,16],[2899,16,2363,22,"currentAuthenticationMethods"],[2899,44,2363,50],[2899,47,2363,53,"payload"],[2899,54,2363,60],[2899,55,2363,61,"amr"],[2899,58,2363,64],[2899,62,2363,68],[2899,64,2363,70],[2900,10,2364,16],[2900,17,2364,23],[2901,12,2364,25,"data"],[2901,16,2364,29],[2901,18,2364,31],[2902,14,2364,33,"currentLevel"],[2902,26,2364,45],[2903,14,2364,47,"nextLevel"],[2903,23,2364,56],[2904,14,2364,58,"currentAuthenticationMethods"],[2905,12,2364,87],[2905,13,2364,88],[2906,12,2364,90,"error"],[2906,17,2364,95],[2906,19,2364,97],[2907,10,2364,102],[2907,11,2364,103],[2908,8,2365,12],[2908,9,2365,13],[2908,10,2365,14],[2909,6,2366,8],[2909,7,2366,9],[2909,8,2366,10],[2910,4,2367,4],[2911,4,2368,4],[2911,10,2368,10,"fetchJwk"],[2911,18,2368,18,"fetchJwk"],[2911,19,2368,19,"kid"],[2911,22,2368,22],[2911,24,2368,24,"jwks"],[2911,28,2368,28],[2911,31,2368,31],[2912,6,2368,33,"keys"],[2912,10,2368,37],[2912,12,2368,39],[2913,4,2368,42],[2913,5,2368,43],[2913,7,2368,45],[2914,6,2369,8],[2915,6,2370,8],[2915,10,2370,12,"jwk"],[2915,13,2370,15],[2915,16,2370,18,"jwks"],[2915,20,2370,22],[2915,21,2370,23,"keys"],[2915,25,2370,27],[2915,26,2370,28,"find"],[2915,30,2370,32],[2915,31,2370,34,"key"],[2915,34,2370,37],[2915,38,2370,42,"key"],[2915,41,2370,45],[2915,42,2370,46,"kid"],[2915,45,2370,49],[2915,50,2370,54,"kid"],[2915,53,2370,57],[2915,54,2370,58],[2916,6,2371,8],[2916,10,2371,12,"jwk"],[2916,13,2371,15],[2916,15,2371,17],[2917,8,2372,12],[2917,15,2372,19,"jwk"],[2917,18,2372,22],[2918,6,2373,8],[2919,6,2374,8],[2919,12,2374,14,"now"],[2919,15,2374,17],[2919,18,2374,20,"Date"],[2919,22,2374,24],[2919,23,2374,25,"now"],[2919,26,2374,28],[2919,27,2374,29],[2919,28,2374,30],[2920,6,2375,8],[2921,6,2376,8,"jwk"],[2921,9,2376,11],[2921,12,2376,14],[2921,16,2376,18],[2921,17,2376,19,"jwks"],[2921,21,2376,23],[2921,22,2376,24,"keys"],[2921,26,2376,28],[2921,27,2376,29,"find"],[2921,31,2376,33],[2921,32,2376,35,"key"],[2921,35,2376,38],[2921,39,2376,43,"key"],[2921,42,2376,46],[2921,43,2376,47,"kid"],[2921,46,2376,50],[2921,51,2376,55,"kid"],[2921,54,2376,58],[2921,55,2376,59],[2922,6,2377,8],[2923,6,2378,8],[2923,10,2378,12,"jwk"],[2923,13,2378,15],[2923,17,2378,19],[2923,21,2378,23],[2923,22,2378,24,"jwks_cached_at"],[2923,36,2378,38],[2923,39,2378,41,"constants_1"],[2923,50,2378,52],[2923,51,2378,53,"JWKS_TTL"],[2923,59,2378,61],[2923,62,2378,64,"now"],[2923,65,2378,67],[2923,67,2378,69],[2924,8,2379,12],[2924,15,2379,19,"jwk"],[2924,18,2379,22],[2925,6,2380,8],[2926,6,2381,8],[2927,6,2382,8],[2927,12,2382,14],[2928,8,2382,16,"data"],[2928,12,2382,20],[2929,8,2382,22,"error"],[2930,6,2382,28],[2930,7,2382,29],[2930,10,2382,32],[2930,16,2382,38],[2930,17,2382,39],[2930,18,2382,40],[2930,20,2382,42,"fetch_1"],[2930,27,2382,49],[2930,28,2382,50,"_request"],[2930,36,2382,58],[2930,38,2382,60],[2930,42,2382,64],[2930,43,2382,65,"fetch"],[2930,48,2382,70],[2930,50,2382,72],[2930,55,2382,77],[2930,57,2382,79],[2930,60,2382,82],[2930,64,2382,86],[2930,65,2382,87,"url"],[2930,68,2382,90],[2930,92,2382,114],[2930,94,2382,116],[2931,8,2383,12,"headers"],[2931,15,2383,19],[2931,17,2383,21],[2931,21,2383,25],[2931,22,2383,26,"headers"],[2932,6,2384,8],[2932,7,2384,9],[2932,8,2384,10],[2933,6,2385,8],[2933,10,2385,12,"error"],[2933,15,2385,17],[2933,17,2385,19],[2934,8,2386,12],[2934,14,2386,18,"error"],[2934,19,2386,23],[2935,6,2387,8],[2936,6,2388,8],[2936,10,2388,12],[2936,11,2388,13,"data"],[2936,15,2388,17],[2936,16,2388,18,"keys"],[2936,20,2388,22],[2936,24,2388,26,"data"],[2936,28,2388,30],[2936,29,2388,31,"keys"],[2936,33,2388,35],[2936,34,2388,36,"length"],[2936,40,2388,42],[2936,45,2388,47],[2936,46,2388,48],[2936,48,2388,50],[2937,8,2389,12],[2937,15,2389,19],[2937,19,2389,23],[2938,6,2390,8],[2939,6,2391,8],[2939,10,2391,12],[2939,11,2391,13,"jwks"],[2939,15,2391,17],[2939,18,2391,20,"data"],[2939,22,2391,24],[2940,6,2392,8],[2940,10,2392,12],[2940,11,2392,13,"jwks_cached_at"],[2940,25,2392,27],[2940,28,2392,30,"now"],[2940,31,2392,33],[2941,6,2393,8],[2942,6,2394,8,"jwk"],[2942,9,2394,11],[2942,12,2394,14,"data"],[2942,16,2394,18],[2942,17,2394,19,"keys"],[2942,21,2394,23],[2942,22,2394,24,"find"],[2942,26,2394,28],[2942,27,2394,30,"key"],[2942,30,2394,33],[2942,34,2394,38,"key"],[2942,37,2394,41],[2942,38,2394,42,"kid"],[2942,41,2394,45],[2942,46,2394,50,"kid"],[2942,49,2394,53],[2942,50,2394,54],[2943,6,2395,8],[2943,10,2395,12],[2943,11,2395,13,"jwk"],[2943,14,2395,16],[2943,16,2395,18],[2944,8,2396,12],[2944,15,2396,19],[2944,19,2396,23],[2945,6,2397,8],[2946,6,2398,8],[2946,13,2398,15,"jwk"],[2946,16,2398,18],[2947,4,2399,4],[2948,4,2400,4],[2949,0,2401,0],[2950,0,2402,0],[2951,0,2403,0],[2952,0,2404,0],[2953,0,2405,0],[2954,0,2406,0],[2955,0,2407,0],[2956,0,2408,0],[2957,0,2409,0],[2958,0,2410,0],[2959,0,2411,0],[2960,0,2412,0],[2961,0,2413,0],[2962,0,2414,0],[2963,0,2415,0],[2964,4,2416,4],[2964,10,2416,10,"getClaims"],[2964,19,2416,19,"getClaims"],[2964,20,2416,20,"jwt"],[2964,23,2416,23],[2964,25,2416,25,"options"],[2964,32,2416,32],[2964,35,2416,35],[2964,36,2416,36],[2964,37,2416,37],[2964,39,2416,39],[2965,6,2417,8],[2965,10,2417,12],[2966,8,2418,12],[2966,12,2418,16,"token"],[2966,17,2418,21],[2966,20,2418,24,"jwt"],[2966,23,2418,27],[2967,8,2419,12],[2967,12,2419,16],[2967,13,2419,17,"token"],[2967,18,2419,22],[2967,20,2419,24],[2968,10,2420,16],[2968,16,2420,22],[2969,12,2420,24,"data"],[2969,16,2420,28],[2970,12,2420,30,"error"],[2971,10,2420,36],[2971,11,2420,37],[2971,14,2420,40],[2971,20,2420,46],[2971,24,2420,50],[2971,25,2420,51,"getSession"],[2971,35,2420,61],[2971,36,2420,62],[2971,37,2420,63],[2972,10,2421,16],[2972,14,2421,20,"error"],[2972,19,2421,25],[2972,23,2421,29],[2972,24,2421,30,"data"],[2972,28,2421,34],[2972,29,2421,35,"session"],[2972,36,2421,42],[2972,38,2421,44],[2973,12,2422,20],[2973,19,2422,27],[2974,14,2422,29,"data"],[2974,18,2422,33],[2974,20,2422,35],[2974,24,2422,39],[2975,14,2422,41,"error"],[2976,12,2422,47],[2976,13,2422,48],[2977,10,2423,16],[2978,10,2424,16,"token"],[2978,15,2424,21],[2978,18,2424,24,"data"],[2978,22,2424,28],[2978,23,2424,29,"session"],[2978,30,2424,36],[2978,31,2424,37,"access_token"],[2978,43,2424,49],[2979,8,2425,12],[2980,8,2426,12],[2980,14,2426,18],[2981,10,2426,20,"header"],[2981,16,2426,26],[2982,10,2426,28,"payload"],[2982,17,2426,35],[2983,10,2426,37,"signature"],[2983,19,2426,46],[2984,10,2426,48,"raw"],[2984,13,2426,51],[2984,15,2426,53],[2985,12,2426,55,"header"],[2985,18,2426,61],[2985,20,2426,63,"rawHeader"],[2985,29,2426,72],[2986,12,2426,74,"payload"],[2986,19,2426,81],[2986,21,2426,83,"rawPayload"],[2987,10,2426,94],[2988,8,2426,97],[2988,9,2426,98],[2988,12,2426,101],[2988,13,2426,102],[2988,14,2426,103],[2988,16,2426,105,"helpers_1"],[2988,25,2426,114],[2988,26,2426,115,"decodeJWT"],[2988,35,2426,124],[2988,37,2426,126,"token"],[2988,42,2426,131],[2988,43,2426,132],[2989,8,2427,12],[2989,12,2427,16],[2989,14,2427,18,"options"],[2989,21,2427,25],[2989,26,2427,30],[2989,30,2427,34],[2989,34,2427,38,"options"],[2989,41,2427,45],[2989,46,2427,50],[2989,51,2427,55],[2989,52,2427,56],[2989,55,2427,59],[2989,60,2427,64],[2989,61,2427,65],[2989,64,2427,68,"options"],[2989,71,2427,75],[2989,72,2427,76,"allowExpired"],[2989,84,2427,88],[2989,85,2427,89],[2989,87,2427,91],[2990,10,2428,16],[2991,10,2429,16],[2991,11,2429,17],[2991,12,2429,18],[2991,14,2429,20,"helpers_1"],[2991,23,2429,29],[2991,24,2429,30,"validateExp"],[2991,35,2429,41],[2991,37,2429,43,"payload"],[2991,44,2429,50],[2991,45,2429,51,"exp"],[2991,48,2429,54],[2991,49,2429,55],[2992,8,2430,12],[2993,8,2431,12],[2993,14,2431,18,"signingKey"],[2993,24,2431,28],[2993,27,2431,31],[2993,28,2431,32,"header"],[2993,34,2431,38],[2993,35,2431,39,"alg"],[2993,38,2431,42],[2993,42,2432,16,"header"],[2993,48,2432,22],[2993,49,2432,23,"alg"],[2993,52,2432,26],[2993,53,2432,27,"startsWith"],[2993,63,2432,37],[2993,64,2432,38],[2993,68,2432,42],[2993,69,2432,43],[2993,73,2433,16],[2993,74,2433,17,"header"],[2993,80,2433,23],[2993,81,2433,24,"kid"],[2993,84,2433,27],[2993,88,2434,16],[2993,90,2434,18],[2993,98,2434,26],[2993,102,2434,30,"globalThis"],[2993,112,2434,40],[2993,116,2434,44],[2993,124,2434,52],[2993,128,2434,56,"globalThis"],[2993,138,2434,66],[2993,139,2434,67,"crypto"],[2993,145,2434,73],[2993,146,2434,74],[2993,149,2435,18],[2993,153,2435,22],[2993,156,2436,18],[2993,162,2436,24],[2993,166,2436,28],[2993,167,2436,29,"fetchJwk"],[2993,175,2436,37],[2993,176,2436,38,"header"],[2993,182,2436,44],[2993,183,2436,45,"kid"],[2993,186,2436,48],[2993,188,2436,50],[2993,189,2436,51,"options"],[2993,196,2436,58],[2993,201,2436,63],[2993,205,2436,67],[2993,209,2436,71,"options"],[2993,216,2436,78],[2993,221,2436,83],[2993,226,2436,88],[2993,227,2436,89],[2993,230,2436,92],[2993,235,2436,97],[2993,236,2436,98],[2993,239,2436,101,"options"],[2993,246,2436,108],[2993,247,2436,109,"keys"],[2993,251,2436,113],[2993,255,2436,117],[2994,10,2436,119,"keys"],[2994,14,2436,123],[2994,16,2436,125,"options"],[2994,23,2436,132],[2994,24,2436,133,"keys"],[2995,8,2436,138],[2995,9,2436,139],[2995,12,2436,142,"options"],[2995,19,2436,149],[2995,24,2436,154],[2995,28,2436,158],[2995,32,2436,162,"options"],[2995,39,2436,169],[2995,44,2436,174],[2995,49,2436,179],[2995,50,2436,180],[2995,53,2436,183],[2995,58,2436,188],[2995,59,2436,189],[2995,62,2436,192,"options"],[2995,69,2436,199],[2995,70,2436,200,"jwks"],[2995,74,2436,204],[2995,75,2436,205],[2996,8,2437,12],[2997,8,2438,12],[2997,12,2438,16],[2997,13,2438,17,"signingKey"],[2997,23,2438,27],[2997,25,2438,29],[2998,10,2439,16],[2998,16,2439,22],[2999,12,2439,24,"error"],[3000,10,2439,30],[3000,11,2439,31],[3000,14,2439,34],[3000,20,2439,40],[3000,24,2439,44],[3000,25,2439,45,"getUser"],[3000,32,2439,52],[3000,33,2439,53,"token"],[3000,38,2439,58],[3000,39,2439,59],[3001,10,2440,16],[3001,14,2440,20,"error"],[3001,19,2440,25],[3001,21,2440,27],[3002,12,2441,20],[3002,18,2441,26,"error"],[3002,23,2441,31],[3003,10,2442,16],[3004,10,2443,16],[3005,10,2444,16],[3005,17,2444,23],[3006,12,2445,20,"data"],[3006,16,2445,24],[3006,18,2445,26],[3007,14,2446,24,"claims"],[3007,20,2446,30],[3007,22,2446,32,"payload"],[3007,29,2446,39],[3008,14,2447,24,"header"],[3008,20,2447,30],[3009,14,2448,24,"signature"],[3010,12,2449,20],[3010,13,2449,21],[3011,12,2450,20,"error"],[3011,17,2450,25],[3011,19,2450,27],[3012,10,2451,16],[3012,11,2451,17],[3013,8,2452,12],[3014,8,2453,12],[3014,14,2453,18,"algorithm"],[3014,23,2453,27],[3014,26,2453,30],[3014,27,2453,31],[3014,28,2453,32],[3014,30,2453,34,"helpers_1"],[3014,39,2453,43],[3014,40,2453,44,"getAlgorithm"],[3014,52,2453,56],[3014,54,2453,58,"header"],[3014,60,2453,64],[3014,61,2453,65,"alg"],[3014,64,2453,68],[3014,65,2453,69],[3015,8,2454,12],[3016,8,2455,12],[3016,14,2455,18,"publicKey"],[3016,23,2455,27],[3016,26,2455,30],[3016,32,2455,36,"crypto"],[3016,38,2455,42],[3016,39,2455,43,"subtle"],[3016,45,2455,49],[3016,46,2455,50,"importKey"],[3016,55,2455,59],[3016,56,2455,60],[3016,61,2455,65],[3016,63,2455,67,"signingKey"],[3016,73,2455,77],[3016,75,2455,79,"algorithm"],[3016,84,2455,88],[3016,86,2455,90],[3016,90,2455,94],[3016,92,2455,96],[3016,93,2456,16],[3016,101,2456,24],[3016,102,2457,13],[3016,103,2457,14],[3017,8,2458,12],[3018,8,2459,12],[3018,14,2459,18,"isValid"],[3018,21,2459,25],[3018,24,2459,28],[3018,30,2459,34,"crypto"],[3018,36,2459,40],[3018,37,2459,41,"subtle"],[3018,43,2459,47],[3018,44,2459,48,"verify"],[3018,50,2459,54],[3018,51,2459,55,"algorithm"],[3018,60,2459,64],[3018,62,2459,66,"publicKey"],[3018,71,2459,75],[3018,73,2459,77,"signature"],[3018,82,2459,86],[3018,84,2459,88],[3018,85,2459,89],[3018,86,2459,90],[3018,88,2459,92,"base64url_1"],[3018,99,2459,103],[3018,100,2459,104,"stringToUint8Array"],[3018,118,2459,122],[3018,120,2459,124],[3018,123,2459,127,"rawHeader"],[3018,132,2459,136],[3018,136,2459,140,"rawPayload"],[3018,146,2459,150],[3018,148,2459,152],[3018,149,2459,153],[3018,150,2459,154],[3019,8,2460,12],[3019,12,2460,16],[3019,13,2460,17,"isValid"],[3019,20,2460,24],[3019,22,2460,26],[3020,10,2461,16],[3020,16,2461,22],[3020,20,2461,26,"errors_1"],[3020,28,2461,34],[3020,29,2461,35,"AuthInvalidJwtError"],[3020,48,2461,54],[3020,49,2461,55],[3020,72,2461,78],[3020,73,2461,79],[3021,8,2462,12],[3022,8,2463,12],[3023,8,2464,12],[3023,15,2464,19],[3024,10,2465,16,"data"],[3024,14,2465,20],[3024,16,2465,22],[3025,12,2466,20,"claims"],[3025,18,2466,26],[3025,20,2466,28,"payload"],[3025,27,2466,35],[3026,12,2467,20,"header"],[3026,18,2467,26],[3027,12,2468,20,"signature"],[3028,10,2469,16],[3028,11,2469,17],[3029,10,2470,16,"error"],[3029,15,2470,21],[3029,17,2470,23],[3030,8,2471,12],[3030,9,2471,13],[3031,6,2472,8],[3031,7,2472,9],[3031,8,2473,8],[3031,15,2473,15,"error"],[3031,20,2473,20],[3031,22,2473,22],[3032,8,2474,12],[3032,12,2474,16],[3032,13,2474,17],[3032,14,2474,18],[3032,16,2474,20,"errors_1"],[3032,24,2474,28],[3032,25,2474,29,"isAuthError"],[3032,36,2474,40],[3032,38,2474,42,"error"],[3032,43,2474,47],[3032,44,2474,48],[3032,46,2474,50],[3033,10,2475,16],[3033,17,2475,23],[3034,12,2475,25,"data"],[3034,16,2475,29],[3034,18,2475,31],[3034,22,2475,35],[3035,12,2475,37,"error"],[3036,10,2475,43],[3036,11,2475,44],[3037,8,2476,12],[3038,8,2477,12],[3038,14,2477,18,"error"],[3038,19,2477,23],[3039,6,2478,8],[3040,4,2479,4],[3041,2,2480,0],[3042,2,2481,0,"exports"],[3042,9,2481,7],[3042,10,2481,8,"default"],[3042,17,2481,15],[3042,20,2481,18,"GoTrueClient"],[3042,32,2481,30],[3043,2,2482,0,"GoTrueClient"],[3043,14,2482,12],[3043,15,2482,13,"nextInstanceID"],[3043,29,2482,27],[3043,32,2482,30],[3043,33,2482,31],[3044,0,2482,32],[3044,3]],"functionMap":{"names":["<global>","<anonymous>","lockNoOp","GoTrueClient","constructor","_b.addEventListener$argument_1","get__jwks","set__jwks","get__jwks_cached_at","set__jwks_cached_at","_debug","initialize","_acquireLock$argument_1","_initialize","setTimeout$argument_0","signInAnonymously","signUp","signInWithPassword","signInWithOAuth","exchangeCodeForSession","signInWithWeb3","signInWithEthereum","resolvedWallet.request.then$argument_0","resolvedWallet.request.then._catch$argument_0","signInWithSolana","options.signInWithSolana.resources.map$argument_0","_exchangeCodeForSession","signInWithIdToken","signInWithOtp","verifyOtp","signInWithSSO","reauthenticate","_reauthenticate","_useSession$argument_0","resend","getSession","_acquireLock","lock$argument_2","_useSession","__loadSession","Proxy$argument_1.get","getUser","_getUser","updateUser","_updateUser","setSession","_setSession","refreshSession","_refreshSession","_getSessionFromURL","_isImplicitGrantCallback","_isPKCECallback","signOut","_signOut","onAuthStateChange","subscription.unsubscribe","_emitInitialSession","resetPasswordForEmail","getUserIdentities","linkIdentity","unlinkIdentity","_refreshAccessToken","_isValidSession","_handleProviderSignIn","_recoverAndRefresh","_callRefreshToken","_notifyAllSubscribers","Array.from.map$argument_0","_saveSession","_removeSession","_removeVisibilityChangedCallback","_startAutoRefresh","setInterval$argument_0","_stopAutoRefresh","startAutoRefresh","stopAutoRefresh","_autoRefreshTokenTick","_handleVisibilityChange","visibilityChangedCallback","_onVisibilityChanged","_getUrlForProvider","_unenroll","_enroll","_verify","_challenge","_challengeAndVerify","_listFactors","factors.filter$argument_0","_getAuthenticatorAssuranceLevel","_a.filter$argument_0","fetchJwk","jwks.keys.find$argument_0","data.keys.find$argument_0","getClaims"],"mappings":"AAA;wDCC;CDE;AEyB;CFE;AGU;ICI;6GCuG;aDG;KDG;IGI;KHG;IIC;KJE;IKC;KLG;IMC;KNE;IOC;KPK;IQM;kCVI;+CWC;aXE;SUC;KRE;IUO;2BCqC;iBDO;KVmB;IYM;KZ6B;IaW;Kb6D;IcS;KdoD;IeK;KfQ;IgBI;qCPE;SOE;KhBC;IiBQ;KjBU;IkBC;sBCsC,cD;uBEC;aFE;KlB+D;IqBC;sECmG,6BD;KrBwC;IuBC;KvBkC;IwBK;KxBoC;IyBkB;KzB+C;I0BI;K1BmC;I2Be;K3BuB;I4BK;2CnBE;SmBE;K5BC;I6BC;0CCE;aDW;K7BQ;I+BI;K/BoC;IgCY;mDvBE;oCqBC;arBE;SuBC;KhCE;IiCI;gCnCO;iBmCG;yCnCC;iBmCO;8ECG;6CpCK;qBoCO;aDc;KjCK;ImCO;KnCU;IoCM;6BC2C;yBDQ;KpCe;IsCQ;mD7BK;S6BE;KtCE;IuCC;0CTS;aSe;KvCc;IwCI;2C/BE;S+BE;KxCC;IyCC;0CXE;aW4B;KzCQ;I0CM;2CjCE;SiCE;K1CC;I2CC;K3CgD;I4CO;2CnCE;SmCE;K5CC;I6CC;0CfE;aeoB;K7CQ;I8CI;K9CsF;I+CI;K/CE;IgDI;KhDG;IiDS;2CxCE;SwCE;KjDC;IkDC;sCpBC;SoBuB;KlDC;ImDK;yBCK;aDG;SrDI;wCWE;aXE;SqDC;KnDE;IqDC;sCvBC;SuBc;KrDC;IsDQ;KtD0B;IuDI;KvDc;IwDK;2D1BG;a0Be;KxDc;IyDI;0C3BE;a2BU;KzDQ;I0DK;kD5DM;a4DU,E5D;a4DM;K1DY;I2DC;K3DO;I4DC;K5DY;I6DK;K7D0F;I8DC;K9DyC;I+DC;+ECQ;aDO;K/DY;IiEK;KjEmC;IkEC;KlES;ImEO;KnEY;IoEK;mCCG,kCD;mBzDqB;SyDG;KpEC;IsEK;KtEO;IuEuB;KvEG;IwES;KxEG;IyEI;uChEG;sDqBI;yBrBY;agES;KzEU;I0EM;6CCU,kDD;K1ES;I4EI;4CnEe;iBmEQ;K5EQ;I6EO;K7EwB;I8EC;0ChDE;agDU;K9EQ;I+EC;0CjDE;aiDmB;K/EQ;IgFI;qCvEC;8CqBE;iBrBiB;SuEQ;KhFC;IiFI;qCxEC;8CqBE;iBrBW;SwEQ;KjFC;IkFI;KlFc;ImFI;oCCO,yED;qCCC,0ED;KnFS;IqFI;qC5EC;0CqBC;yHwDkB,wCxD;arBM;S4EC;KrFC;IuFC;iCCE,wBD;kCCM,wBD;6BEkB,wBF;KvFK;I0FiB;K1F+D;CHC"},"hasCjsExports":true},"type":"js/module"}]}