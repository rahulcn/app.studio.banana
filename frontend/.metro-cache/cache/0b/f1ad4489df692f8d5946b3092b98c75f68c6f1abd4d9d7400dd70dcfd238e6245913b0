{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  // types and functions copied over from viem so this library doesn't depend on it\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.createSiweMessage = exports.toHex = exports.fromHex = exports.getAddress = void 0;\n  function getAddress(address) {\n    if (!/^0x[a-fA-F0-9]{40}$/.test(address)) {\n      throw new Error(`@supabase/auth-js: Address \"${address}\" is invalid.`);\n    }\n    return address.toLowerCase();\n  }\n  exports.getAddress = getAddress;\n  function fromHex(hex) {\n    return parseInt(hex, 16);\n  }\n  exports.fromHex = fromHex;\n  function toHex(value) {\n    const bytes = new TextEncoder().encode(value);\n    const hex = Array.from(bytes, byte => byte.toString(16).padStart(2, '0')).join('');\n    return '0x' + hex;\n  }\n  exports.toHex = toHex;\n  /**\n   * Creates EIP-4361 formatted message.\n   */\n  function createSiweMessage(parameters) {\n    var _a;\n    const {\n      chainId,\n      domain,\n      expirationTime,\n      issuedAt = new Date(),\n      nonce,\n      notBefore,\n      requestId,\n      resources,\n      scheme,\n      uri,\n      version\n    } = parameters;\n    // Validate fields\n    {\n      if (!Number.isInteger(chainId)) throw new Error(`@supabase/auth-js: Invalid SIWE message field \"chainId\". Chain ID must be a EIP-155 chain ID. Provided value: ${chainId}`);\n      if (!domain) throw new Error(`@supabase/auth-js: Invalid SIWE message field \"domain\". Domain must be provided.`);\n      if (nonce && nonce.length < 8) throw new Error(`@supabase/auth-js: Invalid SIWE message field \"nonce\". Nonce must be at least 8 characters. Provided value: ${nonce}`);\n      if (!uri) throw new Error(`@supabase/auth-js: Invalid SIWE message field \"uri\". URI must be provided.`);\n      if (version !== '1') throw new Error(`@supabase/auth-js: Invalid SIWE message field \"version\". Version must be '1'. Provided value: ${version}`);\n      if ((_a = parameters.statement) === null || _a === void 0 ? void 0 : _a.includes('\\n')) throw new Error(`@supabase/auth-js: Invalid SIWE message field \"statement\". Statement must not include '\\\\n'. Provided value: ${parameters.statement}`);\n    }\n    // Construct message\n    const address = getAddress(parameters.address);\n    const origin = scheme ? `${scheme}://${domain}` : domain;\n    const statement = parameters.statement ? `${parameters.statement}\\n` : '';\n    const prefix = `${origin} wants you to sign in with your Ethereum account:\\n${address}\\n\\n${statement}`;\n    let suffix = `URI: ${uri}\\nVersion: ${version}\\nChain ID: ${chainId}${nonce ? `\\nNonce: ${nonce}` : ''}\\nIssued At: ${issuedAt.toISOString()}`;\n    if (expirationTime) suffix += `\\nExpiration Time: ${expirationTime.toISOString()}`;\n    if (notBefore) suffix += `\\nNot Before: ${notBefore.toISOString()}`;\n    if (requestId) suffix += `\\nRequest ID: ${requestId}`;\n    if (resources) {\n      let content = '\\nResources:';\n      for (const resource of resources) {\n        if (!resource || typeof resource !== 'string') throw new Error(`@supabase/auth-js: Invalid SIWE message field \"resources\". Every resource must be a valid string. Provided value: ${resource}`);\n        content += `\\n- ${resource}`;\n      }\n      suffix += content;\n    }\n    return `${prefix}\\n${suffix}`;\n  }\n  exports.createSiweMessage = createSiweMessage;\n});","lineCount":73,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[5,2,3,0,"Object"],[5,8,3,6],[5,9,3,7,"defineProperty"],[5,23,3,21],[5,24,3,22,"exports"],[5,31,3,29],[5,33,3,31],[5,45,3,43],[5,47,3,45],[6,4,3,47,"value"],[6,9,3,52],[6,11,3,54],[7,2,3,59],[7,3,3,60],[7,4,3,61],[8,2,4,0,"exports"],[8,9,4,7],[8,10,4,8,"createSiweMessage"],[8,27,4,25],[8,30,4,28,"exports"],[8,37,4,35],[8,38,4,36,"toHex"],[8,43,4,41],[8,46,4,44,"exports"],[8,53,4,51],[8,54,4,52,"fromHex"],[8,61,4,59],[8,64,4,62,"exports"],[8,71,4,69],[8,72,4,70,"getAddress"],[8,82,4,80],[8,85,4,83],[8,90,4,88],[8,91,4,89],[9,2,5,0],[9,11,5,9,"getAddress"],[9,21,5,19,"getAddress"],[9,22,5,20,"address"],[9,29,5,27],[9,31,5,29],[10,4,6,4],[10,8,6,8],[10,9,6,9],[10,30,6,30],[10,31,6,31,"test"],[10,35,6,35],[10,36,6,36,"address"],[10,43,6,43],[10,44,6,44],[10,46,6,46],[11,6,7,8],[11,12,7,14],[11,16,7,18,"Error"],[11,21,7,23],[11,22,7,24],[11,53,7,55,"address"],[11,60,7,62],[11,75,7,77],[11,76,7,78],[12,4,8,4],[13,4,9,4],[13,11,9,11,"address"],[13,18,9,18],[13,19,9,19,"toLowerCase"],[13,30,9,30],[13,31,9,31],[13,32,9,32],[14,2,10,0],[15,2,11,0,"exports"],[15,9,11,7],[15,10,11,8,"getAddress"],[15,20,11,18],[15,23,11,21,"getAddress"],[15,33,11,31],[16,2,12,0],[16,11,12,9,"fromHex"],[16,18,12,16,"fromHex"],[16,19,12,17,"hex"],[16,22,12,20],[16,24,12,22],[17,4,13,4],[17,11,13,11,"parseInt"],[17,19,13,19],[17,20,13,20,"hex"],[17,23,13,23],[17,25,13,25],[17,27,13,27],[17,28,13,28],[18,2,14,0],[19,2,15,0,"exports"],[19,9,15,7],[19,10,15,8,"fromHex"],[19,17,15,15],[19,20,15,18,"fromHex"],[19,27,15,25],[20,2,16,0],[20,11,16,9,"toHex"],[20,16,16,14,"toHex"],[20,17,16,15,"value"],[20,22,16,20],[20,24,16,22],[21,4,17,4],[21,10,17,10,"bytes"],[21,15,17,15],[21,18,17,18],[21,22,17,22,"TextEncoder"],[21,33,17,33],[21,34,17,34],[21,35,17,35],[21,36,17,36,"encode"],[21,42,17,42],[21,43,17,43,"value"],[21,48,17,48],[21,49,17,49],[22,4,18,4],[22,10,18,10,"hex"],[22,13,18,13],[22,16,18,16,"Array"],[22,21,18,21],[22,22,18,22,"from"],[22,26,18,26],[22,27,18,27,"bytes"],[22,32,18,32],[22,34,18,35,"byte"],[22,38,18,39],[22,42,18,44,"byte"],[22,46,18,48],[22,47,18,49,"toString"],[22,55,18,57],[22,56,18,58],[22,58,18,60],[22,59,18,61],[22,60,18,62,"padStart"],[22,68,18,70],[22,69,18,71],[22,70,18,72],[22,72,18,74],[22,75,18,77],[22,76,18,78],[22,77,18,79],[22,78,18,80,"join"],[22,82,18,84],[22,83,18,85],[22,85,18,87],[22,86,18,88],[23,4,19,4],[23,11,19,12],[23,15,19,16],[23,18,19,19,"hex"],[23,21,19,22],[24,2,20,0],[25,2,21,0,"exports"],[25,9,21,7],[25,10,21,8,"toHex"],[25,15,21,13],[25,18,21,16,"toHex"],[25,23,21,21],[26,2,22,0],[27,0,23,0],[28,0,24,0],[29,2,25,0],[29,11,25,9,"createSiweMessage"],[29,28,25,26,"createSiweMessage"],[29,29,25,27,"parameters"],[29,39,25,37],[29,41,25,39],[30,4,26,4],[30,8,26,8,"_a"],[30,10,26,10],[31,4,27,4],[31,10,27,10],[32,6,27,12,"chainId"],[32,13,27,19],[33,6,27,21,"domain"],[33,12,27,27],[34,6,27,29,"expirationTime"],[34,20,27,43],[35,6,27,45,"issuedAt"],[35,14,27,53],[35,17,27,56],[35,21,27,60,"Date"],[35,25,27,64],[35,26,27,65],[35,27,27,66],[36,6,27,68,"nonce"],[36,11,27,73],[37,6,27,75,"notBefore"],[37,15,27,84],[38,6,27,86,"requestId"],[38,15,27,95],[39,6,27,97,"resources"],[39,15,27,106],[40,6,27,108,"scheme"],[40,12,27,114],[41,6,27,116,"uri"],[41,9,27,119],[42,6,27,121,"version"],[43,4,27,130],[43,5,27,131],[43,8,27,134,"parameters"],[43,18,27,144],[44,4,28,4],[45,4,29,4],[46,6,30,8],[46,10,30,12],[46,11,30,13,"Number"],[46,17,30,19],[46,18,30,20,"isInteger"],[46,27,30,29],[46,28,30,30,"chainId"],[46,35,30,37],[46,36,30,38],[46,38,31,12],[46,44,31,18],[46,48,31,22,"Error"],[46,53,31,27],[46,54,31,28],[46,167,31,141,"chainId"],[46,174,31,148],[46,176,31,150],[46,177,31,151],[47,6,32,8],[47,10,32,12],[47,11,32,13,"domain"],[47,17,32,19],[47,19,33,12],[47,25,33,18],[47,29,33,22,"Error"],[47,34,33,27],[47,35,33,28],[47,117,33,110],[47,118,33,111],[48,6,34,8],[48,10,34,12,"nonce"],[48,15,34,17],[48,19,34,21,"nonce"],[48,24,34,26],[48,25,34,27,"length"],[48,31,34,33],[48,34,34,36],[48,35,34,37],[48,37,35,12],[48,43,35,18],[48,47,35,22,"Error"],[48,52,35,27],[48,53,35,28],[48,164,35,139,"nonce"],[48,169,35,144],[48,171,35,146],[48,172,35,147],[49,6,36,8],[49,10,36,12],[49,11,36,13,"uri"],[49,14,36,16],[49,16,37,12],[49,22,37,18],[49,26,37,22,"Error"],[49,31,37,27],[49,32,37,28],[49,108,37,104],[49,109,37,105],[50,6,38,8],[50,10,38,12,"version"],[50,17,38,19],[50,22,38,24],[50,25,38,27],[50,27,39,12],[50,33,39,18],[50,37,39,22,"Error"],[50,42,39,27],[50,43,39,28],[50,140,39,125,"version"],[50,147,39,132],[50,149,39,134],[50,150,39,135],[51,6,40,8],[51,10,40,12],[51,11,40,13,"_a"],[51,13,40,15],[51,16,40,18,"parameters"],[51,26,40,28],[51,27,40,29,"statement"],[51,36,40,38],[51,42,40,44],[51,46,40,48],[51,50,40,52,"_a"],[51,52,40,54],[51,57,40,59],[51,62,40,64],[51,63,40,65],[51,66,40,68],[51,71,40,73],[51,72,40,74],[51,75,40,77,"_a"],[51,77,40,79],[51,78,40,80,"includes"],[51,86,40,88],[51,87,40,89],[51,91,40,93],[51,92,40,94],[51,94,41,12],[51,100,41,18],[51,104,41,22,"Error"],[51,109,41,27],[51,110,41,28],[51,222,41,140,"parameters"],[51,232,41,150],[51,233,41,151,"statement"],[51,242,41,160],[51,244,41,162],[51,245,41,163],[52,4,42,4],[53,4,43,4],[54,4,44,4],[54,10,44,10,"address"],[54,17,44,17],[54,20,44,20,"getAddress"],[54,30,44,30],[54,31,44,31,"parameters"],[54,41,44,41],[54,42,44,42,"address"],[54,49,44,49],[54,50,44,50],[55,4,45,4],[55,10,45,10,"origin"],[55,16,45,16],[55,19,45,19,"scheme"],[55,25,45,25],[55,28,45,28],[55,31,45,31,"scheme"],[55,37,45,37],[55,43,45,43,"domain"],[55,49,45,49],[55,51,45,51],[55,54,45,54,"domain"],[55,60,45,60],[56,4,46,4],[56,10,46,10,"statement"],[56,19,46,19],[56,22,46,22,"parameters"],[56,32,46,32],[56,33,46,33,"statement"],[56,42,46,42],[56,45,46,45],[56,48,46,48,"parameters"],[56,58,46,58],[56,59,46,59,"statement"],[56,68,46,68],[56,72,46,72],[56,75,46,75],[56,77,46,77],[57,4,47,4],[57,10,47,10,"prefix"],[57,16,47,16],[57,19,47,19],[57,22,47,22,"origin"],[57,28,47,28],[57,82,47,82,"address"],[57,89,47,89],[57,96,47,96,"statement"],[57,105,47,105],[57,107,47,107],[58,4,48,4],[58,8,48,8,"suffix"],[58,14,48,14],[58,17,48,17],[58,25,48,25,"uri"],[58,28,48,28],[58,42,48,42,"version"],[58,49,48,49],[58,64,48,64,"chainId"],[58,71,48,71],[58,74,48,74,"nonce"],[58,79,48,79],[58,82,48,82],[58,94,48,94,"nonce"],[58,99,48,99],[58,101,48,101],[58,104,48,104],[58,106,48,106],[58,122,48,122,"issuedAt"],[58,130,48,130],[58,131,48,131,"toISOString"],[58,142,48,142],[58,143,48,143],[58,144,48,144],[58,146,48,146],[59,4,49,4],[59,8,49,8,"expirationTime"],[59,22,49,22],[59,24,50,8,"suffix"],[59,30,50,14],[59,34,50,18],[59,56,50,40,"expirationTime"],[59,70,50,54],[59,71,50,55,"toISOString"],[59,82,50,66],[59,83,50,67],[59,84,50,68],[59,86,50,70],[60,4,51,4],[60,8,51,8,"notBefore"],[60,17,51,17],[60,19,52,8,"suffix"],[60,25,52,14],[60,29,52,18],[60,46,52,35,"notBefore"],[60,55,52,44],[60,56,52,45,"toISOString"],[60,67,52,56],[60,68,52,57],[60,69,52,58],[60,71,52,60],[61,4,53,4],[61,8,53,8,"requestId"],[61,17,53,17],[61,19,54,8,"suffix"],[61,25,54,14],[61,29,54,18],[61,46,54,35,"requestId"],[61,55,54,44],[61,57,54,46],[62,4,55,4],[62,8,55,8,"resources"],[62,17,55,17],[62,19,55,19],[63,6,56,8],[63,10,56,12,"content"],[63,17,56,19],[63,20,56,22],[63,34,56,36],[64,6,57,8],[64,11,57,13],[64,17,57,19,"resource"],[64,25,57,27],[64,29,57,31,"resources"],[64,38,57,40],[64,40,57,42],[65,8,58,12],[65,12,58,16],[65,13,58,17,"resource"],[65,21,58,25],[65,25,58,29],[65,32,58,36,"resource"],[65,40,58,44],[65,45,58,49],[65,53,58,57],[65,55,59,16],[65,61,59,22],[65,65,59,26,"Error"],[65,70,59,31],[65,71,59,32],[65,188,59,149,"resource"],[65,196,59,157],[65,198,59,159],[65,199,59,160],[66,8,60,12,"content"],[66,15,60,19],[66,19,60,23],[66,26,60,30,"resource"],[66,34,60,38],[66,36,60,40],[67,6,61,8],[68,6,62,8,"suffix"],[68,12,62,14],[68,16,62,18,"content"],[68,23,62,25],[69,4,63,4],[70,4,64,4],[70,11,64,11],[70,14,64,14,"prefix"],[70,20,64,20],[70,25,64,25,"suffix"],[70,31,64,31],[70,33,64,33],[71,2,65,0],[72,2,66,0,"exports"],[72,9,66,7],[72,10,66,8,"createSiweMessage"],[72,27,66,25],[72,30,66,28,"createSiweMessage"],[72,47,66,45],[73,0,66,46],[73,3]],"functionMap":{"names":["<global>","getAddress","fromHex","toHex","Array.from$argument_1","createSiweMessage"],"mappings":"AAA;ACI;CDK;AEE;CFE;AGE;kCCE,4CD;CHE;AKK;CLwC"},"hasCjsExports":true},"type":"js/module"}]}