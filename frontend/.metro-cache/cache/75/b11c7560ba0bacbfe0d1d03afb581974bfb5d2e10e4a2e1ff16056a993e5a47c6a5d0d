{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.registerWorkletStackDetails = registerWorkletStackDetails;\n  exports.reportFatalErrorOnJS = reportFatalErrorOnJS;\n  const _workletStackDetails = new Map();\n  function registerWorkletStackDetails(hash, stackDetails) {\n    _workletStackDetails.set(hash, stackDetails);\n  }\n  function getBundleOffset(error) {\n    var _error$stack;\n    const frame = (_error$stack = error.stack) === null || _error$stack === void 0 || (_error$stack = _error$stack.split('\\n')) === null || _error$stack === void 0 ? void 0 : _error$stack[0];\n    if (frame) {\n      const parsedFrame = /@([^@]+):(\\d+):(\\d+)/.exec(frame);\n      if (parsedFrame) {\n        const [, file, line, col] = parsedFrame;\n        return [file, Number(line), Number(col)];\n      }\n    }\n    return ['unknown', 0, 0];\n  }\n  function processStack(stack) {\n    const workletStackEntries = stack.match(/worklet_(\\d+):(\\d+):(\\d+)/g);\n    let result = stack;\n    workletStackEntries === null || workletStackEntries === void 0 || workletStackEntries.forEach(match => {\n      const [, hash, origLine, origCol] = match.split(/:|_/).map(Number);\n      const errorDetails = _workletStackDetails.get(hash);\n      if (!errorDetails) {\n        return;\n      }\n      const [error, lineOffset, colOffset] = errorDetails;\n      const [bundleFile, bundleLine, bundleCol] = getBundleOffset(error);\n      const line = origLine + bundleLine + lineOffset;\n      const col = origCol + bundleCol + colOffset;\n      result = result.replace(match, `${bundleFile}:${line}:${col}`);\n    });\n    return result;\n  }\n  function reportFatalErrorOnJS({\n    message,\n    stack\n  }) {\n    const error = new Error();\n    error.message = message;\n    error.stack = stack ? processStack(stack) : undefined;\n    error.name = 'ReanimatedError';\n    // @ts-ignore React Native's ErrorUtils implementation extends the Error type with jsEngine field\n    error.jsEngine = 'reanimated';\n    // @ts-ignore the reportFatalError method is an internal method of ErrorUtils not exposed in the type definitions\n    global.ErrorUtils.reportFatalError(error);\n  }\n});","lineCount":55,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,4,0,"exports"],[7,9,4,0],[7,10,4,0,"registerWorkletStackDetails"],[7,37,4,0],[7,40,4,0,"registerWorkletStackDetails"],[7,67,4,0],[8,2,36,0,"exports"],[8,9,36,0],[8,10,36,0,"reportFatalErrorOnJS"],[8,30,36,0],[8,33,36,0,"reportFatalErrorOnJS"],[8,53,36,0],[9,2,3,0],[9,8,3,6,"_workletStackDetails"],[9,28,3,26],[9,31,3,29],[9,35,3,33,"Map"],[9,38,3,36],[9,39,3,37],[9,40,3,38],[10,2,4,7],[10,11,4,16,"registerWorkletStackDetails"],[10,38,4,43,"registerWorkletStackDetails"],[10,39,4,44,"hash"],[10,43,4,48],[10,45,4,50,"stackDetails"],[10,57,4,62],[10,59,4,64],[11,4,5,2,"_workletStackDetails"],[11,24,5,22],[11,25,5,23,"set"],[11,28,5,26],[11,29,5,27,"hash"],[11,33,5,31],[11,35,5,33,"stackDetails"],[11,47,5,45],[11,48,5,46],[12,2,6,0],[13,2,7,0],[13,11,7,9,"getBundleOffset"],[13,26,7,24,"getBundleOffset"],[13,27,7,25,"error"],[13,32,7,30],[13,34,7,32],[14,4,8,2],[14,8,8,6,"_error$stack"],[14,20,8,18],[15,4,9,2],[15,10,9,8,"frame"],[15,15,9,13],[15,18,9,16],[15,19,9,17,"_error$stack"],[15,31,9,29],[15,34,9,32,"error"],[15,39,9,37],[15,40,9,38,"stack"],[15,45,9,43],[15,51,9,49],[15,55,9,53],[15,59,9,57,"_error$stack"],[15,71,9,69],[15,76,9,74],[15,81,9,79],[15,82,9,80],[15,86,9,84],[15,87,9,85,"_error$stack"],[15,99,9,97],[15,102,9,100,"_error$stack"],[15,114,9,112],[15,115,9,113,"split"],[15,120,9,118],[15,121,9,119],[15,125,9,123],[15,126,9,124],[15,132,9,130],[15,136,9,134],[15,140,9,138,"_error$stack"],[15,152,9,150],[15,157,9,155],[15,162,9,160],[15,163,9,161],[15,166,9,164],[15,171,9,169],[15,172,9,170],[15,175,9,173,"_error$stack"],[15,187,9,185],[15,188,9,186],[15,189,9,187],[15,190,9,188],[16,4,10,2],[16,8,10,6,"frame"],[16,13,10,11],[16,15,10,13],[17,6,11,4],[17,12,11,10,"parsedFrame"],[17,23,11,21],[17,26,11,24],[17,48,11,46],[17,49,11,47,"exec"],[17,53,11,51],[17,54,11,52,"frame"],[17,59,11,57],[17,60,11,58],[18,6,12,4],[18,10,12,8,"parsedFrame"],[18,21,12,19],[18,23,12,21],[19,8,13,6],[19,14,13,12],[19,17,13,15,"file"],[19,21,13,19],[19,23,13,21,"line"],[19,27,13,25],[19,29,13,27,"col"],[19,32,13,30],[19,33,13,31],[19,36,13,34,"parsedFrame"],[19,47,13,45],[20,8,14,6],[20,15,14,13],[20,16,14,14,"file"],[20,20,14,18],[20,22,14,20,"Number"],[20,28,14,26],[20,29,14,27,"line"],[20,33,14,31],[20,34,14,32],[20,36,14,34,"Number"],[20,42,14,40],[20,43,14,41,"col"],[20,46,14,44],[20,47,14,45],[20,48,14,46],[21,6,15,4],[22,4,16,2],[23,4,17,2],[23,11,17,9],[23,12,17,10],[23,21,17,19],[23,23,17,21],[23,24,17,22],[23,26,17,24],[23,27,17,25],[23,28,17,26],[24,2,18,0],[25,2,19,0],[25,11,19,9,"processStack"],[25,23,19,21,"processStack"],[25,24,19,22,"stack"],[25,29,19,27],[25,31,19,29],[26,4,20,2],[26,10,20,8,"workletStackEntries"],[26,29,20,27],[26,32,20,30,"stack"],[26,37,20,35],[26,38,20,36,"match"],[26,43,20,41],[26,44,20,42],[26,72,20,70],[26,73,20,71],[27,4,21,2],[27,8,21,6,"result"],[27,14,21,12],[27,17,21,15,"stack"],[27,22,21,20],[28,4,22,2,"workletStackEntries"],[28,23,22,21],[28,28,22,26],[28,32,22,30],[28,36,22,34,"workletStackEntries"],[28,55,22,53],[28,60,22,58],[28,65,22,63],[28,66,22,64],[28,70,22,68,"workletStackEntries"],[28,89,22,87],[28,90,22,88,"forEach"],[28,97,22,95],[28,98,22,96,"match"],[28,103,22,101],[28,107,22,105],[29,6,23,4],[29,12,23,10],[29,15,23,13,"hash"],[29,19,23,17],[29,21,23,19,"origLine"],[29,29,23,27],[29,31,23,29,"origCol"],[29,38,23,36],[29,39,23,37],[29,42,23,40,"match"],[29,47,23,45],[29,48,23,46,"split"],[29,53,23,51],[29,54,23,52],[29,59,23,57],[29,60,23,58],[29,61,23,59,"map"],[29,64,23,62],[29,65,23,63,"Number"],[29,71,23,69],[29,72,23,70],[30,6,24,4],[30,12,24,10,"errorDetails"],[30,24,24,22],[30,27,24,25,"_workletStackDetails"],[30,47,24,45],[30,48,24,46,"get"],[30,51,24,49],[30,52,24,50,"hash"],[30,56,24,54],[30,57,24,55],[31,6,25,4],[31,10,25,8],[31,11,25,9,"errorDetails"],[31,23,25,21],[31,25,25,23],[32,8,26,6],[33,6,27,4],[34,6,28,4],[34,12,28,10],[34,13,28,11,"error"],[34,18,28,16],[34,20,28,18,"lineOffset"],[34,30,28,28],[34,32,28,30,"colOffset"],[34,41,28,39],[34,42,28,40],[34,45,28,43,"errorDetails"],[34,57,28,55],[35,6,29,4],[35,12,29,10],[35,13,29,11,"bundleFile"],[35,23,29,21],[35,25,29,23,"bundleLine"],[35,35,29,33],[35,37,29,35,"bundleCol"],[35,46,29,44],[35,47,29,45],[35,50,29,48,"getBundleOffset"],[35,65,29,63],[35,66,29,64,"error"],[35,71,29,69],[35,72,29,70],[36,6,30,4],[36,12,30,10,"line"],[36,16,30,14],[36,19,30,17,"origLine"],[36,27,30,25],[36,30,30,28,"bundleLine"],[36,40,30,38],[36,43,30,41,"lineOffset"],[36,53,30,51],[37,6,31,4],[37,12,31,10,"col"],[37,15,31,13],[37,18,31,16,"origCol"],[37,25,31,23],[37,28,31,26,"bundleCol"],[37,37,31,35],[37,40,31,38,"colOffset"],[37,49,31,47],[38,6,32,4,"result"],[38,12,32,10],[38,15,32,13,"result"],[38,21,32,19],[38,22,32,20,"replace"],[38,29,32,27],[38,30,32,28,"match"],[38,35,32,33],[38,37,32,35],[38,40,32,38,"bundleFile"],[38,50,32,48],[38,54,32,52,"line"],[38,58,32,56],[38,62,32,60,"col"],[38,65,32,63],[38,67,32,65],[38,68,32,66],[39,4,33,2],[39,5,33,3],[39,6,33,4],[40,4,34,2],[40,11,34,9,"result"],[40,17,34,15],[41,2,35,0],[42,2,36,7],[42,11,36,16,"reportFatalErrorOnJS"],[42,31,36,36,"reportFatalErrorOnJS"],[42,32,36,37],[43,4,37,2,"message"],[43,11,37,9],[44,4,38,2,"stack"],[45,2,39,0],[45,3,39,1],[45,5,39,3],[46,4,40,2],[46,10,40,8,"error"],[46,15,40,13],[46,18,40,16],[46,22,40,20,"Error"],[46,27,40,25],[46,28,40,26],[46,29,40,27],[47,4,41,2,"error"],[47,9,41,7],[47,10,41,8,"message"],[47,17,41,15],[47,20,41,18,"message"],[47,27,41,25],[48,4,42,2,"error"],[48,9,42,7],[48,10,42,8,"stack"],[48,15,42,13],[48,18,42,16,"stack"],[48,23,42,21],[48,26,42,24,"processStack"],[48,38,42,36],[48,39,42,37,"stack"],[48,44,42,42],[48,45,42,43],[48,48,42,46,"undefined"],[48,57,42,55],[49,4,43,2,"error"],[49,9,43,7],[49,10,43,8,"name"],[49,14,43,12],[49,17,43,15],[49,34,43,32],[50,4,44,2],[51,4,45,2,"error"],[51,9,45,7],[51,10,45,8,"jsEngine"],[51,18,45,16],[51,21,45,19],[51,33,45,31],[52,4,46,2],[53,4,47,2,"global"],[53,10,47,8],[53,11,47,9,"ErrorUtils"],[53,21,47,19],[53,22,47,20,"reportFatalError"],[53,38,47,36],[53,39,47,37,"error"],[53,44,47,42],[53,45,47,43],[54,2,48,0],[55,0,48,1],[55,3]],"functionMap":{"names":["<global>","registerWorkletStackDetails","getBundleOffset","processStack","workletStackEntries.forEach$argument_0","reportFatalErrorOnJS"],"mappings":"AAA;OCG;CDE;AEC;CFW;AGC;gGCG;GDW;CHE;OKC;CLY"},"hasCjsExports":false},"type":"js/module"}]}