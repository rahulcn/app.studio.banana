{"dependencies":[{"name":"./helpers","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":18,"index":287},"end":{"line":4,"column":38,"index":307}}],"key":"f1qS3jT0PALHpwfgOy1Ia0GaJzk=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.processLock = exports.navigatorLock = exports.ProcessLockAcquireTimeoutError = exports.NavigatorLockAcquireTimeoutError = exports.LockAcquireTimeoutError = exports.internals = void 0;\n  const helpers_1 = require(_dependencyMap[0], \"./helpers\");\n  /**\n   * @experimental\n   */\n  exports.internals = {\n    /**\n     * @experimental\n     */\n    debug: !!(globalThis && (0, helpers_1.supportsLocalStorage)() && globalThis.localStorage && globalThis.localStorage.getItem('supabase.gotrue-js.locks.debug') === 'true')\n  };\n  /**\n   * An error thrown when a lock cannot be acquired after some amount of time.\n   *\n   * Use the {@link #isAcquireTimeout} property instead of checking with `instanceof`.\n   */\n  class LockAcquireTimeoutError extends Error {\n    constructor(message) {\n      super(message);\n      this.isAcquireTimeout = true;\n    }\n  }\n  exports.LockAcquireTimeoutError = LockAcquireTimeoutError;\n  class NavigatorLockAcquireTimeoutError extends LockAcquireTimeoutError {}\n  exports.NavigatorLockAcquireTimeoutError = NavigatorLockAcquireTimeoutError;\n  class ProcessLockAcquireTimeoutError extends LockAcquireTimeoutError {}\n  exports.ProcessLockAcquireTimeoutError = ProcessLockAcquireTimeoutError;\n  /**\n   * Implements a global exclusive lock using the Navigator LockManager API. It\n   * is available on all browsers released after 2022-03-15 with Safari being the\n   * last one to release support. If the API is not available, this function will\n   * throw. Make sure you check availablility before configuring {@link\n   * GoTrueClient}.\n   *\n   * You can turn on debugging by setting the `supabase.gotrue-js.locks.debug`\n   * local storage item to `true`.\n   *\n   * Internals:\n   *\n   * Since the LockManager API does not preserve stack traces for the async\n   * function passed in the `request` method, a trick is used where acquiring the\n   * lock releases a previously started promise to run the operation in the `fn`\n   * function. The lock waits for that promise to finish (with or without error),\n   * while the function will finally wait for the result anyway.\n   *\n   * @param name Name of the lock to be acquired.\n   * @param acquireTimeout If negative, no timeout. If 0 an error is thrown if\n   *                       the lock can't be acquired without waiting. If positive, the lock acquire\n   *                       will time out after so many milliseconds. An error is\n   *                       a timeout if it has `isAcquireTimeout` set to true.\n   * @param fn The operation to run once the lock is acquired.\n   */\n  async function navigatorLock(name, acquireTimeout, fn) {\n    if (exports.internals.debug) {\n      console.log('@supabase/gotrue-js: navigatorLock: acquire lock', name, acquireTimeout);\n    }\n    const abortController = new globalThis.AbortController();\n    if (acquireTimeout > 0) {\n      setTimeout(() => {\n        abortController.abort();\n        if (exports.internals.debug) {\n          console.log('@supabase/gotrue-js: navigatorLock acquire timed out', name);\n        }\n      }, acquireTimeout);\n    }\n    // MDN article: https://developer.mozilla.org/en-US/docs/Web/API/LockManager/request\n    // Wrapping navigator.locks.request() with a plain Promise is done as some\n    // libraries like zone.js patch the Promise object to track the execution\n    // context. However, it appears that most browsers use an internal promise\n    // implementation when using the navigator.locks.request() API causing them\n    // to lose context and emit confusing log messages or break certain features.\n    // This wrapping is believed to help zone.js track the execution context\n    // better.\n    return await Promise.resolve().then(() => globalThis.navigator.locks.request(name, acquireTimeout === 0 ? {\n      mode: 'exclusive',\n      ifAvailable: true\n    } : {\n      mode: 'exclusive',\n      signal: abortController.signal\n    }, async lock => {\n      if (lock) {\n        if (exports.internals.debug) {\n          console.log('@supabase/gotrue-js: navigatorLock: acquired', name, lock.name);\n        }\n        try {\n          return await fn();\n        } finally {\n          if (exports.internals.debug) {\n            console.log('@supabase/gotrue-js: navigatorLock: released', name, lock.name);\n          }\n        }\n      } else {\n        if (acquireTimeout === 0) {\n          if (exports.internals.debug) {\n            console.log('@supabase/gotrue-js: navigatorLock: not immediately available', name);\n          }\n          throw new NavigatorLockAcquireTimeoutError(`Acquiring an exclusive Navigator LockManager lock \"${name}\" immediately failed`);\n        } else {\n          if (exports.internals.debug) {\n            try {\n              const result = await globalThis.navigator.locks.query();\n              console.log('@supabase/gotrue-js: Navigator LockManager state', JSON.stringify(result, null, '  '));\n            } catch (e) {\n              console.warn('@supabase/gotrue-js: Error when querying Navigator LockManager state', e);\n            }\n          }\n          // Browser is not following the Navigator LockManager spec, it\n          // returned a null lock when we didn't use ifAvailable. So we can\n          // pretend the lock is acquired in the name of backward compatibility\n          // and user experience and just run the function.\n          console.warn('@supabase/gotrue-js: Navigator LockManager returned a null lock when using #request without ifAvailable set to true, it appears this browser is not following the LockManager spec https://developer.mozilla.org/en-US/docs/Web/API/LockManager/request');\n          return await fn();\n        }\n      }\n    }));\n  }\n  exports.navigatorLock = navigatorLock;\n  const PROCESS_LOCKS = {};\n  /**\n   * Implements a global exclusive lock that works only in the current process.\n   * Useful for environments like React Native or other non-browser\n   * single-process (i.e. no concept of \"tabs\") environments.\n   *\n   * Use {@link #navigatorLock} in browser environments.\n   *\n   * @param name Name of the lock to be acquired.\n   * @param acquireTimeout If negative, no timeout. If 0 an error is thrown if\n   *                       the lock can't be acquired without waiting. If positive, the lock acquire\n   *                       will time out after so many milliseconds. An error is\n   *                       a timeout if it has `isAcquireTimeout` set to true.\n   * @param fn The operation to run once the lock is acquired.\n   */\n  async function processLock(name, acquireTimeout, fn) {\n    var _a;\n    const previousOperation = (_a = PROCESS_LOCKS[name]) !== null && _a !== void 0 ? _a : Promise.resolve();\n    const currentOperation = Promise.race([previousOperation.catch(() => {\n      // ignore error of previous operation that we're waiting to finish\n      return null;\n    }), acquireTimeout >= 0 ? new Promise((_, reject) => {\n      setTimeout(() => {\n        reject(new ProcessLockAcquireTimeoutError(`Acquring process lock with name \"${name}\" timed out`));\n      }, acquireTimeout);\n    }) : null].filter(x => x)).catch(e => {\n      if (e && e.isAcquireTimeout) {\n        throw e;\n      }\n      return null;\n    }).then(async () => {\n      // previous operations finished and we didn't get a race on the acquire\n      // timeout, so the current operation can finally start\n      return await fn();\n    });\n    PROCESS_LOCKS[name] = currentOperation.catch(async e => {\n      if (e && e.isAcquireTimeout) {\n        // if the current operation timed out, it doesn't mean that the previous\n        // operation finished, so we need contnue waiting for it to finish\n        await previousOperation;\n        return null;\n      }\n      throw e;\n    });\n    // finally wait for the current operation to finish successfully, with an\n    // error or with an acquire timeout error\n    return await currentOperation;\n  }\n  exports.processLock = processLock;\n});","lineCount":173,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"Object"],[4,8,2,6],[4,9,2,7,"defineProperty"],[4,23,2,21],[4,24,2,22,"exports"],[4,31,2,29],[4,33,2,31],[4,45,2,43],[4,47,2,45],[5,4,2,47,"value"],[5,9,2,52],[5,11,2,54],[6,2,2,59],[6,3,2,60],[6,4,2,61],[7,2,3,0,"exports"],[7,9,3,7],[7,10,3,8,"processLock"],[7,21,3,19],[7,24,3,22,"exports"],[7,31,3,29],[7,32,3,30,"navigatorLock"],[7,45,3,43],[7,48,3,46,"exports"],[7,55,3,53],[7,56,3,54,"ProcessLockAcquireTimeoutError"],[7,86,3,84],[7,89,3,87,"exports"],[7,96,3,94],[7,97,3,95,"NavigatorLockAcquireTimeoutError"],[7,129,3,127],[7,132,3,130,"exports"],[7,139,3,137],[7,140,3,138,"LockAcquireTimeoutError"],[7,163,3,161],[7,166,3,164,"exports"],[7,173,3,171],[7,174,3,172,"internals"],[7,183,3,181],[7,186,3,184],[7,191,3,189],[7,192,3,190],[8,2,4,0],[8,8,4,6,"helpers_1"],[8,17,4,15],[8,20,4,18,"require"],[8,27,4,25],[8,28,4,25,"_dependencyMap"],[8,42,4,25],[8,58,4,37],[8,59,4,38],[9,2,5,0],[10,0,6,0],[11,0,7,0],[12,2,8,0,"exports"],[12,9,8,7],[12,10,8,8,"internals"],[12,19,8,17],[12,22,8,20],[13,4,9,4],[14,0,10,0],[15,0,11,0],[16,4,12,4,"debug"],[16,9,12,9],[16,11,12,11],[16,12,12,12],[16,14,12,14,"globalThis"],[16,24,12,24],[16,28,13,8],[16,29,13,9],[16,30,13,10],[16,32,13,12,"helpers_1"],[16,41,13,21],[16,42,13,22,"supportsLocalStorage"],[16,62,13,42],[16,64,13,44],[16,65,13,45],[16,69,14,8,"globalThis"],[16,79,14,18],[16,80,14,19,"localStorage"],[16,92,14,31],[16,96,15,8,"globalThis"],[16,106,15,18],[16,107,15,19,"localStorage"],[16,119,15,31],[16,120,15,32,"getItem"],[16,127,15,39],[16,128,15,40],[16,160,15,72],[16,161,15,73],[16,166,15,78],[16,172,15,84],[17,2,16,0],[17,3,16,1],[18,2,17,0],[19,0,18,0],[20,0,19,0],[21,0,20,0],[22,0,21,0],[23,2,22,0],[23,8,22,6,"LockAcquireTimeoutError"],[23,31,22,29],[23,40,22,38,"Error"],[23,45,22,43],[23,46,22,44],[24,4,23,4,"constructor"],[24,15,23,15,"constructor"],[24,16,23,16,"message"],[24,23,23,23],[24,25,23,25],[25,6,24,8],[25,11,24,13],[25,12,24,14,"message"],[25,19,24,21],[25,20,24,22],[26,6,25,8],[26,10,25,12],[26,11,25,13,"isAcquireTimeout"],[26,27,25,29],[26,30,25,32],[26,34,25,36],[27,4,26,4],[28,2,27,0],[29,2,28,0,"exports"],[29,9,28,7],[29,10,28,8,"LockAcquireTimeoutError"],[29,33,28,31],[29,36,28,34,"LockAcquireTimeoutError"],[29,59,28,57],[30,2,29,0],[30,8,29,6,"NavigatorLockAcquireTimeoutError"],[30,40,29,38],[30,49,29,47,"LockAcquireTimeoutError"],[30,72,29,70],[30,73,29,71],[31,2,31,0,"exports"],[31,9,31,7],[31,10,31,8,"NavigatorLockAcquireTimeoutError"],[31,42,31,40],[31,45,31,43,"NavigatorLockAcquireTimeoutError"],[31,77,31,75],[32,2,32,0],[32,8,32,6,"ProcessLockAcquireTimeoutError"],[32,38,32,36],[32,47,32,45,"LockAcquireTimeoutError"],[32,70,32,68],[32,71,32,69],[33,2,34,0,"exports"],[33,9,34,7],[33,10,34,8,"ProcessLockAcquireTimeoutError"],[33,40,34,38],[33,43,34,41,"ProcessLockAcquireTimeoutError"],[33,73,34,71],[34,2,35,0],[35,0,36,0],[36,0,37,0],[37,0,38,0],[38,0,39,0],[39,0,40,0],[40,0,41,0],[41,0,42,0],[42,0,43,0],[43,0,44,0],[44,0,45,0],[45,0,46,0],[46,0,47,0],[47,0,48,0],[48,0,49,0],[49,0,50,0],[50,0,51,0],[51,0,52,0],[52,0,53,0],[53,0,54,0],[54,0,55,0],[55,0,56,0],[56,0,57,0],[57,0,58,0],[58,0,59,0],[59,2,60,0],[59,17,60,15,"navigatorLock"],[59,30,60,28,"navigatorLock"],[59,31,60,29,"name"],[59,35,60,33],[59,37,60,35,"acquireTimeout"],[59,51,60,49],[59,53,60,51,"fn"],[59,55,60,53],[59,57,60,55],[60,4,61,4],[60,8,61,8,"exports"],[60,15,61,15],[60,16,61,16,"internals"],[60,25,61,25],[60,26,61,26,"debug"],[60,31,61,31],[60,33,61,33],[61,6,62,8,"console"],[61,13,62,15],[61,14,62,16,"log"],[61,17,62,19],[61,18,62,20],[61,68,62,70],[61,70,62,72,"name"],[61,74,62,76],[61,76,62,78,"acquireTimeout"],[61,90,62,92],[61,91,62,93],[62,4,63,4],[63,4,64,4],[63,10,64,10,"abortController"],[63,25,64,25],[63,28,64,28],[63,32,64,32,"globalThis"],[63,42,64,42],[63,43,64,43,"AbortController"],[63,58,64,58],[63,59,64,59],[63,60,64,60],[64,4,65,4],[64,8,65,8,"acquireTimeout"],[64,22,65,22],[64,25,65,25],[64,26,65,26],[64,28,65,28],[65,6,66,8,"setTimeout"],[65,16,66,18],[65,17,66,19],[65,23,66,25],[66,8,67,12,"abortController"],[66,23,67,27],[66,24,67,28,"abort"],[66,29,67,33],[66,30,67,34],[66,31,67,35],[67,8,68,12],[67,12,68,16,"exports"],[67,19,68,23],[67,20,68,24,"internals"],[67,29,68,33],[67,30,68,34,"debug"],[67,35,68,39],[67,37,68,41],[68,10,69,16,"console"],[68,17,69,23],[68,18,69,24,"log"],[68,21,69,27],[68,22,69,28],[68,76,69,82],[68,78,69,84,"name"],[68,82,69,88],[68,83,69,89],[69,8,70,12],[70,6,71,8],[70,7,71,9],[70,9,71,11,"acquireTimeout"],[70,23,71,25],[70,24,71,26],[71,4,72,4],[72,4,73,4],[73,4,74,4],[74,4,75,4],[75,4,76,4],[76,4,77,4],[77,4,78,4],[78,4,79,4],[79,4,80,4],[80,4,81,4],[80,11,81,11],[80,17,81,17,"Promise"],[80,24,81,24],[80,25,81,25,"resolve"],[80,32,81,32],[80,33,81,33],[80,34,81,34],[80,35,81,35,"then"],[80,39,81,39],[80,40,81,40],[80,46,81,46,"globalThis"],[80,56,81,56],[80,57,81,57,"navigator"],[80,66,81,66],[80,67,81,67,"locks"],[80,72,81,72],[80,73,81,73,"request"],[80,80,81,80],[80,81,81,81,"name"],[80,85,81,85],[80,87,81,87,"acquireTimeout"],[80,101,81,101],[80,106,81,106],[80,107,81,107],[80,110,82,10],[81,6,83,12,"mode"],[81,10,83,16],[81,12,83,18],[81,23,83,29],[82,6,84,12,"ifAvailable"],[82,17,84,23],[82,19,84,25],[83,4,85,8],[83,5,85,9],[83,8,86,10],[84,6,87,12,"mode"],[84,10,87,16],[84,12,87,18],[84,23,87,29],[85,6,88,12,"signal"],[85,12,88,18],[85,14,88,20,"abortController"],[85,29,88,35],[85,30,88,36,"signal"],[86,4,89,8],[86,5,89,9],[86,7,89,11],[86,13,89,18,"lock"],[86,17,89,22],[86,21,89,27],[87,6,90,8],[87,10,90,12,"lock"],[87,14,90,16],[87,16,90,18],[88,8,91,12],[88,12,91,16,"exports"],[88,19,91,23],[88,20,91,24,"internals"],[88,29,91,33],[88,30,91,34,"debug"],[88,35,91,39],[88,37,91,41],[89,10,92,16,"console"],[89,17,92,23],[89,18,92,24,"log"],[89,21,92,27],[89,22,92,28],[89,68,92,74],[89,70,92,76,"name"],[89,74,92,80],[89,76,92,82,"lock"],[89,80,92,86],[89,81,92,87,"name"],[89,85,92,91],[89,86,92,92],[90,8,93,12],[91,8,94,12],[91,12,94,16],[92,10,95,16],[92,17,95,23],[92,23,95,29,"fn"],[92,25,95,31],[92,26,95,32],[92,27,95,33],[93,8,96,12],[93,9,96,13],[93,18,97,20],[94,10,98,16],[94,14,98,20,"exports"],[94,21,98,27],[94,22,98,28,"internals"],[94,31,98,37],[94,32,98,38,"debug"],[94,37,98,43],[94,39,98,45],[95,12,99,20,"console"],[95,19,99,27],[95,20,99,28,"log"],[95,23,99,31],[95,24,99,32],[95,70,99,78],[95,72,99,80,"name"],[95,76,99,84],[95,78,99,86,"lock"],[95,82,99,90],[95,83,99,91,"name"],[95,87,99,95],[95,88,99,96],[96,10,100,16],[97,8,101,12],[98,6,102,8],[98,7,102,9],[98,13,103,13],[99,8,104,12],[99,12,104,16,"acquireTimeout"],[99,26,104,30],[99,31,104,35],[99,32,104,36],[99,34,104,38],[100,10,105,16],[100,14,105,20,"exports"],[100,21,105,27],[100,22,105,28,"internals"],[100,31,105,37],[100,32,105,38,"debug"],[100,37,105,43],[100,39,105,45],[101,12,106,20,"console"],[101,19,106,27],[101,20,106,28,"log"],[101,23,106,31],[101,24,106,32],[101,87,106,95],[101,89,106,97,"name"],[101,93,106,101],[101,94,106,102],[102,10,107,16],[103,10,108,16],[103,16,108,22],[103,20,108,26,"NavigatorLockAcquireTimeoutError"],[103,52,108,58],[103,53,108,59],[103,107,108,113,"name"],[103,111,108,117],[103,133,108,139],[103,134,108,140],[104,8,109,12],[104,9,109,13],[104,15,110,17],[105,10,111,16],[105,14,111,20,"exports"],[105,21,111,27],[105,22,111,28,"internals"],[105,31,111,37],[105,32,111,38,"debug"],[105,37,111,43],[105,39,111,45],[106,12,112,20],[106,16,112,24],[107,14,113,24],[107,20,113,30,"result"],[107,26,113,36],[107,29,113,39],[107,35,113,45,"globalThis"],[107,45,113,55],[107,46,113,56,"navigator"],[107,55,113,65],[107,56,113,66,"locks"],[107,61,113,71],[107,62,113,72,"query"],[107,67,113,77],[107,68,113,78],[107,69,113,79],[108,14,114,24,"console"],[108,21,114,31],[108,22,114,32,"log"],[108,25,114,35],[108,26,114,36],[108,76,114,86],[108,78,114,88,"JSON"],[108,82,114,92],[108,83,114,93,"stringify"],[108,92,114,102],[108,93,114,103,"result"],[108,99,114,109],[108,101,114,111],[108,105,114,115],[108,107,114,117],[108,111,114,121],[108,112,114,122],[108,113,114,123],[109,12,115,20],[109,13,115,21],[109,14,116,20],[109,21,116,27,"e"],[109,22,116,28],[109,24,116,30],[110,14,117,24,"console"],[110,21,117,31],[110,22,117,32,"warn"],[110,26,117,36],[110,27,117,37],[110,97,117,107],[110,99,117,109,"e"],[110,100,117,110],[110,101,117,111],[111,12,118,20],[112,10,119,16],[113,10,120,16],[114,10,121,16],[115,10,122,16],[116,10,123,16],[117,10,124,16,"console"],[117,17,124,23],[117,18,124,24,"warn"],[117,22,124,28],[117,23,124,29],[117,272,124,278],[117,273,124,279],[118,10,125,16],[118,17,125,23],[118,23,125,29,"fn"],[118,25,125,31],[118,26,125,32],[118,27,125,33],[119,8,126,12],[120,6,127,8],[121,4,128,4],[121,5,128,5],[121,6,128,6],[121,7,128,7],[122,2,129,0],[123,2,130,0,"exports"],[123,9,130,7],[123,10,130,8,"navigatorLock"],[123,23,130,21],[123,26,130,24,"navigatorLock"],[123,39,130,37],[124,2,131,0],[124,8,131,6,"PROCESS_LOCKS"],[124,21,131,19],[124,24,131,22],[124,25,131,23],[124,26,131,24],[125,2,132,0],[126,0,133,0],[127,0,134,0],[128,0,135,0],[129,0,136,0],[130,0,137,0],[131,0,138,0],[132,0,139,0],[133,0,140,0],[134,0,141,0],[135,0,142,0],[136,0,143,0],[137,0,144,0],[138,0,145,0],[139,2,146,0],[139,17,146,15,"processLock"],[139,28,146,26,"processLock"],[139,29,146,27,"name"],[139,33,146,31],[139,35,146,33,"acquireTimeout"],[139,49,146,47],[139,51,146,49,"fn"],[139,53,146,51],[139,55,146,53],[140,4,147,4],[140,8,147,8,"_a"],[140,10,147,10],[141,4,148,4],[141,10,148,10,"previousOperation"],[141,27,148,27],[141,30,148,30],[141,31,148,31,"_a"],[141,33,148,33],[141,36,148,36,"PROCESS_LOCKS"],[141,49,148,49],[141,50,148,50,"name"],[141,54,148,54],[141,55,148,55],[141,61,148,61],[141,65,148,65],[141,69,148,69,"_a"],[141,71,148,71],[141,76,148,76],[141,81,148,81],[141,82,148,82],[141,85,148,85,"_a"],[141,87,148,87],[141,90,148,90,"Promise"],[141,97,148,97],[141,98,148,98,"resolve"],[141,105,148,105],[141,106,148,106],[141,107,148,107],[142,4,149,4],[142,10,149,10,"currentOperation"],[142,26,149,26],[142,29,149,29,"Promise"],[142,36,149,36],[142,37,149,37,"race"],[142,41,149,41],[142,42,149,42],[142,43,150,8,"previousOperation"],[142,60,150,25],[142,61,150,26,"catch"],[142,66,150,31],[142,67,150,32],[142,73,150,38],[143,6,151,12],[144,6,152,12],[144,13,152,19],[144,17,152,23],[145,4,153,8],[145,5,153,9],[145,6,153,10],[145,8,154,8,"acquireTimeout"],[145,22,154,22],[145,26,154,26],[145,27,154,27],[145,30,155,14],[145,34,155,18,"Promise"],[145,41,155,25],[145,42,155,26],[145,43,155,27,"_"],[145,44,155,28],[145,46,155,30,"reject"],[145,52,155,36],[145,57,155,41],[146,6,156,16,"setTimeout"],[146,16,156,26],[146,17,156,27],[146,23,156,33],[147,8,157,20,"reject"],[147,14,157,26],[147,15,157,27],[147,19,157,31,"ProcessLockAcquireTimeoutError"],[147,49,157,61],[147,50,157,62],[147,86,157,98,"name"],[147,90,157,102],[147,103,157,115],[147,104,157,116],[147,105,157,117],[148,6,158,16],[148,7,158,17],[148,9,158,19,"acquireTimeout"],[148,23,158,33],[148,24,158,34],[149,4,159,12],[149,5,159,13],[149,6,159,14],[149,9,160,14],[149,13,160,18],[149,14,161,5],[149,15,161,6,"filter"],[149,21,161,12],[149,22,161,14,"x"],[149,23,161,15],[149,27,161,20,"x"],[149,28,161,21],[149,29,161,22],[149,30,161,23],[149,31,162,9,"catch"],[149,36,162,14],[149,37,162,16,"e"],[149,38,162,17],[149,42,162,22],[150,6,163,8],[150,10,163,12,"e"],[150,11,163,13],[150,15,163,17,"e"],[150,16,163,18],[150,17,163,19,"isAcquireTimeout"],[150,33,163,35],[150,35,163,37],[151,8,164,12],[151,14,164,18,"e"],[151,15,164,19],[152,6,165,8],[153,6,166,8],[153,13,166,15],[153,17,166,19],[154,4,167,4],[154,5,167,5],[154,6,167,6],[154,7,168,9,"then"],[154,11,168,13],[154,12,168,14],[154,24,168,26],[155,6,169,8],[156,6,170,8],[157,6,171,8],[157,13,171,15],[157,19,171,21,"fn"],[157,21,171,23],[157,22,171,24],[157,23,171,25],[158,4,172,4],[158,5,172,5],[158,6,172,6],[159,4,173,4,"PROCESS_LOCKS"],[159,17,173,17],[159,18,173,18,"name"],[159,22,173,22],[159,23,173,23],[159,26,173,26,"currentOperation"],[159,42,173,42],[159,43,173,43,"catch"],[159,48,173,48],[159,49,173,49],[159,55,173,56,"e"],[159,56,173,57],[159,60,173,62],[160,6,174,8],[160,10,174,12,"e"],[160,11,174,13],[160,15,174,17,"e"],[160,16,174,18],[160,17,174,19,"isAcquireTimeout"],[160,33,174,35],[160,35,174,37],[161,8,175,12],[162,8,176,12],[163,8,177,12],[163,14,177,18,"previousOperation"],[163,31,177,35],[164,8,178,12],[164,15,178,19],[164,19,178,23],[165,6,179,8],[166,6,180,8],[166,12,180,14,"e"],[166,13,180,15],[167,4,181,4],[167,5,181,5],[167,6,181,6],[168,4,182,4],[169,4,183,4],[170,4,184,4],[170,11,184,11],[170,17,184,17,"currentOperation"],[170,33,184,33],[171,2,185,0],[172,2,186,0,"exports"],[172,9,186,7],[172,10,186,8,"processLock"],[172,21,186,19],[172,24,186,22,"processLock"],[172,35,186,33],[173,0,186,34],[173,3]],"functionMap":{"names":["<global>","LockAcquireTimeoutError","LockAcquireTimeoutError#constructor","NavigatorLockAcquireTimeoutError","ProcessLockAcquireTimeoutError","navigatorLock","setTimeout$argument_0","Promise.resolve.then$argument_0","globalThis.navigator.locks.request$argument_2","processLock","previousOperation._catch$argument_0","Promise$argument_0","filter$argument_0","Promise.race._catch$argument_0","Promise.race._catch.then$argument_0","currentOperation._catch$argument_0"],"mappings":"AAA;ACqB;ICC;KDG;CDC;AGE;CHC;AIE;CJC;AK2B;mBCM;SDK;wCEU;WCQ;KDuC,CF;CLC;ASiB;gCCI;SDG;0BEE;2BLC;iBKE;aFC;aGE,QH;eIC;KJK;cKC;KLI;iDMC;KNQ;CTI"},"hasCjsExports":true},"type":"js/module"}]}