{"dependencies":[{"name":"./helper","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":681},"end":{"line":10,"column":40,"index":721}}],"key":"XzTjbTLZPqGBcKq7cSmvD13rCtQ=","exportNames":["*"],"imports":1}},{"name":"./types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":722},"end":{"line":11,"column":104,"index":826}}],"key":"iV91Bk2eI9buML90FP6cK2SM5h0=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"FunctionsClient\", {\n    enumerable: true,\n    get: function () {\n      return FunctionsClient;\n    }\n  });\n  var _helper = require(_dependencyMap[0], \"./helper\");\n  var _types = require(_dependencyMap[1], \"./types\");\n  var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n    function adopt(value) {\n      return value instanceof P ? value : new P(function (resolve) {\n        resolve(value);\n      });\n    }\n    return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) {\n        try {\n          step(generator.next(value));\n        } catch (e) {\n          reject(e);\n        }\n      }\n      function rejected(value) {\n        try {\n          step(generator[\"throw\"](value));\n        } catch (e) {\n          reject(e);\n        }\n      }\n      function step(result) {\n        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n      }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n  };\n  class FunctionsClient {\n    constructor(url, {\n      headers = {},\n      customFetch,\n      region = _types.FunctionRegion.Any\n    } = {}) {\n      this.url = url;\n      this.headers = headers;\n      this.region = region;\n      this.fetch = (0, _helper.resolveFetch)(customFetch);\n    }\n    /**\n     * Updates the authorization header\n     * @param token - the new jwt token sent in the authorisation header\n     */\n    setAuth(token) {\n      this.headers.Authorization = `Bearer ${token}`;\n    }\n    /**\n     * Invokes a function\n     * @param functionName - The name of the Function to invoke.\n     * @param options - Options for invoking the Function.\n     */\n    invoke(functionName, options = {}) {\n      var _a;\n      return __awaiter(this, void 0, void 0, function* () {\n        try {\n          const {\n            headers,\n            method,\n            body: functionArgs,\n            signal\n          } = options;\n          let _headers = {};\n          let {\n            region\n          } = options;\n          if (!region) {\n            region = this.region;\n          }\n          // Add region as query parameter using URL API\n          const url = new URL(`${this.url}/${functionName}`);\n          if (region && region !== 'any') {\n            _headers['x-region'] = region;\n            url.searchParams.set('forceFunctionRegion', region);\n          }\n          let body;\n          if (functionArgs && (headers && !Object.prototype.hasOwnProperty.call(headers, 'Content-Type') || !headers)) {\n            if (typeof Blob !== 'undefined' && functionArgs instanceof Blob || functionArgs instanceof ArrayBuffer) {\n              // will work for File as File inherits Blob\n              // also works for ArrayBuffer as it is the same underlying structure as a Blob\n              _headers['Content-Type'] = 'application/octet-stream';\n              body = functionArgs;\n            } else if (typeof functionArgs === 'string') {\n              // plain string\n              _headers['Content-Type'] = 'text/plain';\n              body = functionArgs;\n            } else if (typeof FormData !== 'undefined' && functionArgs instanceof FormData) {\n              // don't set content-type headers\n              // Request will automatically add the right boundary value\n              body = functionArgs;\n            } else {\n              // default, assume this is JSON\n              _headers['Content-Type'] = 'application/json';\n              body = JSON.stringify(functionArgs);\n            }\n          }\n          const response = yield this.fetch(url.toString(), {\n            method: method || 'POST',\n            // headers priority is (high to low):\n            // 1. invoke-level headers\n            // 2. client-level headers\n            // 3. default Content-Type header\n            headers: Object.assign(Object.assign(Object.assign({}, _headers), this.headers), headers),\n            body,\n            signal\n          }).catch(fetchError => {\n            if (fetchError.name === 'AbortError') {\n              throw fetchError;\n            }\n            throw new _types.FunctionsFetchError(fetchError);\n          });\n          const isRelayError = response.headers.get('x-relay-error');\n          if (isRelayError && isRelayError === 'true') {\n            throw new _types.FunctionsRelayError(response);\n          }\n          if (!response.ok) {\n            throw new _types.FunctionsHttpError(response);\n          }\n          let responseType = ((_a = response.headers.get('Content-Type')) !== null && _a !== void 0 ? _a : 'text/plain').split(';')[0].trim();\n          let data;\n          if (responseType === 'application/json') {\n            data = yield response.json();\n          } else if (responseType === 'application/octet-stream') {\n            data = yield response.blob();\n          } else if (responseType === 'text/event-stream') {\n            data = response;\n          } else if (responseType === 'multipart/form-data') {\n            data = yield response.formData();\n          } else {\n            // default to text\n            data = yield response.text();\n          }\n          return {\n            data,\n            error: null,\n            response\n          };\n        } catch (error) {\n          if (error instanceof Error && error.name === 'AbortError') {\n            return {\n              data: null,\n              error: new _types.FunctionsFetchError(error)\n            };\n          }\n          return {\n            data: null,\n            error,\n            response: error instanceof _types.FunctionsHttpError || error instanceof _types.FunctionsRelayError ? error.context : undefined\n          };\n        }\n      });\n    }\n  }\n});","lineCount":166,"map":[[7,2,12,0,"Object"],[7,8,12,0],[7,9,12,0,"defineProperty"],[7,23,12,0],[7,24,12,0,"exports"],[7,31,12,0],[8,4,12,0,"enumerable"],[8,14,12,0],[9,4,12,0,"get"],[9,7,12,0],[9,18,12,0,"get"],[9,19,12,0],[10,6,12,0],[10,13,12,0,"FunctionsClient"],[10,28,12,0],[11,4,12,0],[12,2,12,0],[13,2,10,0],[13,6,10,0,"_helper"],[13,13,10,0],[13,16,10,0,"require"],[13,23,10,0],[13,24,10,0,"_dependencyMap"],[13,38,10,0],[14,2,11,0],[14,6,11,0,"_types"],[14,12,11,0],[14,15,11,0,"require"],[14,22,11,0],[14,23,11,0,"_dependencyMap"],[14,37,11,0],[15,2,1,0],[15,6,1,4,"__awaiter"],[15,15,1,13],[15,18,1,17],[15,22,1,21],[15,26,1,25],[15,30,1,29],[15,31,1,30,"__awaiter"],[15,40,1,39],[15,44,1,44],[15,54,1,54,"thisArg"],[15,61,1,61],[15,63,1,63,"_arguments"],[15,73,1,73],[15,75,1,75,"P"],[15,76,1,76],[15,78,1,78,"generator"],[15,87,1,87],[15,89,1,89],[16,4,2,4],[16,13,2,13,"adopt"],[16,18,2,18,"adopt"],[16,19,2,19,"value"],[16,24,2,24],[16,26,2,26],[17,6,2,28],[17,13,2,35,"value"],[17,18,2,40],[17,30,2,52,"P"],[17,31,2,53],[17,34,2,56,"value"],[17,39,2,61],[17,42,2,64],[17,46,2,68,"P"],[17,47,2,69],[17,48,2,70],[17,58,2,80,"resolve"],[17,65,2,87],[17,67,2,89],[18,8,2,91,"resolve"],[18,15,2,98],[18,16,2,99,"value"],[18,21,2,104],[18,22,2,105],[19,6,2,107],[19,7,2,108],[19,8,2,109],[20,4,2,111],[21,4,3,4],[21,11,3,11],[21,16,3,16,"P"],[21,17,3,17],[21,22,3,22,"P"],[21,23,3,23],[21,26,3,26,"Promise"],[21,33,3,33],[21,34,3,34],[21,36,3,36],[21,46,3,46,"resolve"],[21,53,3,53],[21,55,3,55,"reject"],[21,61,3,61],[21,63,3,63],[22,6,4,8],[22,15,4,17,"fulfilled"],[22,24,4,26,"fulfilled"],[22,25,4,27,"value"],[22,30,4,32],[22,32,4,34],[23,8,4,36],[23,12,4,40],[24,10,4,42,"step"],[24,14,4,46],[24,15,4,47,"generator"],[24,24,4,56],[24,25,4,57,"next"],[24,29,4,61],[24,30,4,62,"value"],[24,35,4,67],[24,36,4,68],[24,37,4,69],[25,8,4,71],[25,9,4,72],[25,10,4,73],[25,17,4,80,"e"],[25,18,4,81],[25,20,4,83],[26,10,4,85,"reject"],[26,16,4,91],[26,17,4,92,"e"],[26,18,4,93],[26,19,4,94],[27,8,4,96],[28,6,4,98],[29,6,5,8],[29,15,5,17,"rejected"],[29,23,5,25,"rejected"],[29,24,5,26,"value"],[29,29,5,31],[29,31,5,33],[30,8,5,35],[30,12,5,39],[31,10,5,41,"step"],[31,14,5,45],[31,15,5,46,"generator"],[31,24,5,55],[31,25,5,56],[31,32,5,63],[31,33,5,64],[31,34,5,65,"value"],[31,39,5,70],[31,40,5,71],[31,41,5,72],[32,8,5,74],[32,9,5,75],[32,10,5,76],[32,17,5,83,"e"],[32,18,5,84],[32,20,5,86],[33,10,5,88,"reject"],[33,16,5,94],[33,17,5,95,"e"],[33,18,5,96],[33,19,5,97],[34,8,5,99],[35,6,5,101],[36,6,6,8],[36,15,6,17,"step"],[36,19,6,21,"step"],[36,20,6,22,"result"],[36,26,6,28],[36,28,6,30],[37,8,6,32,"result"],[37,14,6,38],[37,15,6,39,"done"],[37,19,6,43],[37,22,6,46,"resolve"],[37,29,6,53],[37,30,6,54,"result"],[37,36,6,60],[37,37,6,61,"value"],[37,42,6,66],[37,43,6,67],[37,46,6,70,"adopt"],[37,51,6,75],[37,52,6,76,"result"],[37,58,6,82],[37,59,6,83,"value"],[37,64,6,88],[37,65,6,89],[37,66,6,90,"then"],[37,70,6,94],[37,71,6,95,"fulfilled"],[37,80,6,104],[37,82,6,106,"rejected"],[37,90,6,114],[37,91,6,115],[38,6,6,117],[39,6,7,8,"step"],[39,10,7,12],[39,11,7,13],[39,12,7,14,"generator"],[39,21,7,23],[39,24,7,26,"generator"],[39,33,7,35],[39,34,7,36,"apply"],[39,39,7,41],[39,40,7,42,"thisArg"],[39,47,7,49],[39,49,7,51,"_arguments"],[39,59,7,61],[39,63,7,65],[39,65,7,67],[39,66,7,68],[39,68,7,70,"next"],[39,72,7,74],[39,73,7,75],[39,74,7,76],[39,75,7,77],[40,4,8,4],[40,5,8,5],[40,6,8,6],[41,2,9,0],[41,3,9,1],[42,2,12,7],[42,8,12,13,"FunctionsClient"],[42,23,12,28],[42,24,12,29],[43,4,13,4,"constructor"],[43,15,13,15,"constructor"],[43,16,13,16,"url"],[43,19,13,19],[43,21,13,21],[44,6,13,23,"headers"],[44,13,13,30],[44,16,13,33],[44,17,13,34],[44,18,13,35],[45,6,13,37,"customFetch"],[45,17,13,48],[46,6,13,50,"region"],[46,12,13,56],[46,15,13,59,"FunctionRegion"],[46,21,13,73],[46,22,13,73,"FunctionRegion"],[46,36,13,73],[46,37,13,74,"Any"],[47,4,13,79],[47,5,13,80],[47,8,13,83],[47,9,13,84],[47,10,13,85],[47,12,13,87],[48,6,14,8],[48,10,14,12],[48,11,14,13,"url"],[48,14,14,16],[48,17,14,19,"url"],[48,20,14,22],[49,6,15,8],[49,10,15,12],[49,11,15,13,"headers"],[49,18,15,20],[49,21,15,23,"headers"],[49,28,15,30],[50,6,16,8],[50,10,16,12],[50,11,16,13,"region"],[50,17,16,19],[50,20,16,22,"region"],[50,26,16,28],[51,6,17,8],[51,10,17,12],[51,11,17,13,"fetch"],[51,16,17,18],[51,19,17,21],[51,23,17,21,"resolveFetch"],[51,30,17,33],[51,31,17,33,"resolveFetch"],[51,43,17,33],[51,45,17,34,"customFetch"],[51,56,17,45],[51,57,17,46],[52,4,18,4],[53,4,19,4],[54,0,20,0],[55,0,21,0],[56,0,22,0],[57,4,23,4,"setAuth"],[57,11,23,11,"setAuth"],[57,12,23,12,"token"],[57,17,23,17],[57,19,23,19],[58,6,24,8],[58,10,24,12],[58,11,24,13,"headers"],[58,18,24,20],[58,19,24,21,"Authorization"],[58,32,24,34],[58,35,24,37],[58,45,24,47,"token"],[58,50,24,52],[58,52,24,54],[59,4,25,4],[60,4,26,4],[61,0,27,0],[62,0,28,0],[63,0,29,0],[64,0,30,0],[65,4,31,4,"invoke"],[65,10,31,10,"invoke"],[65,11,31,11,"functionName"],[65,23,31,23],[65,25,31,25,"options"],[65,32,31,32],[65,35,31,35],[65,36,31,36],[65,37,31,37],[65,39,31,39],[66,6,32,8],[66,10,32,12,"_a"],[66,12,32,14],[67,6,33,8],[67,13,33,15,"__awaiter"],[67,22,33,24],[67,23,33,25],[67,27,33,29],[67,29,33,31],[67,34,33,36],[67,35,33,37],[67,37,33,39],[67,42,33,44],[67,43,33,45],[67,45,33,47],[67,58,33,60],[68,8,34,12],[68,12,34,16],[69,10,35,16],[69,16,35,22],[70,12,35,24,"headers"],[70,19,35,31],[71,12,35,33,"method"],[71,18,35,39],[72,12,35,41,"body"],[72,16,35,45],[72,18,35,47,"functionArgs"],[72,30,35,59],[73,12,35,61,"signal"],[74,10,35,68],[74,11,35,69],[74,14,35,72,"options"],[74,21,35,79],[75,10,36,16],[75,14,36,20,"_headers"],[75,22,36,28],[75,25,36,31],[75,26,36,32],[75,27,36,33],[76,10,37,16],[76,14,37,20],[77,12,37,22,"region"],[78,10,37,29],[78,11,37,30],[78,14,37,33,"options"],[78,21,37,40],[79,10,38,16],[79,14,38,20],[79,15,38,21,"region"],[79,21,38,27],[79,23,38,29],[80,12,39,20,"region"],[80,18,39,26],[80,21,39,29],[80,25,39,33],[80,26,39,34,"region"],[80,32,39,40],[81,10,40,16],[82,10,41,16],[83,10,42,16],[83,16,42,22,"url"],[83,19,42,25],[83,22,42,28],[83,26,42,32,"URL"],[83,29,42,35],[83,30,42,36],[83,33,42,39],[83,37,42,43],[83,38,42,44,"url"],[83,41,42,47],[83,45,42,51,"functionName"],[83,57,42,63],[83,59,42,65],[83,60,42,66],[84,10,43,16],[84,14,43,20,"region"],[84,20,43,26],[84,24,43,30,"region"],[84,30,43,36],[84,35,43,41],[84,40,43,46],[84,42,43,48],[85,12,44,20,"_headers"],[85,20,44,28],[85,21,44,29],[85,31,44,39],[85,32,44,40],[85,35,44,43,"region"],[85,41,44,49],[86,12,45,20,"url"],[86,15,45,23],[86,16,45,24,"searchParams"],[86,28,45,36],[86,29,45,37,"set"],[86,32,45,40],[86,33,45,41],[86,54,45,62],[86,56,45,64,"region"],[86,62,45,70],[86,63,45,71],[87,10,46,16],[88,10,47,16],[88,14,47,20,"body"],[88,18,47,24],[89,10,48,16],[89,14,48,20,"functionArgs"],[89,26,48,32],[89,31,49,22,"headers"],[89,38,49,29],[89,42,49,33],[89,43,49,34,"Object"],[89,49,49,40],[89,50,49,41,"prototype"],[89,59,49,50],[89,60,49,51,"hasOwnProperty"],[89,74,49,65],[89,75,49,66,"call"],[89,79,49,70],[89,80,49,71,"headers"],[89,87,49,78],[89,89,49,80],[89,103,49,94],[89,104,49,95],[89,108,49,100],[89,109,49,101,"headers"],[89,116,49,108],[89,117,49,109],[89,119,49,111],[90,12,50,20],[90,16,50,25],[90,23,50,32,"Blob"],[90,27,50,36],[90,32,50,41],[90,43,50,52],[90,47,50,56,"functionArgs"],[90,59,50,68],[90,71,50,80,"Blob"],[90,75,50,84],[90,79,51,24,"functionArgs"],[90,91,51,36],[90,103,51,48,"ArrayBuffer"],[90,114,51,59],[90,116,51,61],[91,14,52,24],[92,14,53,24],[93,14,54,24,"_headers"],[93,22,54,32],[93,23,54,33],[93,37,54,47],[93,38,54,48],[93,41,54,51],[93,67,54,77],[94,14,55,24,"body"],[94,18,55,28],[94,21,55,31,"functionArgs"],[94,33,55,43],[95,12,56,20],[95,13,56,21],[95,19,57,25],[95,23,57,29],[95,30,57,36,"functionArgs"],[95,42,57,48],[95,47,57,53],[95,55,57,61],[95,57,57,63],[96,14,58,24],[97,14,59,24,"_headers"],[97,22,59,32],[97,23,59,33],[97,37,59,47],[97,38,59,48],[97,41,59,51],[97,53,59,63],[98,14,60,24,"body"],[98,18,60,28],[98,21,60,31,"functionArgs"],[98,33,60,43],[99,12,61,20],[99,13,61,21],[99,19,62,25],[99,23,62,29],[99,30,62,36,"FormData"],[99,38,62,44],[99,43,62,49],[99,54,62,60],[99,58,62,64,"functionArgs"],[99,70,62,76],[99,82,62,88,"FormData"],[99,90,62,96],[99,92,62,98],[100,14,63,24],[101,14,64,24],[102,14,65,24,"body"],[102,18,65,28],[102,21,65,31,"functionArgs"],[102,33,65,43],[103,12,66,20],[103,13,66,21],[103,19,67,25],[104,14,68,24],[105,14,69,24,"_headers"],[105,22,69,32],[105,23,69,33],[105,37,69,47],[105,38,69,48],[105,41,69,51],[105,59,69,69],[106,14,70,24,"body"],[106,18,70,28],[106,21,70,31,"JSON"],[106,25,70,35],[106,26,70,36,"stringify"],[106,35,70,45],[106,36,70,46,"functionArgs"],[106,48,70,58],[106,49,70,59],[107,12,71,20],[108,10,72,16],[109,10,73,16],[109,16,73,22,"response"],[109,24,73,30],[109,27,73,33],[109,33,73,39],[109,37,73,43],[109,38,73,44,"fetch"],[109,43,73,49],[109,44,73,50,"url"],[109,47,73,53],[109,48,73,54,"toString"],[109,56,73,62],[109,57,73,63],[109,58,73,64],[109,60,73,66],[110,12,74,20,"method"],[110,18,74,26],[110,20,74,28,"method"],[110,26,74,34],[110,30,74,38],[110,36,74,44],[111,12,75,20],[112,12,76,20],[113,12,77,20],[114,12,78,20],[115,12,79,20,"headers"],[115,19,79,27],[115,21,79,29,"Object"],[115,27,79,35],[115,28,79,36,"assign"],[115,34,79,42],[115,35,79,43,"Object"],[115,41,79,49],[115,42,79,50,"assign"],[115,48,79,56],[115,49,79,57,"Object"],[115,55,79,63],[115,56,79,64,"assign"],[115,62,79,70],[115,63,79,71],[115,64,79,72],[115,65,79,73],[115,67,79,75,"_headers"],[115,75,79,83],[115,76,79,84],[115,78,79,86],[115,82,79,90],[115,83,79,91,"headers"],[115,90,79,98],[115,91,79,99],[115,93,79,101,"headers"],[115,100,79,108],[115,101,79,109],[116,12,80,20,"body"],[116,16,80,24],[117,12,81,20,"signal"],[118,10,82,16],[118,11,82,17],[118,12,82,18],[118,13,82,19,"catch"],[118,18,82,24],[118,19,82,26,"fetchError"],[118,29,82,36],[118,33,82,41],[119,12,83,20],[119,16,83,24,"fetchError"],[119,26,83,34],[119,27,83,35,"name"],[119,31,83,39],[119,36,83,44],[119,48,83,56],[119,50,83,58],[120,14,84,24],[120,20,84,30,"fetchError"],[120,30,84,40],[121,12,85,20],[122,12,86,20],[122,18,86,26],[122,22,86,30,"FunctionsFetchError"],[122,28,86,49],[122,29,86,49,"FunctionsFetchError"],[122,48,86,49],[122,49,86,50,"fetchError"],[122,59,86,60],[122,60,86,61],[123,10,87,16],[123,11,87,17],[123,12,87,18],[124,10,88,16],[124,16,88,22,"isRelayError"],[124,28,88,34],[124,31,88,37,"response"],[124,39,88,45],[124,40,88,46,"headers"],[124,47,88,53],[124,48,88,54,"get"],[124,51,88,57],[124,52,88,58],[124,67,88,73],[124,68,88,74],[125,10,89,16],[125,14,89,20,"isRelayError"],[125,26,89,32],[125,30,89,36,"isRelayError"],[125,42,89,48],[125,47,89,53],[125,53,89,59],[125,55,89,61],[126,12,90,20],[126,18,90,26],[126,22,90,30,"FunctionsRelayError"],[126,28,90,49],[126,29,90,49,"FunctionsRelayError"],[126,48,90,49],[126,49,90,50,"response"],[126,57,90,58],[126,58,90,59],[127,10,91,16],[128,10,92,16],[128,14,92,20],[128,15,92,21,"response"],[128,23,92,29],[128,24,92,30,"ok"],[128,26,92,32],[128,28,92,34],[129,12,93,20],[129,18,93,26],[129,22,93,30,"FunctionsHttpError"],[129,28,93,48],[129,29,93,48,"FunctionsHttpError"],[129,47,93,48],[129,48,93,49,"response"],[129,56,93,57],[129,57,93,58],[130,10,94,16],[131,10,95,16],[131,14,95,20,"responseType"],[131,26,95,32],[131,29,95,35],[131,30,95,36],[131,31,95,37,"_a"],[131,33,95,39],[131,36,95,42,"response"],[131,44,95,50],[131,45,95,51,"headers"],[131,52,95,58],[131,53,95,59,"get"],[131,56,95,62],[131,57,95,63],[131,71,95,77],[131,72,95,78],[131,78,95,84],[131,82,95,88],[131,86,95,92,"_a"],[131,88,95,94],[131,93,95,99],[131,98,95,104],[131,99,95,105],[131,102,95,108,"_a"],[131,104,95,110],[131,107,95,113],[131,119,95,125],[131,121,95,127,"split"],[131,126,95,132],[131,127,95,133],[131,130,95,136],[131,131,95,137],[131,132,95,138],[131,133,95,139],[131,134,95,140],[131,135,95,141,"trim"],[131,139,95,145],[131,140,95,146],[131,141,95,147],[132,10,96,16],[132,14,96,20,"data"],[132,18,96,24],[133,10,97,16],[133,14,97,20,"responseType"],[133,26,97,32],[133,31,97,37],[133,49,97,55],[133,51,97,57],[134,12,98,20,"data"],[134,16,98,24],[134,19,98,27],[134,25,98,33,"response"],[134,33,98,41],[134,34,98,42,"json"],[134,38,98,46],[134,39,98,47],[134,40,98,48],[135,10,99,16],[135,11,99,17],[135,17,100,21],[135,21,100,25,"responseType"],[135,33,100,37],[135,38,100,42],[135,64,100,68],[135,66,100,70],[136,12,101,20,"data"],[136,16,101,24],[136,19,101,27],[136,25,101,33,"response"],[136,33,101,41],[136,34,101,42,"blob"],[136,38,101,46],[136,39,101,47],[136,40,101,48],[137,10,102,16],[137,11,102,17],[137,17,103,21],[137,21,103,25,"responseType"],[137,33,103,37],[137,38,103,42],[137,57,103,61],[137,59,103,63],[138,12,104,20,"data"],[138,16,104,24],[138,19,104,27,"response"],[138,27,104,35],[139,10,105,16],[139,11,105,17],[139,17,106,21],[139,21,106,25,"responseType"],[139,33,106,37],[139,38,106,42],[139,59,106,63],[139,61,106,65],[140,12,107,20,"data"],[140,16,107,24],[140,19,107,27],[140,25,107,33,"response"],[140,33,107,41],[140,34,107,42,"formData"],[140,42,107,50],[140,43,107,51],[140,44,107,52],[141,10,108,16],[141,11,108,17],[141,17,109,21],[142,12,110,20],[143,12,111,20,"data"],[143,16,111,24],[143,19,111,27],[143,25,111,33,"response"],[143,33,111,41],[143,34,111,42,"text"],[143,38,111,46],[143,39,111,47],[143,40,111,48],[144,10,112,16],[145,10,113,16],[145,17,113,23],[146,12,113,25,"data"],[146,16,113,29],[147,12,113,31,"error"],[147,17,113,36],[147,19,113,38],[147,23,113,42],[148,12,113,44,"response"],[149,10,113,53],[149,11,113,54],[150,8,114,12],[150,9,114,13],[150,10,115,12],[150,17,115,19,"error"],[150,22,115,24],[150,24,115,26],[151,10,116,16],[151,14,116,20,"error"],[151,19,116,25],[151,31,116,37,"Error"],[151,36,116,42],[151,40,116,46,"error"],[151,45,116,51],[151,46,116,52,"name"],[151,50,116,56],[151,55,116,61],[151,67,116,73],[151,69,116,75],[152,12,117,20],[152,19,117,27],[153,14,117,29,"data"],[153,18,117,33],[153,20,117,35],[153,24,117,39],[154,14,117,41,"error"],[154,19,117,46],[154,21,117,48],[154,25,117,52,"FunctionsFetchError"],[154,31,117,71],[154,32,117,71,"FunctionsFetchError"],[154,51,117,71],[154,52,117,72,"error"],[154,57,117,77],[155,12,117,79],[155,13,117,80],[156,10,118,16],[157,10,119,16],[157,17,119,23],[158,12,120,20,"data"],[158,16,120,24],[158,18,120,26],[158,22,120,30],[159,12,121,20,"error"],[159,17,121,25],[160,12,122,20,"response"],[160,20,122,28],[160,22,122,30,"error"],[160,27,122,35],[160,39,122,47,"FunctionsHttpError"],[160,45,122,65],[160,46,122,65,"FunctionsHttpError"],[160,64,122,65],[160,68,122,69,"error"],[160,73,122,74],[160,85,122,86,"FunctionsRelayError"],[160,91,122,105],[160,92,122,105,"FunctionsRelayError"],[160,111,122,105],[160,114,123,26,"error"],[160,119,123,31],[160,120,123,32,"context"],[160,127,123,39],[160,130,124,26,"undefined"],[161,10,125,16],[161,11,125,17],[162,8,126,12],[163,6,127,8],[163,7,127,9],[163,8,127,10],[164,4,128,4],[165,2,129,0],[166,0,129,1],[166,3]],"functionMap":{"names":["<global>","<anonymous>","adopt","P$argument_0","fulfilled","rejected","step","FunctionsClient","constructor","setAuth","invoke","__awaiter$argument_3","fetch._catch$argument_0"],"mappings":"AAA,4CC;ICC,kEC,sCD,ID;QGE,2FH;QIC,8FJ;QKC,8GL;CDG;OOG;ICC;KDK;IEK;KFE;IGM;+CCE;yBCiD;iBDK;SDwC;KHC;CPC"},"hasCjsExports":false},"type":"js/module"}]}