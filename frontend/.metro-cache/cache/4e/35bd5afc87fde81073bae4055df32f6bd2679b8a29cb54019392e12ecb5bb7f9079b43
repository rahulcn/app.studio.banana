{"dependencies":[{"name":"@supabase/node-fetch","data":{"asyncType":"async","isESMImport":true,"locs":[{"start":{"line":7,"column":30,"index":197},"end":{"line":7,"column":60,"index":227}}],"key":"7Fx+cnrTZuhuI1XE65tJyFLDBO8=","exportNames":["*"],"imports":1}},{"name":"/app/frontend/node_modules/@expo/metro-config/build/async-require.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":30,"index":197},"end":{"line":7,"column":65,"index":232}}],"key":"daau5xiLR32xskYL0mG55FO6bjk=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"resolveFetch\", {\n    enumerable: true,\n    get: function () {\n      return resolveFetch;\n    }\n  });\n  const resolveFetch = customFetch => {\n    let _fetch;\n    if (customFetch) {\n      _fetch = customFetch;\n    } else if (typeof fetch === 'undefined') {\n      _fetch = (...args) => require(_dependencyMap[1], \"/app/frontend/node_modules/@expo/metro-config/build/async-require.js\")(_dependencyMap[0], _dependencyMap.paths, \"@supabase/node-fetch\").then(({\n        default: fetch\n      }) => fetch(...args));\n    } else {\n      _fetch = fetch;\n    }\n    return (...args) => _fetch(...args);\n  };\n});","lineCount":26,"map":[[7,2,1,0,"Object"],[7,8,1,0],[7,9,1,0,"defineProperty"],[7,23,1,0],[7,24,1,0,"exports"],[7,31,1,0],[8,4,1,0,"enumerable"],[8,14,1,0],[9,4,1,0,"get"],[9,7,1,0],[9,18,1,0,"get"],[9,19,1,0],[10,6,1,0],[10,13,1,0,"resolveFetch"],[10,25,1,0],[11,4,1,0],[12,2,1,0],[13,2,1,7],[13,8,1,13,"resolveFetch"],[13,20,1,25],[13,23,1,29,"customFetch"],[13,34,1,40],[13,38,1,45],[14,4,2,4],[14,8,2,8,"_fetch"],[14,14,2,14],[15,4,3,4],[15,8,3,8,"customFetch"],[15,19,3,19],[15,21,3,21],[16,6,4,8,"_fetch"],[16,12,4,14],[16,15,4,17,"customFetch"],[16,26,4,28],[17,4,5,4],[17,5,5,5],[17,11,6,9],[17,15,6,13],[17,22,6,20,"fetch"],[17,27,6,25],[17,32,6,30],[17,43,6,41],[17,45,6,43],[18,6,7,8,"_fetch"],[18,12,7,14],[18,15,7,17,"_fetch"],[18,16,7,18],[18,19,7,21,"args"],[18,23,7,25],[18,28,7,30,"require"],[18,35,7,30],[18,36,7,30,"_dependencyMap"],[18,50,7,30],[18,127,7,30,"_dependencyMap"],[18,141,7,30],[18,146,7,30,"_dependencyMap"],[18,160,7,30],[18,161,7,30,"paths"],[18,166,7,30],[18,192,7,61,"then"],[18,196,7,65],[18,197,7,66],[18,198,7,67],[19,8,7,69,"default"],[19,15,7,76],[19,17,7,78,"fetch"],[20,6,7,84],[20,7,7,85],[20,12,7,90,"fetch"],[20,17,7,95],[20,18,7,96],[20,21,7,99,"args"],[20,25,7,103],[20,26,7,104],[20,27,7,105],[21,4,8,4],[21,5,8,5],[21,11,9,9],[22,6,10,8,"_fetch"],[22,12,10,14],[22,15,10,17,"fetch"],[22,20,10,22],[23,4,11,4],[24,4,12,4],[24,11,12,11],[24,12,12,12],[24,15,12,15,"args"],[24,19,12,19],[24,24,12,24,"_fetch"],[24,30,12,30],[24,31,12,31],[24,34,12,34,"args"],[24,38,12,38],[24,39,12,39],[25,2,13,0],[25,3,13,1],[26,0,13,2],[26,3]],"functionMap":{"names":["<global>","resolveFetch","_fetch","import.then$argument_0","<anonymous>"],"mappings":"AAA,4BC;iBCM,iDC,sCD,CD;WGK,4BH;CDC"},"hasCjsExports":false},"type":"js/module"}]}