{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  /*\n    This file draws heavily from https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/assets/js/phoenix/presence.js\n    License: https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/LICENSE.md\n  */\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.REALTIME_PRESENCE_LISTEN_EVENTS = void 0;\n  var REALTIME_PRESENCE_LISTEN_EVENTS;\n  (function (REALTIME_PRESENCE_LISTEN_EVENTS) {\n    REALTIME_PRESENCE_LISTEN_EVENTS[\"SYNC\"] = \"sync\";\n    REALTIME_PRESENCE_LISTEN_EVENTS[\"JOIN\"] = \"join\";\n    REALTIME_PRESENCE_LISTEN_EVENTS[\"LEAVE\"] = \"leave\";\n  })(REALTIME_PRESENCE_LISTEN_EVENTS || (exports.REALTIME_PRESENCE_LISTEN_EVENTS = REALTIME_PRESENCE_LISTEN_EVENTS = {}));\n  class RealtimePresence {\n    /**\n     * Initializes the Presence.\n     *\n     * @param channel - The RealtimeChannel\n     * @param opts - The options,\n     *        for example `{events: {state: 'state', diff: 'diff'}}`\n     */\n    constructor(channel, opts) {\n      this.channel = channel;\n      this.state = {};\n      this.pendingDiffs = [];\n      this.joinRef = null;\n      this.enabled = false;\n      this.caller = {\n        onJoin: () => {},\n        onLeave: () => {},\n        onSync: () => {}\n      };\n      const events = (opts === null || opts === void 0 ? void 0 : opts.events) || {\n        state: 'presence_state',\n        diff: 'presence_diff'\n      };\n      this.channel._on(events.state, {}, newState => {\n        const {\n          onJoin,\n          onLeave,\n          onSync\n        } = this.caller;\n        this.joinRef = this.channel._joinRef();\n        this.state = RealtimePresence.syncState(this.state, newState, onJoin, onLeave);\n        this.pendingDiffs.forEach(diff => {\n          this.state = RealtimePresence.syncDiff(this.state, diff, onJoin, onLeave);\n        });\n        this.pendingDiffs = [];\n        onSync();\n      });\n      this.channel._on(events.diff, {}, diff => {\n        const {\n          onJoin,\n          onLeave,\n          onSync\n        } = this.caller;\n        if (this.inPendingSyncState()) {\n          this.pendingDiffs.push(diff);\n        } else {\n          this.state = RealtimePresence.syncDiff(this.state, diff, onJoin, onLeave);\n          onSync();\n        }\n      });\n      this.onJoin((key, currentPresences, newPresences) => {\n        this.channel._trigger('presence', {\n          event: 'join',\n          key,\n          currentPresences,\n          newPresences\n        });\n      });\n      this.onLeave((key, currentPresences, leftPresences) => {\n        this.channel._trigger('presence', {\n          event: 'leave',\n          key,\n          currentPresences,\n          leftPresences\n        });\n      });\n      this.onSync(() => {\n        this.channel._trigger('presence', {\n          event: 'sync'\n        });\n      });\n    }\n    /**\n     * Used to sync the list of presences on the server with the\n     * client's state.\n     *\n     * An optional `onJoin` and `onLeave` callback can be provided to\n     * react to changes in the client's local presences across\n     * disconnects and reconnects with the server.\n     *\n     * @internal\n     */\n    static syncState(currentState, newState, onJoin, onLeave) {\n      const state = this.cloneDeep(currentState);\n      const transformedState = this.transformState(newState);\n      const joins = {};\n      const leaves = {};\n      this.map(state, (key, presences) => {\n        if (!transformedState[key]) {\n          leaves[key] = presences;\n        }\n      });\n      this.map(transformedState, (key, newPresences) => {\n        const currentPresences = state[key];\n        if (currentPresences) {\n          const newPresenceRefs = newPresences.map(m => m.presence_ref);\n          const curPresenceRefs = currentPresences.map(m => m.presence_ref);\n          const joinedPresences = newPresences.filter(m => curPresenceRefs.indexOf(m.presence_ref) < 0);\n          const leftPresences = currentPresences.filter(m => newPresenceRefs.indexOf(m.presence_ref) < 0);\n          if (joinedPresences.length > 0) {\n            joins[key] = joinedPresences;\n          }\n          if (leftPresences.length > 0) {\n            leaves[key] = leftPresences;\n          }\n        } else {\n          joins[key] = newPresences;\n        }\n      });\n      return this.syncDiff(state, {\n        joins,\n        leaves\n      }, onJoin, onLeave);\n    }\n    /**\n     * Used to sync a diff of presence join and leave events from the\n     * server, as they happen.\n     *\n     * Like `syncState`, `syncDiff` accepts optional `onJoin` and\n     * `onLeave` callbacks to react to a user joining or leaving from a\n     * device.\n     *\n     * @internal\n     */\n    static syncDiff(state, diff, onJoin, onLeave) {\n      const {\n        joins,\n        leaves\n      } = {\n        joins: this.transformState(diff.joins),\n        leaves: this.transformState(diff.leaves)\n      };\n      if (!onJoin) {\n        onJoin = () => {};\n      }\n      if (!onLeave) {\n        onLeave = () => {};\n      }\n      this.map(joins, (key, newPresences) => {\n        var _a;\n        const currentPresences = (_a = state[key]) !== null && _a !== void 0 ? _a : [];\n        state[key] = this.cloneDeep(newPresences);\n        if (currentPresences.length > 0) {\n          const joinedPresenceRefs = state[key].map(m => m.presence_ref);\n          const curPresences = currentPresences.filter(m => joinedPresenceRefs.indexOf(m.presence_ref) < 0);\n          state[key].unshift(...curPresences);\n        }\n        onJoin(key, currentPresences, newPresences);\n      });\n      this.map(leaves, (key, leftPresences) => {\n        let currentPresences = state[key];\n        if (!currentPresences) return;\n        const presenceRefsToRemove = leftPresences.map(m => m.presence_ref);\n        currentPresences = currentPresences.filter(m => presenceRefsToRemove.indexOf(m.presence_ref) < 0);\n        state[key] = currentPresences;\n        onLeave(key, currentPresences, leftPresences);\n        if (currentPresences.length === 0) delete state[key];\n      });\n      return state;\n    }\n    /** @internal */\n    static map(obj, func) {\n      return Object.getOwnPropertyNames(obj).map(key => func(key, obj[key]));\n    }\n    /**\n     * Remove 'metas' key\n     * Change 'phx_ref' to 'presence_ref'\n     * Remove 'phx_ref' and 'phx_ref_prev'\n     *\n     * @example\n     * // returns {\n     *  abc123: [\n     *    { presence_ref: '2', user_id: 1 },\n     *    { presence_ref: '3', user_id: 2 }\n     *  ]\n     * }\n     * RealtimePresence.transformState({\n     *  abc123: {\n     *    metas: [\n     *      { phx_ref: '2', phx_ref_prev: '1' user_id: 1 },\n     *      { phx_ref: '3', user_id: 2 }\n     *    ]\n     *  }\n     * })\n     *\n     * @internal\n     */\n    static transformState(state) {\n      state = this.cloneDeep(state);\n      return Object.getOwnPropertyNames(state).reduce((newState, key) => {\n        const presences = state[key];\n        if ('metas' in presences) {\n          newState[key] = presences.metas.map(presence => {\n            presence['presence_ref'] = presence['phx_ref'];\n            delete presence['phx_ref'];\n            delete presence['phx_ref_prev'];\n            return presence;\n          });\n        } else {\n          newState[key] = presences;\n        }\n        return newState;\n      }, {});\n    }\n    /** @internal */\n    static cloneDeep(obj) {\n      return JSON.parse(JSON.stringify(obj));\n    }\n    /** @internal */\n    onJoin(callback) {\n      this.caller.onJoin = callback;\n    }\n    /** @internal */\n    onLeave(callback) {\n      this.caller.onLeave = callback;\n    }\n    /** @internal */\n    onSync(callback) {\n      this.caller.onSync = callback;\n    }\n    /** @internal */\n    inPendingSyncState() {\n      return !this.joinRef || this.joinRef !== this.channel._joinRef();\n    }\n  }\n  exports.default = RealtimePresence;\n});","lineCount":244,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[5,0,3,0],[6,0,4,0],[7,0,5,0],[8,2,6,0,"Object"],[8,8,6,6],[8,9,6,7,"defineProperty"],[8,23,6,21],[8,24,6,22,"exports"],[8,31,6,29],[8,33,6,31],[8,45,6,43],[8,47,6,45],[9,4,6,47,"value"],[9,9,6,52],[9,11,6,54],[10,2,6,59],[10,3,6,60],[10,4,6,61],[11,2,7,0,"exports"],[11,9,7,7],[11,10,7,8,"REALTIME_PRESENCE_LISTEN_EVENTS"],[11,41,7,39],[11,44,7,42],[11,49,7,47],[11,50,7,48],[12,2,8,0],[12,6,8,4,"REALTIME_PRESENCE_LISTEN_EVENTS"],[12,37,8,35],[13,2,9,0],[13,3,9,1],[13,13,9,11,"REALTIME_PRESENCE_LISTEN_EVENTS"],[13,44,9,42],[13,46,9,44],[14,4,10,4,"REALTIME_PRESENCE_LISTEN_EVENTS"],[14,35,10,35],[14,36,10,36],[14,42,10,42],[14,43,10,43],[14,46,10,46],[14,52,10,52],[15,4,11,4,"REALTIME_PRESENCE_LISTEN_EVENTS"],[15,35,11,35],[15,36,11,36],[15,42,11,42],[15,43,11,43],[15,46,11,46],[15,52,11,52],[16,4,12,4,"REALTIME_PRESENCE_LISTEN_EVENTS"],[16,35,12,35],[16,36,12,36],[16,43,12,43],[16,44,12,44],[16,47,12,47],[16,54,12,54],[17,2,13,0],[17,3,13,1],[17,5,13,3,"REALTIME_PRESENCE_LISTEN_EVENTS"],[17,36,13,34],[17,41,13,39,"exports"],[17,48,13,46],[17,49,13,47,"REALTIME_PRESENCE_LISTEN_EVENTS"],[17,80,13,78],[17,83,13,81,"REALTIME_PRESENCE_LISTEN_EVENTS"],[17,114,13,112],[17,117,13,115],[17,118,13,116],[17,119,13,117],[17,120,13,118],[17,121,13,119],[18,2,14,0],[18,8,14,6,"RealtimePresence"],[18,24,14,22],[18,25,14,23],[19,4,15,4],[20,0,16,0],[21,0,17,0],[22,0,18,0],[23,0,19,0],[24,0,20,0],[25,0,21,0],[26,4,22,4,"constructor"],[26,15,22,15,"constructor"],[26,16,22,16,"channel"],[26,23,22,23],[26,25,22,25,"opts"],[26,29,22,29],[26,31,22,31],[27,6,23,8],[27,10,23,12],[27,11,23,13,"channel"],[27,18,23,20],[27,21,23,23,"channel"],[27,28,23,30],[28,6,24,8],[28,10,24,12],[28,11,24,13,"state"],[28,16,24,18],[28,19,24,21],[28,20,24,22],[28,21,24,23],[29,6,25,8],[29,10,25,12],[29,11,25,13,"pendingDiffs"],[29,23,25,25],[29,26,25,28],[29,28,25,30],[30,6,26,8],[30,10,26,12],[30,11,26,13,"joinRef"],[30,18,26,20],[30,21,26,23],[30,25,26,27],[31,6,27,8],[31,10,27,12],[31,11,27,13,"enabled"],[31,18,27,20],[31,21,27,23],[31,26,27,28],[32,6,28,8],[32,10,28,12],[32,11,28,13,"caller"],[32,17,28,19],[32,20,28,22],[33,8,29,12,"onJoin"],[33,14,29,18],[33,16,29,20,"onJoin"],[33,17,29,20],[33,22,29,26],[33,23,29,28],[33,24,29,29],[34,8,30,12,"onLeave"],[34,15,30,19],[34,17,30,21,"onLeave"],[34,18,30,21],[34,23,30,27],[34,24,30,29],[34,25,30,30],[35,8,31,12,"onSync"],[35,14,31,18],[35,16,31,20,"onSync"],[35,17,31,20],[35,22,31,26],[35,23,31,28],[36,6,32,8],[36,7,32,9],[37,6,33,8],[37,12,33,14,"events"],[37,18,33,20],[37,21,33,23],[37,22,33,24,"opts"],[37,26,33,28],[37,31,33,33],[37,35,33,37],[37,39,33,41,"opts"],[37,43,33,45],[37,48,33,50],[37,53,33,55],[37,54,33,56],[37,57,33,59],[37,62,33,64],[37,63,33,65],[37,66,33,68,"opts"],[37,70,33,72],[37,71,33,73,"events"],[37,77,33,79],[37,82,33,84],[38,8,34,12,"state"],[38,13,34,17],[38,15,34,19],[38,31,34,35],[39,8,35,12,"diff"],[39,12,35,16],[39,14,35,18],[40,6,36,8],[40,7,36,9],[41,6,37,8],[41,10,37,12],[41,11,37,13,"channel"],[41,18,37,20],[41,19,37,21,"_on"],[41,22,37,24],[41,23,37,25,"events"],[41,29,37,31],[41,30,37,32,"state"],[41,35,37,37],[41,37,37,39],[41,38,37,40],[41,39,37,41],[41,41,37,44,"newState"],[41,49,37,52],[41,53,37,57],[42,8,38,12],[42,14,38,18],[43,10,38,20,"onJoin"],[43,16,38,26],[44,10,38,28,"onLeave"],[44,17,38,35],[45,10,38,37,"onSync"],[46,8,38,44],[46,9,38,45],[46,12,38,48],[46,16,38,52],[46,17,38,53,"caller"],[46,23,38,59],[47,8,39,12],[47,12,39,16],[47,13,39,17,"joinRef"],[47,20,39,24],[47,23,39,27],[47,27,39,31],[47,28,39,32,"channel"],[47,35,39,39],[47,36,39,40,"_joinRef"],[47,44,39,48],[47,45,39,49],[47,46,39,50],[48,8,40,12],[48,12,40,16],[48,13,40,17,"state"],[48,18,40,22],[48,21,40,25,"RealtimePresence"],[48,37,40,41],[48,38,40,42,"syncState"],[48,47,40,51],[48,48,40,52],[48,52,40,56],[48,53,40,57,"state"],[48,58,40,62],[48,60,40,64,"newState"],[48,68,40,72],[48,70,40,74,"onJoin"],[48,76,40,80],[48,78,40,82,"onLeave"],[48,85,40,89],[48,86,40,90],[49,8,41,12],[49,12,41,16],[49,13,41,17,"pendingDiffs"],[49,25,41,29],[49,26,41,30,"forEach"],[49,33,41,37],[49,34,41,39,"diff"],[49,38,41,43],[49,42,41,48],[50,10,42,16],[50,14,42,20],[50,15,42,21,"state"],[50,20,42,26],[50,23,42,29,"RealtimePresence"],[50,39,42,45],[50,40,42,46,"syncDiff"],[50,48,42,54],[50,49,42,55],[50,53,42,59],[50,54,42,60,"state"],[50,59,42,65],[50,61,42,67,"diff"],[50,65,42,71],[50,67,42,73,"onJoin"],[50,73,42,79],[50,75,42,81,"onLeave"],[50,82,42,88],[50,83,42,89],[51,8,43,12],[51,9,43,13],[51,10,43,14],[52,8,44,12],[52,12,44,16],[52,13,44,17,"pendingDiffs"],[52,25,44,29],[52,28,44,32],[52,30,44,34],[53,8,45,12,"onSync"],[53,14,45,18],[53,15,45,19],[53,16,45,20],[54,6,46,8],[54,7,46,9],[54,8,46,10],[55,6,47,8],[55,10,47,12],[55,11,47,13,"channel"],[55,18,47,20],[55,19,47,21,"_on"],[55,22,47,24],[55,23,47,25,"events"],[55,29,47,31],[55,30,47,32,"diff"],[55,34,47,36],[55,36,47,38],[55,37,47,39],[55,38,47,40],[55,40,47,43,"diff"],[55,44,47,47],[55,48,47,52],[56,8,48,12],[56,14,48,18],[57,10,48,20,"onJoin"],[57,16,48,26],[58,10,48,28,"onLeave"],[58,17,48,35],[59,10,48,37,"onSync"],[60,8,48,44],[60,9,48,45],[60,12,48,48],[60,16,48,52],[60,17,48,53,"caller"],[60,23,48,59],[61,8,49,12],[61,12,49,16],[61,16,49,20],[61,17,49,21,"inPendingSyncState"],[61,35,49,39],[61,36,49,40],[61,37,49,41],[61,39,49,43],[62,10,50,16],[62,14,50,20],[62,15,50,21,"pendingDiffs"],[62,27,50,33],[62,28,50,34,"push"],[62,32,50,38],[62,33,50,39,"diff"],[62,37,50,43],[62,38,50,44],[63,8,51,12],[63,9,51,13],[63,15,52,17],[64,10,53,16],[64,14,53,20],[64,15,53,21,"state"],[64,20,53,26],[64,23,53,29,"RealtimePresence"],[64,39,53,45],[64,40,53,46,"syncDiff"],[64,48,53,54],[64,49,53,55],[64,53,53,59],[64,54,53,60,"state"],[64,59,53,65],[64,61,53,67,"diff"],[64,65,53,71],[64,67,53,73,"onJoin"],[64,73,53,79],[64,75,53,81,"onLeave"],[64,82,53,88],[64,83,53,89],[65,10,54,16,"onSync"],[65,16,54,22],[65,17,54,23],[65,18,54,24],[66,8,55,12],[67,6,56,8],[67,7,56,9],[67,8,56,10],[68,6,57,8],[68,10,57,12],[68,11,57,13,"onJoin"],[68,17,57,19],[68,18,57,20],[68,19,57,21,"key"],[68,22,57,24],[68,24,57,26,"currentPresences"],[68,40,57,42],[68,42,57,44,"newPresences"],[68,54,57,56],[68,59,57,61],[69,8,58,12],[69,12,58,16],[69,13,58,17,"channel"],[69,20,58,24],[69,21,58,25,"_trigger"],[69,29,58,33],[69,30,58,34],[69,40,58,44],[69,42,58,46],[70,10,59,16,"event"],[70,15,59,21],[70,17,59,23],[70,23,59,29],[71,10,60,16,"key"],[71,13,60,19],[72,10,61,16,"currentPresences"],[72,26,61,32],[73,10,62,16,"newPresences"],[74,8,63,12],[74,9,63,13],[74,10,63,14],[75,6,64,8],[75,7,64,9],[75,8,64,10],[76,6,65,8],[76,10,65,12],[76,11,65,13,"onLeave"],[76,18,65,20],[76,19,65,21],[76,20,65,22,"key"],[76,23,65,25],[76,25,65,27,"currentPresences"],[76,41,65,43],[76,43,65,45,"leftPresences"],[76,56,65,58],[76,61,65,63],[77,8,66,12],[77,12,66,16],[77,13,66,17,"channel"],[77,20,66,24],[77,21,66,25,"_trigger"],[77,29,66,33],[77,30,66,34],[77,40,66,44],[77,42,66,46],[78,10,67,16,"event"],[78,15,67,21],[78,17,67,23],[78,24,67,30],[79,10,68,16,"key"],[79,13,68,19],[80,10,69,16,"currentPresences"],[80,26,69,32],[81,10,70,16,"leftPresences"],[82,8,71,12],[82,9,71,13],[82,10,71,14],[83,6,72,8],[83,7,72,9],[83,8,72,10],[84,6,73,8],[84,10,73,12],[84,11,73,13,"onSync"],[84,17,73,19],[84,18,73,20],[84,24,73,26],[85,8,74,12],[85,12,74,16],[85,13,74,17,"channel"],[85,20,74,24],[85,21,74,25,"_trigger"],[85,29,74,33],[85,30,74,34],[85,40,74,44],[85,42,74,46],[86,10,74,48,"event"],[86,15,74,53],[86,17,74,55],[87,8,74,62],[87,9,74,63],[87,10,74,64],[88,6,75,8],[88,7,75,9],[88,8,75,10],[89,4,76,4],[90,4,77,4],[91,0,78,0],[92,0,79,0],[93,0,80,0],[94,0,81,0],[95,0,82,0],[96,0,83,0],[97,0,84,0],[98,0,85,0],[99,0,86,0],[100,4,87,4],[100,11,87,11,"syncState"],[100,20,87,20,"syncState"],[100,21,87,21,"currentState"],[100,33,87,33],[100,35,87,35,"newState"],[100,43,87,43],[100,45,87,45,"onJoin"],[100,51,87,51],[100,53,87,53,"onLeave"],[100,60,87,60],[100,62,87,62],[101,6,88,8],[101,12,88,14,"state"],[101,17,88,19],[101,20,88,22],[101,24,88,26],[101,25,88,27,"cloneDeep"],[101,34,88,36],[101,35,88,37,"currentState"],[101,47,88,49],[101,48,88,50],[102,6,89,8],[102,12,89,14,"transformedState"],[102,28,89,30],[102,31,89,33],[102,35,89,37],[102,36,89,38,"transformState"],[102,50,89,52],[102,51,89,53,"newState"],[102,59,89,61],[102,60,89,62],[103,6,90,8],[103,12,90,14,"joins"],[103,17,90,19],[103,20,90,22],[103,21,90,23],[103,22,90,24],[104,6,91,8],[104,12,91,14,"leaves"],[104,18,91,20],[104,21,91,23],[104,22,91,24],[104,23,91,25],[105,6,92,8],[105,10,92,12],[105,11,92,13,"map"],[105,14,92,16],[105,15,92,17,"state"],[105,20,92,22],[105,22,92,24],[105,23,92,25,"key"],[105,26,92,28],[105,28,92,30,"presences"],[105,37,92,39],[105,42,92,44],[106,8,93,12],[106,12,93,16],[106,13,93,17,"transformedState"],[106,29,93,33],[106,30,93,34,"key"],[106,33,93,37],[106,34,93,38],[106,36,93,40],[107,10,94,16,"leaves"],[107,16,94,22],[107,17,94,23,"key"],[107,20,94,26],[107,21,94,27],[107,24,94,30,"presences"],[107,33,94,39],[108,8,95,12],[109,6,96,8],[109,7,96,9],[109,8,96,10],[110,6,97,8],[110,10,97,12],[110,11,97,13,"map"],[110,14,97,16],[110,15,97,17,"transformedState"],[110,31,97,33],[110,33,97,35],[110,34,97,36,"key"],[110,37,97,39],[110,39,97,41,"newPresences"],[110,51,97,53],[110,56,97,58],[111,8,98,12],[111,14,98,18,"currentPresences"],[111,30,98,34],[111,33,98,37,"state"],[111,38,98,42],[111,39,98,43,"key"],[111,42,98,46],[111,43,98,47],[112,8,99,12],[112,12,99,16,"currentPresences"],[112,28,99,32],[112,30,99,34],[113,10,100,16],[113,16,100,22,"newPresenceRefs"],[113,31,100,37],[113,34,100,40,"newPresences"],[113,46,100,52],[113,47,100,53,"map"],[113,50,100,56],[113,51,100,58,"m"],[113,52,100,59],[113,56,100,64,"m"],[113,57,100,65],[113,58,100,66,"presence_ref"],[113,70,100,78],[113,71,100,79],[114,10,101,16],[114,16,101,22,"curPresenceRefs"],[114,31,101,37],[114,34,101,40,"currentPresences"],[114,50,101,56],[114,51,101,57,"map"],[114,54,101,60],[114,55,101,62,"m"],[114,56,101,63],[114,60,101,68,"m"],[114,61,101,69],[114,62,101,70,"presence_ref"],[114,74,101,82],[114,75,101,83],[115,10,102,16],[115,16,102,22,"joinedPresences"],[115,31,102,37],[115,34,102,40,"newPresences"],[115,46,102,52],[115,47,102,53,"filter"],[115,53,102,59],[115,54,102,61,"m"],[115,55,102,62],[115,59,102,67,"curPresenceRefs"],[115,74,102,82],[115,75,102,83,"indexOf"],[115,82,102,90],[115,83,102,91,"m"],[115,84,102,92],[115,85,102,93,"presence_ref"],[115,97,102,105],[115,98,102,106],[115,101,102,109],[115,102,102,110],[115,103,102,111],[116,10,103,16],[116,16,103,22,"leftPresences"],[116,29,103,35],[116,32,103,38,"currentPresences"],[116,48,103,54],[116,49,103,55,"filter"],[116,55,103,61],[116,56,103,63,"m"],[116,57,103,64],[116,61,103,69,"newPresenceRefs"],[116,76,103,84],[116,77,103,85,"indexOf"],[116,84,103,92],[116,85,103,93,"m"],[116,86,103,94],[116,87,103,95,"presence_ref"],[116,99,103,107],[116,100,103,108],[116,103,103,111],[116,104,103,112],[116,105,103,113],[117,10,104,16],[117,14,104,20,"joinedPresences"],[117,29,104,35],[117,30,104,36,"length"],[117,36,104,42],[117,39,104,45],[117,40,104,46],[117,42,104,48],[118,12,105,20,"joins"],[118,17,105,25],[118,18,105,26,"key"],[118,21,105,29],[118,22,105,30],[118,25,105,33,"joinedPresences"],[118,40,105,48],[119,10,106,16],[120,10,107,16],[120,14,107,20,"leftPresences"],[120,27,107,33],[120,28,107,34,"length"],[120,34,107,40],[120,37,107,43],[120,38,107,44],[120,40,107,46],[121,12,108,20,"leaves"],[121,18,108,26],[121,19,108,27,"key"],[121,22,108,30],[121,23,108,31],[121,26,108,34,"leftPresences"],[121,39,108,47],[122,10,109,16],[123,8,110,12],[123,9,110,13],[123,15,111,17],[124,10,112,16,"joins"],[124,15,112,21],[124,16,112,22,"key"],[124,19,112,25],[124,20,112,26],[124,23,112,29,"newPresences"],[124,35,112,41],[125,8,113,12],[126,6,114,8],[126,7,114,9],[126,8,114,10],[127,6,115,8],[127,13,115,15],[127,17,115,19],[127,18,115,20,"syncDiff"],[127,26,115,28],[127,27,115,29,"state"],[127,32,115,34],[127,34,115,36],[128,8,115,38,"joins"],[128,13,115,43],[129,8,115,45,"leaves"],[130,6,115,52],[130,7,115,53],[130,9,115,55,"onJoin"],[130,15,115,61],[130,17,115,63,"onLeave"],[130,24,115,70],[130,25,115,71],[131,4,116,4],[132,4,117,4],[133,0,118,0],[134,0,119,0],[135,0,120,0],[136,0,121,0],[137,0,122,0],[138,0,123,0],[139,0,124,0],[140,0,125,0],[141,0,126,0],[142,4,127,4],[142,11,127,11,"syncDiff"],[142,19,127,19,"syncDiff"],[142,20,127,20,"state"],[142,25,127,25],[142,27,127,27,"diff"],[142,31,127,31],[142,33,127,33,"onJoin"],[142,39,127,39],[142,41,127,41,"onLeave"],[142,48,127,48],[142,50,127,50],[143,6,128,8],[143,12,128,14],[144,8,128,16,"joins"],[144,13,128,21],[145,8,128,23,"leaves"],[146,6,128,30],[146,7,128,31],[146,10,128,34],[147,8,129,12,"joins"],[147,13,129,17],[147,15,129,19],[147,19,129,23],[147,20,129,24,"transformState"],[147,34,129,38],[147,35,129,39,"diff"],[147,39,129,43],[147,40,129,44,"joins"],[147,45,129,49],[147,46,129,50],[148,8,130,12,"leaves"],[148,14,130,18],[148,16,130,20],[148,20,130,24],[148,21,130,25,"transformState"],[148,35,130,39],[148,36,130,40,"diff"],[148,40,130,44],[148,41,130,45,"leaves"],[148,47,130,51],[149,6,131,8],[149,7,131,9],[150,6,132,8],[150,10,132,12],[150,11,132,13,"onJoin"],[150,17,132,19],[150,19,132,21],[151,8,133,12,"onJoin"],[151,14,133,18],[151,17,133,21,"onJoin"],[151,18,133,21],[151,23,133,27],[151,24,133,29],[151,25,133,30],[152,6,134,8],[153,6,135,8],[153,10,135,12],[153,11,135,13,"onLeave"],[153,18,135,20],[153,20,135,22],[154,8,136,12,"onLeave"],[154,15,136,19],[154,18,136,22,"onLeave"],[154,19,136,22],[154,24,136,28],[154,25,136,30],[154,26,136,31],[155,6,137,8],[156,6,138,8],[156,10,138,12],[156,11,138,13,"map"],[156,14,138,16],[156,15,138,17,"joins"],[156,20,138,22],[156,22,138,24],[156,23,138,25,"key"],[156,26,138,28],[156,28,138,30,"newPresences"],[156,40,138,42],[156,45,138,47],[157,8,139,12],[157,12,139,16,"_a"],[157,14,139,18],[158,8,140,12],[158,14,140,18,"currentPresences"],[158,30,140,34],[158,33,140,37],[158,34,140,38,"_a"],[158,36,140,40],[158,39,140,43,"state"],[158,44,140,48],[158,45,140,49,"key"],[158,48,140,52],[158,49,140,53],[158,55,140,59],[158,59,140,63],[158,63,140,67,"_a"],[158,65,140,69],[158,70,140,74],[158,75,140,79],[158,76,140,80],[158,79,140,83,"_a"],[158,81,140,85],[158,84,140,88],[158,86,140,90],[159,8,141,12,"state"],[159,13,141,17],[159,14,141,18,"key"],[159,17,141,21],[159,18,141,22],[159,21,141,25],[159,25,141,29],[159,26,141,30,"cloneDeep"],[159,35,141,39],[159,36,141,40,"newPresences"],[159,48,141,52],[159,49,141,53],[160,8,142,12],[160,12,142,16,"currentPresences"],[160,28,142,32],[160,29,142,33,"length"],[160,35,142,39],[160,38,142,42],[160,39,142,43],[160,41,142,45],[161,10,143,16],[161,16,143,22,"joinedPresenceRefs"],[161,34,143,40],[161,37,143,43,"state"],[161,42,143,48],[161,43,143,49,"key"],[161,46,143,52],[161,47,143,53],[161,48,143,54,"map"],[161,51,143,57],[161,52,143,59,"m"],[161,53,143,60],[161,57,143,65,"m"],[161,58,143,66],[161,59,143,67,"presence_ref"],[161,71,143,79],[161,72,143,80],[162,10,144,16],[162,16,144,22,"curPresences"],[162,28,144,34],[162,31,144,37,"currentPresences"],[162,47,144,53],[162,48,144,54,"filter"],[162,54,144,60],[162,55,144,62,"m"],[162,56,144,63],[162,60,144,68,"joinedPresenceRefs"],[162,78,144,86],[162,79,144,87,"indexOf"],[162,86,144,94],[162,87,144,95,"m"],[162,88,144,96],[162,89,144,97,"presence_ref"],[162,101,144,109],[162,102,144,110],[162,105,144,113],[162,106,144,114],[162,107,144,115],[163,10,145,16,"state"],[163,15,145,21],[163,16,145,22,"key"],[163,19,145,25],[163,20,145,26],[163,21,145,27,"unshift"],[163,28,145,34],[163,29,145,35],[163,32,145,38,"curPresences"],[163,44,145,50],[163,45,145,51],[164,8,146,12],[165,8,147,12,"onJoin"],[165,14,147,18],[165,15,147,19,"key"],[165,18,147,22],[165,20,147,24,"currentPresences"],[165,36,147,40],[165,38,147,42,"newPresences"],[165,50,147,54],[165,51,147,55],[166,6,148,8],[166,7,148,9],[166,8,148,10],[167,6,149,8],[167,10,149,12],[167,11,149,13,"map"],[167,14,149,16],[167,15,149,17,"leaves"],[167,21,149,23],[167,23,149,25],[167,24,149,26,"key"],[167,27,149,29],[167,29,149,31,"leftPresences"],[167,42,149,44],[167,47,149,49],[168,8,150,12],[168,12,150,16,"currentPresences"],[168,28,150,32],[168,31,150,35,"state"],[168,36,150,40],[168,37,150,41,"key"],[168,40,150,44],[168,41,150,45],[169,8,151,12],[169,12,151,16],[169,13,151,17,"currentPresences"],[169,29,151,33],[169,31,152,16],[170,8,153,12],[170,14,153,18,"presenceRefsToRemove"],[170,34,153,38],[170,37,153,41,"leftPresences"],[170,50,153,54],[170,51,153,55,"map"],[170,54,153,58],[170,55,153,60,"m"],[170,56,153,61],[170,60,153,66,"m"],[170,61,153,67],[170,62,153,68,"presence_ref"],[170,74,153,80],[170,75,153,81],[171,8,154,12,"currentPresences"],[171,24,154,28],[171,27,154,31,"currentPresences"],[171,43,154,47],[171,44,154,48,"filter"],[171,50,154,54],[171,51,154,56,"m"],[171,52,154,57],[171,56,154,62,"presenceRefsToRemove"],[171,76,154,82],[171,77,154,83,"indexOf"],[171,84,154,90],[171,85,154,91,"m"],[171,86,154,92],[171,87,154,93,"presence_ref"],[171,99,154,105],[171,100,154,106],[171,103,154,109],[171,104,154,110],[171,105,154,111],[172,8,155,12,"state"],[172,13,155,17],[172,14,155,18,"key"],[172,17,155,21],[172,18,155,22],[172,21,155,25,"currentPresences"],[172,37,155,41],[173,8,156,12,"onLeave"],[173,15,156,19],[173,16,156,20,"key"],[173,19,156,23],[173,21,156,25,"currentPresences"],[173,37,156,41],[173,39,156,43,"leftPresences"],[173,52,156,56],[173,53,156,57],[174,8,157,12],[174,12,157,16,"currentPresences"],[174,28,157,32],[174,29,157,33,"length"],[174,35,157,39],[174,40,157,44],[174,41,157,45],[174,43,158,16],[174,50,158,23,"state"],[174,55,158,28],[174,56,158,29,"key"],[174,59,158,32],[174,60,158,33],[175,6,159,8],[175,7,159,9],[175,8,159,10],[176,6,160,8],[176,13,160,15,"state"],[176,18,160,20],[177,4,161,4],[178,4,162,4],[179,4,163,4],[179,11,163,11,"map"],[179,14,163,14,"map"],[179,15,163,15,"obj"],[179,18,163,18],[179,20,163,20,"func"],[179,24,163,24],[179,26,163,26],[180,6,164,8],[180,13,164,15,"Object"],[180,19,164,21],[180,20,164,22,"getOwnPropertyNames"],[180,39,164,41],[180,40,164,42,"obj"],[180,43,164,45],[180,44,164,46],[180,45,164,47,"map"],[180,48,164,50],[180,49,164,52,"key"],[180,52,164,55],[180,56,164,60,"func"],[180,60,164,64],[180,61,164,65,"key"],[180,64,164,68],[180,66,164,70,"obj"],[180,69,164,73],[180,70,164,74,"key"],[180,73,164,77],[180,74,164,78],[180,75,164,79],[180,76,164,80],[181,4,165,4],[182,4,166,4],[183,0,167,0],[184,0,168,0],[185,0,169,0],[186,0,170,0],[187,0,171,0],[188,0,172,0],[189,0,173,0],[190,0,174,0],[191,0,175,0],[192,0,176,0],[193,0,177,0],[194,0,178,0],[195,0,179,0],[196,0,180,0],[197,0,181,0],[198,0,182,0],[199,0,183,0],[200,0,184,0],[201,0,185,0],[202,0,186,0],[203,0,187,0],[204,0,188,0],[205,4,189,4],[205,11,189,11,"transformState"],[205,25,189,25,"transformState"],[205,26,189,26,"state"],[205,31,189,31],[205,33,189,33],[206,6,190,8,"state"],[206,11,190,13],[206,14,190,16],[206,18,190,20],[206,19,190,21,"cloneDeep"],[206,28,190,30],[206,29,190,31,"state"],[206,34,190,36],[206,35,190,37],[207,6,191,8],[207,13,191,15,"Object"],[207,19,191,21],[207,20,191,22,"getOwnPropertyNames"],[207,39,191,41],[207,40,191,42,"state"],[207,45,191,47],[207,46,191,48],[207,47,191,49,"reduce"],[207,53,191,55],[207,54,191,56],[207,55,191,57,"newState"],[207,63,191,65],[207,65,191,67,"key"],[207,68,191,70],[207,73,191,75],[208,8,192,12],[208,14,192,18,"presences"],[208,23,192,27],[208,26,192,30,"state"],[208,31,192,35],[208,32,192,36,"key"],[208,35,192,39],[208,36,192,40],[209,8,193,12],[209,12,193,16],[209,19,193,23],[209,23,193,27,"presences"],[209,32,193,36],[209,34,193,38],[210,10,194,16,"newState"],[210,18,194,24],[210,19,194,25,"key"],[210,22,194,28],[210,23,194,29],[210,26,194,32,"presences"],[210,35,194,41],[210,36,194,42,"metas"],[210,41,194,47],[210,42,194,48,"map"],[210,45,194,51],[210,46,194,53,"presence"],[210,54,194,61],[210,58,194,66],[211,12,195,20,"presence"],[211,20,195,28],[211,21,195,29],[211,35,195,43],[211,36,195,44],[211,39,195,47,"presence"],[211,47,195,55],[211,48,195,56],[211,57,195,65],[211,58,195,66],[212,12,196,20],[212,19,196,27,"presence"],[212,27,196,35],[212,28,196,36],[212,37,196,45],[212,38,196,46],[213,12,197,20],[213,19,197,27,"presence"],[213,27,197,35],[213,28,197,36],[213,42,197,50],[213,43,197,51],[214,12,198,20],[214,19,198,27,"presence"],[214,27,198,35],[215,10,199,16],[215,11,199,17],[215,12,199,18],[216,8,200,12],[216,9,200,13],[216,15,201,17],[217,10,202,16,"newState"],[217,18,202,24],[217,19,202,25,"key"],[217,22,202,28],[217,23,202,29],[217,26,202,32,"presences"],[217,35,202,41],[218,8,203,12],[219,8,204,12],[219,15,204,19,"newState"],[219,23,204,27],[220,6,205,8],[220,7,205,9],[220,9,205,11],[220,10,205,12],[220,11,205,13],[220,12,205,14],[221,4,206,4],[222,4,207,4],[223,4,208,4],[223,11,208,11,"cloneDeep"],[223,20,208,20,"cloneDeep"],[223,21,208,21,"obj"],[223,24,208,24],[223,26,208,26],[224,6,209,8],[224,13,209,15,"JSON"],[224,17,209,19],[224,18,209,20,"parse"],[224,23,209,25],[224,24,209,26,"JSON"],[224,28,209,30],[224,29,209,31,"stringify"],[224,38,209,40],[224,39,209,41,"obj"],[224,42,209,44],[224,43,209,45],[224,44,209,46],[225,4,210,4],[226,4,211,4],[227,4,212,4,"onJoin"],[227,10,212,10,"onJoin"],[227,11,212,11,"callback"],[227,19,212,19],[227,21,212,21],[228,6,213,8],[228,10,213,12],[228,11,213,13,"caller"],[228,17,213,19],[228,18,213,20,"onJoin"],[228,24,213,26],[228,27,213,29,"callback"],[228,35,213,37],[229,4,214,4],[230,4,215,4],[231,4,216,4,"onLeave"],[231,11,216,11,"onLeave"],[231,12,216,12,"callback"],[231,20,216,20],[231,22,216,22],[232,6,217,8],[232,10,217,12],[232,11,217,13,"caller"],[232,17,217,19],[232,18,217,20,"onLeave"],[232,25,217,27],[232,28,217,30,"callback"],[232,36,217,38],[233,4,218,4],[234,4,219,4],[235,4,220,4,"onSync"],[235,10,220,10,"onSync"],[235,11,220,11,"callback"],[235,19,220,19],[235,21,220,21],[236,6,221,8],[236,10,221,12],[236,11,221,13,"caller"],[236,17,221,19],[236,18,221,20,"onSync"],[236,24,221,26],[236,27,221,29,"callback"],[236,35,221,37],[237,4,222,4],[238,4,223,4],[239,4,224,4,"inPendingSyncState"],[239,22,224,22,"inPendingSyncState"],[239,23,224,22],[239,25,224,25],[240,6,225,8],[240,13,225,15],[240,14,225,16],[240,18,225,20],[240,19,225,21,"joinRef"],[240,26,225,28],[240,30,225,32],[240,34,225,36],[240,35,225,37,"joinRef"],[240,42,225,44],[240,47,225,49],[240,51,225,53],[240,52,225,54,"channel"],[240,59,225,61],[240,60,225,62,"_joinRef"],[240,68,225,70],[240,69,225,71],[240,70,225,72],[241,4,226,4],[242,2,227,0],[243,2,228,0,"exports"],[243,9,228,7],[243,10,228,8,"default"],[243,17,228,15],[243,20,228,18,"RealtimePresence"],[243,36,228,34],[244,0,228,35],[244,3]],"functionMap":{"names":["<global>","<anonymous>","RealtimePresence","constructor","caller.onJoin","caller.onLeave","caller.onSync","channel._on$argument_2","pendingDiffs.forEach$argument_0","onJoin$argument_0","onLeave$argument_0","onSync$argument_0","syncState","map$argument_1","newPresences.map$argument_0","currentPresences.map$argument_0","newPresences.filter$argument_0","currentPresences.filter$argument_0","syncDiff","onJoin","onLeave","state.key.map$argument_0","leftPresences.map$argument_0","map","Object.getOwnPropertyNames.map$argument_0","transformState","Object.getOwnPropertyNames.reduce$argument_0","presences.metas.map$argument_0","cloneDeep","onSync","inPendingSyncState"],"mappings":"AAA;CCQ;CDI;AEC;ICQ;oBCO,SD;qBEC,SF;oBGC,SH;2CIM;sCCI;aDE;SJG;0CIC;SJS;oBMC;SNO;qBOC;SPO;oBQC;SRE;KDC;IUW;wBCK;SDI;mCCC;yDCG,qBD;6DEC,qBF;4DGC,kDH;8DIC,kDJ;SDW;KVE;IgBW;qBCM,SD;sBEG,SF;wBLE;0DQK,qBR;6DIC,qDJ;SKI;yBLC;2DSI,qBT;uDIC,uDJ;SKK;KhBE;IqBE;mDCC,4BD;KrBC;IuBwB;wDCE;oDCG;iBDK;SDM;KvBC;I0BE;K1BE;IiBE;KjBE;IkBE;KlBE;I2BE;K3BE;I4BE;K5BE;CFC"},"hasCjsExports":true},"type":"js/module"}]}