{"dependencies":[{"name":"./constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":71,"index":71}}],"key":"waDaw5D7vDr2hRFu0z1BqRCTzP4=","exportNames":["*"],"imports":1}},{"name":"./errors","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":72},"end":{"line":2,"column":47,"index":119}}],"key":"rEld05quROH+iA6QLT6kkvqJ/qc=","exportNames":["*"],"imports":1}},{"name":"./base64url","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":120},"end":{"line":3,"column":73,"index":193}}],"key":"dhv0KPIkoHN6QWLEoiPQ8fdmrOg=","exportNames":["*"],"imports":1}},{"name":"@supabase/node-fetch","data":{"asyncType":"async","isESMImport":true,"locs":[{"start":{"line":82,"column":30,"index":2753},"end":{"line":82,"column":60,"index":2783}}],"key":"7Fx+cnrTZuhuI1XE65tJyFLDBO8=","exportNames":["*"],"imports":1}},{"name":"/app/frontend/node_modules/@expo/metro-config/build/async-require.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":82,"column":30,"index":2753},"end":{"line":82,"column":65,"index":2788}}],"key":"daau5xiLR32xskYL0mG55FO6bjk=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.expiresAt = expiresAt;\n  exports.uuid = uuid;\n  Object.defineProperty(exports, \"isBrowser\", {\n    enumerable: true,\n    get: function () {\n      return isBrowser;\n    }\n  });\n  Object.defineProperty(exports, \"supportsLocalStorage\", {\n    enumerable: true,\n    get: function () {\n      return supportsLocalStorage;\n    }\n  });\n  exports.parseParametersFromURL = parseParametersFromURL;\n  Object.defineProperty(exports, \"resolveFetch\", {\n    enumerable: true,\n    get: function () {\n      return resolveFetch;\n    }\n  });\n  Object.defineProperty(exports, \"looksLikeFetchResponse\", {\n    enumerable: true,\n    get: function () {\n      return looksLikeFetchResponse;\n    }\n  });\n  Object.defineProperty(exports, \"setItemAsync\", {\n    enumerable: true,\n    get: function () {\n      return setItemAsync;\n    }\n  });\n  Object.defineProperty(exports, \"getItemAsync\", {\n    enumerable: true,\n    get: function () {\n      return getItemAsync;\n    }\n  });\n  Object.defineProperty(exports, \"removeItemAsync\", {\n    enumerable: true,\n    get: function () {\n      return removeItemAsync;\n    }\n  });\n  Object.defineProperty(exports, \"Deferred\", {\n    enumerable: true,\n    get: function () {\n      return Deferred;\n    }\n  });\n  exports.decodeJWT = decodeJWT;\n  exports.sleep = sleep;\n  exports.retryable = retryable;\n  exports.generatePKCEVerifier = generatePKCEVerifier;\n  exports.generatePKCEChallenge = generatePKCEChallenge;\n  exports.getCodeChallengeAndMethod = getCodeChallengeAndMethod;\n  exports.parseResponseAPIVersion = parseResponseAPIVersion;\n  exports.validateExp = validateExp;\n  exports.getAlgorithm = getAlgorithm;\n  exports.validateUUID = validateUUID;\n  exports.userNotAvailableProxy = userNotAvailableProxy;\n  exports.deepClone = deepClone;\n  var _constants = require(_dependencyMap[0], \"./constants\");\n  var _errors = require(_dependencyMap[1], \"./errors\");\n  var _base64url = require(_dependencyMap[2], \"./base64url\");\n  function expiresAt(expiresIn) {\n    const timeNow = Math.round(Date.now() / 1000);\n    return timeNow + expiresIn;\n  }\n  function uuid() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      const r = Math.random() * 16 | 0,\n        v = c == 'x' ? r : r & 0x3 | 0x8;\n      return v.toString(16);\n    });\n  }\n  const isBrowser = () => typeof window !== 'undefined' && typeof document !== 'undefined';\n  const localStorageWriteTests = {\n    tested: false,\n    writable: false\n  };\n  /**\n   * Checks whether localStorage is supported on this browser.\n   */\n  const supportsLocalStorage = () => {\n    if (!isBrowser()) {\n      return false;\n    }\n    try {\n      if (typeof globalThis.localStorage !== 'object') {\n        return false;\n      }\n    } catch (e) {\n      // DOM exception when accessing `localStorage`\n      return false;\n    }\n    if (localStorageWriteTests.tested) {\n      return localStorageWriteTests.writable;\n    }\n    const randomKey = `lswt-${Math.random()}${Math.random()}`;\n    try {\n      globalThis.localStorage.setItem(randomKey, randomKey);\n      globalThis.localStorage.removeItem(randomKey);\n      localStorageWriteTests.tested = true;\n      localStorageWriteTests.writable = true;\n    } catch (e) {\n      // localStorage can't be written to\n      // https://www.chromium.org/for-testers/bug-reporting-guidelines/uncaught-securityerror-failed-to-read-the-localstorage-property-from-window-access-is-denied-for-this-document\n      localStorageWriteTests.tested = true;\n      localStorageWriteTests.writable = false;\n    }\n    return localStorageWriteTests.writable;\n  };\n  /**\n   * Extracts parameters encoded in the URL both in the query and fragment.\n   */\n  function parseParametersFromURL(href) {\n    const result = {};\n    const url = new URL(href);\n    if (url.hash && url.hash[0] === '#') {\n      try {\n        const hashSearchParams = new URLSearchParams(url.hash.substring(1));\n        hashSearchParams.forEach((value, key) => {\n          result[key] = value;\n        });\n      } catch (e) {\n        // hash is not a query string\n      }\n    }\n    // search parameters take precedence over hash parameters\n    url.searchParams.forEach((value, key) => {\n      result[key] = value;\n    });\n    return result;\n  }\n  const resolveFetch = customFetch => {\n    let _fetch;\n    if (customFetch) {\n      _fetch = customFetch;\n    } else if (typeof fetch === 'undefined') {\n      _fetch = (...args) => require(_dependencyMap[4], \"/app/frontend/node_modules/@expo/metro-config/build/async-require.js\")(_dependencyMap[3], _dependencyMap.paths, \"@supabase/node-fetch\").then(({\n        default: fetch\n      }) => fetch(...args));\n    } else {\n      _fetch = fetch;\n    }\n    return (...args) => _fetch(...args);\n  };\n  const looksLikeFetchResponse = maybeResponse => {\n    return typeof maybeResponse === 'object' && maybeResponse !== null && 'status' in maybeResponse && 'ok' in maybeResponse && 'json' in maybeResponse && typeof maybeResponse.json === 'function';\n  };\n  // Storage helpers\n  const setItemAsync = async (storage, key, data) => {\n    await storage.setItem(key, JSON.stringify(data));\n  };\n  const getItemAsync = async (storage, key) => {\n    const value = await storage.getItem(key);\n    if (!value) {\n      return null;\n    }\n    try {\n      return JSON.parse(value);\n    } catch (_a) {\n      return value;\n    }\n  };\n  const removeItemAsync = async (storage, key) => {\n    await storage.removeItem(key);\n  };\n  /**\n   * A deferred represents some asynchronous work that is not yet finished, which\n   * may or may not culminate in a value.\n   * Taken from: https://github.com/mike-north/types/blob/master/src/async.ts\n   */\n  class Deferred {\n    constructor() {\n      // eslint-disable-next-line @typescript-eslint/no-extra-semi\n      ;\n      this.promise = new Deferred.promiseConstructor((res, rej) => {\n        // eslint-disable-next-line @typescript-eslint/no-extra-semi\n        ;\n        this.resolve = res;\n        this.reject = rej;\n      });\n    }\n  }\n  Deferred.promiseConstructor = Promise;\n  function decodeJWT(token) {\n    const parts = token.split('.');\n    if (parts.length !== 3) {\n      throw new _errors.AuthInvalidJwtError('Invalid JWT structure');\n    }\n    // Regex checks for base64url format\n    for (let i = 0; i < parts.length; i++) {\n      if (!_constants.BASE64URL_REGEX.test(parts[i])) {\n        throw new _errors.AuthInvalidJwtError('JWT not in base64url format');\n      }\n    }\n    const data = {\n      // using base64url lib\n      header: JSON.parse((0, _base64url.stringFromBase64URL)(parts[0])),\n      payload: JSON.parse((0, _base64url.stringFromBase64URL)(parts[1])),\n      signature: (0, _base64url.base64UrlToUint8Array)(parts[2]),\n      raw: {\n        header: parts[0],\n        payload: parts[1]\n      }\n    };\n    return data;\n  }\n  /**\n   * Creates a promise that resolves to null after some time.\n   */\n  async function sleep(time) {\n    return await new Promise(accept => {\n      setTimeout(() => accept(null), time);\n    });\n  }\n  /**\n   * Converts the provided async function into a retryable function. Each result\n   * or thrown error is sent to the isRetryable function which should return true\n   * if the function should run again.\n   */\n  function retryable(fn, isRetryable) {\n    const promise = new Promise((accept, reject) => {\n      // eslint-disable-next-line @typescript-eslint/no-extra-semi\n      ;\n      (async () => {\n        for (let attempt = 0; attempt < Infinity; attempt++) {\n          try {\n            const result = await fn(attempt);\n            if (!isRetryable(attempt, null, result)) {\n              accept(result);\n              return;\n            }\n          } catch (e) {\n            if (!isRetryable(attempt, e)) {\n              reject(e);\n              return;\n            }\n          }\n        }\n      })();\n    });\n    return promise;\n  }\n  function dec2hex(dec) {\n    return ('0' + dec.toString(16)).substr(-2);\n  }\n  // Functions below taken from: https://stackoverflow.com/questions/63309409/creating-a-code-verifier-and-challenge-for-pkce-auth-on-spotify-api-in-reactjs\n  function generatePKCEVerifier() {\n    const verifierLength = 56;\n    const array = new Uint32Array(verifierLength);\n    if (typeof crypto === 'undefined') {\n      const charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~';\n      const charSetLen = charSet.length;\n      let verifier = '';\n      for (let i = 0; i < verifierLength; i++) {\n        verifier += charSet.charAt(Math.floor(Math.random() * charSetLen));\n      }\n      return verifier;\n    }\n    crypto.getRandomValues(array);\n    return Array.from(array, dec2hex).join('');\n  }\n  async function sha256(randomString) {\n    const encoder = new TextEncoder();\n    const encodedData = encoder.encode(randomString);\n    const hash = await crypto.subtle.digest('SHA-256', encodedData);\n    const bytes = new Uint8Array(hash);\n    return Array.from(bytes).map(c => String.fromCharCode(c)).join('');\n  }\n  async function generatePKCEChallenge(verifier) {\n    const hasCryptoSupport = typeof crypto !== 'undefined' && typeof crypto.subtle !== 'undefined' && typeof TextEncoder !== 'undefined';\n    if (!hasCryptoSupport) {\n      console.warn('WebCrypto API is not supported. Code challenge method will default to use plain instead of sha256.');\n      return verifier;\n    }\n    const hashed = await sha256(verifier);\n    return btoa(hashed).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n  }\n  async function getCodeChallengeAndMethod(storage, storageKey, isPasswordRecovery = false) {\n    const codeVerifier = generatePKCEVerifier();\n    let storedCodeVerifier = codeVerifier;\n    if (isPasswordRecovery) {\n      storedCodeVerifier += '/PASSWORD_RECOVERY';\n    }\n    await setItemAsync(storage, `${storageKey}-code-verifier`, storedCodeVerifier);\n    const codeChallenge = await generatePKCEChallenge(codeVerifier);\n    const codeChallengeMethod = codeVerifier === codeChallenge ? 'plain' : 's256';\n    return [codeChallenge, codeChallengeMethod];\n  }\n  /** Parses the API version which is 2YYY-MM-DD. */\n  const API_VERSION_REGEX = /^2[0-9]{3}-(0[1-9]|1[0-2])-(0[1-9]|1[0-9]|2[0-9]|3[0-1])$/i;\n  function parseResponseAPIVersion(response) {\n    const apiVersion = response.headers.get(_constants.API_VERSION_HEADER_NAME);\n    if (!apiVersion) {\n      return null;\n    }\n    if (!apiVersion.match(API_VERSION_REGEX)) {\n      return null;\n    }\n    try {\n      const date = new Date(`${apiVersion}T00:00:00.0Z`);\n      return date;\n    } catch (e) {\n      return null;\n    }\n  }\n  function validateExp(exp) {\n    if (!exp) {\n      throw new Error('Missing exp claim');\n    }\n    const timeNow = Math.floor(Date.now() / 1000);\n    if (exp <= timeNow) {\n      throw new Error('JWT has expired');\n    }\n  }\n  function getAlgorithm(alg) {\n    switch (alg) {\n      case 'RS256':\n        return {\n          name: 'RSASSA-PKCS1-v1_5',\n          hash: {\n            name: 'SHA-256'\n          }\n        };\n      case 'ES256':\n        return {\n          name: 'ECDSA',\n          namedCurve: 'P-256',\n          hash: {\n            name: 'SHA-256'\n          }\n        };\n      default:\n        throw new Error('Invalid alg claim');\n    }\n  }\n  const UUID_REGEX = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/;\n  function validateUUID(str) {\n    if (!UUID_REGEX.test(str)) {\n      throw new Error('@supabase/auth-js: Expected parameter to be UUID but is not');\n    }\n  }\n  function userNotAvailableProxy() {\n    const proxyTarget = {};\n    return new Proxy(proxyTarget, {\n      get: (target, prop) => {\n        if (prop === '__isUserNotAvailableProxy') {\n          return true;\n        }\n        // Preventative check for common problematic symbols during cloning/inspection\n        // These symbols might be accessed by structuredClone or other internal mechanisms.\n        if (typeof prop === 'symbol') {\n          const sProp = prop.toString();\n          if (sProp === 'Symbol(Symbol.toPrimitive)' || sProp === 'Symbol(Symbol.toStringTag)' || sProp === 'Symbol(util.inspect.custom)') {\n            // Node.js util.inspect\n            return undefined;\n          }\n        }\n        throw new Error(`@supabase/auth-js: client was created with userStorage option and there was no user stored in the user storage. Accessing the \"${prop}\" property of the session object is not supported. Please use getUser() instead.`);\n      },\n      set: (_target, prop) => {\n        throw new Error(`@supabase/auth-js: client was created with userStorage option and there was no user stored in the user storage. Setting the \"${prop}\" property of the session object is not supported. Please use getUser() to fetch a user object you can manipulate.`);\n      },\n      deleteProperty: (_target, prop) => {\n        throw new Error(`@supabase/auth-js: client was created with userStorage option and there was no user stored in the user storage. Deleting the \"${prop}\" property of the session object is not supported. Please use getUser() to fetch a user object you can manipulate.`);\n      }\n    });\n  }\n  /**\n   * Deep clones a JSON-serializable object using JSON.parse(JSON.stringify(obj)).\n   * Note: Only works for JSON-safe data.\n   */\n  function deepClone(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n});","lineCount":386,"map":[[7,2,4,0,"exports"],[7,9,4,0],[7,10,4,0,"expiresAt"],[7,19,4,0],[7,22,4,0,"expiresAt"],[7,31,4,0],[8,2,8,0,"exports"],[8,9,8,0],[8,10,8,0,"uuid"],[8,14,8,0],[8,17,8,0,"uuid"],[8,21,8,0],[9,2,14,0,"Object"],[9,8,14,0],[9,9,14,0,"defineProperty"],[9,23,14,0],[9,24,14,0,"exports"],[9,31,14,0],[10,4,14,0,"enumerable"],[10,14,14,0],[11,4,14,0,"get"],[11,7,14,0],[11,18,14,0,"get"],[11,19,14,0],[12,6,14,0],[12,13,14,0,"isBrowser"],[12,22,14,0],[13,4,14,0],[14,2,14,0],[15,2,22,0,"Object"],[15,8,22,0],[15,9,22,0,"defineProperty"],[15,23,22,0],[15,24,22,0,"exports"],[15,31,22,0],[16,4,22,0,"enumerable"],[16,14,22,0],[17,4,22,0,"get"],[17,7,22,0],[17,18,22,0,"get"],[17,19,22,0],[18,6,22,0],[18,13,22,0,"supportsLocalStorage"],[18,33,22,0],[19,4,22,0],[20,2,22,0],[21,2,56,0,"exports"],[21,9,56,0],[21,10,56,0,"parseParametersFromURL"],[21,32,56,0],[21,35,56,0,"parseParametersFromURL"],[21,57,56,0],[22,2,76,0,"Object"],[22,8,76,0],[22,9,76,0,"defineProperty"],[22,23,76,0],[22,24,76,0,"exports"],[22,31,76,0],[23,4,76,0,"enumerable"],[23,14,76,0],[24,4,76,0,"get"],[24,7,76,0],[24,18,76,0,"get"],[24,19,76,0],[25,6,76,0],[25,13,76,0,"resolveFetch"],[25,25,76,0],[26,4,76,0],[27,2,76,0],[28,2,89,0,"Object"],[28,8,89,0],[28,9,89,0,"defineProperty"],[28,23,89,0],[28,24,89,0,"exports"],[28,31,89,0],[29,4,89,0,"enumerable"],[29,14,89,0],[30,4,89,0,"get"],[30,7,89,0],[30,18,89,0,"get"],[30,19,89,0],[31,6,89,0],[31,13,89,0,"looksLikeFetchResponse"],[31,35,89,0],[32,4,89,0],[33,2,89,0],[34,2,98,0,"Object"],[34,8,98,0],[34,9,98,0,"defineProperty"],[34,23,98,0],[34,24,98,0,"exports"],[34,31,98,0],[35,4,98,0,"enumerable"],[35,14,98,0],[36,4,98,0,"get"],[36,7,98,0],[36,18,98,0,"get"],[36,19,98,0],[37,6,98,0],[37,13,98,0,"setItemAsync"],[37,25,98,0],[38,4,98,0],[39,2,98,0],[40,2,101,0,"Object"],[40,8,101,0],[40,9,101,0,"defineProperty"],[40,23,101,0],[40,24,101,0,"exports"],[40,31,101,0],[41,4,101,0,"enumerable"],[41,14,101,0],[42,4,101,0,"get"],[42,7,101,0],[42,18,101,0,"get"],[42,19,101,0],[43,6,101,0],[43,13,101,0,"getItemAsync"],[43,25,101,0],[44,4,101,0],[45,2,101,0],[46,2,113,0,"Object"],[46,8,113,0],[46,9,113,0,"defineProperty"],[46,23,113,0],[46,24,113,0,"exports"],[46,31,113,0],[47,4,113,0,"enumerable"],[47,14,113,0],[48,4,113,0,"get"],[48,7,113,0],[48,18,113,0,"get"],[48,19,113,0],[49,6,113,0],[49,13,113,0,"removeItemAsync"],[49,28,113,0],[50,4,113,0],[51,2,113,0],[52,2,121,0,"Object"],[52,8,121,0],[52,9,121,0,"defineProperty"],[52,23,121,0],[52,24,121,0,"exports"],[52,31,121,0],[53,4,121,0,"enumerable"],[53,14,121,0],[54,4,121,0,"get"],[54,7,121,0],[54,18,121,0,"get"],[54,19,121,0],[55,6,121,0],[55,13,121,0,"Deferred"],[55,21,121,0],[56,4,121,0],[57,2,121,0],[58,2,134,0,"exports"],[58,9,134,0],[58,10,134,0,"decodeJWT"],[58,19,134,0],[58,22,134,0,"decodeJWT"],[58,31,134,0],[59,2,160,0,"exports"],[59,9,160,0],[59,10,160,0,"sleep"],[59,15,160,0],[59,18,160,0,"sleep"],[59,23,160,0],[60,2,170,0,"exports"],[60,9,170,0],[60,10,170,0,"retryable"],[60,19,170,0],[60,22,170,0,"retryable"],[60,31,170,0],[61,2,198,0,"exports"],[61,9,198,0],[61,10,198,0,"generatePKCEVerifier"],[61,30,198,0],[61,33,198,0,"generatePKCEVerifier"],[61,53,198,0],[62,2,222,0,"exports"],[62,9,222,0],[62,10,222,0,"generatePKCEChallenge"],[62,31,222,0],[62,34,222,0,"generatePKCEChallenge"],[62,55,222,0],[63,2,233,0,"exports"],[63,9,233,0],[63,10,233,0,"getCodeChallengeAndMethod"],[63,35,233,0],[63,38,233,0,"getCodeChallengeAndMethod"],[63,63,233,0],[64,2,246,0,"exports"],[64,9,246,0],[64,10,246,0,"parseResponseAPIVersion"],[64,33,246,0],[64,36,246,0,"parseResponseAPIVersion"],[64,59,246,0],[65,2,262,0,"exports"],[65,9,262,0],[65,10,262,0,"validateExp"],[65,21,262,0],[65,24,262,0,"validateExp"],[65,35,262,0],[66,2,271,0,"exports"],[66,9,271,0],[66,10,271,0,"getAlgorithm"],[66,22,271,0],[66,25,271,0,"getAlgorithm"],[66,37,271,0],[67,2,289,0,"exports"],[67,9,289,0],[67,10,289,0,"validateUUID"],[67,22,289,0],[67,25,289,0,"validateUUID"],[67,37,289,0],[68,2,294,0,"exports"],[68,9,294,0],[68,10,294,0,"userNotAvailableProxy"],[68,31,294,0],[68,34,294,0,"userNotAvailableProxy"],[68,55,294,0],[69,2,326,0,"exports"],[69,9,326,0],[69,10,326,0,"deepClone"],[69,19,326,0],[69,22,326,0,"deepClone"],[69,31,326,0],[70,2,1,0],[70,6,1,0,"_constants"],[70,16,1,0],[70,19,1,0,"require"],[70,26,1,0],[70,27,1,0,"_dependencyMap"],[70,41,1,0],[71,2,2,0],[71,6,2,0,"_errors"],[71,13,2,0],[71,16,2,0,"require"],[71,23,2,0],[71,24,2,0,"_dependencyMap"],[71,38,2,0],[72,2,3,0],[72,6,3,0,"_base64url"],[72,16,3,0],[72,19,3,0,"require"],[72,26,3,0],[72,27,3,0,"_dependencyMap"],[72,41,3,0],[73,2,4,7],[73,11,4,16,"expiresAt"],[73,20,4,25,"expiresAt"],[73,21,4,26,"expiresIn"],[73,30,4,35],[73,32,4,37],[74,4,5,4],[74,10,5,10,"timeNow"],[74,17,5,17],[74,20,5,20,"Math"],[74,24,5,24],[74,25,5,25,"round"],[74,30,5,30],[74,31,5,31,"Date"],[74,35,5,35],[74,36,5,36,"now"],[74,39,5,39],[74,40,5,40],[74,41,5,41],[74,44,5,44],[74,48,5,48],[74,49,5,49],[75,4,6,4],[75,11,6,11,"timeNow"],[75,18,6,18],[75,21,6,21,"expiresIn"],[75,30,6,30],[76,2,7,0],[77,2,8,7],[77,11,8,16,"uuid"],[77,15,8,20,"uuid"],[77,16,8,20],[77,18,8,23],[78,4,9,4],[78,11,9,11],[78,49,9,49],[78,50,9,50,"replace"],[78,57,9,57],[78,58,9,58],[78,65,9,65],[78,67,9,67],[78,77,9,77,"c"],[78,78,9,78],[78,80,9,80],[79,6,10,8],[79,12,10,14,"r"],[79,13,10,15],[79,16,10,19,"Math"],[79,20,10,23],[79,21,10,24,"random"],[79,27,10,30],[79,28,10,31],[79,29,10,32],[79,32,10,35],[79,34,10,37],[79,37,10,41],[79,38,10,42],[80,8,10,44,"v"],[80,9,10,45],[80,12,10,48,"c"],[80,13,10,49],[80,17,10,53],[80,20,10,56],[80,23,10,59,"r"],[80,24,10,60],[80,27,10,64,"r"],[80,28,10,65],[80,31,10,68],[80,34,10,71],[80,37,10,75],[80,40,10,78],[81,6,11,8],[81,13,11,15,"v"],[81,14,11,16],[81,15,11,17,"toString"],[81,23,11,25],[81,24,11,26],[81,26,11,28],[81,27,11,29],[82,4,12,4],[82,5,12,5],[82,6,12,6],[83,2,13,0],[84,2,14,7],[84,8,14,13,"isBrowser"],[84,17,14,22],[84,20,14,25,"isBrowser"],[84,21,14,25],[84,26,14,31],[84,33,14,38,"window"],[84,39,14,44],[84,44,14,49],[84,55,14,60],[84,59,14,64],[84,66,14,71,"document"],[84,74,14,79],[84,79,14,84],[84,90,14,95],[85,2,15,0],[85,8,15,6,"localStorageWriteTests"],[85,30,15,28],[85,33,15,31],[86,4,16,4,"tested"],[86,10,16,10],[86,12,16,12],[86,17,16,17],[87,4,17,4,"writable"],[87,12,17,12],[87,14,17,14],[88,2,18,0],[88,3,18,1],[89,2,19,0],[90,0,20,0],[91,0,21,0],[92,2,22,7],[92,8,22,13,"supportsLocalStorage"],[92,28,22,33],[92,31,22,36,"supportsLocalStorage"],[92,32,22,36],[92,37,22,42],[93,4,23,4],[93,8,23,8],[93,9,23,9,"isBrowser"],[93,18,23,18],[93,19,23,19],[93,20,23,20],[93,22,23,22],[94,6,24,8],[94,13,24,15],[94,18,24,20],[95,4,25,4],[96,4,26,4],[96,8,26,8],[97,6,27,8],[97,10,27,12],[97,17,27,19,"globalThis"],[97,27,27,29],[97,28,27,30,"localStorage"],[97,40,27,42],[97,45,27,47],[97,53,27,55],[97,55,27,57],[98,8,28,12],[98,15,28,19],[98,20,28,24],[99,6,29,8],[100,4,30,4],[100,5,30,5],[100,6,31,4],[100,13,31,11,"e"],[100,14,31,12],[100,16,31,14],[101,6,32,8],[102,6,33,8],[102,13,33,15],[102,18,33,20],[103,4,34,4],[104,4,35,4],[104,8,35,8,"localStorageWriteTests"],[104,30,35,30],[104,31,35,31,"tested"],[104,37,35,37],[104,39,35,39],[105,6,36,8],[105,13,36,15,"localStorageWriteTests"],[105,35,36,37],[105,36,36,38,"writable"],[105,44,36,46],[106,4,37,4],[107,4,38,4],[107,10,38,10,"randomKey"],[107,19,38,19],[107,22,38,22],[107,30,38,30,"Math"],[107,34,38,34],[107,35,38,35,"random"],[107,41,38,41],[107,42,38,42],[107,43,38,43],[107,46,38,46,"Math"],[107,50,38,50],[107,51,38,51,"random"],[107,57,38,57],[107,58,38,58],[107,59,38,59],[107,61,38,61],[108,4,39,4],[108,8,39,8],[109,6,40,8,"globalThis"],[109,16,40,18],[109,17,40,19,"localStorage"],[109,29,40,31],[109,30,40,32,"setItem"],[109,37,40,39],[109,38,40,40,"randomKey"],[109,47,40,49],[109,49,40,51,"randomKey"],[109,58,40,60],[109,59,40,61],[110,6,41,8,"globalThis"],[110,16,41,18],[110,17,41,19,"localStorage"],[110,29,41,31],[110,30,41,32,"removeItem"],[110,40,41,42],[110,41,41,43,"randomKey"],[110,50,41,52],[110,51,41,53],[111,6,42,8,"localStorageWriteTests"],[111,28,42,30],[111,29,42,31,"tested"],[111,35,42,37],[111,38,42,40],[111,42,42,44],[112,6,43,8,"localStorageWriteTests"],[112,28,43,30],[112,29,43,31,"writable"],[112,37,43,39],[112,40,43,42],[112,44,43,46],[113,4,44,4],[113,5,44,5],[113,6,45,4],[113,13,45,11,"e"],[113,14,45,12],[113,16,45,14],[114,6,46,8],[115,6,47,8],[116,6,48,8,"localStorageWriteTests"],[116,28,48,30],[116,29,48,31,"tested"],[116,35,48,37],[116,38,48,40],[116,42,48,44],[117,6,49,8,"localStorageWriteTests"],[117,28,49,30],[117,29,49,31,"writable"],[117,37,49,39],[117,40,49,42],[117,45,49,47],[118,4,50,4],[119,4,51,4],[119,11,51,11,"localStorageWriteTests"],[119,33,51,33],[119,34,51,34,"writable"],[119,42,51,42],[120,2,52,0],[120,3,52,1],[121,2,53,0],[122,0,54,0],[123,0,55,0],[124,2,56,7],[124,11,56,16,"parseParametersFromURL"],[124,33,56,38,"parseParametersFromURL"],[124,34,56,39,"href"],[124,38,56,43],[124,40,56,45],[125,4,57,4],[125,10,57,10,"result"],[125,16,57,16],[125,19,57,19],[125,20,57,20],[125,21,57,21],[126,4,58,4],[126,10,58,10,"url"],[126,13,58,13],[126,16,58,16],[126,20,58,20,"URL"],[126,23,58,23],[126,24,58,24,"href"],[126,28,58,28],[126,29,58,29],[127,4,59,4],[127,8,59,8,"url"],[127,11,59,11],[127,12,59,12,"hash"],[127,16,59,16],[127,20,59,20,"url"],[127,23,59,23],[127,24,59,24,"hash"],[127,28,59,28],[127,29,59,29],[127,30,59,30],[127,31,59,31],[127,36,59,36],[127,39,59,39],[127,41,59,41],[128,6,60,8],[128,10,60,12],[129,8,61,12],[129,14,61,18,"hashSearchParams"],[129,30,61,34],[129,33,61,37],[129,37,61,41,"URLSearchParams"],[129,52,61,56],[129,53,61,57,"url"],[129,56,61,60],[129,57,61,61,"hash"],[129,61,61,65],[129,62,61,66,"substring"],[129,71,61,75],[129,72,61,76],[129,73,61,77],[129,74,61,78],[129,75,61,79],[130,8,62,12,"hashSearchParams"],[130,24,62,28],[130,25,62,29,"forEach"],[130,32,62,36],[130,33,62,37],[130,34,62,38,"value"],[130,39,62,43],[130,41,62,45,"key"],[130,44,62,48],[130,49,62,53],[131,10,63,16,"result"],[131,16,63,22],[131,17,63,23,"key"],[131,20,63,26],[131,21,63,27],[131,24,63,30,"value"],[131,29,63,35],[132,8,64,12],[132,9,64,13],[132,10,64,14],[133,6,65,8],[133,7,65,9],[133,8,66,8],[133,15,66,15,"e"],[133,16,66,16],[133,18,66,18],[134,8,67,12],[135,6,67,12],[136,4,69,4],[137,4,70,4],[138,4,71,4,"url"],[138,7,71,7],[138,8,71,8,"searchParams"],[138,20,71,20],[138,21,71,21,"forEach"],[138,28,71,28],[138,29,71,29],[138,30,71,30,"value"],[138,35,71,35],[138,37,71,37,"key"],[138,40,71,40],[138,45,71,45],[139,6,72,8,"result"],[139,12,72,14],[139,13,72,15,"key"],[139,16,72,18],[139,17,72,19],[139,20,72,22,"value"],[139,25,72,27],[140,4,73,4],[140,5,73,5],[140,6,73,6],[141,4,74,4],[141,11,74,11,"result"],[141,17,74,17],[142,2,75,0],[143,2,76,7],[143,8,76,13,"resolveFetch"],[143,20,76,25],[143,23,76,29,"customFetch"],[143,34,76,40],[143,38,76,45],[144,4,77,4],[144,8,77,8,"_fetch"],[144,14,77,14],[145,4,78,4],[145,8,78,8,"customFetch"],[145,19,78,19],[145,21,78,21],[146,6,79,8,"_fetch"],[146,12,79,14],[146,15,79,17,"customFetch"],[146,26,79,28],[147,4,80,4],[147,5,80,5],[147,11,81,9],[147,15,81,13],[147,22,81,20,"fetch"],[147,27,81,25],[147,32,81,30],[147,43,81,41],[147,45,81,43],[148,6,82,8,"_fetch"],[148,12,82,14],[148,15,82,17,"_fetch"],[148,16,82,18],[148,19,82,21,"args"],[148,23,82,25],[148,28,82,30,"require"],[148,35,82,30],[148,36,82,30,"_dependencyMap"],[148,50,82,30],[148,127,82,30,"_dependencyMap"],[148,141,82,30],[148,146,82,30,"_dependencyMap"],[148,160,82,30],[148,161,82,30,"paths"],[148,166,82,30],[148,192,82,61,"then"],[148,196,82,65],[148,197,82,66],[148,198,82,67],[149,8,82,69,"default"],[149,15,82,76],[149,17,82,78,"fetch"],[150,6,82,84],[150,7,82,85],[150,12,82,90,"fetch"],[150,17,82,95],[150,18,82,96],[150,21,82,99,"args"],[150,25,82,103],[150,26,82,104],[150,27,82,105],[151,4,83,4],[151,5,83,5],[151,11,84,9],[152,6,85,8,"_fetch"],[152,12,85,14],[152,15,85,17,"fetch"],[152,20,85,22],[153,4,86,4],[154,4,87,4],[154,11,87,11],[154,12,87,12],[154,15,87,15,"args"],[154,19,87,19],[154,24,87,24,"_fetch"],[154,30,87,30],[154,31,87,31],[154,34,87,34,"args"],[154,38,87,38],[154,39,87,39],[155,2,88,0],[155,3,88,1],[156,2,89,7],[156,8,89,13,"looksLikeFetchResponse"],[156,30,89,35],[156,33,89,39,"maybeResponse"],[156,46,89,52],[156,50,89,57],[157,4,90,4],[157,11,90,12],[157,18,90,19,"maybeResponse"],[157,31,90,32],[157,36,90,37],[157,44,90,45],[157,48,91,8,"maybeResponse"],[157,61,91,21],[157,66,91,26],[157,70,91,30],[157,74,92,8],[157,82,92,16],[157,86,92,20,"maybeResponse"],[157,99,92,33],[157,103,93,8],[157,107,93,12],[157,111,93,16,"maybeResponse"],[157,124,93,29],[157,128,94,8],[157,134,94,14],[157,138,94,18,"maybeResponse"],[157,151,94,31],[157,155,95,8],[157,162,95,15,"maybeResponse"],[157,175,95,28],[157,176,95,29,"json"],[157,180,95,33],[157,185,95,38],[157,195,95,48],[158,2,96,0],[158,3,96,1],[159,2,97,0],[160,2,98,7],[160,8,98,13,"setItemAsync"],[160,20,98,25],[160,23,98,28],[160,29,98,28,"setItemAsync"],[160,30,98,35,"storage"],[160,37,98,42],[160,39,98,44,"key"],[160,42,98,47],[160,44,98,49,"data"],[160,48,98,53],[160,53,98,58],[161,4,99,4],[161,10,99,10,"storage"],[161,17,99,17],[161,18,99,18,"setItem"],[161,25,99,25],[161,26,99,26,"key"],[161,29,99,29],[161,31,99,31,"JSON"],[161,35,99,35],[161,36,99,36,"stringify"],[161,45,99,45],[161,46,99,46,"data"],[161,50,99,50],[161,51,99,51],[161,52,99,52],[162,2,100,0],[162,3,100,1],[163,2,101,7],[163,8,101,13,"getItemAsync"],[163,20,101,25],[163,23,101,28],[163,29,101,28,"getItemAsync"],[163,30,101,35,"storage"],[163,37,101,42],[163,39,101,44,"key"],[163,42,101,47],[163,47,101,52],[164,4,102,4],[164,10,102,10,"value"],[164,15,102,15],[164,18,102,18],[164,24,102,24,"storage"],[164,31,102,31],[164,32,102,32,"getItem"],[164,39,102,39],[164,40,102,40,"key"],[164,43,102,43],[164,44,102,44],[165,4,103,4],[165,8,103,8],[165,9,103,9,"value"],[165,14,103,14],[165,16,103,16],[166,6,104,8],[166,13,104,15],[166,17,104,19],[167,4,105,4],[168,4,106,4],[168,8,106,8],[169,6,107,8],[169,13,107,15,"JSON"],[169,17,107,19],[169,18,107,20,"parse"],[169,23,107,25],[169,24,107,26,"value"],[169,29,107,31],[169,30,107,32],[170,4,108,4],[170,5,108,5],[170,6,109,4],[170,13,109,11,"_a"],[170,15,109,13],[170,17,109,15],[171,6,110,8],[171,13,110,15,"value"],[171,18,110,20],[172,4,111,4],[173,2,112,0],[173,3,112,1],[174,2,113,7],[174,8,113,13,"removeItemAsync"],[174,23,113,28],[174,26,113,31],[174,32,113,31,"removeItemAsync"],[174,33,113,38,"storage"],[174,40,113,45],[174,42,113,47,"key"],[174,45,113,50],[174,50,113,55],[175,4,114,4],[175,10,114,10,"storage"],[175,17,114,17],[175,18,114,18,"removeItem"],[175,28,114,28],[175,29,114,29,"key"],[175,32,114,32],[175,33,114,33],[176,2,115,0],[176,3,115,1],[177,2,116,0],[178,0,117,0],[179,0,118,0],[180,0,119,0],[181,0,120,0],[182,2,121,7],[182,8,121,13,"Deferred"],[182,16,121,21],[182,17,121,22],[183,4,122,4,"constructor"],[183,15,122,15,"constructor"],[183,16,122,15],[183,18,122,18],[184,6,123,8],[185,6,124,8],[186,6,125,8],[186,10,125,12],[186,11,125,13,"promise"],[186,18,125,20],[186,21,125,23],[186,25,125,27,"Deferred"],[186,33,125,35],[186,34,125,36,"promiseConstructor"],[186,52,125,54],[186,53,125,55],[186,54,125,56,"res"],[186,57,125,59],[186,59,125,61,"rej"],[186,62,125,64],[186,67,125,69],[187,8,126,12],[188,8,127,12],[189,8,128,12],[189,12,128,16],[189,13,128,17,"resolve"],[189,20,128,24],[189,23,128,27,"res"],[189,26,128,30],[190,8,129,12],[190,12,129,16],[190,13,129,17,"reject"],[190,19,129,23],[190,22,129,26,"rej"],[190,25,129,29],[191,6,130,8],[191,7,130,9],[191,8,130,10],[192,4,131,4],[193,2,132,0],[194,2,133,0,"Deferred"],[194,10,133,8],[194,11,133,9,"promiseConstructor"],[194,29,133,27],[194,32,133,30,"Promise"],[194,39,133,37],[195,2,134,7],[195,11,134,16,"decodeJWT"],[195,20,134,25,"decodeJWT"],[195,21,134,26,"token"],[195,26,134,31],[195,28,134,33],[196,4,135,4],[196,10,135,10,"parts"],[196,15,135,15],[196,18,135,18,"token"],[196,23,135,23],[196,24,135,24,"split"],[196,29,135,29],[196,30,135,30],[196,33,135,33],[196,34,135,34],[197,4,136,4],[197,8,136,8,"parts"],[197,13,136,13],[197,14,136,14,"length"],[197,20,136,20],[197,25,136,25],[197,26,136,26],[197,28,136,28],[198,6,137,8],[198,12,137,14],[198,16,137,18,"AuthInvalidJwtError"],[198,23,137,37],[198,24,137,37,"AuthInvalidJwtError"],[198,43,137,37],[198,44,137,38],[198,67,137,61],[198,68,137,62],[199,4,138,4],[200,4,139,4],[201,4,140,4],[201,9,140,9],[201,13,140,13,"i"],[201,14,140,14],[201,17,140,17],[201,18,140,18],[201,20,140,20,"i"],[201,21,140,21],[201,24,140,24,"parts"],[201,29,140,29],[201,30,140,30,"length"],[201,36,140,36],[201,38,140,38,"i"],[201,39,140,39],[201,41,140,41],[201,43,140,43],[202,6,141,8],[202,10,141,12],[202,11,141,13,"BASE64URL_REGEX"],[202,21,141,28],[202,22,141,28,"BASE64URL_REGEX"],[202,37,141,28],[202,38,141,29,"test"],[202,42,141,33],[202,43,141,34,"parts"],[202,48,141,39],[202,49,141,40,"i"],[202,50,141,41],[202,51,141,42],[202,52,141,43],[202,54,141,45],[203,8,142,12],[203,14,142,18],[203,18,142,22,"AuthInvalidJwtError"],[203,25,142,41],[203,26,142,41,"AuthInvalidJwtError"],[203,45,142,41],[203,46,142,42],[203,75,142,71],[203,76,142,72],[204,6,143,8],[205,4,144,4],[206,4,145,4],[206,10,145,10,"data"],[206,14,145,14],[206,17,145,17],[207,6,146,8],[208,6,147,8,"header"],[208,12,147,14],[208,14,147,16,"JSON"],[208,18,147,20],[208,19,147,21,"parse"],[208,24,147,26],[208,25,147,27],[208,29,147,27,"stringFromBase64URL"],[208,39,147,46],[208,40,147,46,"stringFromBase64URL"],[208,59,147,46],[208,61,147,47,"parts"],[208,66,147,52],[208,67,147,53],[208,68,147,54],[208,69,147,55],[208,70,147,56],[208,71,147,57],[209,6,148,8,"payload"],[209,13,148,15],[209,15,148,17,"JSON"],[209,19,148,21],[209,20,148,22,"parse"],[209,25,148,27],[209,26,148,28],[209,30,148,28,"stringFromBase64URL"],[209,40,148,47],[209,41,148,47,"stringFromBase64URL"],[209,60,148,47],[209,62,148,48,"parts"],[209,67,148,53],[209,68,148,54],[209,69,148,55],[209,70,148,56],[209,71,148,57],[209,72,148,58],[210,6,149,8,"signature"],[210,15,149,17],[210,17,149,19],[210,21,149,19,"base64UrlToUint8Array"],[210,31,149,40],[210,32,149,40,"base64UrlToUint8Array"],[210,53,149,40],[210,55,149,41,"parts"],[210,60,149,46],[210,61,149,47],[210,62,149,48],[210,63,149,49],[210,64,149,50],[211,6,150,8,"raw"],[211,9,150,11],[211,11,150,13],[212,8,151,12,"header"],[212,14,151,18],[212,16,151,20,"parts"],[212,21,151,25],[212,22,151,26],[212,23,151,27],[212,24,151,28],[213,8,152,12,"payload"],[213,15,152,19],[213,17,152,21,"parts"],[213,22,152,26],[213,23,152,27],[213,24,152,28],[214,6,153,8],[215,4,154,4],[215,5,154,5],[216,4,155,4],[216,11,155,11,"data"],[216,15,155,15],[217,2,156,0],[218,2,157,0],[219,0,158,0],[220,0,159,0],[221,2,160,7],[221,17,160,22,"sleep"],[221,22,160,27,"sleep"],[221,23,160,28,"time"],[221,27,160,32],[221,29,160,34],[222,4,161,4],[222,11,161,11],[222,17,161,17],[222,21,161,21,"Promise"],[222,28,161,28],[222,29,161,30,"accept"],[222,35,161,36],[222,39,161,41],[223,6,162,8,"setTimeout"],[223,16,162,18],[223,17,162,19],[223,23,162,25,"accept"],[223,29,162,31],[223,30,162,32],[223,34,162,36],[223,35,162,37],[223,37,162,39,"time"],[223,41,162,43],[223,42,162,44],[224,4,163,4],[224,5,163,5],[224,6,163,6],[225,2,164,0],[226,2,165,0],[227,0,166,0],[228,0,167,0],[229,0,168,0],[230,0,169,0],[231,2,170,7],[231,11,170,16,"retryable"],[231,20,170,25,"retryable"],[231,21,170,26,"fn"],[231,23,170,28],[231,25,170,30,"isRetryable"],[231,36,170,41],[231,38,170,43],[232,4,171,4],[232,10,171,10,"promise"],[232,17,171,17],[232,20,171,20],[232,24,171,24,"Promise"],[232,31,171,31],[232,32,171,32],[232,33,171,33,"accept"],[232,39,171,39],[232,41,171,41,"reject"],[232,47,171,47],[232,52,171,52],[233,6,172,8],[234,6,173,8],[235,6,174,8],[235,7,174,9],[235,19,174,21],[236,8,175,12],[236,13,175,17],[236,17,175,21,"attempt"],[236,24,175,28],[236,27,175,31],[236,28,175,32],[236,30,175,34,"attempt"],[236,37,175,41],[236,40,175,44,"Infinity"],[236,48,175,52],[236,50,175,54,"attempt"],[236,57,175,61],[236,59,175,63],[236,61,175,65],[237,10,176,16],[237,14,176,20],[238,12,177,20],[238,18,177,26,"result"],[238,24,177,32],[238,27,177,35],[238,33,177,41,"fn"],[238,35,177,43],[238,36,177,44,"attempt"],[238,43,177,51],[238,44,177,52],[239,12,178,20],[239,16,178,24],[239,17,178,25,"isRetryable"],[239,28,178,36],[239,29,178,37,"attempt"],[239,36,178,44],[239,38,178,46],[239,42,178,50],[239,44,178,52,"result"],[239,50,178,58],[239,51,178,59],[239,53,178,61],[240,14,179,24,"accept"],[240,20,179,30],[240,21,179,31,"result"],[240,27,179,37],[240,28,179,38],[241,14,180,24],[242,12,181,20],[243,10,182,16],[243,11,182,17],[243,12,183,16],[243,19,183,23,"e"],[243,20,183,24],[243,22,183,26],[244,12,184,20],[244,16,184,24],[244,17,184,25,"isRetryable"],[244,28,184,36],[244,29,184,37,"attempt"],[244,36,184,44],[244,38,184,46,"e"],[244,39,184,47],[244,40,184,48],[244,42,184,50],[245,14,185,24,"reject"],[245,20,185,30],[245,21,185,31,"e"],[245,22,185,32],[245,23,185,33],[246,14,186,24],[247,12,187,20],[248,10,188,16],[249,8,189,12],[250,6,190,8],[250,7,190,9],[250,9,190,11],[250,10,190,12],[251,4,191,4],[251,5,191,5],[251,6,191,6],[252,4,192,4],[252,11,192,11,"promise"],[252,18,192,18],[253,2,193,0],[254,2,194,0],[254,11,194,9,"dec2hex"],[254,18,194,16,"dec2hex"],[254,19,194,17,"dec"],[254,22,194,20],[254,24,194,22],[255,4,195,4],[255,11,195,11],[255,12,195,12],[255,15,195,15],[255,18,195,18,"dec"],[255,21,195,21],[255,22,195,22,"toString"],[255,30,195,30],[255,31,195,31],[255,33,195,33],[255,34,195,34],[255,36,195,36,"substr"],[255,42,195,42],[255,43,195,43],[255,44,195,44],[255,45,195,45],[255,46,195,46],[256,2,196,0],[257,2,197,0],[258,2,198,7],[258,11,198,16,"generatePKCEVerifier"],[258,31,198,36,"generatePKCEVerifier"],[258,32,198,36],[258,34,198,39],[259,4,199,4],[259,10,199,10,"verifierLength"],[259,24,199,24],[259,27,199,27],[259,29,199,29],[260,4,200,4],[260,10,200,10,"array"],[260,15,200,15],[260,18,200,18],[260,22,200,22,"Uint32Array"],[260,33,200,33],[260,34,200,34,"verifierLength"],[260,48,200,48],[260,49,200,49],[261,4,201,4],[261,8,201,8],[261,15,201,15,"crypto"],[261,21,201,21],[261,26,201,26],[261,37,201,37],[261,39,201,39],[262,6,202,8],[262,12,202,14,"charSet"],[262,19,202,21],[262,22,202,24],[262,90,202,92],[263,6,203,8],[263,12,203,14,"charSetLen"],[263,22,203,24],[263,25,203,27,"charSet"],[263,32,203,34],[263,33,203,35,"length"],[263,39,203,41],[264,6,204,8],[264,10,204,12,"verifier"],[264,18,204,20],[264,21,204,23],[264,23,204,25],[265,6,205,8],[265,11,205,13],[265,15,205,17,"i"],[265,16,205,18],[265,19,205,21],[265,20,205,22],[265,22,205,24,"i"],[265,23,205,25],[265,26,205,28,"verifierLength"],[265,40,205,42],[265,42,205,44,"i"],[265,43,205,45],[265,45,205,47],[265,47,205,49],[266,8,206,12,"verifier"],[266,16,206,20],[266,20,206,24,"charSet"],[266,27,206,31],[266,28,206,32,"charAt"],[266,34,206,38],[266,35,206,39,"Math"],[266,39,206,43],[266,40,206,44,"floor"],[266,45,206,49],[266,46,206,50,"Math"],[266,50,206,54],[266,51,206,55,"random"],[266,57,206,61],[266,58,206,62],[266,59,206,63],[266,62,206,66,"charSetLen"],[266,72,206,76],[266,73,206,77],[266,74,206,78],[267,6,207,8],[268,6,208,8],[268,13,208,15,"verifier"],[268,21,208,23],[269,4,209,4],[270,4,210,4,"crypto"],[270,10,210,10],[270,11,210,11,"getRandomValues"],[270,26,210,26],[270,27,210,27,"array"],[270,32,210,32],[270,33,210,33],[271,4,211,4],[271,11,211,11,"Array"],[271,16,211,16],[271,17,211,17,"from"],[271,21,211,21],[271,22,211,22,"array"],[271,27,211,27],[271,29,211,29,"dec2hex"],[271,36,211,36],[271,37,211,37],[271,38,211,38,"join"],[271,42,211,42],[271,43,211,43],[271,45,211,45],[271,46,211,46],[272,2,212,0],[273,2,213,0],[273,17,213,15,"sha256"],[273,23,213,21,"sha256"],[273,24,213,22,"randomString"],[273,36,213,34],[273,38,213,36],[274,4,214,4],[274,10,214,10,"encoder"],[274,17,214,17],[274,20,214,20],[274,24,214,24,"TextEncoder"],[274,35,214,35],[274,36,214,36],[274,37,214,37],[275,4,215,4],[275,10,215,10,"encodedData"],[275,21,215,21],[275,24,215,24,"encoder"],[275,31,215,31],[275,32,215,32,"encode"],[275,38,215,38],[275,39,215,39,"randomString"],[275,51,215,51],[275,52,215,52],[276,4,216,4],[276,10,216,10,"hash"],[276,14,216,14],[276,17,216,17],[276,23,216,23,"crypto"],[276,29,216,29],[276,30,216,30,"subtle"],[276,36,216,36],[276,37,216,37,"digest"],[276,43,216,43],[276,44,216,44],[276,53,216,53],[276,55,216,55,"encodedData"],[276,66,216,66],[276,67,216,67],[277,4,217,4],[277,10,217,10,"bytes"],[277,15,217,15],[277,18,217,18],[277,22,217,22,"Uint8Array"],[277,32,217,32],[277,33,217,33,"hash"],[277,37,217,37],[277,38,217,38],[278,4,218,4],[278,11,218,11,"Array"],[278,16,218,16],[278,17,218,17,"from"],[278,21,218,21],[278,22,218,22,"bytes"],[278,27,218,27],[278,28,218,28],[278,29,219,9,"map"],[278,32,219,12],[278,33,219,14,"c"],[278,34,219,15],[278,38,219,20,"String"],[278,44,219,26],[278,45,219,27,"fromCharCode"],[278,57,219,39],[278,58,219,40,"c"],[278,59,219,41],[278,60,219,42],[278,61,219,43],[278,62,220,9,"join"],[278,66,220,13],[278,67,220,14],[278,69,220,16],[278,70,220,17],[279,2,221,0],[280,2,222,7],[280,17,222,22,"generatePKCEChallenge"],[280,38,222,43,"generatePKCEChallenge"],[280,39,222,44,"verifier"],[280,47,222,52],[280,49,222,54],[281,4,223,4],[281,10,223,10,"hasCryptoSupport"],[281,26,223,26],[281,29,223,29],[281,36,223,36,"crypto"],[281,42,223,42],[281,47,223,47],[281,58,223,58],[281,62,224,8],[281,69,224,15,"crypto"],[281,75,224,21],[281,76,224,22,"subtle"],[281,82,224,28],[281,87,224,33],[281,98,224,44],[281,102,225,8],[281,109,225,15,"TextEncoder"],[281,120,225,26],[281,125,225,31],[281,136,225,42],[282,4,226,4],[282,8,226,8],[282,9,226,9,"hasCryptoSupport"],[282,25,226,25],[282,27,226,27],[283,6,227,8,"console"],[283,13,227,15],[283,14,227,16,"warn"],[283,18,227,20],[283,19,227,21],[283,119,227,121],[283,120,227,122],[284,6,228,8],[284,13,228,15,"verifier"],[284,21,228,23],[285,4,229,4],[286,4,230,4],[286,10,230,10,"hashed"],[286,16,230,16],[286,19,230,19],[286,25,230,25,"sha256"],[286,31,230,31],[286,32,230,32,"verifier"],[286,40,230,40],[286,41,230,41],[287,4,231,4],[287,11,231,11,"btoa"],[287,15,231,15],[287,16,231,16,"hashed"],[287,22,231,22],[287,23,231,23],[287,24,231,24,"replace"],[287,31,231,31],[287,32,231,32],[287,37,231,37],[287,39,231,39],[287,42,231,42],[287,43,231,43],[287,44,231,44,"replace"],[287,51,231,51],[287,52,231,52],[287,57,231,57],[287,59,231,59],[287,62,231,62],[287,63,231,63],[287,64,231,64,"replace"],[287,71,231,71],[287,72,231,72],[287,77,231,77],[287,79,231,79],[287,81,231,81],[287,82,231,82],[288,2,232,0],[289,2,233,7],[289,17,233,22,"getCodeChallengeAndMethod"],[289,42,233,47,"getCodeChallengeAndMethod"],[289,43,233,48,"storage"],[289,50,233,55],[289,52,233,57,"storageKey"],[289,62,233,67],[289,64,233,69,"isPasswordRecovery"],[289,82,233,87],[289,85,233,90],[289,90,233,95],[289,92,233,97],[290,4,234,4],[290,10,234,10,"codeVerifier"],[290,22,234,22],[290,25,234,25,"generatePKCEVerifier"],[290,45,234,45],[290,46,234,46],[290,47,234,47],[291,4,235,4],[291,8,235,8,"storedCodeVerifier"],[291,26,235,26],[291,29,235,29,"codeVerifier"],[291,41,235,41],[292,4,236,4],[292,8,236,8,"isPasswordRecovery"],[292,26,236,26],[292,28,236,28],[293,6,237,8,"storedCodeVerifier"],[293,24,237,26],[293,28,237,30],[293,48,237,50],[294,4,238,4],[295,4,239,4],[295,10,239,10,"setItemAsync"],[295,22,239,22],[295,23,239,23,"storage"],[295,30,239,30],[295,32,239,32],[295,35,239,35,"storageKey"],[295,45,239,45],[295,61,239,61],[295,63,239,63,"storedCodeVerifier"],[295,81,239,81],[295,82,239,82],[296,4,240,4],[296,10,240,10,"codeChallenge"],[296,23,240,23],[296,26,240,26],[296,32,240,32,"generatePKCEChallenge"],[296,53,240,53],[296,54,240,54,"codeVerifier"],[296,66,240,66],[296,67,240,67],[297,4,241,4],[297,10,241,10,"codeChallengeMethod"],[297,29,241,29],[297,32,241,32,"codeVerifier"],[297,44,241,44],[297,49,241,49,"codeChallenge"],[297,62,241,62],[297,65,241,65],[297,72,241,72],[297,75,241,75],[297,81,241,81],[298,4,242,4],[298,11,242,11],[298,12,242,12,"codeChallenge"],[298,25,242,25],[298,27,242,27,"codeChallengeMethod"],[298,46,242,46],[298,47,242,47],[299,2,243,0],[300,2,244,0],[301,2,245,0],[301,8,245,6,"API_VERSION_REGEX"],[301,25,245,23],[301,28,245,26],[301,88,245,86],[302,2,246,7],[302,11,246,16,"parseResponseAPIVersion"],[302,34,246,39,"parseResponseAPIVersion"],[302,35,246,40,"response"],[302,43,246,48],[302,45,246,50],[303,4,247,4],[303,10,247,10,"apiVersion"],[303,20,247,20],[303,23,247,23,"response"],[303,31,247,31],[303,32,247,32,"headers"],[303,39,247,39],[303,40,247,40,"get"],[303,43,247,43],[303,44,247,44,"API_VERSION_HEADER_NAME"],[303,54,247,67],[303,55,247,67,"API_VERSION_HEADER_NAME"],[303,78,247,67],[303,79,247,68],[304,4,248,4],[304,8,248,8],[304,9,248,9,"apiVersion"],[304,19,248,19],[304,21,248,21],[305,6,249,8],[305,13,249,15],[305,17,249,19],[306,4,250,4],[307,4,251,4],[307,8,251,8],[307,9,251,9,"apiVersion"],[307,19,251,19],[307,20,251,20,"match"],[307,25,251,25],[307,26,251,26,"API_VERSION_REGEX"],[307,43,251,43],[307,44,251,44],[307,46,251,46],[308,6,252,8],[308,13,252,15],[308,17,252,19],[309,4,253,4],[310,4,254,4],[310,8,254,8],[311,6,255,8],[311,12,255,14,"date"],[311,16,255,18],[311,19,255,21],[311,23,255,25,"Date"],[311,27,255,29],[311,28,255,30],[311,31,255,33,"apiVersion"],[311,41,255,43],[311,55,255,57],[311,56,255,58],[312,6,256,8],[312,13,256,15,"date"],[312,17,256,19],[313,4,257,4],[313,5,257,5],[313,6,258,4],[313,13,258,11,"e"],[313,14,258,12],[313,16,258,14],[314,6,259,8],[314,13,259,15],[314,17,259,19],[315,4,260,4],[316,2,261,0],[317,2,262,7],[317,11,262,16,"validateExp"],[317,22,262,27,"validateExp"],[317,23,262,28,"exp"],[317,26,262,31],[317,28,262,33],[318,4,263,4],[318,8,263,8],[318,9,263,9,"exp"],[318,12,263,12],[318,14,263,14],[319,6,264,8],[319,12,264,14],[319,16,264,18,"Error"],[319,21,264,23],[319,22,264,24],[319,41,264,43],[319,42,264,44],[320,4,265,4],[321,4,266,4],[321,10,266,10,"timeNow"],[321,17,266,17],[321,20,266,20,"Math"],[321,24,266,24],[321,25,266,25,"floor"],[321,30,266,30],[321,31,266,31,"Date"],[321,35,266,35],[321,36,266,36,"now"],[321,39,266,39],[321,40,266,40],[321,41,266,41],[321,44,266,44],[321,48,266,48],[321,49,266,49],[322,4,267,4],[322,8,267,8,"exp"],[322,11,267,11],[322,15,267,15,"timeNow"],[322,22,267,22],[322,24,267,24],[323,6,268,8],[323,12,268,14],[323,16,268,18,"Error"],[323,21,268,23],[323,22,268,24],[323,39,268,41],[323,40,268,42],[324,4,269,4],[325,2,270,0],[326,2,271,7],[326,11,271,16,"getAlgorithm"],[326,23,271,28,"getAlgorithm"],[326,24,271,29,"alg"],[326,27,271,32],[326,29,271,34],[327,4,272,4],[327,12,272,12,"alg"],[327,15,272,15],[328,6,273,8],[328,11,273,13],[328,18,273,20],[329,8,274,12],[329,15,274,19],[330,10,275,16,"name"],[330,14,275,20],[330,16,275,22],[330,35,275,41],[331,10,276,16,"hash"],[331,14,276,20],[331,16,276,22],[332,12,276,24,"name"],[332,16,276,28],[332,18,276,30],[333,10,276,40],[334,8,277,12],[334,9,277,13],[335,6,278,8],[335,11,278,13],[335,18,278,20],[336,8,279,12],[336,15,279,19],[337,10,280,16,"name"],[337,14,280,20],[337,16,280,22],[337,23,280,29],[338,10,281,16,"namedCurve"],[338,20,281,26],[338,22,281,28],[338,29,281,35],[339,10,282,16,"hash"],[339,14,282,20],[339,16,282,22],[340,12,282,24,"name"],[340,16,282,28],[340,18,282,30],[341,10,282,40],[342,8,283,12],[342,9,283,13],[343,6,284,8],[344,8,285,12],[344,14,285,18],[344,18,285,22,"Error"],[344,23,285,27],[344,24,285,28],[344,43,285,47],[344,44,285,48],[345,4,286,4],[346,2,287,0],[347,2,288,0],[347,8,288,6,"UUID_REGEX"],[347,18,288,16],[347,21,288,19],[347,85,288,83],[348,2,289,7],[348,11,289,16,"validateUUID"],[348,23,289,28,"validateUUID"],[348,24,289,29,"str"],[348,27,289,32],[348,29,289,34],[349,4,290,4],[349,8,290,8],[349,9,290,9,"UUID_REGEX"],[349,19,290,19],[349,20,290,20,"test"],[349,24,290,24],[349,25,290,25,"str"],[349,28,290,28],[349,29,290,29],[349,31,290,31],[350,6,291,8],[350,12,291,14],[350,16,291,18,"Error"],[350,21,291,23],[350,22,291,24],[350,83,291,85],[350,84,291,86],[351,4,292,4],[352,2,293,0],[353,2,294,7],[353,11,294,16,"userNotAvailableProxy"],[353,32,294,37,"userNotAvailableProxy"],[353,33,294,37],[353,35,294,40],[354,4,295,4],[354,10,295,10,"proxyTarget"],[354,21,295,21],[354,24,295,24],[354,25,295,25],[354,26,295,26],[355,4,296,4],[355,11,296,11],[355,15,296,15,"Proxy"],[355,20,296,20],[355,21,296,21,"proxyTarget"],[355,32,296,32],[355,34,296,34],[356,6,297,8,"get"],[356,9,297,11],[356,11,297,13,"get"],[356,12,297,14,"target"],[356,18,297,20],[356,20,297,22,"prop"],[356,24,297,26],[356,29,297,31],[357,8,298,12],[357,12,298,16,"prop"],[357,16,298,20],[357,21,298,25],[357,48,298,52],[357,50,298,54],[358,10,299,16],[358,17,299,23],[358,21,299,27],[359,8,300,12],[360,8,301,12],[361,8,302,12],[362,8,303,12],[362,12,303,16],[362,19,303,23,"prop"],[362,23,303,27],[362,28,303,32],[362,36,303,40],[362,38,303,42],[363,10,304,16],[363,16,304,22,"sProp"],[363,21,304,27],[363,24,304,30,"prop"],[363,28,304,34],[363,29,304,35,"toString"],[363,37,304,43],[363,38,304,44],[363,39,304,45],[364,10,305,16],[364,14,305,20,"sProp"],[364,19,305,25],[364,24,305,30],[364,52,305,58],[364,56,306,20,"sProp"],[364,61,306,25],[364,66,306,30],[364,94,306,58],[364,98,307,20,"sProp"],[364,103,307,25],[364,108,307,30],[364,137,307,59],[364,139,307,61],[365,12,308,20],[366,12,309,20],[366,19,309,27,"undefined"],[366,28,309,36],[367,10,310,16],[368,8,311,12],[369,8,312,12],[369,14,312,18],[369,18,312,22,"Error"],[369,23,312,27],[369,24,312,28],[369,154,312,158,"prop"],[369,158,312,162],[369,240,312,244],[369,241,312,245],[370,6,313,8],[370,7,313,9],[371,6,314,8,"set"],[371,9,314,11],[371,11,314,13,"set"],[371,12,314,14,"_target"],[371,19,314,21],[371,21,314,23,"prop"],[371,25,314,27],[371,30,314,32],[372,8,315,12],[372,14,315,18],[372,18,315,22,"Error"],[372,23,315,27],[372,24,315,28],[372,152,315,156,"prop"],[372,156,315,160],[372,272,315,276],[372,273,315,277],[373,6,316,8],[373,7,316,9],[374,6,317,8,"deleteProperty"],[374,20,317,22],[374,22,317,24,"deleteProperty"],[374,23,317,25,"_target"],[374,30,317,32],[374,32,317,34,"prop"],[374,36,317,38],[374,41,317,43],[375,8,318,12],[375,14,318,18],[375,18,318,22,"Error"],[375,23,318,27],[375,24,318,28],[375,153,318,157,"prop"],[375,157,318,161],[375,273,318,277],[375,274,318,278],[376,6,319,8],[377,4,320,4],[377,5,320,5],[377,6,320,6],[378,2,321,0],[379,2,322,0],[380,0,323,0],[381,0,324,0],[382,0,325,0],[383,2,326,7],[383,11,326,16,"deepClone"],[383,20,326,25,"deepClone"],[383,21,326,26,"obj"],[383,24,326,29],[383,26,326,31],[384,4,327,4],[384,11,327,11,"JSON"],[384,15,327,15],[384,16,327,16,"parse"],[384,21,327,21],[384,22,327,22,"JSON"],[384,26,327,26],[384,27,327,27,"stringify"],[384,36,327,36],[384,37,327,37,"obj"],[384,40,327,40],[384,41,327,41],[384,42,327,42],[385,2,328,0],[386,0,328,1],[386,3]],"functionMap":{"names":["<global>","expiresAt","uuid","xxxxxxxxXxxx4xxxYxxxXxxxxxxxxxxx.replace$argument_1","isBrowser","supportsLocalStorage","parseParametersFromURL","hashSearchParams.forEach$argument_0","url.searchParams.forEach$argument_0","resolveFetch","_fetch","import.then$argument_0","<anonymous>","looksLikeFetchResponse","setItemAsync","getItemAsync","removeItemAsync","Deferred","Deferred#constructor","Deferred.promiseConstructor$argument_0","decodeJWT","sleep","Promise$argument_0","setTimeout$argument_0","retryable","dec2hex","generatePKCEVerifier","sha256","Array.from.map$argument_0","generatePKCEChallenge","getCodeChallengeAndMethod","parseResponseAPIVersion","validateExp","getAlgorithm","validateUUID","userNotAvailableProxy","Proxy$argument_1.get","Proxy$argument_1.set","Proxy$argument_1.deleteProperty","deepClone"],"mappings":"AAA;OCG;CDG;OEC;mECC;KDG;CFC;yBIC,sEJ;oCKQ;CL8B;OMI;qCCM;aDE;6BEO;KFE;CNE;4BSC;iBCM,iDC,sCD,CD;WGK,4BH;CTC;sCaC;CbO;4BcE;CdE;4BeC;CfW;+BgBC;ChBE;OiBM;ICC;uDCG;SDK;KDC;CjBC;OoBE;CpBsB;OqBI;6BCC;mBCC,kBD;KDC;CrBC;OwBM;gCFC;SVG;SUgB;KEC;CxBE;AyBC;CzBE;O0BE;C1Bc;A2BC;aCM,6BD;C3BE;O6BC;C7BU;O8BC;C9BU;O+BG;C/Be;OgCC;ChCQ;OiCC;CjCgB;OkCE;ClCI;OmCC;aCG;SDgB;aEC;SFE;wBGC;SHE;CnCE;OuCK;CvCE"},"hasCjsExports":false},"type":"js/module"}]}