{"dependencies":[{"name":"@supabase/node-fetch","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":695},"end":{"line":11,"column":78,"index":773}}],"key":"Yck1xenI4HVkz5QJQ4UhOD4f0FE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"resolveFetch\", {\n    enumerable: true,\n    get: function () {\n      return resolveFetch;\n    }\n  });\n  Object.defineProperty(exports, \"resolveHeadersConstructor\", {\n    enumerable: true,\n    get: function () {\n      return resolveHeadersConstructor;\n    }\n  });\n  Object.defineProperty(exports, \"fetchWithAuth\", {\n    enumerable: true,\n    get: function () {\n      return fetchWithAuth;\n    }\n  });\n  var _supabaseNodeFetch = require(_dependencyMap[0], \"@supabase/node-fetch\");\n  var nodeFetch = _interopDefault(_supabaseNodeFetch);\n  var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n    function adopt(value) {\n      return value instanceof P ? value : new P(function (resolve) {\n        resolve(value);\n      });\n    }\n    return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) {\n        try {\n          step(generator.next(value));\n        } catch (e) {\n          reject(e);\n        }\n      }\n      function rejected(value) {\n        try {\n          step(generator[\"throw\"](value));\n        } catch (e) {\n          reject(e);\n        }\n      }\n      function step(result) {\n        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n      }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n  };\n  // @ts-ignore\n\n  const resolveFetch = customFetch => {\n    let _fetch;\n    if (customFetch) {\n      _fetch = customFetch;\n    } else if (typeof fetch === 'undefined') {\n      _fetch = nodeFetch.default;\n    } else {\n      _fetch = fetch;\n    }\n    return (...args) => _fetch(...args);\n  };\n  const resolveHeadersConstructor = () => {\n    if (typeof Headers === 'undefined') {\n      return _supabaseNodeFetch.Headers;\n    }\n    return Headers;\n  };\n  const fetchWithAuth = (supabaseKey, getAccessToken, customFetch) => {\n    const fetch = resolveFetch(customFetch);\n    const HeadersConstructor = resolveHeadersConstructor();\n    return (input, init) => __awaiter(void 0, void 0, void 0, function* () {\n      var _a;\n      const accessToken = (_a = yield getAccessToken()) !== null && _a !== void 0 ? _a : supabaseKey;\n      let headers = new HeadersConstructor(init === null || init === void 0 ? void 0 : init.headers);\n      if (!headers.has('apikey')) {\n        headers.set('apikey', supabaseKey);\n      }\n      if (!headers.has('Authorization')) {\n        headers.set('Authorization', `Bearer ${accessToken}`);\n      }\n      return fetch(input, Object.assign(Object.assign({}, init), {\n        headers\n      }));\n    });\n  };\n});","lineCount":96,"map":[[12,2,12,0,"Object"],[12,8,12,0],[12,9,12,0,"defineProperty"],[12,23,12,0],[12,24,12,0,"exports"],[12,31,12,0],[13,4,12,0,"enumerable"],[13,14,12,0],[14,4,12,0,"get"],[14,7,12,0],[14,18,12,0,"get"],[14,19,12,0],[15,6,12,0],[15,13,12,0,"resolveFetch"],[15,25,12,0],[16,4,12,0],[17,2,12,0],[18,2,25,0,"Object"],[18,8,25,0],[18,9,25,0,"defineProperty"],[18,23,25,0],[18,24,25,0,"exports"],[18,31,25,0],[19,4,25,0,"enumerable"],[19,14,25,0],[20,4,25,0,"get"],[20,7,25,0],[20,18,25,0,"get"],[20,19,25,0],[21,6,25,0],[21,13,25,0,"resolveHeadersConstructor"],[21,38,25,0],[22,4,25,0],[23,2,25,0],[24,2,31,0,"Object"],[24,8,31,0],[24,9,31,0,"defineProperty"],[24,23,31,0],[24,24,31,0,"exports"],[24,31,31,0],[25,4,31,0,"enumerable"],[25,14,31,0],[26,4,31,0,"get"],[26,7,31,0],[26,18,31,0,"get"],[26,19,31,0],[27,6,31,0],[27,13,31,0,"fetchWithAuth"],[27,26,31,0],[28,4,31,0],[29,2,31,0],[30,2,11,0],[30,6,11,0,"_supabaseNodeFetch"],[30,24,11,0],[30,27,11,0,"require"],[30,34,11,0],[30,35,11,0,"_dependencyMap"],[30,49,11,0],[31,2,11,0],[31,6,11,0,"nodeFetch"],[31,15,11,0],[31,18,11,0,"_interopDefault"],[31,33,11,0],[31,34,11,0,"_supabaseNodeFetch"],[31,52,11,0],[32,2,1,0],[32,6,1,4,"__awaiter"],[32,15,1,13],[32,18,1,17],[32,22,1,21],[32,26,1,25],[32,30,1,29],[32,31,1,30,"__awaiter"],[32,40,1,39],[32,44,1,44],[32,54,1,54,"thisArg"],[32,61,1,61],[32,63,1,63,"_arguments"],[32,73,1,73],[32,75,1,75,"P"],[32,76,1,76],[32,78,1,78,"generator"],[32,87,1,87],[32,89,1,89],[33,4,2,4],[33,13,2,13,"adopt"],[33,18,2,18,"adopt"],[33,19,2,19,"value"],[33,24,2,24],[33,26,2,26],[34,6,2,28],[34,13,2,35,"value"],[34,18,2,40],[34,30,2,52,"P"],[34,31,2,53],[34,34,2,56,"value"],[34,39,2,61],[34,42,2,64],[34,46,2,68,"P"],[34,47,2,69],[34,48,2,70],[34,58,2,80,"resolve"],[34,65,2,87],[34,67,2,89],[35,8,2,91,"resolve"],[35,15,2,98],[35,16,2,99,"value"],[35,21,2,104],[35,22,2,105],[36,6,2,107],[36,7,2,108],[36,8,2,109],[37,4,2,111],[38,4,3,4],[38,11,3,11],[38,16,3,16,"P"],[38,17,3,17],[38,22,3,22,"P"],[38,23,3,23],[38,26,3,26,"Promise"],[38,33,3,33],[38,34,3,34],[38,36,3,36],[38,46,3,46,"resolve"],[38,53,3,53],[38,55,3,55,"reject"],[38,61,3,61],[38,63,3,63],[39,6,4,8],[39,15,4,17,"fulfilled"],[39,24,4,26,"fulfilled"],[39,25,4,27,"value"],[39,30,4,32],[39,32,4,34],[40,8,4,36],[40,12,4,40],[41,10,4,42,"step"],[41,14,4,46],[41,15,4,47,"generator"],[41,24,4,56],[41,25,4,57,"next"],[41,29,4,61],[41,30,4,62,"value"],[41,35,4,67],[41,36,4,68],[41,37,4,69],[42,8,4,71],[42,9,4,72],[42,10,4,73],[42,17,4,80,"e"],[42,18,4,81],[42,20,4,83],[43,10,4,85,"reject"],[43,16,4,91],[43,17,4,92,"e"],[43,18,4,93],[43,19,4,94],[44,8,4,96],[45,6,4,98],[46,6,5,8],[46,15,5,17,"rejected"],[46,23,5,25,"rejected"],[46,24,5,26,"value"],[46,29,5,31],[46,31,5,33],[47,8,5,35],[47,12,5,39],[48,10,5,41,"step"],[48,14,5,45],[48,15,5,46,"generator"],[48,24,5,55],[48,25,5,56],[48,32,5,63],[48,33,5,64],[48,34,5,65,"value"],[48,39,5,70],[48,40,5,71],[48,41,5,72],[49,8,5,74],[49,9,5,75],[49,10,5,76],[49,17,5,83,"e"],[49,18,5,84],[49,20,5,86],[50,10,5,88,"reject"],[50,16,5,94],[50,17,5,95,"e"],[50,18,5,96],[50,19,5,97],[51,8,5,99],[52,6,5,101],[53,6,6,8],[53,15,6,17,"step"],[53,19,6,21,"step"],[53,20,6,22,"result"],[53,26,6,28],[53,28,6,30],[54,8,6,32,"result"],[54,14,6,38],[54,15,6,39,"done"],[54,19,6,43],[54,22,6,46,"resolve"],[54,29,6,53],[54,30,6,54,"result"],[54,36,6,60],[54,37,6,61,"value"],[54,42,6,66],[54,43,6,67],[54,46,6,70,"adopt"],[54,51,6,75],[54,52,6,76,"result"],[54,58,6,82],[54,59,6,83,"value"],[54,64,6,88],[54,65,6,89],[54,66,6,90,"then"],[54,70,6,94],[54,71,6,95,"fulfilled"],[54,80,6,104],[54,82,6,106,"rejected"],[54,90,6,114],[54,91,6,115],[55,6,6,117],[56,6,7,8,"step"],[56,10,7,12],[56,11,7,13],[56,12,7,14,"generator"],[56,21,7,23],[56,24,7,26,"generator"],[56,33,7,35],[56,34,7,36,"apply"],[56,39,7,41],[56,40,7,42,"thisArg"],[56,47,7,49],[56,49,7,51,"_arguments"],[56,59,7,61],[56,63,7,65],[56,65,7,67],[56,66,7,68],[56,68,7,70,"next"],[56,72,7,74],[56,73,7,75],[56,74,7,76],[56,75,7,77],[57,4,8,4],[57,5,8,5],[57,6,8,6],[58,2,9,0],[58,3,9,1],[59,2,10,0],[61,2,12,7],[61,8,12,13,"resolveFetch"],[61,20,12,25],[61,23,12,29,"customFetch"],[61,34,12,40],[61,38,12,45],[62,4,13,4],[62,8,13,8,"_fetch"],[62,14,13,14],[63,4,14,4],[63,8,14,8,"customFetch"],[63,19,14,19],[63,21,14,21],[64,6,15,8,"_fetch"],[64,12,15,14],[64,15,15,17,"customFetch"],[64,26,15,28],[65,4,16,4],[65,5,16,5],[65,11,17,9],[65,15,17,13],[65,22,17,20,"fetch"],[65,27,17,25],[65,32,17,30],[65,43,17,41],[65,45,17,43],[66,6,18,8,"_fetch"],[66,12,18,14],[66,15,18,17,"nodeFetch"],[66,24,18,26],[66,25,18,26,"default"],[66,32,18,26],[67,4,19,4],[67,5,19,5],[67,11,20,9],[68,6,21,8,"_fetch"],[68,12,21,14],[68,15,21,17,"fetch"],[68,20,21,22],[69,4,22,4],[70,4,23,4],[70,11,23,11],[70,12,23,12],[70,15,23,15,"args"],[70,19,23,19],[70,24,23,24,"_fetch"],[70,30,23,30],[70,31,23,31],[70,34,23,34,"args"],[70,38,23,38],[70,39,23,39],[71,2,24,0],[71,3,24,1],[72,2,25,7],[72,8,25,13,"resolveHeadersConstructor"],[72,33,25,38],[72,36,25,41,"resolveHeadersConstructor"],[72,37,25,41],[72,42,25,47],[73,4,26,4],[73,8,26,8],[73,15,26,15,"Headers"],[73,22,26,22],[73,27,26,27],[73,38,26,38],[73,40,26,40],[74,6,27,8],[74,13,27,15,"NodeFetchHeaders"],[74,31,27,31],[74,32,27,31,"Headers"],[74,39,27,31],[75,4,28,4],[76,4,29,4],[76,11,29,11,"Headers"],[76,18,29,18],[77,2,30,0],[77,3,30,1],[78,2,31,7],[78,8,31,13,"fetchWithAuth"],[78,21,31,26],[78,24,31,29,"fetchWithAuth"],[78,25,31,30,"supabaseKey"],[78,36,31,41],[78,38,31,43,"getAccessToken"],[78,52,31,57],[78,54,31,59,"customFetch"],[78,65,31,70],[78,70,31,75],[79,4,32,4],[79,10,32,10,"fetch"],[79,15,32,15],[79,18,32,18,"resolveFetch"],[79,30,32,30],[79,31,32,31,"customFetch"],[79,42,32,42],[79,43,32,43],[80,4,33,4],[80,10,33,10,"HeadersConstructor"],[80,28,33,28],[80,31,33,31,"resolveHeadersConstructor"],[80,56,33,56],[80,57,33,57],[80,58,33,58],[81,4,34,4],[81,11,34,11],[81,12,34,12,"input"],[81,17,34,17],[81,19,34,19,"init"],[81,23,34,23],[81,28,34,28,"__awaiter"],[81,37,34,37],[81,38,34,38],[81,43,34,43],[81,44,34,44],[81,46,34,46],[81,51,34,51],[81,52,34,52],[81,54,34,54],[81,59,34,59],[81,60,34,60],[81,62,34,62],[81,75,34,75],[82,6,35,8],[82,10,35,12,"_a"],[82,12,35,14],[83,6,36,8],[83,12,36,14,"accessToken"],[83,23,36,25],[83,26,36,28],[83,27,36,29,"_a"],[83,29,36,31],[83,32,36,35],[83,38,36,41,"getAccessToken"],[83,52,36,55],[83,53,36,56],[83,54,36,58],[83,60,36,64],[83,64,36,68],[83,68,36,72,"_a"],[83,70,36,74],[83,75,36,79],[83,80,36,84],[83,81,36,85],[83,84,36,88,"_a"],[83,86,36,90],[83,89,36,93,"supabaseKey"],[83,100,36,104],[84,6,37,8],[84,10,37,12,"headers"],[84,17,37,19],[84,20,37,22],[84,24,37,26,"HeadersConstructor"],[84,42,37,44],[84,43,37,45,"init"],[84,47,37,49],[84,52,37,54],[84,56,37,58],[84,60,37,62,"init"],[84,64,37,66],[84,69,37,71],[84,74,37,76],[84,75,37,77],[84,78,37,80],[84,83,37,85],[84,84,37,86],[84,87,37,89,"init"],[84,91,37,93],[84,92,37,94,"headers"],[84,99,37,101],[84,100,37,102],[85,6,38,8],[85,10,38,12],[85,11,38,13,"headers"],[85,18,38,20],[85,19,38,21,"has"],[85,22,38,24],[85,23,38,25],[85,31,38,33],[85,32,38,34],[85,34,38,36],[86,8,39,12,"headers"],[86,15,39,19],[86,16,39,20,"set"],[86,19,39,23],[86,20,39,24],[86,28,39,32],[86,30,39,34,"supabaseKey"],[86,41,39,45],[86,42,39,46],[87,6,40,8],[88,6,41,8],[88,10,41,12],[88,11,41,13,"headers"],[88,18,41,20],[88,19,41,21,"has"],[88,22,41,24],[88,23,41,25],[88,38,41,40],[88,39,41,41],[88,41,41,43],[89,8,42,12,"headers"],[89,15,42,19],[89,16,42,20,"set"],[89,19,42,23],[89,20,42,24],[89,35,42,39],[89,37,42,41],[89,47,42,51,"accessToken"],[89,58,42,62],[89,60,42,64],[89,61,42,65],[90,6,43,8],[91,6,44,8],[91,13,44,15,"fetch"],[91,18,44,20],[91,19,44,21,"input"],[91,24,44,26],[91,26,44,28,"Object"],[91,32,44,34],[91,33,44,35,"assign"],[91,39,44,41],[91,40,44,42,"Object"],[91,46,44,48],[91,47,44,49,"assign"],[91,53,44,55],[91,54,44,56],[91,55,44,57],[91,56,44,58],[91,58,44,60,"init"],[91,62,44,64],[91,63,44,65],[91,65,44,67],[92,8,44,69,"headers"],[93,6,44,77],[93,7,44,78],[93,8,44,79],[93,9,44,80],[94,4,45,4],[94,5,45,5],[94,6,45,6],[95,2,46,0],[95,3,46,1],[96,0,46,2],[96,3]],"functionMap":{"names":["<global>","<anonymous>","adopt","P$argument_0","fulfilled","rejected","step","resolveFetch","resolveHeadersConstructor","fetchWithAuth","__awaiter$argument_3"],"mappings":"AAA,4CC;ICC,kEC,sCD,ID;QGE,2FH;QIC,8FJ;QKC,8GL;CDG;4BOG;WNW,4BM;CPC;yCQC;CRK;6BSC;WRG,mDS;KTW,CQ;CTC"},"hasCjsExports":false},"type":"js/module"}]}