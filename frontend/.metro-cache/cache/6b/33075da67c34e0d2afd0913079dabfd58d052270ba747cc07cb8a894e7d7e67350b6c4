{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  /**\n   * Creates a timer that accepts a `timerCalc` function to perform calculated timeout retries, such as exponential backoff.\n   *\n   * @example\n   *    let reconnectTimer = new Timer(() => this.connect(), function(tries){\n   *      return [1000, 5000, 10000][tries - 1] || 10000\n   *    })\n   *    reconnectTimer.scheduleTimeout() // fires after 1000\n   *    reconnectTimer.scheduleTimeout() // fires after 5000\n   *    reconnectTimer.reset()\n   *    reconnectTimer.scheduleTimeout() // fires after 1000\n   */\n  class Timer {\n    constructor(callback, timerCalc) {\n      this.callback = callback;\n      this.timerCalc = timerCalc;\n      this.timer = undefined;\n      this.tries = 0;\n      this.callback = callback;\n      this.timerCalc = timerCalc;\n    }\n    reset() {\n      this.tries = 0;\n      clearTimeout(this.timer);\n      this.timer = undefined;\n    }\n    // Cancels any previous scheduleTimeout and schedules callback\n    scheduleTimeout() {\n      clearTimeout(this.timer);\n      this.timer = setTimeout(() => {\n        this.tries = this.tries + 1;\n        this.callback();\n      }, this.timerCalc(this.tries + 1));\n    }\n  }\n  exports.default = Timer;\n});","lineCount":43,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"Object"],[4,8,2,6],[4,9,2,7,"defineProperty"],[4,23,2,21],[4,24,2,22,"exports"],[4,31,2,29],[4,33,2,31],[4,45,2,43],[4,47,2,45],[5,4,2,47,"value"],[5,9,2,52],[5,11,2,54],[6,2,2,59],[6,3,2,60],[6,4,2,61],[7,2,3,0],[8,0,4,0],[9,0,5,0],[10,0,6,0],[11,0,7,0],[12,0,8,0],[13,0,9,0],[14,0,10,0],[15,0,11,0],[16,0,12,0],[17,0,13,0],[18,0,14,0],[19,2,15,0],[19,8,15,6,"Timer"],[19,13,15,11],[19,14,15,12],[20,4,16,4,"constructor"],[20,15,16,15,"constructor"],[20,16,16,16,"callback"],[20,24,16,24],[20,26,16,26,"timerCalc"],[20,35,16,35],[20,37,16,37],[21,6,17,8],[21,10,17,12],[21,11,17,13,"callback"],[21,19,17,21],[21,22,17,24,"callback"],[21,30,17,32],[22,6,18,8],[22,10,18,12],[22,11,18,13,"timerCalc"],[22,20,18,22],[22,23,18,25,"timerCalc"],[22,32,18,34],[23,6,19,8],[23,10,19,12],[23,11,19,13,"timer"],[23,16,19,18],[23,19,19,21,"undefined"],[23,28,19,30],[24,6,20,8],[24,10,20,12],[24,11,20,13,"tries"],[24,16,20,18],[24,19,20,21],[24,20,20,22],[25,6,21,8],[25,10,21,12],[25,11,21,13,"callback"],[25,19,21,21],[25,22,21,24,"callback"],[25,30,21,32],[26,6,22,8],[26,10,22,12],[26,11,22,13,"timerCalc"],[26,20,22,22],[26,23,22,25,"timerCalc"],[26,32,22,34],[27,4,23,4],[28,4,24,4,"reset"],[28,9,24,9,"reset"],[28,10,24,9],[28,12,24,12],[29,6,25,8],[29,10,25,12],[29,11,25,13,"tries"],[29,16,25,18],[29,19,25,21],[29,20,25,22],[30,6,26,8,"clearTimeout"],[30,18,26,20],[30,19,26,21],[30,23,26,25],[30,24,26,26,"timer"],[30,29,26,31],[30,30,26,32],[31,6,27,8],[31,10,27,12],[31,11,27,13,"timer"],[31,16,27,18],[31,19,27,21,"undefined"],[31,28,27,30],[32,4,28,4],[33,4,29,4],[34,4,30,4,"scheduleTimeout"],[34,19,30,19,"scheduleTimeout"],[34,20,30,19],[34,22,30,22],[35,6,31,8,"clearTimeout"],[35,18,31,20],[35,19,31,21],[35,23,31,25],[35,24,31,26,"timer"],[35,29,31,31],[35,30,31,32],[36,6,32,8],[36,10,32,12],[36,11,32,13,"timer"],[36,16,32,18],[36,19,32,21,"setTimeout"],[36,29,32,31],[36,30,32,32],[36,36,32,38],[37,8,33,12],[37,12,33,16],[37,13,33,17,"tries"],[37,18,33,22],[37,21,33,25],[37,25,33,29],[37,26,33,30,"tries"],[37,31,33,35],[37,34,33,38],[37,35,33,39],[38,8,34,12],[38,12,34,16],[38,13,34,17,"callback"],[38,21,34,25],[38,22,34,26],[38,23,34,27],[39,6,35,8],[39,7,35,9],[39,9,35,11],[39,13,35,15],[39,14,35,16,"timerCalc"],[39,23,35,25],[39,24,35,26],[39,28,35,30],[39,29,35,31,"tries"],[39,34,35,36],[39,37,35,39],[39,38,35,40],[39,39,35,41],[39,40,35,42],[40,4,36,4],[41,2,37,0],[42,2,38,0,"exports"],[42,9,38,7],[42,10,38,8,"default"],[42,17,38,15],[42,20,38,18,"Timer"],[42,25,38,23],[43,0,38,24],[43,3]],"functionMap":{"names":["<global>","Timer","Timer#constructor","Timer#reset","Timer#scheduleTimeout","setTimeout$argument_0"],"mappings":"AAA;ACc;ICC;KDO;IEC;KFI;IGE;gCCE;SDG;KHC;CDC"},"hasCjsExports":true},"type":"js/module"}]}