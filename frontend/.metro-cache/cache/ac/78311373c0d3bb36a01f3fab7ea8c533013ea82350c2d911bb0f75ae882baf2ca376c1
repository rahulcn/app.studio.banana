{"dependencies":[{"name":"./PlatformChecker","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":43,"index":58}}],"key":"O136KS8LvzB4pufOIvMCitL6KOc=","exportNames":["*"],"imports":1}},{"name":"./threads","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":59},"end":{"line":4,"column":36,"index":95}}],"key":"ZuB0ICrjKM3htfPQkuonl9kPByQ=","exportNames":["*"],"imports":1}},{"name":"./isSharedValue","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":96},"end":{"line":5,"column":48,"index":144}}],"key":"4GvsAaNC2OU71XMPPfpzkxeW9tk=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.startMapper = startMapper;\n  exports.stopMapper = stopMapper;\n  var _PlatformChecker = require(_dependencyMap[0], \"./PlatformChecker\");\n  var _threads = require(_dependencyMap[1], \"./threads\");\n  var _isSharedValue = require(_dependencyMap[2], \"./isSharedValue\");\n  const IS_JEST = (0, _PlatformChecker.isJest)();\n  const _worklet_1831615820738_init_data = {\n    code: \"function createMapperRegistry_reactNativeReanimated_mappersJs1(){const{IS_JEST,isSharedValue}=this.__closure;const mappers=new Map();let sortedMappers=[];let runRequested=false;let processingMappers=false;function updateMappersOrder(){const pre=new Map();mappers.forEach(function(mapper){if(mapper.outputs){for(const output of mapper.outputs){const preMappers=pre.get(output);if(preMappers===undefined){pre.set(output,[mapper]);}else{preMappers.push(mapper);}}}});const visited=new Set();const newOrder=[];function dfs(mapper){visited.add(mapper);for(const input of mapper.inputs){const preMappers=pre.get(input);if(preMappers){for(const preMapper of preMappers){if(!visited.has(preMapper)){dfs(preMapper);}}}}newOrder.push(mapper);}mappers.forEach(function(mapper){if(!visited.has(mapper)){dfs(mapper);}});sortedMappers=newOrder;}function mapperRun(){runRequested=false;if(processingMappers){return;}try{processingMappers=true;if(mappers.size!==sortedMappers.length){updateMappersOrder();}for(const mapper of sortedMappers){if(mapper.dirty){mapper.dirty=false;mapper.worklet();}}}finally{processingMappers=false;}}function maybeRequestUpdates(){if(IS_JEST){mapperRun();}else if(!runRequested){if(processingMappers){requestAnimationFrame(mapperRun);}else{queueMicrotask(mapperRun);}runRequested=true;}}function extractInputs(inputs,resultArray){if(Array.isArray(inputs)){for(const input of inputs){input&&extractInputs(input,resultArray);}}else if(isSharedValue(inputs)){resultArray.push(inputs);}else if(Object.getPrototypeOf(inputs)===Object.prototype){for(const element of Object.values(inputs)){element&&extractInputs(element,resultArray);}}return resultArray;}return{start:function(mapperID,worklet,inputs,outputs){const mapper={id:mapperID,dirty:true,worklet:worklet,inputs:extractInputs(inputs,[]),outputs:outputs};mappers.set(mapper.id,mapper);sortedMappers=[];for(const sv of mapper.inputs){sv.addListener(mapper.id,function(){mapper.dirty=true;maybeRequestUpdates();});}maybeRequestUpdates();},stop:function(mapperID){const mapper=mappers.get(mapperID);if(mapper){mappers.delete(mapper.id);sortedMappers=[];for(const sv of mapper.inputs){sv.removeListener(mapper.id);}}}};}\",\n    location: \"/app/frontend/node_modules/react-native-reanimated/lib/module/mappers.js\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"createMapperRegistry_reactNativeReanimated_mappersJs1\\\",\\\"IS_JEST\\\",\\\"isSharedValue\\\",\\\"__closure\\\",\\\"mappers\\\",\\\"Map\\\",\\\"sortedMappers\\\",\\\"runRequested\\\",\\\"processingMappers\\\",\\\"updateMappersOrder\\\",\\\"pre\\\",\\\"forEach\\\",\\\"mapper\\\",\\\"outputs\\\",\\\"output\\\",\\\"preMappers\\\",\\\"get\\\",\\\"undefined\\\",\\\"set\\\",\\\"push\\\",\\\"visited\\\",\\\"Set\\\",\\\"newOrder\\\",\\\"dfs\\\",\\\"add\\\",\\\"input\\\",\\\"inputs\\\",\\\"preMapper\\\",\\\"has\\\",\\\"mapperRun\\\",\\\"size\\\",\\\"length\\\",\\\"dirty\\\",\\\"worklet\\\",\\\"maybeRequestUpdates\\\",\\\"requestAnimationFrame\\\",\\\"queueMicrotask\\\",\\\"extractInputs\\\",\\\"resultArray\\\",\\\"Array\\\",\\\"isArray\\\",\\\"Object\\\",\\\"getPrototypeOf\\\",\\\"prototype\\\",\\\"element\\\",\\\"values\\\",\\\"start\\\",\\\"mapperID\\\",\\\"id\\\",\\\"sv\\\",\\\"addListener\\\",\\\"stop\\\",\\\"delete\\\",\\\"removeListener\\\"],\\\"sources\\\":[\\\"/app/frontend/node_modules/react-native-reanimated/lib/module/mappers.js\\\"],\\\"mappings\\\":\\\"AAMA,SAAAA,qDAAgCA,CAAA,QAAAC,OAAA,CAAAC,aAAA,OAAAC,SAAA,CAG9B,KAAM,CAAAC,OAAO,CAAG,GAAI,CAAAC,GAAG,CAAC,CAAC,CACzB,GAAI,CAAAC,aAAa,CAAG,EAAE,CACtB,GAAI,CAAAC,YAAY,CAAG,KAAK,CACxB,GAAI,CAAAC,iBAAiB,CAAG,KAAK,CAC7B,QAAS,CAAAC,kBAAkBA,CAAA,CAAG,CAqB5B,KAAM,CAAAC,GAAG,CAAG,GAAI,CAAAL,GAAG,CAAC,CAAC,CACrBD,OAAO,CAACO,OAAO,CAAC,SAAAC,MAAM,CAAI,CACxB,GAAIA,MAAM,CAACC,OAAO,CAAE,CAClB,IAAK,KAAM,CAAAC,MAAM,GAAI,CAAAF,MAAM,CAACC,OAAO,CAAE,CACnC,KAAM,CAAAE,UAAU,CAAGL,GAAG,CAACM,GAAG,CAACF,MAAM,CAAC,CAClC,GAAIC,UAAU,GAAKE,SAAS,CAAE,CAC5BP,GAAG,CAACQ,GAAG,CAACJ,MAAM,CAAE,CAACF,MAAM,CAAC,CAAC,CAC3B,CAAC,IAAM,CACLG,UAAU,CAACI,IAAI,CAACP,MAAM,CAAC,CACzB,CACF,CACF,CACF,CAAC,CAAC,CACF,KAAM,CAAAQ,OAAO,CAAG,GAAI,CAAAC,GAAG,CAAC,CAAC,CACzB,KAAM,CAAAC,QAAQ,CAAG,EAAE,CACnB,QAAS,CAAAC,GAAGA,CAACX,MAAM,CAAE,CACnBQ,OAAO,CAACI,GAAG,CAACZ,MAAM,CAAC,CACnB,IAAK,KAAM,CAAAa,KAAK,GAAI,CAAAb,MAAM,CAACc,MAAM,CAAE,CACjC,KAAM,CAAAX,UAAU,CAAGL,GAAG,CAACM,GAAG,CAACS,KAAK,CAAC,CACjC,GAAIV,UAAU,CAAE,CACd,IAAK,KAAM,CAAAY,SAAS,GAAI,CAAAZ,UAAU,CAAE,CAClC,GAAI,CAACK,OAAO,CAACQ,GAAG,CAACD,SAAS,CAAC,CAAE,CAC3BJ,GAAG,CAACI,SAAS,CAAC,CAChB,CACF,CACF,CACF,CACAL,QAAQ,CAACH,IAAI,CAACP,MAAM,CAAC,CACvB,CACAR,OAAO,CAACO,OAAO,CAAC,SAAAC,MAAM,CAAI,CACxB,GAAI,CAACQ,OAAO,CAACQ,GAAG,CAAChB,MAAM,CAAC,CAAE,CACxBW,GAAG,CAACX,MAAM,CAAC,CACb,CACF,CAAC,CAAC,CACFN,aAAa,CAAGgB,QAAQ,CAC1B,CACA,QAAS,CAAAO,SAASA,CAAA,CAAG,CACnBtB,YAAY,CAAG,KAAK,CACpB,GAAIC,iBAAiB,CAAE,CACrB,OACF,CACA,GAAI,CACFA,iBAAiB,CAAG,IAAI,CACxB,GAAIJ,OAAO,CAAC0B,IAAI,GAAKxB,aAAa,CAACyB,MAAM,CAAE,CACzCtB,kBAAkB,CAAC,CAAC,CACtB,CACA,IAAK,KAAM,CAAAG,MAAM,GAAI,CAAAN,aAAa,CAAE,CAClC,GAAIM,MAAM,CAACoB,KAAK,CAAE,CAChBpB,MAAM,CAACoB,KAAK,CAAG,KAAK,CACpBpB,MAAM,CAACqB,OAAO,CAAC,CAAC,CAClB,CACF,CACF,CAAC,OAAS,CACRzB,iBAAiB,CAAG,KAAK,CAC3B,CACF,CACA,QAAS,CAAA0B,mBAAmBA,CAAA,CAAG,CAC7B,GAAIjC,OAAO,CAAE,CAOX4B,SAAS,CAAC,CAAC,CACb,CAAC,IAAM,IAAI,CAACtB,YAAY,CAAE,CACxB,GAAIC,iBAAiB,CAAE,CAYrB2B,qBAAqB,CAACN,SAAS,CAAC,CAClC,CAAC,IAAM,CACLO,cAAc,CAACP,SAAS,CAAC,CAC3B,CACAtB,YAAY,CAAG,IAAI,CACrB,CACF,CACA,QAAS,CAAA8B,aAAaA,CAACX,MAAM,CAAEY,WAAW,CAAE,CAC1C,GAAIC,KAAK,CAACC,OAAO,CAACd,MAAM,CAAC,CAAE,CACzB,IAAK,KAAM,CAAAD,KAAK,GAAI,CAAAC,MAAM,CAAE,CAC1BD,KAAK,EAAIY,aAAa,CAACZ,KAAK,CAAEa,WAAW,CAAC,CAC5C,CACF,CAAC,IAAM,IAAIpC,aAAa,CAACwB,MAAM,CAAC,CAAE,CAChCY,WAAW,CAACnB,IAAI,CAACO,MAAM,CAAC,CAC1B,CAAC,IAAM,IAAIe,MAAM,CAACC,cAAc,CAAChB,MAAM,CAAC,GAAKe,MAAM,CAACE,SAAS,CAAE,CAI7D,IAAK,KAAM,CAAAC,OAAO,GAAI,CAAAH,MAAM,CAACI,MAAM,CAACnB,MAAM,CAAC,CAAE,CAC3CkB,OAAO,EAAIP,aAAa,CAACO,OAAO,CAAEN,WAAW,CAAC,CAChD,CACF,CACA,MAAO,CAAAA,WAAW,CACpB,CACA,MAAO,CACLQ,KAAK,CAAE,QAAAA,CAACC,QAAQ,CAAEd,OAAO,CAAEP,MAAM,CAAEb,OAAO,CAAK,CAC7C,KAAM,CAAAD,MAAM,CAAG,CACboC,EAAE,CAAED,QAAQ,CACZf,KAAK,CAAE,IAAI,CACXC,OAAO,CAAPA,OAAO,CACPP,MAAM,CAAEW,aAAa,CAACX,MAAM,CAAE,EAAE,CAAC,CACjCb,OAAA,CAAAA,OACF,CAAC,CACDT,OAAO,CAACc,GAAG,CAACN,MAAM,CAACoC,EAAE,CAAEpC,MAAM,CAAC,CAC9BN,aAAa,CAAG,EAAE,CAClB,IAAK,KAAM,CAAA2C,EAAE,GAAI,CAAArC,MAAM,CAACc,MAAM,CAAE,CAC9BuB,EAAE,CAACC,WAAW,CAACtC,MAAM,CAACoC,EAAE,CAAE,UAAM,CAC9BpC,MAAM,CAACoB,KAAK,CAAG,IAAI,CACnBE,mBAAmB,CAAC,CAAC,CACvB,CAAC,CAAC,CACJ,CACAA,mBAAmB,CAAC,CAAC,CACvB,CAAC,CACDiB,IAAI,CAAE,QAAAA,CAAAJ,QAAQ,CAAI,CAChB,KAAM,CAAAnC,MAAM,CAAGR,OAAO,CAACY,GAAG,CAAC+B,QAAQ,CAAC,CACpC,GAAInC,MAAM,CAAE,CACVR,OAAO,CAACgD,MAAM,CAACxC,MAAM,CAACoC,EAAE,CAAC,CACzB1C,aAAa,CAAG,EAAE,CAClB,IAAK,KAAM,CAAA2C,EAAE,GAAI,CAAArC,MAAM,CAACc,MAAM,CAAE,CAC9BuB,EAAE,CAACI,cAAc,CAACzC,MAAM,CAACoC,EAAE,CAAC,CAC9B,CACF,CACF,CACF,CAAC,CACH\\\",\\\"ignoreList\\\":[]}\"\n  };\n  const createMapperRegistry = function createMapperRegistry_reactNativeReanimated_mappersJs1Factory({\n    _worklet_1831615820738_init_data,\n    IS_JEST,\n    isSharedValue\n  }) {\n    const _e = [new global.Error(), -3, -27];\n    const createMapperRegistry = function () {\n      const mappers = new Map();\n      let sortedMappers = [];\n      let runRequested = false;\n      let processingMappers = false;\n      function updateMappersOrder() {\n        // sort mappers topologically\n        // the algorithm here takes adventage of a fact that the topological order\n        // of a transposed graph is a reverse topological order of the original graph\n        // The graph in our case consists of mappers and an edge between two mappers\n        // A and B exists if there is a shared value that's on A's output lists and on\n        // B's input list.\n        //\n        // We don't need however to calculate that graph as it is easier to work with\n        // the transposed version of it that can be calculated ad-hoc. For the transposed\n        // version to be traversed we use \"pre\" map that maps share value to mappers that\n        // output that shared value. Then we can infer all the outgoing edges for a given\n        // mapper simply by scanning it's input list and checking if any of the shared values\n        // from that list exists in the \"pre\" map. If they do, then we have an edge between\n        // that mapper and the mappers from the \"pre\" list for the given shared value.\n        //\n        // For topological sorting we use a dfs-based approach that requires the graph to\n        // be traversed in dfs order and each node after being processed lands at the\n        // beginning of the topological order list. Since we traverse a transposed graph,\n        // instead of reversing that order we can use a normal array and push processed\n        // mappers to the end. There is no need to reverse that array after we are done.\n        const pre = new Map(); // map from sv -> mapper that outputs that sv\n        mappers.forEach(mapper => {\n          if (mapper.outputs) {\n            for (const output of mapper.outputs) {\n              const preMappers = pre.get(output);\n              if (preMappers === undefined) {\n                pre.set(output, [mapper]);\n              } else {\n                preMappers.push(mapper);\n              }\n            }\n          }\n        });\n        const visited = new Set();\n        const newOrder = [];\n        function dfs(mapper) {\n          visited.add(mapper);\n          for (const input of mapper.inputs) {\n            const preMappers = pre.get(input);\n            if (preMappers) {\n              for (const preMapper of preMappers) {\n                if (!visited.has(preMapper)) {\n                  dfs(preMapper);\n                }\n              }\n            }\n          }\n          newOrder.push(mapper);\n        }\n        mappers.forEach(mapper => {\n          if (!visited.has(mapper)) {\n            dfs(mapper);\n          }\n        });\n        sortedMappers = newOrder;\n      }\n      function mapperRun() {\n        runRequested = false;\n        if (processingMappers) {\n          return;\n        }\n        try {\n          processingMappers = true;\n          if (mappers.size !== sortedMappers.length) {\n            updateMappersOrder();\n          }\n          for (const mapper of sortedMappers) {\n            if (mapper.dirty) {\n              mapper.dirty = false;\n              mapper.worklet();\n            }\n          }\n        } finally {\n          processingMappers = false;\n        }\n      }\n      function maybeRequestUpdates() {\n        if (IS_JEST) {\n          // On Jest environment we avoid using queueMicrotask as that'd require test\n          // to advance the clock manually. This on other hand would require tests\n          // to know how many times mappers need to run. As we don't want tests to\n          // make any assumptions on that number it is easier to execute mappers\n          // immediately for testing purposes and only expect test to advance timers\n          // if they want to make any assertions on the effects of animations being run.\n          mapperRun();\n        } else if (!runRequested) {\n          if (processingMappers) {\n            // In general, we should avoid having mappers trigger updates as this may\n            // result in unpredictable behavior. Specifically, the updated value can\n            // be read by mappers that run later in the same frame but previous mappers\n            // would access the old value. Updating mappers during the mapper-run phase\n            // breaks the order in which we should execute the mappers. However, doing\n            // that is still a possibility and there are some instances where people use\n            // the API in that way, hence we need to prevent mapper-run phase falling into\n            // an infinite loop. We do that by detecting when mapper-run is requested while\n            // we are already in mapper-run phase, and in that case we use `requestAnimationFrame`\n            // instead of `queueMicrotask` which will schedule mapper run for the next\n            // frame instead of queuing another set of updates in the same frame.\n            requestAnimationFrame(mapperRun);\n          } else {\n            queueMicrotask(mapperRun);\n          }\n          runRequested = true;\n        }\n      }\n      function extractInputs(inputs, resultArray) {\n        if (Array.isArray(inputs)) {\n          for (const input of inputs) {\n            input && extractInputs(input, resultArray);\n          }\n        } else if (isSharedValue(inputs)) {\n          resultArray.push(inputs);\n        } else if (Object.getPrototypeOf(inputs) === Object.prototype) {\n          // we only extract inputs recursively from \"plain\" objects here, if object\n          // is of a derivative class (e.g. HostObject on web, or Map) we don't scan\n          // it recursively\n          for (const element of Object.values(inputs)) {\n            element && extractInputs(element, resultArray);\n          }\n        }\n        return resultArray;\n      }\n      return {\n        start: (mapperID, worklet, inputs, outputs) => {\n          const mapper = {\n            id: mapperID,\n            dirty: true,\n            worklet,\n            inputs: extractInputs(inputs, []),\n            outputs\n          };\n          mappers.set(mapper.id, mapper);\n          sortedMappers = [];\n          for (const sv of mapper.inputs) {\n            sv.addListener(mapper.id, () => {\n              mapper.dirty = true;\n              maybeRequestUpdates();\n            });\n          }\n          maybeRequestUpdates();\n        },\n        stop: mapperID => {\n          const mapper = mappers.get(mapperID);\n          if (mapper) {\n            mappers.delete(mapper.id);\n            sortedMappers = [];\n            for (const sv of mapper.inputs) {\n              sv.removeListener(mapper.id);\n            }\n          }\n        }\n      };\n    };\n    createMapperRegistry.__closure = {\n      IS_JEST,\n      isSharedValue\n    };\n    createMapperRegistry.__workletHash = 1831615820738;\n    createMapperRegistry.__pluginVersion = \"0.6.0\";\n    createMapperRegistry.__initData = _worklet_1831615820738_init_data;\n    createMapperRegistry.__stackDetails = _e;\n    return createMapperRegistry;\n  }({\n    _worklet_1831615820738_init_data,\n    IS_JEST,\n    isSharedValue: _isSharedValue.isSharedValue\n  });\n  let MAPPER_ID = 9999;\n  const _worklet_6546531365916_init_data = {\n    code: \"function reactNativeReanimated_mappersJs2(){const{createMapperRegistry,mapperID,worklet,inputs,outputs}=this.__closure;let mapperRegistry=global.__mapperRegistry;if(mapperRegistry===undefined){mapperRegistry=global.__mapperRegistry=createMapperRegistry();}mapperRegistry.start(mapperID,worklet,inputs,outputs);}\",\n    location: \"/app/frontend/node_modules/react-native-reanimated/lib/module/mappers.js\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"reactNativeReanimated_mappersJs2\\\",\\\"createMapperRegistry\\\",\\\"mapperID\\\",\\\"worklet\\\",\\\"inputs\\\",\\\"outputs\\\",\\\"__closure\\\",\\\"mapperRegistry\\\",\\\"global\\\",\\\"__mapperRegistry\\\",\\\"undefined\\\",\\\"start\\\"],\\\"sources\\\":[\\\"/app/frontend/node_modules/react-native-reanimated/lib/module/mappers.js\\\"],\\\"mappings\\\":\\\"AA0KU,SAAAA,gCAAMA,CAAA,QAAAC,oBAAA,CAAAC,QAAA,CAAAC,OAAA,CAAAC,MAAA,CAAAC,OAAA,OAAAC,SAAA,CACZ,GAAI,CAAAC,cAAc,CAAGC,MAAM,CAACC,gBAAgB,CAC5C,GAAIF,cAAc,GAAKG,SAAS,CAAE,CAChCH,cAAc,CAAGC,MAAM,CAACC,gBAAgB,CAAGR,oBAAoB,CAAC,CAAC,CACnE,CACAM,cAAc,CAACI,KAAK,CAACT,QAAQ,CAAEC,OAAO,CAAEC,MAAM,CAAEC,OAAO,CAAC,CAC1D\\\",\\\"ignoreList\\\":[]}\"\n  };\n  function startMapper(worklet, inputs = [], outputs = []) {\n    const mapperID = MAPPER_ID += 1;\n    (0, _threads.runOnUI)(function reactNativeReanimated_mappersJs2Factory({\n      _worklet_6546531365916_init_data,\n      createMapperRegistry,\n      mapperID,\n      worklet,\n      inputs,\n      outputs\n    }) {\n      const _e = [new global.Error(), -6, -27];\n      const reactNativeReanimated_mappersJs2 = function () {\n        let mapperRegistry = global.__mapperRegistry;\n        if (mapperRegistry === undefined) {\n          mapperRegistry = global.__mapperRegistry = createMapperRegistry();\n        }\n        mapperRegistry.start(mapperID, worklet, inputs, outputs);\n      };\n      reactNativeReanimated_mappersJs2.__closure = {\n        createMapperRegistry,\n        mapperID,\n        worklet,\n        inputs,\n        outputs\n      };\n      reactNativeReanimated_mappersJs2.__workletHash = 6546531365916;\n      reactNativeReanimated_mappersJs2.__pluginVersion = \"0.6.0\";\n      reactNativeReanimated_mappersJs2.__initData = _worklet_6546531365916_init_data;\n      reactNativeReanimated_mappersJs2.__stackDetails = _e;\n      return reactNativeReanimated_mappersJs2;\n    }({\n      _worklet_6546531365916_init_data,\n      createMapperRegistry,\n      mapperID,\n      worklet,\n      inputs,\n      outputs\n    }))();\n    return mapperID;\n  }\n  const _worklet_2151698497712_init_data = {\n    code: \"function reactNativeReanimated_mappersJs3(){const{mapperID}=this.__closure;const mapperRegistry=global.__mapperRegistry;mapperRegistry===null||mapperRegistry===void 0||mapperRegistry.stop(mapperID);}\",\n    location: \"/app/frontend/node_modules/react-native-reanimated/lib/module/mappers.js\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"reactNativeReanimated_mappersJs3\\\",\\\"mapperID\\\",\\\"__closure\\\",\\\"mapperRegistry\\\",\\\"global\\\",\\\"__mapperRegistry\\\",\\\"stop\\\"],\\\"sources\\\":[\\\"/app/frontend/node_modules/react-native-reanimated/lib/module/mappers.js\\\"],\\\"mappings\\\":\\\"AAoLU,SAAAA,gCAAMA,CAAA,QAAAC,QAAA,OAAAC,SAAA,CACZ,KAAM,CAAAC,cAAc,CAAGC,MAAM,CAACC,gBAAgB,CAC9CF,cAAc,GAAK,IAAI,EAAIA,cAAc,GAAK,IAAK,EAAC,EAAIA,cAAc,CAACG,IAAI,CAACL,QAAQ,CAAC,CACvF\\\",\\\"ignoreList\\\":[]}\"\n  };\n  function stopMapper(mapperID) {\n    (0, _threads.runOnUI)(function reactNativeReanimated_mappersJs3Factory({\n      _worklet_2151698497712_init_data,\n      mapperID\n    }) {\n      const _e = [new global.Error(), -2, -27];\n      const reactNativeReanimated_mappersJs3 = function () {\n        const mapperRegistry = global.__mapperRegistry;\n        mapperRegistry === null || mapperRegistry === void 0 || mapperRegistry.stop(mapperID);\n      };\n      reactNativeReanimated_mappersJs3.__closure = {\n        mapperID\n      };\n      reactNativeReanimated_mappersJs3.__workletHash = 2151698497712;\n      reactNativeReanimated_mappersJs3.__pluginVersion = \"0.6.0\";\n      reactNativeReanimated_mappersJs3.__initData = _worklet_2151698497712_init_data;\n      reactNativeReanimated_mappersJs3.__stackDetails = _e;\n      return reactNativeReanimated_mappersJs3;\n    }({\n      _worklet_2151698497712_init_data,\n      mapperID\n    }))();\n  }\n});","lineCount":271,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,169,0,"exports"],[7,9,169,0],[7,10,169,0,"startMapper"],[7,21,169,0],[7,24,169,0,"startMapper"],[7,35,169,0],[8,2,180,0,"exports"],[8,9,180,0],[8,10,180,0,"stopMapper"],[8,20,180,0],[8,23,180,0,"stopMapper"],[8,33,180,0],[9,2,3,0],[9,6,3,0,"_PlatformChecker"],[9,22,3,0],[9,25,3,0,"require"],[9,32,3,0],[9,33,3,0,"_dependencyMap"],[9,47,3,0],[10,2,4,0],[10,6,4,0,"_threads"],[10,14,4,0],[10,17,4,0,"require"],[10,24,4,0],[10,25,4,0,"_dependencyMap"],[10,39,4,0],[11,2,5,0],[11,6,5,0,"_isSharedValue"],[11,20,5,0],[11,23,5,0,"require"],[11,30,5,0],[11,31,5,0,"_dependencyMap"],[11,45,5,0],[12,2,6,0],[12,8,6,6,"IS_JEST"],[12,15,6,13],[12,18,6,16],[12,22,6,16,"isJest"],[12,38,6,22],[12,39,6,22,"isJest"],[12,45,6,22],[12,47,6,23],[12,48,6,24],[13,2,6,25],[13,8,6,25,"_worklet_1831615820738_init_data"],[13,40,6,25],[14,4,6,25,"code"],[14,8,6,25],[15,4,6,25,"location"],[15,12,6,25],[16,4,6,25,"sourceMap"],[16,13,6,25],[17,2,6,25],[18,2,6,25],[18,8,6,25,"createMapperRegistry"],[18,28,6,25],[18,31,7,0],[18,40,7,0,"createMapperRegistry_reactNativeReanimated_mappersJs1Factory"],[18,101,7,0],[19,4,7,0,"_worklet_1831615820738_init_data"],[19,36,7,0],[20,4,92,8,"IS_JEST"],[20,11,92,15],[21,4,125,15,"isSharedValue"],[22,2,125,28],[23,4,125,28],[23,10,125,28,"_e"],[23,12,125,28],[23,20,125,28,"global"],[23,26,125,28],[23,27,125,28,"Error"],[23,32,125,28],[24,4,125,28],[24,10,125,28,"createMapperRegistry"],[24,30,125,28],[24,42,125,28,"createMapperRegistry"],[24,43,125,28],[24,45,7,32],[25,6,10,2],[25,12,10,8,"mappers"],[25,19,10,15],[25,22,10,18],[25,26,10,22,"Map"],[25,29,10,25],[25,30,10,26],[25,31,10,27],[26,6,11,2],[26,10,11,6,"sortedMappers"],[26,23,11,19],[26,26,11,22],[26,28,11,24],[27,6,12,2],[27,10,12,6,"runRequested"],[27,22,12,18],[27,25,12,21],[27,30,12,26],[28,6,13,2],[28,10,13,6,"processingMappers"],[28,27,13,23],[28,30,13,26],[28,35,13,31],[29,6,14,2],[29,15,14,11,"updateMappersOrder"],[29,33,14,29,"updateMappersOrder"],[29,34,14,29],[29,36,14,32],[30,8,15,4],[31,8,16,4],[32,8,17,4],[33,8,18,4],[34,8,19,4],[35,8,20,4],[36,8,21,4],[37,8,22,4],[38,8,23,4],[39,8,24,4],[40,8,25,4],[41,8,26,4],[42,8,27,4],[43,8,28,4],[44,8,29,4],[45,8,30,4],[46,8,31,4],[47,8,32,4],[48,8,33,4],[49,8,34,4],[50,8,35,4],[50,14,35,10,"pre"],[50,17,35,13],[50,20,35,16],[50,24,35,20,"Map"],[50,27,35,23],[50,28,35,24],[50,29,35,25],[50,30,35,26],[50,31,35,27],[51,8,36,4,"mappers"],[51,15,36,11],[51,16,36,12,"forEach"],[51,23,36,19],[51,24,36,20,"mapper"],[51,30,36,26],[51,34,36,30],[52,10,37,6],[52,14,37,10,"mapper"],[52,20,37,16],[52,21,37,17,"outputs"],[52,28,37,24],[52,30,37,26],[53,12,38,8],[53,17,38,13],[53,23,38,19,"output"],[53,29,38,25],[53,33,38,29,"mapper"],[53,39,38,35],[53,40,38,36,"outputs"],[53,47,38,43],[53,49,38,45],[54,14,39,10],[54,20,39,16,"preMappers"],[54,30,39,26],[54,33,39,29,"pre"],[54,36,39,32],[54,37,39,33,"get"],[54,40,39,36],[54,41,39,37,"output"],[54,47,39,43],[54,48,39,44],[55,14,40,10],[55,18,40,14,"preMappers"],[55,28,40,24],[55,33,40,29,"undefined"],[55,42,40,38],[55,44,40,40],[56,16,41,12,"pre"],[56,19,41,15],[56,20,41,16,"set"],[56,23,41,19],[56,24,41,20,"output"],[56,30,41,26],[56,32,41,28],[56,33,41,29,"mapper"],[56,39,41,35],[56,40,41,36],[56,41,41,37],[57,14,42,10],[57,15,42,11],[57,21,42,17],[58,16,43,12,"preMappers"],[58,26,43,22],[58,27,43,23,"push"],[58,31,43,27],[58,32,43,28,"mapper"],[58,38,43,34],[58,39,43,35],[59,14,44,10],[60,12,45,8],[61,10,46,6],[62,8,47,4],[62,9,47,5],[62,10,47,6],[63,8,48,4],[63,14,48,10,"visited"],[63,21,48,17],[63,24,48,20],[63,28,48,24,"Set"],[63,31,48,27],[63,32,48,28],[63,33,48,29],[64,8,49,4],[64,14,49,10,"newOrder"],[64,22,49,18],[64,25,49,21],[64,27,49,23],[65,8,50,4],[65,17,50,13,"dfs"],[65,20,50,16,"dfs"],[65,21,50,17,"mapper"],[65,27,50,23],[65,29,50,25],[66,10,51,6,"visited"],[66,17,51,13],[66,18,51,14,"add"],[66,21,51,17],[66,22,51,18,"mapper"],[66,28,51,24],[66,29,51,25],[67,10,52,6],[67,15,52,11],[67,21,52,17,"input"],[67,26,52,22],[67,30,52,26,"mapper"],[67,36,52,32],[67,37,52,33,"inputs"],[67,43,52,39],[67,45,52,41],[68,12,53,8],[68,18,53,14,"preMappers"],[68,28,53,24],[68,31,53,27,"pre"],[68,34,53,30],[68,35,53,31,"get"],[68,38,53,34],[68,39,53,35,"input"],[68,44,53,40],[68,45,53,41],[69,12,54,8],[69,16,54,12,"preMappers"],[69,26,54,22],[69,28,54,24],[70,14,55,10],[70,19,55,15],[70,25,55,21,"preMapper"],[70,34,55,30],[70,38,55,34,"preMappers"],[70,48,55,44],[70,50,55,46],[71,16,56,12],[71,20,56,16],[71,21,56,17,"visited"],[71,28,56,24],[71,29,56,25,"has"],[71,32,56,28],[71,33,56,29,"preMapper"],[71,42,56,38],[71,43,56,39],[71,45,56,41],[72,18,57,14,"dfs"],[72,21,57,17],[72,22,57,18,"preMapper"],[72,31,57,27],[72,32,57,28],[73,16,58,12],[74,14,59,10],[75,12,60,8],[76,10,61,6],[77,10,62,6,"newOrder"],[77,18,62,14],[77,19,62,15,"push"],[77,23,62,19],[77,24,62,20,"mapper"],[77,30,62,26],[77,31,62,27],[78,8,63,4],[79,8,64,4,"mappers"],[79,15,64,11],[79,16,64,12,"forEach"],[79,23,64,19],[79,24,64,20,"mapper"],[79,30,64,26],[79,34,64,30],[80,10,65,6],[80,14,65,10],[80,15,65,11,"visited"],[80,22,65,18],[80,23,65,19,"has"],[80,26,65,22],[80,27,65,23,"mapper"],[80,33,65,29],[80,34,65,30],[80,36,65,32],[81,12,66,8,"dfs"],[81,15,66,11],[81,16,66,12,"mapper"],[81,22,66,18],[81,23,66,19],[82,10,67,6],[83,8,68,4],[83,9,68,5],[83,10,68,6],[84,8,69,4,"sortedMappers"],[84,21,69,17],[84,24,69,20,"newOrder"],[84,32,69,28],[85,6,70,2],[86,6,71,2],[86,15,71,11,"mapperRun"],[86,24,71,20,"mapperRun"],[86,25,71,20],[86,27,71,23],[87,8,72,4,"runRequested"],[87,20,72,16],[87,23,72,19],[87,28,72,24],[88,8,73,4],[88,12,73,8,"processingMappers"],[88,29,73,25],[88,31,73,27],[89,10,74,6],[90,8,75,4],[91,8,76,4],[91,12,76,8],[92,10,77,6,"processingMappers"],[92,27,77,23],[92,30,77,26],[92,34,77,30],[93,10,78,6],[93,14,78,10,"mappers"],[93,21,78,17],[93,22,78,18,"size"],[93,26,78,22],[93,31,78,27,"sortedMappers"],[93,44,78,40],[93,45,78,41,"length"],[93,51,78,47],[93,53,78,49],[94,12,79,8,"updateMappersOrder"],[94,30,79,26],[94,31,79,27],[94,32,79,28],[95,10,80,6],[96,10,81,6],[96,15,81,11],[96,21,81,17,"mapper"],[96,27,81,23],[96,31,81,27,"sortedMappers"],[96,44,81,40],[96,46,81,42],[97,12,82,8],[97,16,82,12,"mapper"],[97,22,82,18],[97,23,82,19,"dirty"],[97,28,82,24],[97,30,82,26],[98,14,83,10,"mapper"],[98,20,83,16],[98,21,83,17,"dirty"],[98,26,83,22],[98,29,83,25],[98,34,83,30],[99,14,84,10,"mapper"],[99,20,84,16],[99,21,84,17,"worklet"],[99,28,84,24],[99,29,84,25],[99,30,84,26],[100,12,85,8],[101,10,86,6],[102,8,87,4],[102,9,87,5],[102,18,87,14],[103,10,88,6,"processingMappers"],[103,27,88,23],[103,30,88,26],[103,35,88,31],[104,8,89,4],[105,6,90,2],[106,6,91,2],[106,15,91,11,"maybeRequestUpdates"],[106,34,91,30,"maybeRequestUpdates"],[106,35,91,30],[106,37,91,33],[107,8,92,4],[107,12,92,8,"IS_JEST"],[107,19,92,15],[107,21,92,17],[108,10,93,6],[109,10,94,6],[110,10,95,6],[111,10,96,6],[112,10,97,6],[113,10,98,6],[114,10,99,6,"mapperRun"],[114,19,99,15],[114,20,99,16],[114,21,99,17],[115,8,100,4],[115,9,100,5],[115,15,100,11],[115,19,100,15],[115,20,100,16,"runRequested"],[115,32,100,28],[115,34,100,30],[116,10,101,6],[116,14,101,10,"processingMappers"],[116,31,101,27],[116,33,101,29],[117,12,102,8],[118,12,103,8],[119,12,104,8],[120,12,105,8],[121,12,106,8],[122,12,107,8],[123,12,108,8],[124,12,109,8],[125,12,110,8],[126,12,111,8],[127,12,112,8],[128,12,113,8,"requestAnimationFrame"],[128,33,113,29],[128,34,113,30,"mapperRun"],[128,43,113,39],[128,44,113,40],[129,10,114,6],[129,11,114,7],[129,17,114,13],[130,12,115,8,"queueMicrotask"],[130,26,115,22],[130,27,115,23,"mapperRun"],[130,36,115,32],[130,37,115,33],[131,10,116,6],[132,10,117,6,"runRequested"],[132,22,117,18],[132,25,117,21],[132,29,117,25],[133,8,118,4],[134,6,119,2],[135,6,120,2],[135,15,120,11,"extractInputs"],[135,28,120,24,"extractInputs"],[135,29,120,25,"inputs"],[135,35,120,31],[135,37,120,33,"resultArray"],[135,48,120,44],[135,50,120,46],[136,8,121,4],[136,12,121,8,"Array"],[136,17,121,13],[136,18,121,14,"isArray"],[136,25,121,21],[136,26,121,22,"inputs"],[136,32,121,28],[136,33,121,29],[136,35,121,31],[137,10,122,6],[137,15,122,11],[137,21,122,17,"input"],[137,26,122,22],[137,30,122,26,"inputs"],[137,36,122,32],[137,38,122,34],[138,12,123,8,"input"],[138,17,123,13],[138,21,123,17,"extractInputs"],[138,34,123,30],[138,35,123,31,"input"],[138,40,123,36],[138,42,123,38,"resultArray"],[138,53,123,49],[138,54,123,50],[139,10,124,6],[140,8,125,4],[140,9,125,5],[140,15,125,11],[140,19,125,15,"isSharedValue"],[140,32,125,28],[140,33,125,29,"inputs"],[140,39,125,35],[140,40,125,36],[140,42,125,38],[141,10,126,6,"resultArray"],[141,21,126,17],[141,22,126,18,"push"],[141,26,126,22],[141,27,126,23,"inputs"],[141,33,126,29],[141,34,126,30],[142,8,127,4],[142,9,127,5],[142,15,127,11],[142,19,127,15,"Object"],[142,25,127,21],[142,26,127,22,"getPrototypeOf"],[142,40,127,36],[142,41,127,37,"inputs"],[142,47,127,43],[142,48,127,44],[142,53,127,49,"Object"],[142,59,127,55],[142,60,127,56,"prototype"],[142,69,127,65],[142,71,127,67],[143,10,128,6],[144,10,129,6],[145,10,130,6],[146,10,131,6],[146,15,131,11],[146,21,131,17,"element"],[146,28,131,24],[146,32,131,28,"Object"],[146,38,131,34],[146,39,131,35,"values"],[146,45,131,41],[146,46,131,42,"inputs"],[146,52,131,48],[146,53,131,49],[146,55,131,51],[147,12,132,8,"element"],[147,19,132,15],[147,23,132,19,"extractInputs"],[147,36,132,32],[147,37,132,33,"element"],[147,44,132,40],[147,46,132,42,"resultArray"],[147,57,132,53],[147,58,132,54],[148,10,133,6],[149,8,134,4],[150,8,135,4],[150,15,135,11,"resultArray"],[150,26,135,22],[151,6,136,2],[152,6,137,2],[152,13,137,9],[153,8,138,4,"start"],[153,13,138,9],[153,15,138,11,"start"],[153,16,138,12,"mapperID"],[153,24,138,20],[153,26,138,22,"worklet"],[153,33,138,29],[153,35,138,31,"inputs"],[153,41,138,37],[153,43,138,39,"outputs"],[153,50,138,46],[153,55,138,51],[154,10,139,6],[154,16,139,12,"mapper"],[154,22,139,18],[154,25,139,21],[155,12,140,8,"id"],[155,14,140,10],[155,16,140,12,"mapperID"],[155,24,140,20],[156,12,141,8,"dirty"],[156,17,141,13],[156,19,141,15],[156,23,141,19],[157,12,142,8,"worklet"],[157,19,142,15],[158,12,143,8,"inputs"],[158,18,143,14],[158,20,143,16,"extractInputs"],[158,33,143,29],[158,34,143,30,"inputs"],[158,40,143,36],[158,42,143,38],[158,44,143,40],[158,45,143,41],[159,12,144,8,"outputs"],[160,10,145,6],[160,11,145,7],[161,10,146,6,"mappers"],[161,17,146,13],[161,18,146,14,"set"],[161,21,146,17],[161,22,146,18,"mapper"],[161,28,146,24],[161,29,146,25,"id"],[161,31,146,27],[161,33,146,29,"mapper"],[161,39,146,35],[161,40,146,36],[162,10,147,6,"sortedMappers"],[162,23,147,19],[162,26,147,22],[162,28,147,24],[163,10,148,6],[163,15,148,11],[163,21,148,17,"sv"],[163,23,148,19],[163,27,148,23,"mapper"],[163,33,148,29],[163,34,148,30,"inputs"],[163,40,148,36],[163,42,148,38],[164,12,149,8,"sv"],[164,14,149,10],[164,15,149,11,"addListener"],[164,26,149,22],[164,27,149,23,"mapper"],[164,33,149,29],[164,34,149,30,"id"],[164,36,149,32],[164,38,149,34],[164,44,149,40],[165,14,150,10,"mapper"],[165,20,150,16],[165,21,150,17,"dirty"],[165,26,150,22],[165,29,150,25],[165,33,150,29],[166,14,151,10,"maybeRequestUpdates"],[166,33,151,29],[166,34,151,30],[166,35,151,31],[167,12,152,8],[167,13,152,9],[167,14,152,10],[168,10,153,6],[169,10,154,6,"maybeRequestUpdates"],[169,29,154,25],[169,30,154,26],[169,31,154,27],[170,8,155,4],[170,9,155,5],[171,8,156,4,"stop"],[171,12,156,8],[171,14,156,10,"mapperID"],[171,22,156,18],[171,26,156,22],[172,10,157,6],[172,16,157,12,"mapper"],[172,22,157,18],[172,25,157,21,"mappers"],[172,32,157,28],[172,33,157,29,"get"],[172,36,157,32],[172,37,157,33,"mapperID"],[172,45,157,41],[172,46,157,42],[173,10,158,6],[173,14,158,10,"mapper"],[173,20,158,16],[173,22,158,18],[174,12,159,8,"mappers"],[174,19,159,15],[174,20,159,16,"delete"],[174,26,159,22],[174,27,159,23,"mapper"],[174,33,159,29],[174,34,159,30,"id"],[174,36,159,32],[174,37,159,33],[175,12,160,8,"sortedMappers"],[175,25,160,21],[175,28,160,24],[175,30,160,26],[176,12,161,8],[176,17,161,13],[176,23,161,19,"sv"],[176,25,161,21],[176,29,161,25,"mapper"],[176,35,161,31],[176,36,161,32,"inputs"],[176,42,161,38],[176,44,161,40],[177,14,162,10,"sv"],[177,16,162,12],[177,17,162,13,"removeListener"],[177,31,162,27],[177,32,162,28,"mapper"],[177,38,162,34],[177,39,162,35,"id"],[177,41,162,37],[177,42,162,38],[178,12,163,8],[179,10,164,6],[180,8,165,4],[181,6,166,2],[181,7,166,3],[182,4,167,0],[182,5,167,1],[183,4,167,1,"createMapperRegistry"],[183,24,167,1],[183,25,167,1,"__closure"],[183,34,167,1],[184,6,92,8,"IS_JEST"],[184,13,92,15],[185,6,125,15,"isSharedValue"],[186,4,125,28],[187,4,125,28,"createMapperRegistry"],[187,24,125,28],[187,25,125,28,"__workletHash"],[187,38,125,28],[188,4,125,28,"createMapperRegistry"],[188,24,125,28],[188,25,125,28,"__pluginVersion"],[188,40,125,28],[189,4,125,28,"createMapperRegistry"],[189,24,125,28],[189,25,125,28,"__initData"],[189,35,125,28],[189,38,125,28,"_worklet_1831615820738_init_data"],[189,70,125,28],[190,4,125,28,"createMapperRegistry"],[190,24,125,28],[190,25,125,28,"__stackDetails"],[190,39,125,28],[190,42,125,28,"_e"],[190,44,125,28],[191,4,125,28],[191,11,125,28,"createMapperRegistry"],[191,31,125,28],[192,2,125,28],[192,3,7,0],[193,4,7,0,"_worklet_1831615820738_init_data"],[193,36,7,0],[194,4,92,8,"IS_JEST"],[194,11,92,15],[195,4,125,15,"isSharedValue"],[195,17,125,28],[195,19,125,15,"isSharedValue"],[195,33,125,28],[195,34,125,28,"isSharedValue"],[196,2,125,28],[197,2,168,0],[197,6,168,4,"MAPPER_ID"],[197,15,168,13],[197,18,168,16],[197,22,168,20],[198,2,168,21],[198,8,168,21,"_worklet_6546531365916_init_data"],[198,40,168,21],[199,4,168,21,"code"],[199,8,168,21],[200,4,168,21,"location"],[200,12,168,21],[201,4,168,21,"sourceMap"],[201,13,168,21],[202,2,168,21],[203,2,169,7],[203,11,169,16,"startMapper"],[203,22,169,27,"startMapper"],[203,23,169,28,"worklet"],[203,30,169,35],[203,32,169,37,"inputs"],[203,38,169,43],[203,41,169,46],[203,43,169,48],[203,45,169,50,"outputs"],[203,52,169,57],[203,55,169,60],[203,57,169,62],[203,59,169,64],[204,4,170,2],[204,10,170,8,"mapperID"],[204,18,170,16],[204,21,170,19,"MAPPER_ID"],[204,30,170,28],[204,34,170,32],[204,35,170,33],[205,4,171,2],[205,8,171,2,"runOnUI"],[205,16,171,9],[205,17,171,9,"runOnUI"],[205,24,171,9],[205,26,171,10],[205,35,171,10,"reactNativeReanimated_mappersJs2Factory"],[205,75,171,10],[206,6,171,10,"_worklet_6546531365916_init_data"],[206,38,171,10],[207,6,174,49,"createMapperRegistry"],[207,26,174,69],[208,6,176,25,"mapperID"],[208,14,176,33],[209,6,176,35,"worklet"],[209,13,176,42],[210,6,176,44,"inputs"],[210,12,176,50],[211,6,176,52,"outputs"],[212,4,176,59],[213,6,176,59],[213,12,176,59,"_e"],[213,14,176,59],[213,22,176,59,"global"],[213,28,176,59],[213,29,176,59,"Error"],[213,34,176,59],[214,6,176,59],[214,12,176,59,"reactNativeReanimated_mappersJs2"],[214,44,176,59],[214,56,176,59,"reactNativeReanimated_mappersJs2"],[214,57,176,59],[214,59,171,16],[215,8,172,4],[215,12,172,8,"mapperRegistry"],[215,26,172,22],[215,29,172,25,"global"],[215,35,172,31],[215,36,172,32,"__mapperRegistry"],[215,52,172,48],[216,8,173,4],[216,12,173,8,"mapperRegistry"],[216,26,173,22],[216,31,173,27,"undefined"],[216,40,173,36],[216,42,173,38],[217,10,174,6,"mapperRegistry"],[217,24,174,20],[217,27,174,23,"global"],[217,33,174,29],[217,34,174,30,"__mapperRegistry"],[217,50,174,46],[217,53,174,49,"createMapperRegistry"],[217,73,174,69],[217,74,174,70],[217,75,174,71],[218,8,175,4],[219,8,176,4,"mapperRegistry"],[219,22,176,18],[219,23,176,19,"start"],[219,28,176,24],[219,29,176,25,"mapperID"],[219,37,176,33],[219,39,176,35,"worklet"],[219,46,176,42],[219,48,176,44,"inputs"],[219,54,176,50],[219,56,176,52,"outputs"],[219,63,176,59],[219,64,176,60],[220,6,177,2],[220,7,177,3],[221,6,177,3,"reactNativeReanimated_mappersJs2"],[221,38,177,3],[221,39,177,3,"__closure"],[221,48,177,3],[222,8,174,49,"createMapperRegistry"],[222,28,174,69],[223,8,176,25,"mapperID"],[223,16,176,33],[224,8,176,35,"worklet"],[224,15,176,42],[225,8,176,44,"inputs"],[225,14,176,50],[226,8,176,52,"outputs"],[227,6,176,59],[228,6,176,59,"reactNativeReanimated_mappersJs2"],[228,38,176,59],[228,39,176,59,"__workletHash"],[228,52,176,59],[229,6,176,59,"reactNativeReanimated_mappersJs2"],[229,38,176,59],[229,39,176,59,"__pluginVersion"],[229,54,176,59],[230,6,176,59,"reactNativeReanimated_mappersJs2"],[230,38,176,59],[230,39,176,59,"__initData"],[230,49,176,59],[230,52,176,59,"_worklet_6546531365916_init_data"],[230,84,176,59],[231,6,176,59,"reactNativeReanimated_mappersJs2"],[231,38,176,59],[231,39,176,59,"__stackDetails"],[231,53,176,59],[231,56,176,59,"_e"],[231,58,176,59],[232,6,176,59],[232,13,176,59,"reactNativeReanimated_mappersJs2"],[232,45,176,59],[233,4,176,59],[233,5,171,10],[234,6,171,10,"_worklet_6546531365916_init_data"],[234,38,171,10],[235,6,174,49,"createMapperRegistry"],[235,26,174,69],[236,6,176,25,"mapperID"],[236,14,176,33],[237,6,176,35,"worklet"],[237,13,176,42],[238,6,176,44,"inputs"],[238,12,176,50],[239,6,176,52,"outputs"],[240,4,176,59],[240,6,177,3],[240,7,177,4],[240,8,177,5],[240,9,177,6],[241,4,178,2],[241,11,178,9,"mapperID"],[241,19,178,17],[242,2,179,0],[243,2,179,1],[243,8,179,1,"_worklet_2151698497712_init_data"],[243,40,179,1],[244,4,179,1,"code"],[244,8,179,1],[245,4,179,1,"location"],[245,12,179,1],[246,4,179,1,"sourceMap"],[246,13,179,1],[247,2,179,1],[248,2,180,7],[248,11,180,16,"stopMapper"],[248,21,180,26,"stopMapper"],[248,22,180,27,"mapperID"],[248,30,180,35],[248,32,180,37],[249,4,181,2],[249,8,181,2,"runOnUI"],[249,16,181,9],[249,17,181,9,"runOnUI"],[249,24,181,9],[249,26,181,10],[249,35,181,10,"reactNativeReanimated_mappersJs3Factory"],[249,75,181,10],[250,6,181,10,"_worklet_2151698497712_init_data"],[250,38,181,10],[251,6,183,80,"mapperID"],[252,4,183,88],[253,6,183,88],[253,12,183,88,"_e"],[253,14,183,88],[253,22,183,88,"global"],[253,28,183,88],[253,29,183,88,"Error"],[253,34,183,88],[254,6,183,88],[254,12,183,88,"reactNativeReanimated_mappersJs3"],[254,44,183,88],[254,56,183,88,"reactNativeReanimated_mappersJs3"],[254,57,183,88],[254,59,181,16],[255,8,182,4],[255,14,182,10,"mapperRegistry"],[255,28,182,24],[255,31,182,27,"global"],[255,37,182,33],[255,38,182,34,"__mapperRegistry"],[255,54,182,50],[256,8,183,4,"mapperRegistry"],[256,22,183,18],[256,27,183,23],[256,31,183,27],[256,35,183,31,"mapperRegistry"],[256,49,183,45],[256,54,183,50],[256,59,183,55],[256,60,183,56],[256,64,183,60,"mapperRegistry"],[256,78,183,74],[256,79,183,75,"stop"],[256,83,183,79],[256,84,183,80,"mapperID"],[256,92,183,88],[256,93,183,89],[257,6,184,2],[257,7,184,3],[258,6,184,3,"reactNativeReanimated_mappersJs3"],[258,38,184,3],[258,39,184,3,"__closure"],[258,48,184,3],[259,8,183,80,"mapperID"],[260,6,183,88],[261,6,183,88,"reactNativeReanimated_mappersJs3"],[261,38,183,88],[261,39,183,88,"__workletHash"],[261,52,183,88],[262,6,183,88,"reactNativeReanimated_mappersJs3"],[262,38,183,88],[262,39,183,88,"__pluginVersion"],[262,54,183,88],[263,6,183,88,"reactNativeReanimated_mappersJs3"],[263,38,183,88],[263,39,183,88,"__initData"],[263,49,183,88],[263,52,183,88,"_worklet_2151698497712_init_data"],[263,84,183,88],[264,6,183,88,"reactNativeReanimated_mappersJs3"],[264,38,183,88],[264,39,183,88,"__stackDetails"],[264,53,183,88],[264,56,183,88,"_e"],[264,58,183,88],[265,6,183,88],[265,13,183,88,"reactNativeReanimated_mappersJs3"],[265,45,183,88],[266,4,183,88],[266,5,181,10],[267,6,181,10,"_worklet_2151698497712_init_data"],[267,38,181,10],[268,6,183,80,"mapperID"],[269,4,183,88],[269,6,184,3],[269,7,184,4],[269,8,184,5],[269,9,184,6],[270,2,185,0],[271,0,185,1],[271,3]],"functionMap":{"names":["<global>","createMapperRegistry","updateMappersOrder","forEach$argument_0","dfs","mapperRun","maybeRequestUpdates","extractInputs","start","sv.addListener$argument_1","stop","startMapper","runOnUI$argument_0","stopMapper"],"mappings":"AAA;ACM;ECO;oBCsB;KDW;IEG;KFa;oBCC;KDI;GDE;EIC;GJmB;EKC;GL4B;EMC;GNgB;WOE;kCCW;SDG;KPG;USC;KTS;CDE;OWE;UCE;GDM;CXE;OaC;UDC;GCG;CbC"},"hasCjsExports":false},"type":"js/module"}]}