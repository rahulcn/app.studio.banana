{"dependencies":[{"name":"./lib/fetch","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":14,"column":16,"index":584},"end":{"line":14,"column":38,"index":606}}],"key":"R6LkNjEOXDiLQ/+hwj6jDUhuOC4=","exportNames":["*"],"imports":1}},{"name":"./lib/helpers","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":15,"column":18,"index":626},"end":{"line":15,"column":42,"index":650}}],"key":"WC5jlm7KwiIsdJM6jCtPN6iFk4U=","exportNames":["*"],"imports":1}},{"name":"./lib/types","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":16,"column":16,"index":668},"end":{"line":16,"column":38,"index":690}}],"key":"MuAyI4gB5M7BbvAGJgipm/B+Ps4=","exportNames":["*"],"imports":1}},{"name":"./lib/errors","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":17,"column":17,"index":709},"end":{"line":17,"column":40,"index":732}}],"key":"Hvlclxpmmg311e5qhG3wYodSjVs=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var __rest = this && this.__rest || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n    }\n    return t;\n  };\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  const fetch_1 = require(_dependencyMap[0], \"./lib/fetch\");\n  const helpers_1 = require(_dependencyMap[1], \"./lib/helpers\");\n  const types_1 = require(_dependencyMap[2], \"./lib/types\");\n  const errors_1 = require(_dependencyMap[3], \"./lib/errors\");\n  class GoTrueAdminApi {\n    constructor({\n      url = '',\n      headers = {},\n      fetch\n    }) {\n      this.url = url;\n      this.headers = headers;\n      this.fetch = (0, helpers_1.resolveFetch)(fetch);\n      this.mfa = {\n        listFactors: this._listFactors.bind(this),\n        deleteFactor: this._deleteFactor.bind(this)\n      };\n    }\n    /**\n     * Removes a logged-in session.\n     * @param jwt A valid, logged-in JWT.\n     * @param scope The logout sope.\n     */\n    async signOut(jwt, scope = types_1.SIGN_OUT_SCOPES[0]) {\n      if (types_1.SIGN_OUT_SCOPES.indexOf(scope) < 0) {\n        throw new Error(`@supabase/auth-js: Parameter scope must be one of ${types_1.SIGN_OUT_SCOPES.join(', ')}`);\n      }\n      try {\n        await (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/logout?scope=${scope}`, {\n          headers: this.headers,\n          jwt,\n          noResolveJson: true\n        });\n        return {\n          data: null,\n          error: null\n        };\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Sends an invite link to an email address.\n     * @param email The email address of the user.\n     * @param options Additional options to be included when inviting.\n     */\n    async inviteUserByEmail(email, options = {}) {\n      try {\n        return await (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/invite`, {\n          body: {\n            email,\n            data: options.data\n          },\n          headers: this.headers,\n          redirectTo: options.redirectTo,\n          xform: fetch_1._userResponse\n        });\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: {\n              user: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Generates email links and OTPs to be sent via a custom email provider.\n     * @param email The user's email.\n     * @param options.password User password. For signup only.\n     * @param options.data Optional user metadata. For signup only.\n     * @param options.redirectTo The redirect url which should be appended to the generated link\n     */\n    async generateLink(params) {\n      try {\n        const {\n            options\n          } = params,\n          rest = __rest(params, [\"options\"]);\n        const body = Object.assign(Object.assign({}, rest), options);\n        if ('newEmail' in rest) {\n          // replace newEmail with new_email in request body\n          body.new_email = rest === null || rest === void 0 ? void 0 : rest.newEmail;\n          delete body['newEmail'];\n        }\n        return await (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/admin/generate_link`, {\n          body: body,\n          headers: this.headers,\n          xform: fetch_1._generateLinkResponse,\n          redirectTo: options === null || options === void 0 ? void 0 : options.redirectTo\n        });\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: {\n              properties: null,\n              user: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    // User Admin API\n    /**\n     * Creates a new user.\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    async createUser(attributes) {\n      try {\n        return await (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/admin/users`, {\n          body: attributes,\n          headers: this.headers,\n          xform: fetch_1._userResponse\n        });\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: {\n              user: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Get a list of users.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     * @param params An object which supports `page` and `perPage` as numbers, to alter the paginated results.\n     */\n    async listUsers(params) {\n      var _a, _b, _c, _d, _e, _f, _g;\n      try {\n        const pagination = {\n          nextPage: null,\n          lastPage: 0,\n          total: 0\n        };\n        const response = await (0, fetch_1._request)(this.fetch, 'GET', `${this.url}/admin/users`, {\n          headers: this.headers,\n          noResolveJson: true,\n          query: {\n            page: (_b = (_a = params === null || params === void 0 ? void 0 : params.page) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : '',\n            per_page: (_d = (_c = params === null || params === void 0 ? void 0 : params.perPage) === null || _c === void 0 ? void 0 : _c.toString()) !== null && _d !== void 0 ? _d : ''\n          },\n          xform: fetch_1._noResolveJsonResponse\n        });\n        if (response.error) throw response.error;\n        const users = await response.json();\n        const total = (_e = response.headers.get('x-total-count')) !== null && _e !== void 0 ? _e : 0;\n        const links = (_g = (_f = response.headers.get('link')) === null || _f === void 0 ? void 0 : _f.split(',')) !== null && _g !== void 0 ? _g : [];\n        if (links.length > 0) {\n          links.forEach(link => {\n            const page = parseInt(link.split(';')[0].split('=')[1].substring(0, 1));\n            const rel = JSON.parse(link.split(';')[1].split('=')[1]);\n            pagination[`${rel}Page`] = page;\n          });\n          pagination.total = parseInt(total);\n        }\n        return {\n          data: Object.assign(Object.assign({}, users), pagination),\n          error: null\n        };\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: {\n              users: []\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Get user by id.\n     *\n     * @param uid The user's unique identifier\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    async getUserById(uid) {\n      (0, helpers_1.validateUUID)(uid);\n      try {\n        return await (0, fetch_1._request)(this.fetch, 'GET', `${this.url}/admin/users/${uid}`, {\n          headers: this.headers,\n          xform: fetch_1._userResponse\n        });\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: {\n              user: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Updates the user data.\n     *\n     * @param attributes The data you want to update.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    async updateUserById(uid, attributes) {\n      (0, helpers_1.validateUUID)(uid);\n      try {\n        return await (0, fetch_1._request)(this.fetch, 'PUT', `${this.url}/admin/users/${uid}`, {\n          body: attributes,\n          headers: this.headers,\n          xform: fetch_1._userResponse\n        });\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: {\n              user: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    /**\n     * Delete a user. Requires a `service_role` key.\n     *\n     * @param id The user id you want to remove.\n     * @param shouldSoftDelete If true, then the user will be soft-deleted from the auth schema. Soft deletion allows user identification from the hashed user ID but is not reversible.\n     * Defaults to false for backward compatibility.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    async deleteUser(id, shouldSoftDelete = false) {\n      (0, helpers_1.validateUUID)(id);\n      try {\n        return await (0, fetch_1._request)(this.fetch, 'DELETE', `${this.url}/admin/users/${id}`, {\n          headers: this.headers,\n          body: {\n            should_soft_delete: shouldSoftDelete\n          },\n          xform: fetch_1._userResponse\n        });\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: {\n              user: null\n            },\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    async _listFactors(params) {\n      (0, helpers_1.validateUUID)(params.userId);\n      try {\n        const {\n          data,\n          error\n        } = await (0, fetch_1._request)(this.fetch, 'GET', `${this.url}/admin/users/${params.userId}/factors`, {\n          headers: this.headers,\n          xform: factors => {\n            return {\n              data: {\n                factors\n              },\n              error: null\n            };\n          }\n        });\n        return {\n          data,\n          error\n        };\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n        throw error;\n      }\n    }\n    async _deleteFactor(params) {\n      (0, helpers_1.validateUUID)(params.userId);\n      (0, helpers_1.validateUUID)(params.id);\n      try {\n        const data = await (0, fetch_1._request)(this.fetch, 'DELETE', `${this.url}/admin/users/${params.userId}/factors/${params.id}`, {\n          headers: this.headers\n        });\n        return {\n          data,\n          error: null\n        };\n      } catch (error) {\n        if ((0, errors_1.isAuthError)(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n        throw error;\n      }\n    }\n  }\n  exports.default = GoTrueAdminApi;\n});","lineCount":341,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[4,6,2,4,"__rest"],[4,12,2,10],[4,15,2,14],[4,19,2,18],[4,23,2,22],[4,27,2,26],[4,28,2,27,"__rest"],[4,34,2,33],[4,38,2,38],[4,48,2,48,"s"],[4,49,2,49],[4,51,2,51,"e"],[4,52,2,52],[4,54,2,54],[5,4,3,4],[5,8,3,8,"t"],[5,9,3,9],[5,12,3,12],[5,13,3,13],[5,14,3,14],[6,4,4,4],[6,9,4,9],[6,13,4,13,"p"],[6,14,4,14],[6,18,4,18,"s"],[6,19,4,19],[6,21,4,21],[6,25,4,25,"Object"],[6,31,4,31],[6,32,4,32,"prototype"],[6,41,4,41],[6,42,4,42,"hasOwnProperty"],[6,56,4,56],[6,57,4,57,"call"],[6,61,4,61],[6,62,4,62,"s"],[6,63,4,63],[6,65,4,65,"p"],[6,66,4,66],[6,67,4,67],[6,71,4,71,"e"],[6,72,4,72],[6,73,4,73,"indexOf"],[6,80,4,80],[6,81,4,81,"p"],[6,82,4,82],[6,83,4,83],[6,86,4,86],[6,87,4,87],[6,89,5,8,"t"],[6,90,5,9],[6,91,5,10,"p"],[6,92,5,11],[6,93,5,12],[6,96,5,15,"s"],[6,97,5,16],[6,98,5,17,"p"],[6,99,5,18],[6,100,5,19],[7,4,6,4],[7,8,6,8,"s"],[7,9,6,9],[7,13,6,13],[7,17,6,17],[7,21,6,21],[7,28,6,28,"Object"],[7,34,6,34],[7,35,6,35,"getOwnPropertySymbols"],[7,56,6,56],[7,61,6,61],[7,71,6,71],[7,73,7,8],[7,78,7,13],[7,82,7,17,"i"],[7,83,7,18],[7,86,7,21],[7,87,7,22],[7,89,7,24,"p"],[7,90,7,25],[7,93,7,28,"Object"],[7,99,7,34],[7,100,7,35,"getOwnPropertySymbols"],[7,121,7,56],[7,122,7,57,"s"],[7,123,7,58],[7,124,7,59],[7,126,7,61,"i"],[7,127,7,62],[7,130,7,65,"p"],[7,131,7,66],[7,132,7,67,"length"],[7,138,7,73],[7,140,7,75,"i"],[7,141,7,76],[7,143,7,78],[7,145,7,80],[8,6,8,12],[8,10,8,16,"e"],[8,11,8,17],[8,12,8,18,"indexOf"],[8,19,8,25],[8,20,8,26,"p"],[8,21,8,27],[8,22,8,28,"i"],[8,23,8,29],[8,24,8,30],[8,25,8,31],[8,28,8,34],[8,29,8,35],[8,33,8,39,"Object"],[8,39,8,45],[8,40,8,46,"prototype"],[8,49,8,55],[8,50,8,56,"propertyIsEnumerable"],[8,70,8,76],[8,71,8,77,"call"],[8,75,8,81],[8,76,8,82,"s"],[8,77,8,83],[8,79,8,85,"p"],[8,80,8,86],[8,81,8,87,"i"],[8,82,8,88],[8,83,8,89],[8,84,8,90],[8,86,9,16,"t"],[8,87,9,17],[8,88,9,18,"p"],[8,89,9,19],[8,90,9,20,"i"],[8,91,9,21],[8,92,9,22],[8,93,9,23],[8,96,9,26,"s"],[8,97,9,27],[8,98,9,28,"p"],[8,99,9,29],[8,100,9,30,"i"],[8,101,9,31],[8,102,9,32],[8,103,9,33],[9,4,10,8],[10,4,11,4],[10,11,11,11,"t"],[10,12,11,12],[11,2,12,0],[11,3,12,1],[12,2,13,0,"Object"],[12,8,13,6],[12,9,13,7,"defineProperty"],[12,23,13,21],[12,24,13,22,"exports"],[12,31,13,29],[12,33,13,31],[12,45,13,43],[12,47,13,45],[13,4,13,47,"value"],[13,9,13,52],[13,11,13,54],[14,2,13,59],[14,3,13,60],[14,4,13,61],[15,2,14,0],[15,8,14,6,"fetch_1"],[15,15,14,13],[15,18,14,16,"require"],[15,25,14,23],[15,26,14,23,"_dependencyMap"],[15,40,14,23],[15,58,14,37],[15,59,14,38],[16,2,15,0],[16,8,15,6,"helpers_1"],[16,17,15,15],[16,20,15,18,"require"],[16,27,15,25],[16,28,15,25,"_dependencyMap"],[16,42,15,25],[16,62,15,41],[16,63,15,42],[17,2,16,0],[17,8,16,6,"types_1"],[17,15,16,13],[17,18,16,16,"require"],[17,25,16,23],[17,26,16,23,"_dependencyMap"],[17,40,16,23],[17,58,16,37],[17,59,16,38],[18,2,17,0],[18,8,17,6,"errors_1"],[18,16,17,14],[18,19,17,17,"require"],[18,26,17,24],[18,27,17,24,"_dependencyMap"],[18,41,17,24],[18,60,17,39],[18,61,17,40],[19,2,18,0],[19,8,18,6,"GoTrueAdminApi"],[19,22,18,20],[19,23,18,21],[20,4,19,4,"constructor"],[20,15,19,15,"constructor"],[20,16,19,16],[21,6,19,18,"url"],[21,9,19,21],[21,12,19,24],[21,14,19,26],[22,6,19,28,"headers"],[22,13,19,35],[22,16,19,38],[22,17,19,39],[22,18,19,40],[23,6,19,42,"fetch"],[24,4,19,49],[24,5,19,50],[24,7,19,52],[25,6,20,8],[25,10,20,12],[25,11,20,13,"url"],[25,14,20,16],[25,17,20,19,"url"],[25,20,20,22],[26,6,21,8],[26,10,21,12],[26,11,21,13,"headers"],[26,18,21,20],[26,21,21,23,"headers"],[26,28,21,30],[27,6,22,8],[27,10,22,12],[27,11,22,13,"fetch"],[27,16,22,18],[27,19,22,21],[27,20,22,22],[27,21,22,23],[27,23,22,25,"helpers_1"],[27,32,22,34],[27,33,22,35,"resolveFetch"],[27,45,22,47],[27,47,22,49,"fetch"],[27,52,22,54],[27,53,22,55],[28,6,23,8],[28,10,23,12],[28,11,23,13,"mfa"],[28,14,23,16],[28,17,23,19],[29,8,24,12,"listFactors"],[29,19,24,23],[29,21,24,25],[29,25,24,29],[29,26,24,30,"_listFactors"],[29,38,24,42],[29,39,24,43,"bind"],[29,43,24,47],[29,44,24,48],[29,48,24,52],[29,49,24,53],[30,8,25,12,"deleteFactor"],[30,20,25,24],[30,22,25,26],[30,26,25,30],[30,27,25,31,"_deleteFactor"],[30,40,25,44],[30,41,25,45,"bind"],[30,45,25,49],[30,46,25,50],[30,50,25,54],[31,6,26,8],[31,7,26,9],[32,4,27,4],[33,4,28,4],[34,0,29,0],[35,0,30,0],[36,0,31,0],[37,0,32,0],[38,4,33,4],[38,10,33,10,"signOut"],[38,17,33,17,"signOut"],[38,18,33,18,"jwt"],[38,21,33,21],[38,23,33,23,"scope"],[38,28,33,28],[38,31,33,31,"types_1"],[38,38,33,38],[38,39,33,39,"SIGN_OUT_SCOPES"],[38,54,33,54],[38,55,33,55],[38,56,33,56],[38,57,33,57],[38,59,33,59],[39,6,34,8],[39,10,34,12,"types_1"],[39,17,34,19],[39,18,34,20,"SIGN_OUT_SCOPES"],[39,33,34,35],[39,34,34,36,"indexOf"],[39,41,34,43],[39,42,34,44,"scope"],[39,47,34,49],[39,48,34,50],[39,51,34,53],[39,52,34,54],[39,54,34,56],[40,8,35,12],[40,14,35,18],[40,18,35,22,"Error"],[40,23,35,27],[40,24,35,28],[40,77,35,81,"types_1"],[40,84,35,88],[40,85,35,89,"SIGN_OUT_SCOPES"],[40,100,35,104],[40,101,35,105,"join"],[40,105,35,109],[40,106,35,110],[40,110,35,114],[40,111,35,115],[40,113,35,117],[40,114,35,118],[41,6,36,8],[42,6,37,8],[42,10,37,12],[43,8,38,12],[43,14,38,18],[43,15,38,19],[43,16,38,20],[43,18,38,22,"fetch_1"],[43,25,38,29],[43,26,38,30,"_request"],[43,34,38,38],[43,36,38,40],[43,40,38,44],[43,41,38,45,"fetch"],[43,46,38,50],[43,48,38,52],[43,54,38,58],[43,56,38,60],[43,59,38,63],[43,63,38,67],[43,64,38,68,"url"],[43,67,38,71],[43,84,38,88,"scope"],[43,89,38,93],[43,91,38,95],[43,93,38,97],[44,10,39,16,"headers"],[44,17,39,23],[44,19,39,25],[44,23,39,29],[44,24,39,30,"headers"],[44,31,39,37],[45,10,40,16,"jwt"],[45,13,40,19],[46,10,41,16,"noResolveJson"],[46,23,41,29],[46,25,41,31],[47,8,42,12],[47,9,42,13],[47,10,42,14],[48,8,43,12],[48,15,43,19],[49,10,43,21,"data"],[49,14,43,25],[49,16,43,27],[49,20,43,31],[50,10,43,33,"error"],[50,15,43,38],[50,17,43,40],[51,8,43,45],[51,9,43,46],[52,6,44,8],[52,7,44,9],[52,8,45,8],[52,15,45,15,"error"],[52,20,45,20],[52,22,45,22],[53,8,46,12],[53,12,46,16],[53,13,46,17],[53,14,46,18],[53,16,46,20,"errors_1"],[53,24,46,28],[53,25,46,29,"isAuthError"],[53,36,46,40],[53,38,46,42,"error"],[53,43,46,47],[53,44,46,48],[53,46,46,50],[54,10,47,16],[54,17,47,23],[55,12,47,25,"data"],[55,16,47,29],[55,18,47,31],[55,22,47,35],[56,12,47,37,"error"],[57,10,47,43],[57,11,47,44],[58,8,48,12],[59,8,49,12],[59,14,49,18,"error"],[59,19,49,23],[60,6,50,8],[61,4,51,4],[62,4,52,4],[63,0,53,0],[64,0,54,0],[65,0,55,0],[66,0,56,0],[67,4,57,4],[67,10,57,10,"inviteUserByEmail"],[67,27,57,27,"inviteUserByEmail"],[67,28,57,28,"email"],[67,33,57,33],[67,35,57,35,"options"],[67,42,57,42],[67,45,57,45],[67,46,57,46],[67,47,57,47],[67,49,57,49],[68,6,58,8],[68,10,58,12],[69,8,59,12],[69,15,59,19],[69,21,59,25],[69,22,59,26],[69,23,59,27],[69,25,59,29,"fetch_1"],[69,32,59,36],[69,33,59,37,"_request"],[69,41,59,45],[69,43,59,47],[69,47,59,51],[69,48,59,52,"fetch"],[69,53,59,57],[69,55,59,59],[69,61,59,65],[69,63,59,67],[69,66,59,70],[69,70,59,74],[69,71,59,75,"url"],[69,74,59,78],[69,83,59,87],[69,85,59,89],[70,10,60,16,"body"],[70,14,60,20],[70,16,60,22],[71,12,60,24,"email"],[71,17,60,29],[72,12,60,31,"data"],[72,16,60,35],[72,18,60,37,"options"],[72,25,60,44],[72,26,60,45,"data"],[73,10,60,50],[73,11,60,51],[74,10,61,16,"headers"],[74,17,61,23],[74,19,61,25],[74,23,61,29],[74,24,61,30,"headers"],[74,31,61,37],[75,10,62,16,"redirectTo"],[75,20,62,26],[75,22,62,28,"options"],[75,29,62,35],[75,30,62,36,"redirectTo"],[75,40,62,46],[76,10,63,16,"xform"],[76,15,63,21],[76,17,63,23,"fetch_1"],[76,24,63,30],[76,25,63,31,"_userResponse"],[77,8,64,12],[77,9,64,13],[77,10,64,14],[78,6,65,8],[78,7,65,9],[78,8,66,8],[78,15,66,15,"error"],[78,20,66,20],[78,22,66,22],[79,8,67,12],[79,12,67,16],[79,13,67,17],[79,14,67,18],[79,16,67,20,"errors_1"],[79,24,67,28],[79,25,67,29,"isAuthError"],[79,36,67,40],[79,38,67,42,"error"],[79,43,67,47],[79,44,67,48],[79,46,67,50],[80,10,68,16],[80,17,68,23],[81,12,68,25,"data"],[81,16,68,29],[81,18,68,31],[82,14,68,33,"user"],[82,18,68,37],[82,20,68,39],[83,12,68,44],[83,13,68,45],[84,12,68,47,"error"],[85,10,68,53],[85,11,68,54],[86,8,69,12],[87,8,70,12],[87,14,70,18,"error"],[87,19,70,23],[88,6,71,8],[89,4,72,4],[90,4,73,4],[91,0,74,0],[92,0,75,0],[93,0,76,0],[94,0,77,0],[95,0,78,0],[96,0,79,0],[97,4,80,4],[97,10,80,10,"generateLink"],[97,22,80,22,"generateLink"],[97,23,80,23,"params"],[97,29,80,29],[97,31,80,31],[98,6,81,8],[98,10,81,12],[99,8,82,12],[99,14,82,18],[100,12,82,20,"options"],[101,10,82,28],[101,11,82,29],[101,14,82,32,"params"],[101,20,82,38],[102,10,82,40,"rest"],[102,14,82,44],[102,17,82,47,"__rest"],[102,23,82,53],[102,24,82,54,"params"],[102,30,82,60],[102,32,82,62],[102,33,82,63],[102,42,82,72],[102,43,82,73],[102,44,82,74],[103,8,83,12],[103,14,83,18,"body"],[103,18,83,22],[103,21,83,25,"Object"],[103,27,83,31],[103,28,83,32,"assign"],[103,34,83,38],[103,35,83,39,"Object"],[103,41,83,45],[103,42,83,46,"assign"],[103,48,83,52],[103,49,83,53],[103,50,83,54],[103,51,83,55],[103,53,83,57,"rest"],[103,57,83,61],[103,58,83,62],[103,60,83,64,"options"],[103,67,83,71],[103,68,83,72],[104,8,84,12],[104,12,84,16],[104,22,84,26],[104,26,84,30,"rest"],[104,30,84,34],[104,32,84,36],[105,10,85,16],[106,10,86,16,"body"],[106,14,86,20],[106,15,86,21,"new_email"],[106,24,86,30],[106,27,86,33,"rest"],[106,31,86,37],[106,36,86,42],[106,40,86,46],[106,44,86,50,"rest"],[106,48,86,54],[106,53,86,59],[106,58,86,64],[106,59,86,65],[106,62,86,68],[106,67,86,73],[106,68,86,74],[106,71,86,77,"rest"],[106,75,86,81],[106,76,86,82,"newEmail"],[106,84,86,90],[107,10,87,16],[107,17,87,23,"body"],[107,21,87,27],[107,22,87,28],[107,32,87,38],[107,33,87,39],[108,8,88,12],[109,8,89,12],[109,15,89,19],[109,21,89,25],[109,22,89,26],[109,23,89,27],[109,25,89,29,"fetch_1"],[109,32,89,36],[109,33,89,37,"_request"],[109,41,89,45],[109,43,89,47],[109,47,89,51],[109,48,89,52,"fetch"],[109,53,89,57],[109,55,89,59],[109,61,89,65],[109,63,89,67],[109,66,89,70],[109,70,89,74],[109,71,89,75,"url"],[109,74,89,78],[109,96,89,100],[109,98,89,102],[110,10,90,16,"body"],[110,14,90,20],[110,16,90,22,"body"],[110,20,90,26],[111,10,91,16,"headers"],[111,17,91,23],[111,19,91,25],[111,23,91,29],[111,24,91,30,"headers"],[111,31,91,37],[112,10,92,16,"xform"],[112,15,92,21],[112,17,92,23,"fetch_1"],[112,24,92,30],[112,25,92,31,"_generateLinkResponse"],[112,46,92,52],[113,10,93,16,"redirectTo"],[113,20,93,26],[113,22,93,28,"options"],[113,29,93,35],[113,34,93,40],[113,38,93,44],[113,42,93,48,"options"],[113,49,93,55],[113,54,93,60],[113,59,93,65],[113,60,93,66],[113,63,93,69],[113,68,93,74],[113,69,93,75],[113,72,93,78,"options"],[113,79,93,85],[113,80,93,86,"redirectTo"],[114,8,94,12],[114,9,94,13],[114,10,94,14],[115,6,95,8],[115,7,95,9],[115,8,96,8],[115,15,96,15,"error"],[115,20,96,20],[115,22,96,22],[116,8,97,12],[116,12,97,16],[116,13,97,17],[116,14,97,18],[116,16,97,20,"errors_1"],[116,24,97,28],[116,25,97,29,"isAuthError"],[116,36,97,40],[116,38,97,42,"error"],[116,43,97,47],[116,44,97,48],[116,46,97,50],[117,10,98,16],[117,17,98,23],[118,12,99,20,"data"],[118,16,99,24],[118,18,99,26],[119,14,100,24,"properties"],[119,24,100,34],[119,26,100,36],[119,30,100,40],[120,14,101,24,"user"],[120,18,101,28],[120,20,101,30],[121,12,102,20],[121,13,102,21],[122,12,103,20,"error"],[123,10,104,16],[123,11,104,17],[124,8,105,12],[125,8,106,12],[125,14,106,18,"error"],[125,19,106,23],[126,6,107,8],[127,4,108,4],[128,4,109,4],[129,4,110,4],[130,0,111,0],[131,0,112,0],[132,0,113,0],[133,4,114,4],[133,10,114,10,"createUser"],[133,20,114,20,"createUser"],[133,21,114,21,"attributes"],[133,31,114,31],[133,33,114,33],[134,6,115,8],[134,10,115,12],[135,8,116,12],[135,15,116,19],[135,21,116,25],[135,22,116,26],[135,23,116,27],[135,25,116,29,"fetch_1"],[135,32,116,36],[135,33,116,37,"_request"],[135,41,116,45],[135,43,116,47],[135,47,116,51],[135,48,116,52,"fetch"],[135,53,116,57],[135,55,116,59],[135,61,116,65],[135,63,116,67],[135,66,116,70],[135,70,116,74],[135,71,116,75,"url"],[135,74,116,78],[135,88,116,92],[135,90,116,94],[136,10,117,16,"body"],[136,14,117,20],[136,16,117,22,"attributes"],[136,26,117,32],[137,10,118,16,"headers"],[137,17,118,23],[137,19,118,25],[137,23,118,29],[137,24,118,30,"headers"],[137,31,118,37],[138,10,119,16,"xform"],[138,15,119,21],[138,17,119,23,"fetch_1"],[138,24,119,30],[138,25,119,31,"_userResponse"],[139,8,120,12],[139,9,120,13],[139,10,120,14],[140,6,121,8],[140,7,121,9],[140,8,122,8],[140,15,122,15,"error"],[140,20,122,20],[140,22,122,22],[141,8,123,12],[141,12,123,16],[141,13,123,17],[141,14,123,18],[141,16,123,20,"errors_1"],[141,24,123,28],[141,25,123,29,"isAuthError"],[141,36,123,40],[141,38,123,42,"error"],[141,43,123,47],[141,44,123,48],[141,46,123,50],[142,10,124,16],[142,17,124,23],[143,12,124,25,"data"],[143,16,124,29],[143,18,124,31],[144,14,124,33,"user"],[144,18,124,37],[144,20,124,39],[145,12,124,44],[145,13,124,45],[146,12,124,47,"error"],[147,10,124,53],[147,11,124,54],[148,8,125,12],[149,8,126,12],[149,14,126,18,"error"],[149,19,126,23],[150,6,127,8],[151,4,128,4],[152,4,129,4],[153,0,130,0],[154,0,131,0],[155,0,132,0],[156,0,133,0],[157,0,134,0],[158,4,135,4],[158,10,135,10,"listUsers"],[158,19,135,19,"listUsers"],[158,20,135,20,"params"],[158,26,135,26],[158,28,135,28],[159,6,136,8],[159,10,136,12,"_a"],[159,12,136,14],[159,14,136,16,"_b"],[159,16,136,18],[159,18,136,20,"_c"],[159,20,136,22],[159,22,136,24,"_d"],[159,24,136,26],[159,26,136,28,"_e"],[159,28,136,30],[159,30,136,32,"_f"],[159,32,136,34],[159,34,136,36,"_g"],[159,36,136,38],[160,6,137,8],[160,10,137,12],[161,8,138,12],[161,14,138,18,"pagination"],[161,24,138,28],[161,27,138,31],[162,10,138,33,"nextPage"],[162,18,138,41],[162,20,138,43],[162,24,138,47],[163,10,138,49,"lastPage"],[163,18,138,57],[163,20,138,59],[163,21,138,60],[164,10,138,62,"total"],[164,15,138,67],[164,17,138,69],[165,8,138,71],[165,9,138,72],[166,8,139,12],[166,14,139,18,"response"],[166,22,139,26],[166,25,139,29],[166,31,139,35],[166,32,139,36],[166,33,139,37],[166,35,139,39,"fetch_1"],[166,42,139,46],[166,43,139,47,"_request"],[166,51,139,55],[166,53,139,57],[166,57,139,61],[166,58,139,62,"fetch"],[166,63,139,67],[166,65,139,69],[166,70,139,74],[166,72,139,76],[166,75,139,79],[166,79,139,83],[166,80,139,84,"url"],[166,83,139,87],[166,97,139,101],[166,99,139,103],[167,10,140,16,"headers"],[167,17,140,23],[167,19,140,25],[167,23,140,29],[167,24,140,30,"headers"],[167,31,140,37],[168,10,141,16,"noResolveJson"],[168,23,141,29],[168,25,141,31],[168,29,141,35],[169,10,142,16,"query"],[169,15,142,21],[169,17,142,23],[170,12,143,20,"page"],[170,16,143,24],[170,18,143,26],[170,19,143,27,"_b"],[170,21,143,29],[170,24,143,32],[170,25,143,33,"_a"],[170,27,143,35],[170,30,143,38,"params"],[170,36,143,44],[170,41,143,49],[170,45,143,53],[170,49,143,57,"params"],[170,55,143,63],[170,60,143,68],[170,65,143,73],[170,66,143,74],[170,69,143,77],[170,74,143,82],[170,75,143,83],[170,78,143,86,"params"],[170,84,143,92],[170,85,143,93,"page"],[170,89,143,97],[170,95,143,103],[170,99,143,107],[170,103,143,111,"_a"],[170,105,143,113],[170,110,143,118],[170,115,143,123],[170,116,143,124],[170,119,143,127],[170,124,143,132],[170,125,143,133],[170,128,143,136,"_a"],[170,130,143,138],[170,131,143,139,"toString"],[170,139,143,147],[170,140,143,148],[170,141,143,149],[170,147,143,155],[170,151,143,159],[170,155,143,163,"_b"],[170,157,143,165],[170,162,143,170],[170,167,143,175],[170,168,143,176],[170,171,143,179,"_b"],[170,173,143,181],[170,176,143,184],[170,178,143,186],[171,12,144,20,"per_page"],[171,20,144,28],[171,22,144,30],[171,23,144,31,"_d"],[171,25,144,33],[171,28,144,36],[171,29,144,37,"_c"],[171,31,144,39],[171,34,144,42,"params"],[171,40,144,48],[171,45,144,53],[171,49,144,57],[171,53,144,61,"params"],[171,59,144,67],[171,64,144,72],[171,69,144,77],[171,70,144,78],[171,73,144,81],[171,78,144,86],[171,79,144,87],[171,82,144,90,"params"],[171,88,144,96],[171,89,144,97,"perPage"],[171,96,144,104],[171,102,144,110],[171,106,144,114],[171,110,144,118,"_c"],[171,112,144,120],[171,117,144,125],[171,122,144,130],[171,123,144,131],[171,126,144,134],[171,131,144,139],[171,132,144,140],[171,135,144,143,"_c"],[171,137,144,145],[171,138,144,146,"toString"],[171,146,144,154],[171,147,144,155],[171,148,144,156],[171,154,144,162],[171,158,144,166],[171,162,144,170,"_d"],[171,164,144,172],[171,169,144,177],[171,174,144,182],[171,175,144,183],[171,178,144,186,"_d"],[171,180,144,188],[171,183,144,191],[172,10,145,16],[172,11,145,17],[173,10,146,16,"xform"],[173,15,146,21],[173,17,146,23,"fetch_1"],[173,24,146,30],[173,25,146,31,"_noResolveJsonResponse"],[174,8,147,12],[174,9,147,13],[174,10,147,14],[175,8,148,12],[175,12,148,16,"response"],[175,20,148,24],[175,21,148,25,"error"],[175,26,148,30],[175,28,149,16],[175,34,149,22,"response"],[175,42,149,30],[175,43,149,31,"error"],[175,48,149,36],[176,8,150,12],[176,14,150,18,"users"],[176,19,150,23],[176,22,150,26],[176,28,150,32,"response"],[176,36,150,40],[176,37,150,41,"json"],[176,41,150,45],[176,42,150,46],[176,43,150,47],[177,8,151,12],[177,14,151,18,"total"],[177,19,151,23],[177,22,151,26],[177,23,151,27,"_e"],[177,25,151,29],[177,28,151,32,"response"],[177,36,151,40],[177,37,151,41,"headers"],[177,44,151,48],[177,45,151,49,"get"],[177,48,151,52],[177,49,151,53],[177,64,151,68],[177,65,151,69],[177,71,151,75],[177,75,151,79],[177,79,151,83,"_e"],[177,81,151,85],[177,86,151,90],[177,91,151,95],[177,92,151,96],[177,95,151,99,"_e"],[177,97,151,101],[177,100,151,104],[177,101,151,105],[178,8,152,12],[178,14,152,18,"links"],[178,19,152,23],[178,22,152,26],[178,23,152,27,"_g"],[178,25,152,29],[178,28,152,32],[178,29,152,33,"_f"],[178,31,152,35],[178,34,152,38,"response"],[178,42,152,46],[178,43,152,47,"headers"],[178,50,152,54],[178,51,152,55,"get"],[178,54,152,58],[178,55,152,59],[178,61,152,65],[178,62,152,66],[178,68,152,72],[178,72,152,76],[178,76,152,80,"_f"],[178,78,152,82],[178,83,152,87],[178,88,152,92],[178,89,152,93],[178,92,152,96],[178,97,152,101],[178,98,152,102],[178,101,152,105,"_f"],[178,103,152,107],[178,104,152,108,"split"],[178,109,152,113],[178,110,152,114],[178,113,152,117],[178,114,152,118],[178,120,152,124],[178,124,152,128],[178,128,152,132,"_g"],[178,130,152,134],[178,135,152,139],[178,140,152,144],[178,141,152,145],[178,144,152,148,"_g"],[178,146,152,150],[178,149,152,153],[178,151,152,155],[179,8,153,12],[179,12,153,16,"links"],[179,17,153,21],[179,18,153,22,"length"],[179,24,153,28],[179,27,153,31],[179,28,153,32],[179,30,153,34],[180,10,154,16,"links"],[180,15,154,21],[180,16,154,22,"forEach"],[180,23,154,29],[180,24,154,31,"link"],[180,28,154,35],[180,32,154,40],[181,12,155,20],[181,18,155,26,"page"],[181,22,155,30],[181,25,155,33,"parseInt"],[181,33,155,41],[181,34,155,42,"link"],[181,38,155,46],[181,39,155,47,"split"],[181,44,155,52],[181,45,155,53],[181,48,155,56],[181,49,155,57],[181,50,155,58],[181,51,155,59],[181,52,155,60],[181,53,155,61,"split"],[181,58,155,66],[181,59,155,67],[181,62,155,70],[181,63,155,71],[181,64,155,72],[181,65,155,73],[181,66,155,74],[181,67,155,75,"substring"],[181,76,155,84],[181,77,155,85],[181,78,155,86],[181,80,155,88],[181,81,155,89],[181,82,155,90],[181,83,155,91],[182,12,156,20],[182,18,156,26,"rel"],[182,21,156,29],[182,24,156,32,"JSON"],[182,28,156,36],[182,29,156,37,"parse"],[182,34,156,42],[182,35,156,43,"link"],[182,39,156,47],[182,40,156,48,"split"],[182,45,156,53],[182,46,156,54],[182,49,156,57],[182,50,156,58],[182,51,156,59],[182,52,156,60],[182,53,156,61],[182,54,156,62,"split"],[182,59,156,67],[182,60,156,68],[182,63,156,71],[182,64,156,72],[182,65,156,73],[182,66,156,74],[182,67,156,75],[182,68,156,76],[183,12,157,20,"pagination"],[183,22,157,30],[183,23,157,31],[183,26,157,34,"rel"],[183,29,157,37],[183,35,157,43],[183,36,157,44],[183,39,157,47,"page"],[183,43,157,51],[184,10,158,16],[184,11,158,17],[184,12,158,18],[185,10,159,16,"pagination"],[185,20,159,26],[185,21,159,27,"total"],[185,26,159,32],[185,29,159,35,"parseInt"],[185,37,159,43],[185,38,159,44,"total"],[185,43,159,49],[185,44,159,50],[186,8,160,12],[187,8,161,12],[187,15,161,19],[188,10,161,21,"data"],[188,14,161,25],[188,16,161,27,"Object"],[188,22,161,33],[188,23,161,34,"assign"],[188,29,161,40],[188,30,161,41,"Object"],[188,36,161,47],[188,37,161,48,"assign"],[188,43,161,54],[188,44,161,55],[188,45,161,56],[188,46,161,57],[188,48,161,59,"users"],[188,53,161,64],[188,54,161,65],[188,56,161,67,"pagination"],[188,66,161,77],[188,67,161,78],[189,10,161,80,"error"],[189,15,161,85],[189,17,161,87],[190,8,161,92],[190,9,161,93],[191,6,162,8],[191,7,162,9],[191,8,163,8],[191,15,163,15,"error"],[191,20,163,20],[191,22,163,22],[192,8,164,12],[192,12,164,16],[192,13,164,17],[192,14,164,18],[192,16,164,20,"errors_1"],[192,24,164,28],[192,25,164,29,"isAuthError"],[192,36,164,40],[192,38,164,42,"error"],[192,43,164,47],[192,44,164,48],[192,46,164,50],[193,10,165,16],[193,17,165,23],[194,12,165,25,"data"],[194,16,165,29],[194,18,165,31],[195,14,165,33,"users"],[195,19,165,38],[195,21,165,40],[196,12,165,43],[196,13,165,44],[197,12,165,46,"error"],[198,10,165,52],[198,11,165,53],[199,8,166,12],[200,8,167,12],[200,14,167,18,"error"],[200,19,167,23],[201,6,168,8],[202,4,169,4],[203,4,170,4],[204,0,171,0],[205,0,172,0],[206,0,173,0],[207,0,174,0],[208,0,175,0],[209,0,176,0],[210,4,177,4],[210,10,177,10,"getUserById"],[210,21,177,21,"getUserById"],[210,22,177,22,"uid"],[210,25,177,25],[210,27,177,27],[211,6,178,8],[211,7,178,9],[211,8,178,10],[211,10,178,12,"helpers_1"],[211,19,178,21],[211,20,178,22,"validateUUID"],[211,32,178,34],[211,34,178,36,"uid"],[211,37,178,39],[211,38,178,40],[212,6,179,8],[212,10,179,12],[213,8,180,12],[213,15,180,19],[213,21,180,25],[213,22,180,26],[213,23,180,27],[213,25,180,29,"fetch_1"],[213,32,180,36],[213,33,180,37,"_request"],[213,41,180,45],[213,43,180,47],[213,47,180,51],[213,48,180,52,"fetch"],[213,53,180,57],[213,55,180,59],[213,60,180,64],[213,62,180,66],[213,65,180,69],[213,69,180,73],[213,70,180,74,"url"],[213,73,180,77],[213,89,180,93,"uid"],[213,92,180,96],[213,94,180,98],[213,96,180,100],[214,10,181,16,"headers"],[214,17,181,23],[214,19,181,25],[214,23,181,29],[214,24,181,30,"headers"],[214,31,181,37],[215,10,182,16,"xform"],[215,15,182,21],[215,17,182,23,"fetch_1"],[215,24,182,30],[215,25,182,31,"_userResponse"],[216,8,183,12],[216,9,183,13],[216,10,183,14],[217,6,184,8],[217,7,184,9],[217,8,185,8],[217,15,185,15,"error"],[217,20,185,20],[217,22,185,22],[218,8,186,12],[218,12,186,16],[218,13,186,17],[218,14,186,18],[218,16,186,20,"errors_1"],[218,24,186,28],[218,25,186,29,"isAuthError"],[218,36,186,40],[218,38,186,42,"error"],[218,43,186,47],[218,44,186,48],[218,46,186,50],[219,10,187,16],[219,17,187,23],[220,12,187,25,"data"],[220,16,187,29],[220,18,187,31],[221,14,187,33,"user"],[221,18,187,37],[221,20,187,39],[222,12,187,44],[222,13,187,45],[223,12,187,47,"error"],[224,10,187,53],[224,11,187,54],[225,8,188,12],[226,8,189,12],[226,14,189,18,"error"],[226,19,189,23],[227,6,190,8],[228,4,191,4],[229,4,192,4],[230,0,193,0],[231,0,194,0],[232,0,195,0],[233,0,196,0],[234,0,197,0],[235,0,198,0],[236,4,199,4],[236,10,199,10,"updateUserById"],[236,24,199,24,"updateUserById"],[236,25,199,25,"uid"],[236,28,199,28],[236,30,199,30,"attributes"],[236,40,199,40],[236,42,199,42],[237,6,200,8],[237,7,200,9],[237,8,200,10],[237,10,200,12,"helpers_1"],[237,19,200,21],[237,20,200,22,"validateUUID"],[237,32,200,34],[237,34,200,36,"uid"],[237,37,200,39],[237,38,200,40],[238,6,201,8],[238,10,201,12],[239,8,202,12],[239,15,202,19],[239,21,202,25],[239,22,202,26],[239,23,202,27],[239,25,202,29,"fetch_1"],[239,32,202,36],[239,33,202,37,"_request"],[239,41,202,45],[239,43,202,47],[239,47,202,51],[239,48,202,52,"fetch"],[239,53,202,57],[239,55,202,59],[239,60,202,64],[239,62,202,66],[239,65,202,69],[239,69,202,73],[239,70,202,74,"url"],[239,73,202,77],[239,89,202,93,"uid"],[239,92,202,96],[239,94,202,98],[239,96,202,100],[240,10,203,16,"body"],[240,14,203,20],[240,16,203,22,"attributes"],[240,26,203,32],[241,10,204,16,"headers"],[241,17,204,23],[241,19,204,25],[241,23,204,29],[241,24,204,30,"headers"],[241,31,204,37],[242,10,205,16,"xform"],[242,15,205,21],[242,17,205,23,"fetch_1"],[242,24,205,30],[242,25,205,31,"_userResponse"],[243,8,206,12],[243,9,206,13],[243,10,206,14],[244,6,207,8],[244,7,207,9],[244,8,208,8],[244,15,208,15,"error"],[244,20,208,20],[244,22,208,22],[245,8,209,12],[245,12,209,16],[245,13,209,17],[245,14,209,18],[245,16,209,20,"errors_1"],[245,24,209,28],[245,25,209,29,"isAuthError"],[245,36,209,40],[245,38,209,42,"error"],[245,43,209,47],[245,44,209,48],[245,46,209,50],[246,10,210,16],[246,17,210,23],[247,12,210,25,"data"],[247,16,210,29],[247,18,210,31],[248,14,210,33,"user"],[248,18,210,37],[248,20,210,39],[249,12,210,44],[249,13,210,45],[250,12,210,47,"error"],[251,10,210,53],[251,11,210,54],[252,8,211,12],[253,8,212,12],[253,14,212,18,"error"],[253,19,212,23],[254,6,213,8],[255,4,214,4],[256,4,215,4],[257,0,216,0],[258,0,217,0],[259,0,218,0],[260,0,219,0],[261,0,220,0],[262,0,221,0],[263,0,222,0],[264,0,223,0],[265,4,224,4],[265,10,224,10,"deleteUser"],[265,20,224,20,"deleteUser"],[265,21,224,21,"id"],[265,23,224,23],[265,25,224,25,"shouldSoftDelete"],[265,41,224,41],[265,44,224,44],[265,49,224,49],[265,51,224,51],[266,6,225,8],[266,7,225,9],[266,8,225,10],[266,10,225,12,"helpers_1"],[266,19,225,21],[266,20,225,22,"validateUUID"],[266,32,225,34],[266,34,225,36,"id"],[266,36,225,38],[266,37,225,39],[267,6,226,8],[267,10,226,12],[268,8,227,12],[268,15,227,19],[268,21,227,25],[268,22,227,26],[268,23,227,27],[268,25,227,29,"fetch_1"],[268,32,227,36],[268,33,227,37,"_request"],[268,41,227,45],[268,43,227,47],[268,47,227,51],[268,48,227,52,"fetch"],[268,53,227,57],[268,55,227,59],[268,63,227,67],[268,65,227,69],[268,68,227,72],[268,72,227,76],[268,73,227,77,"url"],[268,76,227,80],[268,92,227,96,"id"],[268,94,227,98],[268,96,227,100],[268,98,227,102],[269,10,228,16,"headers"],[269,17,228,23],[269,19,228,25],[269,23,228,29],[269,24,228,30,"headers"],[269,31,228,37],[270,10,229,16,"body"],[270,14,229,20],[270,16,229,22],[271,12,230,20,"should_soft_delete"],[271,30,230,38],[271,32,230,40,"shouldSoftDelete"],[272,10,231,16],[272,11,231,17],[273,10,232,16,"xform"],[273,15,232,21],[273,17,232,23,"fetch_1"],[273,24,232,30],[273,25,232,31,"_userResponse"],[274,8,233,12],[274,9,233,13],[274,10,233,14],[275,6,234,8],[275,7,234,9],[275,8,235,8],[275,15,235,15,"error"],[275,20,235,20],[275,22,235,22],[276,8,236,12],[276,12,236,16],[276,13,236,17],[276,14,236,18],[276,16,236,20,"errors_1"],[276,24,236,28],[276,25,236,29,"isAuthError"],[276,36,236,40],[276,38,236,42,"error"],[276,43,236,47],[276,44,236,48],[276,46,236,50],[277,10,237,16],[277,17,237,23],[278,12,237,25,"data"],[278,16,237,29],[278,18,237,31],[279,14,237,33,"user"],[279,18,237,37],[279,20,237,39],[280,12,237,44],[280,13,237,45],[281,12,237,47,"error"],[282,10,237,53],[282,11,237,54],[283,8,238,12],[284,8,239,12],[284,14,239,18,"error"],[284,19,239,23],[285,6,240,8],[286,4,241,4],[287,4,242,4],[287,10,242,10,"_listFactors"],[287,22,242,22,"_listFactors"],[287,23,242,23,"params"],[287,29,242,29],[287,31,242,31],[288,6,243,8],[288,7,243,9],[288,8,243,10],[288,10,243,12,"helpers_1"],[288,19,243,21],[288,20,243,22,"validateUUID"],[288,32,243,34],[288,34,243,36,"params"],[288,40,243,42],[288,41,243,43,"userId"],[288,47,243,49],[288,48,243,50],[289,6,244,8],[289,10,244,12],[290,8,245,12],[290,14,245,18],[291,10,245,20,"data"],[291,14,245,24],[292,10,245,26,"error"],[293,8,245,32],[293,9,245,33],[293,12,245,36],[293,18,245,42],[293,19,245,43],[293,20,245,44],[293,22,245,46,"fetch_1"],[293,29,245,53],[293,30,245,54,"_request"],[293,38,245,62],[293,40,245,64],[293,44,245,68],[293,45,245,69,"fetch"],[293,50,245,74],[293,52,245,76],[293,57,245,81],[293,59,245,83],[293,62,245,86],[293,66,245,90],[293,67,245,91,"url"],[293,70,245,94],[293,86,245,110,"params"],[293,92,245,116],[293,93,245,117,"userId"],[293,99,245,123],[293,109,245,133],[293,111,245,135],[294,10,246,16,"headers"],[294,17,246,23],[294,19,246,25],[294,23,246,29],[294,24,246,30,"headers"],[294,31,246,37],[295,10,247,16,"xform"],[295,15,247,21],[295,17,247,24,"factors"],[295,24,247,31],[295,28,247,36],[296,12,248,20],[296,19,248,27],[297,14,248,29,"data"],[297,18,248,33],[297,20,248,35],[298,16,248,37,"factors"],[299,14,248,45],[299,15,248,46],[300,14,248,48,"error"],[300,19,248,53],[300,21,248,55],[301,12,248,60],[301,13,248,61],[302,10,249,16],[303,8,250,12],[303,9,250,13],[303,10,250,14],[304,8,251,12],[304,15,251,19],[305,10,251,21,"data"],[305,14,251,25],[306,10,251,27,"error"],[307,8,251,33],[307,9,251,34],[308,6,252,8],[308,7,252,9],[308,8,253,8],[308,15,253,15,"error"],[308,20,253,20],[308,22,253,22],[309,8,254,12],[309,12,254,16],[309,13,254,17],[309,14,254,18],[309,16,254,20,"errors_1"],[309,24,254,28],[309,25,254,29,"isAuthError"],[309,36,254,40],[309,38,254,42,"error"],[309,43,254,47],[309,44,254,48],[309,46,254,50],[310,10,255,16],[310,17,255,23],[311,12,255,25,"data"],[311,16,255,29],[311,18,255,31],[311,22,255,35],[312,12,255,37,"error"],[313,10,255,43],[313,11,255,44],[314,8,256,12],[315,8,257,12],[315,14,257,18,"error"],[315,19,257,23],[316,6,258,8],[317,4,259,4],[318,4,260,4],[318,10,260,10,"_deleteFactor"],[318,23,260,23,"_deleteFactor"],[318,24,260,24,"params"],[318,30,260,30],[318,32,260,32],[319,6,261,8],[319,7,261,9],[319,8,261,10],[319,10,261,12,"helpers_1"],[319,19,261,21],[319,20,261,22,"validateUUID"],[319,32,261,34],[319,34,261,36,"params"],[319,40,261,42],[319,41,261,43,"userId"],[319,47,261,49],[319,48,261,50],[320,6,262,8],[320,7,262,9],[320,8,262,10],[320,10,262,12,"helpers_1"],[320,19,262,21],[320,20,262,22,"validateUUID"],[320,32,262,34],[320,34,262,36,"params"],[320,40,262,42],[320,41,262,43,"id"],[320,43,262,45],[320,44,262,46],[321,6,263,8],[321,10,263,12],[322,8,264,12],[322,14,264,18,"data"],[322,18,264,22],[322,21,264,25],[322,27,264,31],[322,28,264,32],[322,29,264,33],[322,31,264,35,"fetch_1"],[322,38,264,42],[322,39,264,43,"_request"],[322,47,264,51],[322,49,264,53],[322,53,264,57],[322,54,264,58,"fetch"],[322,59,264,63],[322,61,264,65],[322,69,264,73],[322,71,264,75],[322,74,264,78],[322,78,264,82],[322,79,264,83,"url"],[322,82,264,86],[322,98,264,102,"params"],[322,104,264,108],[322,105,264,109,"userId"],[322,111,264,115],[322,123,264,127,"params"],[322,129,264,133],[322,130,264,134,"id"],[322,132,264,136],[322,134,264,138],[322,136,264,140],[323,10,265,16,"headers"],[323,17,265,23],[323,19,265,25],[323,23,265,29],[323,24,265,30,"headers"],[324,8,266,12],[324,9,266,13],[324,10,266,14],[325,8,267,12],[325,15,267,19],[326,10,267,21,"data"],[326,14,267,25],[327,10,267,27,"error"],[327,15,267,32],[327,17,267,34],[328,8,267,39],[328,9,267,40],[329,6,268,8],[329,7,268,9],[329,8,269,8],[329,15,269,15,"error"],[329,20,269,20],[329,22,269,22],[330,8,270,12],[330,12,270,16],[330,13,270,17],[330,14,270,18],[330,16,270,20,"errors_1"],[330,24,270,28],[330,25,270,29,"isAuthError"],[330,36,270,40],[330,38,270,42,"error"],[330,43,270,47],[330,44,270,48],[330,46,270,50],[331,10,271,16],[331,17,271,23],[332,12,271,25,"data"],[332,16,271,29],[332,18,271,31],[332,22,271,35],[333,12,271,37,"error"],[334,10,271,43],[334,11,271,44],[335,8,272,12],[336,8,273,12],[336,14,273,18,"error"],[336,19,273,23],[337,6,274,8],[338,4,275,4],[339,2,276,0],[340,2,277,0,"exports"],[340,9,277,7],[340,10,277,8,"default"],[340,17,277,15],[340,20,277,18,"GoTrueAdminApi"],[340,34,277,32],[341,0,277,33],[341,3]],"functionMap":{"names":["<global>","<anonymous>","GoTrueAdminApi","constructor","signOut","inviteUserByEmail","generateLink","createUser","listUsers","links.forEach$argument_0","getUserById","updateUserById","deleteUser","_listFactors","xform","_deleteFactor"],"mappings":"AAA;sCCC;CDU;AEM;ICC;KDQ;IEM;KFkB;IGM;KHe;IIQ;KJ4B;IKM;KLc;IMO;8BCmB;iBDI;KNW;IQQ;KRc;ISQ;KTe;IUU;KViB;IWC;uBCK;iBDE;KXU;IaC;Kbe;CFC"},"hasCjsExports":true},"type":"js/module"}]}