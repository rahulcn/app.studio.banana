{"dependencies":[{"name":"expo/virtual/env","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dgHc21cgR+buKc7O3/dChhD5JJk=","exportNames":["*"],"imports":1}},{"name":"react-native-url-polyfill/auto","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":40,"index":40}}],"key":"FjDCbK7LcT49IdUkzoo8Fm4C4ig=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":41},"end":{"line":2,"column":69,"index":110}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}},{"name":"@supabase/supabase-js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":111},"end":{"line":3,"column":53,"index":164}}],"key":"bIfLatK31tbWgCp34BhPDdikyTA=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"supabase\", {\n    enumerable: true,\n    get: function () {\n      return supabase;\n    }\n  });\n  Object.defineProperty(exports, \"SupabaseHelpers\", {\n    enumerable: true,\n    get: function () {\n      return SupabaseHelpers;\n    }\n  });\n  var _expoVirtualEnv = require(_dependencyMap[0], \"expo/virtual/env\");\n  require(_dependencyMap[1], \"react-native-url-polyfill/auto\");\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[2], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  var _supabaseSupabaseJs = require(_dependencyMap[3], \"@supabase/supabase-js\");\n  const supabaseUrl = _expoVirtualEnv.env.EXPO_PUBLIC_SUPABASE_URL;\n  const supabaseAnonKey = _expoVirtualEnv.env.EXPO_PUBLIC_SUPABASE_ANON_KEY;\n  const supabase = (0, _supabaseSupabaseJs.createClient)(supabaseUrl, supabaseAnonKey, {\n    auth: {\n      storage: AsyncStorage.default,\n      autoRefreshToken: true,\n      persistSession: true,\n      detectSessionInUrl: false\n    }\n  });\n\n  // Database types - Updated for migration schema\n\n  // Legacy types (keeping for backward compatibility during migration)\n\n  // ============================================================================\n  // AUTH HELPERS\n  // ============================================================================\n\n  class SupabaseHelpers {\n    static async signUp(email, password, userData) {\n      try {\n        const {\n          data,\n          error\n        } = await supabase.auth.signUp({\n          email,\n          password,\n          options: {\n            data: userData || {}\n          }\n        });\n        return {\n          data,\n          error\n        };\n      } catch (error) {\n        console.error('Sign up error:', error);\n        return {\n          data: null,\n          error\n        };\n      }\n    }\n    static async signIn(email, password) {\n      try {\n        const {\n          data,\n          error\n        } = await supabase.auth.signInWithPassword({\n          email,\n          password\n        });\n        return {\n          data,\n          error\n        };\n      } catch (error) {\n        console.error('Sign in error:', error);\n        return {\n          data: null,\n          error\n        };\n      }\n    }\n    static async signOut() {\n      try {\n        const {\n          error\n        } = await supabase.auth.signOut();\n        return {\n          error\n        };\n      } catch (error) {\n        console.error('Sign out error:', error);\n        return {\n          error\n        };\n      }\n    }\n    static async getCurrentUser() {\n      try {\n        const {\n          data: {\n            user\n          }\n        } = await supabase.auth.getUser();\n        return user;\n      } catch (error) {\n        console.error('Get current user error:', error);\n        return null;\n      }\n    }\n    static async getCurrentSession() {\n      try {\n        const {\n          data: {\n            session\n          }\n        } = await supabase.auth.getSession();\n        return session;\n      } catch (error) {\n        console.error('Get current session error:', error);\n        return null;\n      }\n    }\n\n    // ============================================================================\n    // PROFILE HELPERS\n    // ============================================================================\n\n    static async getProfile(userId) {\n      try {\n        const {\n          data,\n          error\n        } = await supabase.from('profiles').select('*').eq('id', userId).single();\n        if (error) {\n          console.error('Get profile error:', error);\n          return null;\n        }\n        return data;\n      } catch (error) {\n        console.error('Get profile error:', error);\n        return null;\n      }\n    }\n    static async updateProfile(userId, updates) {\n      try {\n        const {\n          data,\n          error\n        } = await supabase.from('profiles').update(updates).eq('id', userId).select().single();\n        return {\n          data,\n          error\n        };\n      } catch (error) {\n        console.error('Update profile error:', error);\n        return {\n          data: null,\n          error\n        };\n      }\n    }\n\n    // ============================================================================\n    // GENERATION HELPERS\n    // ============================================================================\n\n    static async createGeneration(generationData) {\n      try {\n        const {\n          data,\n          error\n        } = await supabase.from('generations').insert(generationData).select().single();\n        return {\n          data,\n          error\n        };\n      } catch (error) {\n        console.error('Create generation error:', error);\n        return {\n          data: null,\n          error\n        };\n      }\n    }\n    static async updateGeneration(generationId, updates) {\n      try {\n        const {\n          data,\n          error\n        } = await supabase.from('generations').update(updates).eq('id', generationId).select().single();\n        return {\n          data,\n          error\n        };\n      } catch (error) {\n        console.error('Update generation error:', error);\n        return {\n          data: null,\n          error\n        };\n      }\n    }\n    static async getUserGenerations(userId, limit = 50, offset = 0) {\n      try {\n        const {\n          data,\n          error\n        } = await supabase.from('generations').select('*').eq('user_id', userId).order('created_at', {\n          ascending: false\n        }).limit(limit).range(offset, offset + limit - 1);\n        if (error) {\n          console.error('Get user generations error:', error);\n          return [];\n        }\n        return data || [];\n      } catch (error) {\n        console.error('Get user generations error:', error);\n        return [];\n      }\n    }\n    static async getPublicGenerations(limit = 50, offset = 0) {\n      try {\n        const {\n          data,\n          error\n        } = await supabase.from('public_gallery').select('*').limit(limit).range(offset, offset + limit - 1);\n        if (error) {\n          console.error('Get public generations error:', error);\n          return [];\n        }\n        return data || [];\n      } catch (error) {\n        console.error('Get public generations error:', error);\n        return [];\n      }\n    }\n\n    // ============================================================================\n    // SUBSCRIPTION HELPERS\n    // ============================================================================\n\n    static async getUserSubscription(userId) {\n      try {\n        const {\n          data,\n          error\n        } = await supabase.from('payment_subscriptions').select('*').eq('user_id', userId).eq('status', 'active').single();\n        if (error) {\n          console.error('Get user subscription error:', error);\n          return null;\n        }\n        return data;\n      } catch (error) {\n        console.error('Get user subscription error:', error);\n        return null;\n      }\n    }\n    static async getUserStats(userId) {\n      try {\n        const {\n          data,\n          error\n        } = await supabase.from('user_stats').select('*').eq('user_id', userId).single();\n        if (error) {\n          console.error('Get user stats error:', error);\n          return null;\n        }\n        return data;\n      } catch (error) {\n        console.error('Get user stats error:', error);\n        return null;\n      }\n    }\n\n    // ============================================================================\n    // STORAGE HELPERS\n    // ============================================================================\n\n    static async uploadImage(bucket, filePath, file, contentType = 'image/jpeg') {\n      try {\n        const {\n          data,\n          error\n        } = await supabase.storage.from(bucket).upload(filePath, file, {\n          contentType,\n          upsert: false\n        });\n        if (error) {\n          console.error('Upload image error:', error);\n          return {\n            data: null,\n            error\n          };\n        }\n\n        // Get public URL\n        const {\n          data: publicUrlData\n        } = supabase.storage.from(bucket).getPublicUrl(filePath);\n        return {\n          data: {\n            ...data,\n            publicUrl: publicUrlData.publicUrl\n          },\n          error: null\n        };\n      } catch (error) {\n        console.error('Upload image error:', error);\n        return {\n          data: null,\n          error\n        };\n      }\n    }\n    static getPublicUrl(bucket, filePath) {\n      try {\n        const {\n          data\n        } = supabase.storage.from(bucket).getPublicUrl(filePath);\n        return data.publicUrl;\n      } catch (error) {\n        console.error('Get public URL error:', error);\n        return '';\n      }\n    }\n  }\n});","lineCount":339,"map":[[12,2,8,0,"Object"],[12,8,8,0],[12,9,8,0,"defineProperty"],[12,23,8,0],[12,24,8,0,"exports"],[12,31,8,0],[13,4,8,0,"enumerable"],[13,14,8,0],[14,4,8,0,"get"],[14,7,8,0],[14,18,8,0,"get"],[14,19,8,0],[15,6,8,0],[15,13,8,0,"supabase"],[15,21,8,0],[16,4,8,0],[17,2,8,0],[18,2,152,0,"Object"],[18,8,152,0],[18,9,152,0,"defineProperty"],[18,23,152,0],[18,24,152,0,"exports"],[18,31,152,0],[19,4,152,0,"enumerable"],[19,14,152,0],[20,4,152,0,"get"],[20,7,152,0],[20,18,152,0,"get"],[20,19,152,0],[21,6,152,0],[21,13,152,0,"SupabaseHelpers"],[21,28,152,0],[22,4,152,0],[23,2,152,0],[24,2,412,1],[24,6,412,1,"_expoVirtualEnv"],[24,21,412,1],[24,24,412,1,"require"],[24,31,412,1],[24,32,412,1,"_dependencyMap"],[24,46,412,1],[25,2,1,0,"require"],[25,9,1,0],[25,10,1,0,"_dependencyMap"],[25,24,1,0],[26,2,2,0],[26,6,2,0,"_reactNativeAsyncStorageAsyncStorage"],[26,42,2,0],[26,45,2,0,"require"],[26,52,2,0],[26,53,2,0,"_dependencyMap"],[26,67,2,0],[27,2,2,0],[27,6,2,0,"AsyncStorage"],[27,18,2,0],[27,21,2,0,"_interopDefault"],[27,36,2,0],[27,37,2,0,"_reactNativeAsyncStorageAsyncStorage"],[27,73,2,0],[28,2,3,0],[28,6,3,0,"_supabaseSupabaseJs"],[28,25,3,0],[28,28,3,0,"require"],[28,35,3,0],[28,36,3,0,"_dependencyMap"],[28,50,3,0],[29,2,5,0],[29,8,5,6,"supabaseUrl"],[29,19,5,17],[29,22,5,17,"_expoVirtualEnv"],[29,37,5,17],[29,38,5,17,"env"],[29,41,5,17],[29,42,5,17,"EXPO_PUBLIC_SUPABASE_URL"],[29,66,5,57],[30,2,6,0],[30,8,6,6,"supabaseAnonKey"],[30,23,6,21],[30,26,6,21,"_expoVirtualEnv"],[30,41,6,21],[30,42,6,21,"env"],[30,45,6,21],[30,46,6,21,"EXPO_PUBLIC_SUPABASE_ANON_KEY"],[30,75,6,66],[31,2,8,7],[31,8,8,13,"supabase"],[31,16,8,21],[31,19,8,24],[31,23,8,24,"createClient"],[31,42,8,36],[31,43,8,36,"createClient"],[31,55,8,36],[31,57,8,37,"supabaseUrl"],[31,68,8,48],[31,70,8,50,"supabaseAnonKey"],[31,85,8,65],[31,87,8,67],[32,4,9,2,"auth"],[32,8,9,6],[32,10,9,8],[33,6,10,4,"storage"],[33,13,10,11],[33,15,10,13,"AsyncStorage"],[33,27,10,25],[33,28,10,25,"default"],[33,35,10,25],[34,6,11,4,"autoRefreshToken"],[34,22,11,20],[34,24,11,22],[34,28,11,26],[35,6,12,4,"persistSession"],[35,20,12,18],[35,22,12,20],[35,26,12,24],[36,6,13,4,"detectSessionInUrl"],[36,24,13,22],[36,26,13,24],[37,4,14,2],[38,2,15,0],[38,3,15,1],[38,4,15,2],[40,2,17,0],[42,2,100,0],[44,2,148,0],[45,2,149,0],[46,2,150,0],[48,2,152,7],[48,8,152,13,"SupabaseHelpers"],[48,23,152,28],[48,24,152,29],[49,4,154,2],[49,17,154,15,"signUp"],[49,23,154,21,"signUp"],[49,24,154,22,"email"],[49,29,154,35],[49,31,154,37,"password"],[49,39,154,53],[49,41,154,55,"userData"],[49,49,154,69],[49,51,154,71],[50,6,155,4],[50,10,155,8],[51,8,156,6],[51,14,156,12],[52,10,156,14,"data"],[52,14,156,18],[53,10,156,20,"error"],[54,8,156,26],[54,9,156,27],[54,12,156,30],[54,18,156,36,"supabase"],[54,26,156,44],[54,27,156,45,"auth"],[54,31,156,49],[54,32,156,50,"signUp"],[54,38,156,56],[54,39,156,57],[55,10,157,8,"email"],[55,15,157,13],[56,10,158,8,"password"],[56,18,158,16],[57,10,159,8,"options"],[57,17,159,15],[57,19,159,17],[58,12,160,10,"data"],[58,16,160,14],[58,18,160,16,"userData"],[58,26,160,24],[58,30,160,28],[58,31,160,29],[59,10,161,8],[60,8,162,6],[60,9,162,7],[60,10,162,8],[61,8,163,6],[61,15,163,13],[62,10,163,15,"data"],[62,14,163,19],[63,10,163,21,"error"],[64,8,163,27],[64,9,163,28],[65,6,164,4],[65,7,164,5],[65,8,164,6],[65,15,164,13,"error"],[65,20,164,18],[65,22,164,20],[66,8,165,6,"console"],[66,15,165,13],[66,16,165,14,"error"],[66,21,165,19],[66,22,165,20],[66,38,165,36],[66,40,165,38,"error"],[66,45,165,43],[66,46,165,44],[67,8,166,6],[67,15,166,13],[68,10,166,15,"data"],[68,14,166,19],[68,16,166,21],[68,20,166,25],[69,10,166,27,"error"],[70,8,166,33],[70,9,166,34],[71,6,167,4],[72,4,168,2],[73,4,170,2],[73,17,170,15,"signIn"],[73,23,170,21,"signIn"],[73,24,170,22,"email"],[73,29,170,35],[73,31,170,37,"password"],[73,39,170,53],[73,41,170,55],[74,6,171,4],[74,10,171,8],[75,8,172,6],[75,14,172,12],[76,10,172,14,"data"],[76,14,172,18],[77,10,172,20,"error"],[78,8,172,26],[78,9,172,27],[78,12,172,30],[78,18,172,36,"supabase"],[78,26,172,44],[78,27,172,45,"auth"],[78,31,172,49],[78,32,172,50,"signInWithPassword"],[78,50,172,68],[78,51,172,69],[79,10,173,8,"email"],[79,15,173,13],[80,10,174,8,"password"],[81,8,175,6],[81,9,175,7],[81,10,175,8],[82,8,176,6],[82,15,176,13],[83,10,176,15,"data"],[83,14,176,19],[84,10,176,21,"error"],[85,8,176,27],[85,9,176,28],[86,6,177,4],[86,7,177,5],[86,8,177,6],[86,15,177,13,"error"],[86,20,177,18],[86,22,177,20],[87,8,178,6,"console"],[87,15,178,13],[87,16,178,14,"error"],[87,21,178,19],[87,22,178,20],[87,38,178,36],[87,40,178,38,"error"],[87,45,178,43],[87,46,178,44],[88,8,179,6],[88,15,179,13],[89,10,179,15,"data"],[89,14,179,19],[89,16,179,21],[89,20,179,25],[90,10,179,27,"error"],[91,8,179,33],[91,9,179,34],[92,6,180,4],[93,4,181,2],[94,4,183,2],[94,17,183,15,"signOut"],[94,24,183,22,"signOut"],[94,25,183,22],[94,27,183,25],[95,6,184,4],[95,10,184,8],[96,8,185,6],[96,14,185,12],[97,10,185,14,"error"],[98,8,185,20],[98,9,185,21],[98,12,185,24],[98,18,185,30,"supabase"],[98,26,185,38],[98,27,185,39,"auth"],[98,31,185,43],[98,32,185,44,"signOut"],[98,39,185,51],[98,40,185,52],[98,41,185,53],[99,8,186,6],[99,15,186,13],[100,10,186,15,"error"],[101,8,186,21],[101,9,186,22],[102,6,187,4],[102,7,187,5],[102,8,187,6],[102,15,187,13,"error"],[102,20,187,18],[102,22,187,20],[103,8,188,6,"console"],[103,15,188,13],[103,16,188,14,"error"],[103,21,188,19],[103,22,188,20],[103,39,188,37],[103,41,188,39,"error"],[103,46,188,44],[103,47,188,45],[104,8,189,6],[104,15,189,13],[105,10,189,15,"error"],[106,8,189,21],[106,9,189,22],[107,6,190,4],[108,4,191,2],[109,4,193,2],[109,17,193,15,"getCurrentUser"],[109,31,193,29,"getCurrentUser"],[109,32,193,29],[109,34,193,32],[110,6,194,4],[110,10,194,8],[111,8,195,6],[111,14,195,12],[112,10,195,14,"data"],[112,14,195,18],[112,16,195,20],[113,12,195,22,"user"],[114,10,195,27],[115,8,195,29],[115,9,195,30],[115,12,195,33],[115,18,195,39,"supabase"],[115,26,195,47],[115,27,195,48,"auth"],[115,31,195,52],[115,32,195,53,"getUser"],[115,39,195,60],[115,40,195,61],[115,41,195,62],[116,8,196,6],[116,15,196,13,"user"],[116,19,196,17],[117,6,197,4],[117,7,197,5],[117,8,197,6],[117,15,197,13,"error"],[117,20,197,18],[117,22,197,20],[118,8,198,6,"console"],[118,15,198,13],[118,16,198,14,"error"],[118,21,198,19],[118,22,198,20],[118,47,198,45],[118,49,198,47,"error"],[118,54,198,52],[118,55,198,53],[119,8,199,6],[119,15,199,13],[119,19,199,17],[120,6,200,4],[121,4,201,2],[122,4,203,2],[122,17,203,15,"getCurrentSession"],[122,34,203,32,"getCurrentSession"],[122,35,203,32],[122,37,203,35],[123,6,204,4],[123,10,204,8],[124,8,205,6],[124,14,205,12],[125,10,205,14,"data"],[125,14,205,18],[125,16,205,20],[126,12,205,22,"session"],[127,10,205,30],[128,8,205,32],[128,9,205,33],[128,12,205,36],[128,18,205,42,"supabase"],[128,26,205,50],[128,27,205,51,"auth"],[128,31,205,55],[128,32,205,56,"getSession"],[128,42,205,66],[128,43,205,67],[128,44,205,68],[129,8,206,6],[129,15,206,13,"session"],[129,22,206,20],[130,6,207,4],[130,7,207,5],[130,8,207,6],[130,15,207,13,"error"],[130,20,207,18],[130,22,207,20],[131,8,208,6,"console"],[131,15,208,13],[131,16,208,14,"error"],[131,21,208,19],[131,22,208,20],[131,50,208,48],[131,52,208,50,"error"],[131,57,208,55],[131,58,208,56],[132,8,209,6],[132,15,209,13],[132,19,209,17],[133,6,210,4],[134,4,211,2],[136,4,213,2],[137,4,214,2],[138,4,215,2],[140,4,217,2],[140,17,217,15,"getProfile"],[140,27,217,25,"getProfile"],[140,28,217,26,"userId"],[140,34,217,40],[140,36,217,67],[141,6,218,4],[141,10,218,8],[142,8,219,6],[142,14,219,12],[143,10,219,14,"data"],[143,14,219,18],[144,10,219,20,"error"],[145,8,219,26],[145,9,219,27],[145,12,219,30],[145,18,219,36,"supabase"],[145,26,219,44],[145,27,220,9,"from"],[145,31,220,13],[145,32,220,14],[145,42,220,24],[145,43,220,25],[145,44,221,9,"select"],[145,50,221,15],[145,51,221,16],[145,54,221,19],[145,55,221,20],[145,56,222,9,"eq"],[145,58,222,11],[145,59,222,12],[145,63,222,16],[145,65,222,18,"userId"],[145,71,222,24],[145,72,222,25],[145,73,223,9,"single"],[145,79,223,15],[145,80,223,16],[145,81,223,17],[146,8,225,6],[146,12,225,10,"error"],[146,17,225,15],[146,19,225,17],[147,10,226,8,"console"],[147,17,226,15],[147,18,226,16,"error"],[147,23,226,21],[147,24,226,22],[147,44,226,42],[147,46,226,44,"error"],[147,51,226,49],[147,52,226,50],[148,10,227,8],[148,17,227,15],[148,21,227,19],[149,8,228,6],[150,8,229,6],[150,15,229,13,"data"],[150,19,229,17],[151,6,230,4],[151,7,230,5],[151,8,230,6],[151,15,230,13,"error"],[151,20,230,18],[151,22,230,20],[152,8,231,6,"console"],[152,15,231,13],[152,16,231,14,"error"],[152,21,231,19],[152,22,231,20],[152,42,231,40],[152,44,231,42,"error"],[152,49,231,47],[152,50,231,48],[153,8,232,6],[153,15,232,13],[153,19,232,17],[154,6,233,4],[155,4,234,2],[156,4,236,2],[156,17,236,15,"updateProfile"],[156,30,236,28,"updateProfile"],[156,31,236,29,"userId"],[156,37,236,43],[156,39,236,45,"updates"],[156,46,236,70],[156,48,236,72],[157,6,237,4],[157,10,237,8],[158,8,238,6],[158,14,238,12],[159,10,238,14,"data"],[159,14,238,18],[160,10,238,20,"error"],[161,8,238,26],[161,9,238,27],[161,12,238,30],[161,18,238,36,"supabase"],[161,26,238,44],[161,27,239,9,"from"],[161,31,239,13],[161,32,239,14],[161,42,239,24],[161,43,239,25],[161,44,240,9,"update"],[161,50,240,15],[161,51,240,16,"updates"],[161,58,240,23],[161,59,240,24],[161,60,241,9,"eq"],[161,62,241,11],[161,63,241,12],[161,67,241,16],[161,69,241,18,"userId"],[161,75,241,24],[161,76,241,25],[161,77,242,9,"select"],[161,83,242,15],[161,84,242,16],[161,85,242,17],[161,86,243,9,"single"],[161,92,243,15],[161,93,243,16],[161,94,243,17],[162,8,245,6],[162,15,245,13],[163,10,245,15,"data"],[163,14,245,19],[164,10,245,21,"error"],[165,8,245,27],[165,9,245,28],[166,6,246,4],[166,7,246,5],[166,8,246,6],[166,15,246,13,"error"],[166,20,246,18],[166,22,246,20],[167,8,247,6,"console"],[167,15,247,13],[167,16,247,14,"error"],[167,21,247,19],[167,22,247,20],[167,45,247,43],[167,47,247,45,"error"],[167,52,247,50],[167,53,247,51],[168,8,248,6],[168,15,248,13],[169,10,248,15,"data"],[169,14,248,19],[169,16,248,21],[169,20,248,25],[170,10,248,27,"error"],[171,8,248,33],[171,9,248,34],[172,6,249,4],[173,4,250,2],[175,4,252,2],[176,4,253,2],[177,4,254,2],[179,4,256,2],[179,17,256,15,"createGeneration"],[179,33,256,31,"createGeneration"],[179,34,256,32,"generationData"],[179,48,256,67],[179,50,256,69],[180,6,257,4],[180,10,257,8],[181,8,258,6],[181,14,258,12],[182,10,258,14,"data"],[182,14,258,18],[183,10,258,20,"error"],[184,8,258,26],[184,9,258,27],[184,12,258,30],[184,18,258,36,"supabase"],[184,26,258,44],[184,27,259,9,"from"],[184,31,259,13],[184,32,259,14],[184,45,259,27],[184,46,259,28],[184,47,260,9,"insert"],[184,53,260,15],[184,54,260,16,"generationData"],[184,68,260,30],[184,69,260,31],[184,70,261,9,"select"],[184,76,261,15],[184,77,261,16],[184,78,261,17],[184,79,262,9,"single"],[184,85,262,15],[184,86,262,16],[184,87,262,17],[185,8,264,6],[185,15,264,13],[186,10,264,15,"data"],[186,14,264,19],[187,10,264,21,"error"],[188,8,264,27],[188,9,264,28],[189,6,265,4],[189,7,265,5],[189,8,265,6],[189,15,265,13,"error"],[189,20,265,18],[189,22,265,20],[190,8,266,6,"console"],[190,15,266,13],[190,16,266,14,"error"],[190,21,266,19],[190,22,266,20],[190,48,266,46],[190,50,266,48,"error"],[190,55,266,53],[190,56,266,54],[191,8,267,6],[191,15,267,13],[192,10,267,15,"data"],[192,14,267,19],[192,16,267,21],[192,20,267,25],[193,10,267,27,"error"],[194,8,267,33],[194,9,267,34],[195,6,268,4],[196,4,269,2],[197,4,271,2],[197,17,271,15,"updateGeneration"],[197,33,271,31,"updateGeneration"],[197,34,271,32,"generationId"],[197,46,271,52],[197,48,271,54,"updates"],[197,55,271,82],[197,57,271,84],[198,6,272,4],[198,10,272,8],[199,8,273,6],[199,14,273,12],[200,10,273,14,"data"],[200,14,273,18],[201,10,273,20,"error"],[202,8,273,26],[202,9,273,27],[202,12,273,30],[202,18,273,36,"supabase"],[202,26,273,44],[202,27,274,9,"from"],[202,31,274,13],[202,32,274,14],[202,45,274,27],[202,46,274,28],[202,47,275,9,"update"],[202,53,275,15],[202,54,275,16,"updates"],[202,61,275,23],[202,62,275,24],[202,63,276,9,"eq"],[202,65,276,11],[202,66,276,12],[202,70,276,16],[202,72,276,18,"generationId"],[202,84,276,30],[202,85,276,31],[202,86,277,9,"select"],[202,92,277,15],[202,93,277,16],[202,94,277,17],[202,95,278,9,"single"],[202,101,278,15],[202,102,278,16],[202,103,278,17],[203,8,280,6],[203,15,280,13],[204,10,280,15,"data"],[204,14,280,19],[205,10,280,21,"error"],[206,8,280,27],[206,9,280,28],[207,6,281,4],[207,7,281,5],[207,8,281,6],[207,15,281,13,"error"],[207,20,281,18],[207,22,281,20],[208,8,282,6,"console"],[208,15,282,13],[208,16,282,14,"error"],[208,21,282,19],[208,22,282,20],[208,48,282,46],[208,50,282,48,"error"],[208,55,282,53],[208,56,282,54],[209,8,283,6],[209,15,283,13],[210,10,283,15,"data"],[210,14,283,19],[210,16,283,21],[210,20,283,25],[211,10,283,27,"error"],[212,8,283,33],[212,9,283,34],[213,6,284,4],[214,4,285,2],[215,4,287,2],[215,17,287,15,"getUserGenerations"],[215,35,287,33,"getUserGenerations"],[215,36,287,34,"userId"],[215,42,287,48],[215,44,287,50,"limit"],[215,49,287,55],[215,52,287,58],[215,54,287,60],[215,56,287,62,"offset"],[215,62,287,68],[215,65,287,71],[215,66,287,72],[215,68,287,97],[216,6,288,4],[216,10,288,8],[217,8,289,6],[217,14,289,12],[218,10,289,14,"data"],[218,14,289,18],[219,10,289,20,"error"],[220,8,289,26],[220,9,289,27],[220,12,289,30],[220,18,289,36,"supabase"],[220,26,289,44],[220,27,290,9,"from"],[220,31,290,13],[220,32,290,14],[220,45,290,27],[220,46,290,28],[220,47,291,9,"select"],[220,53,291,15],[220,54,291,16],[220,57,291,19],[220,58,291,20],[220,59,292,9,"eq"],[220,61,292,11],[220,62,292,12],[220,71,292,21],[220,73,292,23,"userId"],[220,79,292,29],[220,80,292,30],[220,81,293,9,"order"],[220,86,293,14],[220,87,293,15],[220,99,293,27],[220,101,293,29],[221,10,293,31,"ascending"],[221,19,293,40],[221,21,293,42],[222,8,293,48],[222,9,293,49],[222,10,293,50],[222,11,294,9,"limit"],[222,16,294,14],[222,17,294,15,"limit"],[222,22,294,20],[222,23,294,21],[222,24,295,9,"range"],[222,29,295,14],[222,30,295,15,"offset"],[222,36,295,21],[222,38,295,23,"offset"],[222,44,295,29],[222,47,295,32,"limit"],[222,52,295,37],[222,55,295,40],[222,56,295,41],[222,57,295,42],[223,8,297,6],[223,12,297,10,"error"],[223,17,297,15],[223,19,297,17],[224,10,298,8,"console"],[224,17,298,15],[224,18,298,16,"error"],[224,23,298,21],[224,24,298,22],[224,53,298,51],[224,55,298,53,"error"],[224,60,298,58],[224,61,298,59],[225,10,299,8],[225,17,299,15],[225,19,299,17],[226,8,300,6],[227,8,301,6],[227,15,301,13,"data"],[227,19,301,17],[227,23,301,21],[227,25,301,23],[228,6,302,4],[228,7,302,5],[228,8,302,6],[228,15,302,13,"error"],[228,20,302,18],[228,22,302,20],[229,8,303,6,"console"],[229,15,303,13],[229,16,303,14,"error"],[229,21,303,19],[229,22,303,20],[229,51,303,49],[229,53,303,51,"error"],[229,58,303,56],[229,59,303,57],[230,8,304,6],[230,15,304,13],[230,17,304,15],[231,6,305,4],[232,4,306,2],[233,4,308,2],[233,17,308,15,"getPublicGenerations"],[233,37,308,35,"getPublicGenerations"],[233,38,308,36,"limit"],[233,43,308,41],[233,46,308,44],[233,48,308,46],[233,50,308,48,"offset"],[233,56,308,54],[233,59,308,57],[233,60,308,58],[233,62,308,76],[234,6,309,4],[234,10,309,8],[235,8,310,6],[235,14,310,12],[236,10,310,14,"data"],[236,14,310,18],[237,10,310,20,"error"],[238,8,310,26],[238,9,310,27],[238,12,310,30],[238,18,310,36,"supabase"],[238,26,310,44],[238,27,311,9,"from"],[238,31,311,13],[238,32,311,14],[238,48,311,30],[238,49,311,31],[238,50,312,9,"select"],[238,56,312,15],[238,57,312,16],[238,60,312,19],[238,61,312,20],[238,62,313,9,"limit"],[238,67,313,14],[238,68,313,15,"limit"],[238,73,313,20],[238,74,313,21],[238,75,314,9,"range"],[238,80,314,14],[238,81,314,15,"offset"],[238,87,314,21],[238,89,314,23,"offset"],[238,95,314,29],[238,98,314,32,"limit"],[238,103,314,37],[238,106,314,40],[238,107,314,41],[238,108,314,42],[239,8,316,6],[239,12,316,10,"error"],[239,17,316,15],[239,19,316,17],[240,10,317,8,"console"],[240,17,317,15],[240,18,317,16,"error"],[240,23,317,21],[240,24,317,22],[240,55,317,53],[240,57,317,55,"error"],[240,62,317,60],[240,63,317,61],[241,10,318,8],[241,17,318,15],[241,19,318,17],[242,8,319,6],[243,8,320,6],[243,15,320,13,"data"],[243,19,320,17],[243,23,320,21],[243,25,320,23],[244,6,321,4],[244,7,321,5],[244,8,321,6],[244,15,321,13,"error"],[244,20,321,18],[244,22,321,20],[245,8,322,6,"console"],[245,15,322,13],[245,16,322,14,"error"],[245,21,322,19],[245,22,322,20],[245,53,322,51],[245,55,322,53,"error"],[245,60,322,58],[245,61,322,59],[246,8,323,6],[246,15,323,13],[246,17,323,15],[247,6,324,4],[248,4,325,2],[250,4,327,2],[251,4,328,2],[252,4,329,2],[254,4,331,2],[254,17,331,15,"getUserSubscription"],[254,36,331,34,"getUserSubscription"],[254,37,331,35,"userId"],[254,43,331,49],[254,45,331,88],[255,6,332,4],[255,10,332,8],[256,8,333,6],[256,14,333,12],[257,10,333,14,"data"],[257,14,333,18],[258,10,333,20,"error"],[259,8,333,26],[259,9,333,27],[259,12,333,30],[259,18,333,36,"supabase"],[259,26,333,44],[259,27,334,9,"from"],[259,31,334,13],[259,32,334,14],[259,55,334,37],[259,56,334,38],[259,57,335,9,"select"],[259,63,335,15],[259,64,335,16],[259,67,335,19],[259,68,335,20],[259,69,336,9,"eq"],[259,71,336,11],[259,72,336,12],[259,81,336,21],[259,83,336,23,"userId"],[259,89,336,29],[259,90,336,30],[259,91,337,9,"eq"],[259,93,337,11],[259,94,337,12],[259,102,337,20],[259,104,337,22],[259,112,337,30],[259,113,337,31],[259,114,338,9,"single"],[259,120,338,15],[259,121,338,16],[259,122,338,17],[260,8,340,6],[260,12,340,10,"error"],[260,17,340,15],[260,19,340,17],[261,10,341,8,"console"],[261,17,341,15],[261,18,341,16,"error"],[261,23,341,21],[261,24,341,22],[261,54,341,52],[261,56,341,54,"error"],[261,61,341,59],[261,62,341,60],[262,10,342,8],[262,17,342,15],[262,21,342,19],[263,8,343,6],[264,8,344,6],[264,15,344,13,"data"],[264,19,344,17],[265,6,345,4],[265,7,345,5],[265,8,345,6],[265,15,345,13,"error"],[265,20,345,18],[265,22,345,20],[266,8,346,6,"console"],[266,15,346,13],[266,16,346,14,"error"],[266,21,346,19],[266,22,346,20],[266,52,346,50],[266,54,346,52,"error"],[266,59,346,57],[266,60,346,58],[267,8,347,6],[267,15,347,13],[267,19,347,17],[268,6,348,4],[269,4,349,2],[270,4,351,2],[270,17,351,15,"getUserStats"],[270,29,351,27,"getUserStats"],[270,30,351,28,"userId"],[270,36,351,42],[270,38,351,71],[271,6,352,4],[271,10,352,8],[272,8,353,6],[272,14,353,12],[273,10,353,14,"data"],[273,14,353,18],[274,10,353,20,"error"],[275,8,353,26],[275,9,353,27],[275,12,353,30],[275,18,353,36,"supabase"],[275,26,353,44],[275,27,354,9,"from"],[275,31,354,13],[275,32,354,14],[275,44,354,26],[275,45,354,27],[275,46,355,9,"select"],[275,52,355,15],[275,53,355,16],[275,56,355,19],[275,57,355,20],[275,58,356,9,"eq"],[275,60,356,11],[275,61,356,12],[275,70,356,21],[275,72,356,23,"userId"],[275,78,356,29],[275,79,356,30],[275,80,357,9,"single"],[275,86,357,15],[275,87,357,16],[275,88,357,17],[276,8,359,6],[276,12,359,10,"error"],[276,17,359,15],[276,19,359,17],[277,10,360,8,"console"],[277,17,360,15],[277,18,360,16,"error"],[277,23,360,21],[277,24,360,22],[277,47,360,45],[277,49,360,47,"error"],[277,54,360,52],[277,55,360,53],[278,10,361,8],[278,17,361,15],[278,21,361,19],[279,8,362,6],[280,8,363,6],[280,15,363,13,"data"],[280,19,363,17],[281,6,364,4],[281,7,364,5],[281,8,364,6],[281,15,364,13,"error"],[281,20,364,18],[281,22,364,20],[282,8,365,6,"console"],[282,15,365,13],[282,16,365,14,"error"],[282,21,365,19],[282,22,365,20],[282,45,365,43],[282,47,365,45,"error"],[282,52,365,50],[282,53,365,51],[283,8,366,6],[283,15,366,13],[283,19,366,17],[284,6,367,4],[285,4,368,2],[287,4,370,2],[288,4,371,2],[289,4,372,2],[291,4,374,2],[291,17,374,15,"uploadImage"],[291,28,374,26,"uploadImage"],[291,29,374,27,"bucket"],[291,35,374,41],[291,37,374,43,"filePath"],[291,45,374,59],[291,47,374,61,"file"],[291,51,374,78],[291,53,374,80,"contentType"],[291,64,374,91],[291,67,374,94],[291,79,374,106],[291,81,374,108],[292,6,375,4],[292,10,375,8],[293,8,376,6],[293,14,376,12],[294,10,376,14,"data"],[294,14,376,18],[295,10,376,20,"error"],[296,8,376,26],[296,9,376,27],[296,12,376,30],[296,18,376,36,"supabase"],[296,26,376,44],[296,27,376,45,"storage"],[296,34,376,52],[296,35,377,9,"from"],[296,39,377,13],[296,40,377,14,"bucket"],[296,46,377,20],[296,47,377,21],[296,48,378,9,"upload"],[296,54,378,15],[296,55,378,16,"filePath"],[296,63,378,24],[296,65,378,26,"file"],[296,69,378,30],[296,71,378,32],[297,10,379,10,"contentType"],[297,21,379,21],[298,10,380,10,"upsert"],[298,16,380,16],[298,18,380,18],[299,8,381,8],[299,9,381,9],[299,10,381,10],[300,8,383,6],[300,12,383,10,"error"],[300,17,383,15],[300,19,383,17],[301,10,384,8,"console"],[301,17,384,15],[301,18,384,16,"error"],[301,23,384,21],[301,24,384,22],[301,45,384,43],[301,47,384,45,"error"],[301,52,384,50],[301,53,384,51],[302,10,385,8],[302,17,385,15],[303,12,385,17,"data"],[303,16,385,21],[303,18,385,23],[303,22,385,27],[304,12,385,29,"error"],[305,10,385,35],[305,11,385,36],[306,8,386,6],[308,8,388,6],[309,8,389,6],[309,14,389,12],[310,10,389,14,"data"],[310,14,389,18],[310,16,389,20,"publicUrlData"],[311,8,389,34],[311,9,389,35],[311,12,389,38,"supabase"],[311,20,389,46],[311,21,389,47,"storage"],[311,28,389,54],[311,29,390,9,"from"],[311,33,390,13],[311,34,390,14,"bucket"],[311,40,390,20],[311,41,390,21],[311,42,391,9,"getPublicUrl"],[311,54,391,21],[311,55,391,22,"filePath"],[311,63,391,30],[311,64,391,31],[312,8,393,6],[312,15,393,13],[313,10,393,15,"data"],[313,14,393,19],[313,16,393,21],[314,12,393,23],[314,15,393,26,"data"],[314,19,393,30],[315,12,393,32,"publicUrl"],[315,21,393,41],[315,23,393,43,"publicUrlData"],[315,36,393,56],[315,37,393,57,"publicUrl"],[316,10,393,67],[316,11,393,68],[317,10,393,70,"error"],[317,15,393,75],[317,17,393,77],[318,8,393,82],[318,9,393,83],[319,6,394,4],[319,7,394,5],[319,8,394,6],[319,15,394,13,"error"],[319,20,394,18],[319,22,394,20],[320,8,395,6,"console"],[320,15,395,13],[320,16,395,14,"error"],[320,21,395,19],[320,22,395,20],[320,43,395,41],[320,45,395,43,"error"],[320,50,395,48],[320,51,395,49],[321,8,396,6],[321,15,396,13],[322,10,396,15,"data"],[322,14,396,19],[322,16,396,21],[322,20,396,25],[323,10,396,27,"error"],[324,8,396,33],[324,9,396,34],[325,6,397,4],[326,4,398,2],[327,4,400,2],[327,11,400,9,"getPublicUrl"],[327,23,400,21,"getPublicUrl"],[327,24,400,22,"bucket"],[327,30,400,36],[327,32,400,38,"filePath"],[327,40,400,54],[327,42,400,56],[328,6,401,4],[328,10,401,8],[329,8,402,6],[329,14,402,12],[330,10,402,14,"data"],[331,8,402,19],[331,9,402,20],[331,12,402,23,"supabase"],[331,20,402,31],[331,21,402,32,"storage"],[331,28,402,39],[331,29,403,9,"from"],[331,33,403,13],[331,34,403,14,"bucket"],[331,40,403,20],[331,41,403,21],[331,42,404,9,"getPublicUrl"],[331,54,404,21],[331,55,404,22,"filePath"],[331,63,404,30],[331,64,404,31],[332,8,406,6],[332,15,406,13,"data"],[332,19,406,17],[332,20,406,18,"publicUrl"],[332,29,406,27],[333,6,407,4],[333,7,407,5],[333,8,407,6],[333,15,407,13,"error"],[333,20,407,18],[333,22,407,20],[334,8,408,6,"console"],[334,15,408,13],[334,16,408,14,"error"],[334,21,408,19],[334,22,408,20],[334,45,408,43],[334,47,408,45,"error"],[334,52,408,50],[334,53,408,51],[335,8,409,6],[335,15,409,13],[335,17,409,15],[336,6,410,4],[337,4,411,2],[338,2,412,0],[339,0,412,1],[339,3]],"functionMap":{"names":["<global>","SupabaseHelpers","SupabaseHelpers.signUp","SupabaseHelpers.signIn","SupabaseHelpers.signOut","SupabaseHelpers.getCurrentUser","SupabaseHelpers.getCurrentSession","SupabaseHelpers.getProfile","SupabaseHelpers.updateProfile","SupabaseHelpers.createGeneration","SupabaseHelpers.updateGeneration","SupabaseHelpers.getUserGenerations","SupabaseHelpers.getPublicGenerations","SupabaseHelpers.getUserSubscription","SupabaseHelpers.getUserStats","SupabaseHelpers.uploadImage","SupabaseHelpers.getPublicUrl"],"mappings":"AAA;OCuJ;ECE;GDc;EEE;GFW;EGE;GHQ;EIE;GJQ;EKE;GLQ;EMM;GNiB;EOE;GPc;EQM;GRa;ESE;GTc;EUE;GVmB;EWE;GXiB;EYM;GZkB;EaE;GbiB;EcM;GdwB;EeE;GfW"},"hasCjsExports":false},"type":"js/module"}]}