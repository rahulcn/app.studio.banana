{"dependencies":[{"name":"./gesture","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":15,"index":124},"end":{"line":7,"column":35,"index":144}}],"key":"UDLzvLUTPKPQreUSUZ++gAgg2pg=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.PanGesture = void 0;\n  var _gesture = require(_dependencyMap[0], \"./gesture\");\n  const _worklet_6591024890621_init_data = {\n    code: \"function changeEventCalculator_reactNativeGestureHandler_panGestureJs1(current,previous){let changePayload;if(previous===undefined){changePayload={changeX:current.translationX,changeY:current.translationY};}else{changePayload={changeX:current.translationX-previous.translationX,changeY:current.translationY-previous.translationY};}return{...current,...changePayload};}\",\n    location: \"/app/frontend/node_modules/react-native-gesture-handler/lib/commonjs/handlers/gestures/panGesture.js\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"changeEventCalculator_reactNativeGestureHandler_panGestureJs1\\\",\\\"current\\\",\\\"previous\\\",\\\"changePayload\\\",\\\"undefined\\\",\\\"changeX\\\",\\\"translationX\\\",\\\"changeY\\\",\\\"translationY\\\"],\\\"sources\\\":[\\\"/app/frontend/node_modules/react-native-gesture-handler/lib/commonjs/handlers/gestures/panGesture.js\\\"],\\\"mappings\\\":\\\"AAOA,SAAAA,6DAAkDA,CAAAC,OAAA,CAAAC,QAAA,EAGhD,GAAI,CAAAC,aAAa,CACjB,GAAID,QAAQ,GAAKE,SAAS,CAAE,CAC1BD,aAAa,CAAG,CACdE,OAAO,CAAEJ,OAAO,CAACK,YAAY,CAC7BC,OAAO,CAAEN,OAAO,CAACO,YACnB,CAAC,CACH,CAAC,IAAM,CACLL,aAAa,CAAG,CACdE,OAAO,CAAEJ,OAAO,CAACK,YAAY,CAAGJ,QAAQ,CAACI,YAAY,CACrDC,OAAO,CAAEN,OAAO,CAACO,YAAY,CAAGN,QAAQ,CAACM,YAC3C,CAAC,CACH,CACA,MAAO,CACL,GAAGP,OAAO,CACV,GAAGE,aACL,CAAC,CACH\\\",\\\"ignoreList\\\":[]}\"\n  };\n  const changeEventCalculator = function changeEventCalculator_reactNativeGestureHandler_panGestureJs1Factory({\n    _worklet_6591024890621_init_data\n  }) {\n    const _e = [new global.Error(), 1, -27];\n    const changeEventCalculator = function (current, previous) {\n      let changePayload;\n      if (previous === undefined) {\n        changePayload = {\n          changeX: current.translationX,\n          changeY: current.translationY\n        };\n      } else {\n        changePayload = {\n          changeX: current.translationX - previous.translationX,\n          changeY: current.translationY - previous.translationY\n        };\n      }\n      return {\n        ...current,\n        ...changePayload\n      };\n    };\n    changeEventCalculator.__closure = {};\n    changeEventCalculator.__workletHash = 6591024890621;\n    changeEventCalculator.__pluginVersion = \"0.6.0\";\n    changeEventCalculator.__initData = _worklet_6591024890621_init_data;\n    changeEventCalculator.__stackDetails = _e;\n    return changeEventCalculator;\n  }({\n    _worklet_6591024890621_init_data\n  });\n  class PanGesture extends _gesture.ContinousBaseGesture {\n    config = {};\n    constructor() {\n      super();\n      this.handlerName = 'PanGestureHandler';\n    }\n\n    /**\n     * Range along Y axis (in points) where fingers travels without activation of gesture.\n     * @param offset\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture#activeoffsetyvalue-number--number\n     */\n    activeOffsetY(offset) {\n      if (Array.isArray(offset)) {\n        this.config.activeOffsetYStart = offset[0];\n        this.config.activeOffsetYEnd = offset[1];\n      } else if (offset < 0) {\n        this.config.activeOffsetYStart = offset;\n      } else {\n        this.config.activeOffsetYEnd = offset;\n      }\n      return this;\n    }\n\n    /**\n     * Range along X axis (in points) where fingers travels without activation of gesture.\n     * @param offset\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture#activeoffsetxvalue-number--number\n     */\n    activeOffsetX(offset) {\n      if (Array.isArray(offset)) {\n        this.config.activeOffsetXStart = offset[0];\n        this.config.activeOffsetXEnd = offset[1];\n      } else if (offset < 0) {\n        this.config.activeOffsetXStart = offset;\n      } else {\n        this.config.activeOffsetXEnd = offset;\n      }\n      return this;\n    }\n\n    /**\n     * When the finger moves outside this range (in points) along Y axis and gesture hasn't yet activated it will fail recognizing the gesture.\n     * @param offset\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture#failoffsetyvalue-number--number\n     */\n    failOffsetY(offset) {\n      if (Array.isArray(offset)) {\n        this.config.failOffsetYStart = offset[0];\n        this.config.failOffsetYEnd = offset[1];\n      } else if (offset < 0) {\n        this.config.failOffsetYStart = offset;\n      } else {\n        this.config.failOffsetYEnd = offset;\n      }\n      return this;\n    }\n\n    /**\n     * When the finger moves outside this range (in points) along X axis and gesture hasn't yet activated it will fail recognizing the gesture.\n     * @param offset\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture#failoffsetxvalue-number--number\n     */\n    failOffsetX(offset) {\n      if (Array.isArray(offset)) {\n        this.config.failOffsetXStart = offset[0];\n        this.config.failOffsetXEnd = offset[1];\n      } else if (offset < 0) {\n        this.config.failOffsetXStart = offset;\n      } else {\n        this.config.failOffsetXEnd = offset;\n      }\n      return this;\n    }\n\n    /**\n     * A number of fingers that is required to be placed before gesture can activate. Should be a higher or equal to 0 integer.\n     * @param minPointers\n     */\n    minPointers(minPointers) {\n      this.config.minPointers = minPointers;\n      return this;\n    }\n\n    /**\n     * When the given number of fingers is placed on the screen and gesture hasn't yet activated it will fail recognizing the gesture.\n     * Should be a higher or equal to 0 integer.\n     * @param maxPointers\n     */\n    maxPointers(maxPointers) {\n      this.config.maxPointers = maxPointers;\n      return this;\n    }\n\n    /**\n     * Minimum distance the finger (or multiple finger) need to travel before the gesture activates.\n     * Expressed in points.\n     * @param distance\n     */\n    minDistance(distance) {\n      this.config.minDist = distance;\n      return this;\n    }\n\n    /**\n     * Minimum velocity the finger has to reach in order to activate handler.\n     * @param velocity\n     */\n    minVelocity(velocity) {\n      this.config.minVelocity = velocity;\n      return this;\n    }\n\n    /**\n     * Minimum velocity along X axis the finger has to reach in order to activate handler.\n     * @param velocity\n     */\n    minVelocityX(velocity) {\n      this.config.minVelocityX = velocity;\n      return this;\n    }\n\n    /**\n     * Minimum velocity along Y axis the finger has to reach in order to activate handler.\n     * @param velocity\n     */\n    minVelocityY(velocity) {\n      this.config.minVelocityY = velocity;\n      return this;\n    }\n\n    /**\n     * #### Android only\n     * Android, by default, will calculate translation values based on the position of the leading pointer (the first one that was placed on the screen).\n     * This modifier allows that behavior to be changed to the one that is default on iOS - the averaged position of all active pointers will be used to calculate the translation values.\n     * @param value\n     */\n    averageTouches(value) {\n      this.config.avgTouches = value;\n      return this;\n    }\n\n    /**\n     * #### iOS only\n     * Enables two-finger gestures on supported devices, for example iPads with trackpads.\n     * @param value\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture/#enabletrackpadtwofingergesturevalue-boolean-ios-only\n     */\n    enableTrackpadTwoFingerGesture(value) {\n      this.config.enableTrackpadTwoFingerGesture = value;\n      return this;\n    }\n\n    /**\n     * Duration in milliseconds of the LongPress gesture before Pan is allowed to activate.\n     * @param duration\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture/#activateafterlongpressduration-number\n     */\n    activateAfterLongPress(duration) {\n      this.config.activateAfterLongPress = duration;\n      return this;\n    }\n    onChange(callback) {\n      // @ts-ignore TS being overprotective, PanGestureHandlerEventPayload is Record\n      this.handlers.changeEventCalculator = changeEventCalculator;\n      return super.onChange(callback);\n    }\n  }\n  exports.PanGesture = PanGesture;\n});","lineCount":214,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"PanGesture"],[7,20,6,18],[7,23,6,21],[7,28,6,26],[7,29,6,27],[8,2,7,0],[8,6,7,4,"_gesture"],[8,14,7,12],[8,17,7,15,"require"],[8,24,7,22],[8,25,7,22,"_dependencyMap"],[8,39,7,22],[8,55,7,34],[8,56,7,35],[9,2,7,36],[9,8,7,36,"_worklet_6591024890621_init_data"],[9,40,7,36],[10,4,7,36,"code"],[10,8,7,36],[11,4,7,36,"location"],[11,12,7,36],[12,4,7,36,"sourceMap"],[12,13,7,36],[13,2,7,36],[14,2,7,36],[14,8,7,36,"changeEventCalculator"],[14,29,7,36],[14,32,8,0],[14,41,8,0,"changeEventCalculator_reactNativeGestureHandler_panGestureJs1Factory"],[14,110,8,0],[15,4,8,0,"_worklet_6591024890621_init_data"],[16,2,8,0],[17,4,8,0],[17,10,8,0,"_e"],[17,12,8,0],[17,20,8,0,"global"],[17,26,8,0],[17,27,8,0,"Error"],[17,32,8,0],[18,4,8,0],[18,10,8,0,"changeEventCalculator"],[18,31,8,0],[18,43,8,0,"changeEventCalculator"],[18,44,8,31,"current"],[18,51,8,38],[18,53,8,40,"previous"],[18,61,8,48],[18,63,8,50],[19,6,11,2],[19,10,11,6,"changePayload"],[19,23,11,19],[20,6,12,2],[20,10,12,6,"previous"],[20,18,12,14],[20,23,12,19,"undefined"],[20,32,12,28],[20,34,12,30],[21,8,13,4,"changePayload"],[21,21,13,17],[21,24,13,20],[22,10,14,6,"changeX"],[22,17,14,13],[22,19,14,15,"current"],[22,26,14,22],[22,27,14,23,"translationX"],[22,39,14,35],[23,10,15,6,"changeY"],[23,17,15,13],[23,19,15,15,"current"],[23,26,15,22],[23,27,15,23,"translationY"],[24,8,16,4],[24,9,16,5],[25,6,17,2],[25,7,17,3],[25,13,17,9],[26,8,18,4,"changePayload"],[26,21,18,17],[26,24,18,20],[27,10,19,6,"changeX"],[27,17,19,13],[27,19,19,15,"current"],[27,26,19,22],[27,27,19,23,"translationX"],[27,39,19,35],[27,42,19,38,"previous"],[27,50,19,46],[27,51,19,47,"translationX"],[27,63,19,59],[28,10,20,6,"changeY"],[28,17,20,13],[28,19,20,15,"current"],[28,26,20,22],[28,27,20,23,"translationY"],[28,39,20,35],[28,42,20,38,"previous"],[28,50,20,46],[28,51,20,47,"translationY"],[29,8,21,4],[29,9,21,5],[30,6,22,2],[31,6,23,2],[31,13,23,9],[32,8,24,4],[32,11,24,7,"current"],[32,18,24,14],[33,8,25,4],[33,11,25,7,"changePayload"],[34,6,26,2],[34,7,26,3],[35,4,27,0],[35,5,27,1],[36,4,27,1,"changeEventCalculator"],[36,25,27,1],[36,26,27,1,"__closure"],[36,35,27,1],[37,4,27,1,"changeEventCalculator"],[37,25,27,1],[37,26,27,1,"__workletHash"],[37,39,27,1],[38,4,27,1,"changeEventCalculator"],[38,25,27,1],[38,26,27,1,"__pluginVersion"],[38,41,27,1],[39,4,27,1,"changeEventCalculator"],[39,25,27,1],[39,26,27,1,"__initData"],[39,36,27,1],[39,39,27,1,"_worklet_6591024890621_init_data"],[39,71,27,1],[40,4,27,1,"changeEventCalculator"],[40,25,27,1],[40,26,27,1,"__stackDetails"],[40,40,27,1],[40,43,27,1,"_e"],[40,45,27,1],[41,4,27,1],[41,11,27,1,"changeEventCalculator"],[41,32,27,1],[42,2,27,1],[42,3,8,0],[43,4,8,0,"_worklet_6591024890621_init_data"],[44,2,8,0],[45,2,28,0],[45,8,28,6,"PanGesture"],[45,18,28,16],[45,27,28,25,"_gesture"],[45,35,28,33],[45,36,28,34,"ContinousBaseGesture"],[45,56,28,54],[45,57,28,55],[46,4,29,2,"config"],[46,10,29,8],[46,13,29,11],[46,14,29,12],[46,15,29,13],[47,4,30,2,"constructor"],[47,15,30,13,"constructor"],[47,16,30,13],[47,18,30,16],[48,6,31,4],[48,11,31,9],[48,12,31,10],[48,13,31,11],[49,6,32,4],[49,10,32,8],[49,11,32,9,"handlerName"],[49,22,32,20],[49,25,32,23],[49,44,32,42],[50,4,33,2],[52,4,35,2],[53,0,36,0],[54,0,37,0],[55,0,38,0],[56,0,39,0],[57,4,40,2,"activeOffsetY"],[57,17,40,15,"activeOffsetY"],[57,18,40,16,"offset"],[57,24,40,22],[57,26,40,24],[58,6,41,4],[58,10,41,8,"Array"],[58,15,41,13],[58,16,41,14,"isArray"],[58,23,41,21],[58,24,41,22,"offset"],[58,30,41,28],[58,31,41,29],[58,33,41,31],[59,8,42,6],[59,12,42,10],[59,13,42,11,"config"],[59,19,42,17],[59,20,42,18,"activeOffsetYStart"],[59,38,42,36],[59,41,42,39,"offset"],[59,47,42,45],[59,48,42,46],[59,49,42,47],[59,50,42,48],[60,8,43,6],[60,12,43,10],[60,13,43,11,"config"],[60,19,43,17],[60,20,43,18,"activeOffsetYEnd"],[60,36,43,34],[60,39,43,37,"offset"],[60,45,43,43],[60,46,43,44],[60,47,43,45],[60,48,43,46],[61,6,44,4],[61,7,44,5],[61,13,44,11],[61,17,44,15,"offset"],[61,23,44,21],[61,26,44,24],[61,27,44,25],[61,29,44,27],[62,8,45,6],[62,12,45,10],[62,13,45,11,"config"],[62,19,45,17],[62,20,45,18,"activeOffsetYStart"],[62,38,45,36],[62,41,45,39,"offset"],[62,47,45,45],[63,6,46,4],[63,7,46,5],[63,13,46,11],[64,8,47,6],[64,12,47,10],[64,13,47,11,"config"],[64,19,47,17],[64,20,47,18,"activeOffsetYEnd"],[64,36,47,34],[64,39,47,37,"offset"],[64,45,47,43],[65,6,48,4],[66,6,49,4],[66,13,49,11],[66,17,49,15],[67,4,50,2],[69,4,52,2],[70,0,53,0],[71,0,54,0],[72,0,55,0],[73,0,56,0],[74,4,57,2,"activeOffsetX"],[74,17,57,15,"activeOffsetX"],[74,18,57,16,"offset"],[74,24,57,22],[74,26,57,24],[75,6,58,4],[75,10,58,8,"Array"],[75,15,58,13],[75,16,58,14,"isArray"],[75,23,58,21],[75,24,58,22,"offset"],[75,30,58,28],[75,31,58,29],[75,33,58,31],[76,8,59,6],[76,12,59,10],[76,13,59,11,"config"],[76,19,59,17],[76,20,59,18,"activeOffsetXStart"],[76,38,59,36],[76,41,59,39,"offset"],[76,47,59,45],[76,48,59,46],[76,49,59,47],[76,50,59,48],[77,8,60,6],[77,12,60,10],[77,13,60,11,"config"],[77,19,60,17],[77,20,60,18,"activeOffsetXEnd"],[77,36,60,34],[77,39,60,37,"offset"],[77,45,60,43],[77,46,60,44],[77,47,60,45],[77,48,60,46],[78,6,61,4],[78,7,61,5],[78,13,61,11],[78,17,61,15,"offset"],[78,23,61,21],[78,26,61,24],[78,27,61,25],[78,29,61,27],[79,8,62,6],[79,12,62,10],[79,13,62,11,"config"],[79,19,62,17],[79,20,62,18,"activeOffsetXStart"],[79,38,62,36],[79,41,62,39,"offset"],[79,47,62,45],[80,6,63,4],[80,7,63,5],[80,13,63,11],[81,8,64,6],[81,12,64,10],[81,13,64,11,"config"],[81,19,64,17],[81,20,64,18,"activeOffsetXEnd"],[81,36,64,34],[81,39,64,37,"offset"],[81,45,64,43],[82,6,65,4],[83,6,66,4],[83,13,66,11],[83,17,66,15],[84,4,67,2],[86,4,69,2],[87,0,70,0],[88,0,71,0],[89,0,72,0],[90,0,73,0],[91,4,74,2,"failOffsetY"],[91,15,74,13,"failOffsetY"],[91,16,74,14,"offset"],[91,22,74,20],[91,24,74,22],[92,6,75,4],[92,10,75,8,"Array"],[92,15,75,13],[92,16,75,14,"isArray"],[92,23,75,21],[92,24,75,22,"offset"],[92,30,75,28],[92,31,75,29],[92,33,75,31],[93,8,76,6],[93,12,76,10],[93,13,76,11,"config"],[93,19,76,17],[93,20,76,18,"failOffsetYStart"],[93,36,76,34],[93,39,76,37,"offset"],[93,45,76,43],[93,46,76,44],[93,47,76,45],[93,48,76,46],[94,8,77,6],[94,12,77,10],[94,13,77,11,"config"],[94,19,77,17],[94,20,77,18,"failOffsetYEnd"],[94,34,77,32],[94,37,77,35,"offset"],[94,43,77,41],[94,44,77,42],[94,45,77,43],[94,46,77,44],[95,6,78,4],[95,7,78,5],[95,13,78,11],[95,17,78,15,"offset"],[95,23,78,21],[95,26,78,24],[95,27,78,25],[95,29,78,27],[96,8,79,6],[96,12,79,10],[96,13,79,11,"config"],[96,19,79,17],[96,20,79,18,"failOffsetYStart"],[96,36,79,34],[96,39,79,37,"offset"],[96,45,79,43],[97,6,80,4],[97,7,80,5],[97,13,80,11],[98,8,81,6],[98,12,81,10],[98,13,81,11,"config"],[98,19,81,17],[98,20,81,18,"failOffsetYEnd"],[98,34,81,32],[98,37,81,35,"offset"],[98,43,81,41],[99,6,82,4],[100,6,83,4],[100,13,83,11],[100,17,83,15],[101,4,84,2],[103,4,86,2],[104,0,87,0],[105,0,88,0],[106,0,89,0],[107,0,90,0],[108,4,91,2,"failOffsetX"],[108,15,91,13,"failOffsetX"],[108,16,91,14,"offset"],[108,22,91,20],[108,24,91,22],[109,6,92,4],[109,10,92,8,"Array"],[109,15,92,13],[109,16,92,14,"isArray"],[109,23,92,21],[109,24,92,22,"offset"],[109,30,92,28],[109,31,92,29],[109,33,92,31],[110,8,93,6],[110,12,93,10],[110,13,93,11,"config"],[110,19,93,17],[110,20,93,18,"failOffsetXStart"],[110,36,93,34],[110,39,93,37,"offset"],[110,45,93,43],[110,46,93,44],[110,47,93,45],[110,48,93,46],[111,8,94,6],[111,12,94,10],[111,13,94,11,"config"],[111,19,94,17],[111,20,94,18,"failOffsetXEnd"],[111,34,94,32],[111,37,94,35,"offset"],[111,43,94,41],[111,44,94,42],[111,45,94,43],[111,46,94,44],[112,6,95,4],[112,7,95,5],[112,13,95,11],[112,17,95,15,"offset"],[112,23,95,21],[112,26,95,24],[112,27,95,25],[112,29,95,27],[113,8,96,6],[113,12,96,10],[113,13,96,11,"config"],[113,19,96,17],[113,20,96,18,"failOffsetXStart"],[113,36,96,34],[113,39,96,37,"offset"],[113,45,96,43],[114,6,97,4],[114,7,97,5],[114,13,97,11],[115,8,98,6],[115,12,98,10],[115,13,98,11,"config"],[115,19,98,17],[115,20,98,18,"failOffsetXEnd"],[115,34,98,32],[115,37,98,35,"offset"],[115,43,98,41],[116,6,99,4],[117,6,100,4],[117,13,100,11],[117,17,100,15],[118,4,101,2],[120,4,103,2],[121,0,104,0],[122,0,105,0],[123,0,106,0],[124,4,107,2,"minPointers"],[124,15,107,13,"minPointers"],[124,16,107,14,"minPointers"],[124,27,107,25],[124,29,107,27],[125,6,108,4],[125,10,108,8],[125,11,108,9,"config"],[125,17,108,15],[125,18,108,16,"minPointers"],[125,29,108,27],[125,32,108,30,"minPointers"],[125,43,108,41],[126,6,109,4],[126,13,109,11],[126,17,109,15],[127,4,110,2],[129,4,112,2],[130,0,113,0],[131,0,114,0],[132,0,115,0],[133,0,116,0],[134,4,117,2,"maxPointers"],[134,15,117,13,"maxPointers"],[134,16,117,14,"maxPointers"],[134,27,117,25],[134,29,117,27],[135,6,118,4],[135,10,118,8],[135,11,118,9,"config"],[135,17,118,15],[135,18,118,16,"maxPointers"],[135,29,118,27],[135,32,118,30,"maxPointers"],[135,43,118,41],[136,6,119,4],[136,13,119,11],[136,17,119,15],[137,4,120,2],[139,4,122,2],[140,0,123,0],[141,0,124,0],[142,0,125,0],[143,0,126,0],[144,4,127,2,"minDistance"],[144,15,127,13,"minDistance"],[144,16,127,14,"distance"],[144,24,127,22],[144,26,127,24],[145,6,128,4],[145,10,128,8],[145,11,128,9,"config"],[145,17,128,15],[145,18,128,16,"minDist"],[145,25,128,23],[145,28,128,26,"distance"],[145,36,128,34],[146,6,129,4],[146,13,129,11],[146,17,129,15],[147,4,130,2],[149,4,132,2],[150,0,133,0],[151,0,134,0],[152,0,135,0],[153,4,136,2,"minVelocity"],[153,15,136,13,"minVelocity"],[153,16,136,14,"velocity"],[153,24,136,22],[153,26,136,24],[154,6,137,4],[154,10,137,8],[154,11,137,9,"config"],[154,17,137,15],[154,18,137,16,"minVelocity"],[154,29,137,27],[154,32,137,30,"velocity"],[154,40,137,38],[155,6,138,4],[155,13,138,11],[155,17,138,15],[156,4,139,2],[158,4,141,2],[159,0,142,0],[160,0,143,0],[161,0,144,0],[162,4,145,2,"minVelocityX"],[162,16,145,14,"minVelocityX"],[162,17,145,15,"velocity"],[162,25,145,23],[162,27,145,25],[163,6,146,4],[163,10,146,8],[163,11,146,9,"config"],[163,17,146,15],[163,18,146,16,"minVelocityX"],[163,30,146,28],[163,33,146,31,"velocity"],[163,41,146,39],[164,6,147,4],[164,13,147,11],[164,17,147,15],[165,4,148,2],[167,4,150,2],[168,0,151,0],[169,0,152,0],[170,0,153,0],[171,4,154,2,"minVelocityY"],[171,16,154,14,"minVelocityY"],[171,17,154,15,"velocity"],[171,25,154,23],[171,27,154,25],[172,6,155,4],[172,10,155,8],[172,11,155,9,"config"],[172,17,155,15],[172,18,155,16,"minVelocityY"],[172,30,155,28],[172,33,155,31,"velocity"],[172,41,155,39],[173,6,156,4],[173,13,156,11],[173,17,156,15],[174,4,157,2],[176,4,159,2],[177,0,160,0],[178,0,161,0],[179,0,162,0],[180,0,163,0],[181,0,164,0],[182,4,165,2,"averageTouches"],[182,18,165,16,"averageTouches"],[182,19,165,17,"value"],[182,24,165,22],[182,26,165,24],[183,6,166,4],[183,10,166,8],[183,11,166,9,"config"],[183,17,166,15],[183,18,166,16,"avgTouches"],[183,28,166,26],[183,31,166,29,"value"],[183,36,166,34],[184,6,167,4],[184,13,167,11],[184,17,167,15],[185,4,168,2],[187,4,170,2],[188,0,171,0],[189,0,172,0],[190,0,173,0],[191,0,174,0],[192,0,175,0],[193,4,176,2,"enableTrackpadTwoFingerGesture"],[193,34,176,32,"enableTrackpadTwoFingerGesture"],[193,35,176,33,"value"],[193,40,176,38],[193,42,176,40],[194,6,177,4],[194,10,177,8],[194,11,177,9,"config"],[194,17,177,15],[194,18,177,16,"enableTrackpadTwoFingerGesture"],[194,48,177,46],[194,51,177,49,"value"],[194,56,177,54],[195,6,178,4],[195,13,178,11],[195,17,178,15],[196,4,179,2],[198,4,181,2],[199,0,182,0],[200,0,183,0],[201,0,184,0],[202,0,185,0],[203,4,186,2,"activateAfterLongPress"],[203,26,186,24,"activateAfterLongPress"],[203,27,186,25,"duration"],[203,35,186,33],[203,37,186,35],[204,6,187,4],[204,10,187,8],[204,11,187,9,"config"],[204,17,187,15],[204,18,187,16,"activateAfterLongPress"],[204,40,187,38],[204,43,187,41,"duration"],[204,51,187,49],[205,6,188,4],[205,13,188,11],[205,17,188,15],[206,4,189,2],[207,4,190,2,"onChange"],[207,12,190,10,"onChange"],[207,13,190,11,"callback"],[207,21,190,19],[207,23,190,21],[208,6,191,4],[209,6,192,4],[209,10,192,8],[209,11,192,9,"handlers"],[209,19,192,17],[209,20,192,18,"changeEventCalculator"],[209,41,192,39],[209,44,192,42,"changeEventCalculator"],[209,65,192,63],[210,6,193,4],[210,13,193,11],[210,18,193,16],[210,19,193,17,"onChange"],[210,27,193,25],[210,28,193,26,"callback"],[210,36,193,34],[210,37,193,35],[211,4,194,2],[212,2,195,0],[213,2,196,0,"exports"],[213,9,196,7],[213,10,196,8,"PanGesture"],[213,20,196,18],[213,23,196,21,"PanGesture"],[213,33,196,31],[214,0,196,32],[214,3]],"functionMap":{"names":["<global>","changeEventCalculator","PanGesture","PanGesture#constructor","PanGesture#activeOffsetY","PanGesture#activeOffsetX","PanGesture#failOffsetY","PanGesture#failOffsetX","PanGesture#minPointers","PanGesture#maxPointers","PanGesture#minDistance","PanGesture#minVelocity","PanGesture#minVelocityX","PanGesture#minVelocityY","PanGesture#averageTouches","PanGesture#enableTrackpadTwoFingerGesture","PanGesture#activateAfterLongPress","PanGesture#onChange"],"mappings":"AAA;ACO;CDmB;AEC;ECE;GDG;EEO;GFU;EGO;GHU;EIO;GJU;EKO;GLU;EMM;GNG;EOO;GPG;EQO;GRG;ESM;GTG;EUM;GVG;EWM;GXG;EYQ;GZG;EaQ;GbG;EcO;GdG;EeC;GfI;CFC"},"hasCjsExports":true},"type":"js/module"}]}