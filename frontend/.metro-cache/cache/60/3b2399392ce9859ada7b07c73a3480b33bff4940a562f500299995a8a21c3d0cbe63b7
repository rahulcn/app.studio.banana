{"dependencies":[{"name":"../lib/constants","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":12,"column":20,"index":778},"end":{"line":12,"column":47,"index":805}}],"key":"5SaJjHUOpKrE3J3aWh2RTsVAt6s=","exportNames":["*"],"imports":1}},{"name":"../lib/errors","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":13,"column":17,"index":824},"end":{"line":13,"column":41,"index":848}}],"key":"+GSAvg/CWfG2ifOQrWLkai/D9hY=","exportNames":["*"],"imports":1}},{"name":"../lib/fetch","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":14,"column":16,"index":866},"end":{"line":14,"column":39,"index":889}}],"key":"m5IduDkD0DmXIm44QxetlLAeo0E=","exportNames":["*"],"imports":1}},{"name":"../lib/helpers","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":15,"column":18,"index":909},"end":{"line":15,"column":43,"index":934}}],"key":"g7hF4pHwnWO84hRO36vjqsLwW80=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n    function adopt(value) {\n      return value instanceof P ? value : new P(function (resolve) {\n        resolve(value);\n      });\n    }\n    return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) {\n        try {\n          step(generator.next(value));\n        } catch (e) {\n          reject(e);\n        }\n      }\n      function rejected(value) {\n        try {\n          step(generator[\"throw\"](value));\n        } catch (e) {\n          reject(e);\n        }\n      }\n      function step(result) {\n        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n      }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n  };\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  const constants_1 = require(_dependencyMap[0], \"../lib/constants\");\n  const errors_1 = require(_dependencyMap[1], \"../lib/errors\");\n  const fetch_1 = require(_dependencyMap[2], \"../lib/fetch\");\n  const helpers_1 = require(_dependencyMap[3], \"../lib/helpers\");\n  class StorageBucketApi {\n    constructor(url, headers = {}, fetch, opts) {\n      this.shouldThrowOnError = false;\n      const baseUrl = new URL(url);\n      // if legacy uri is used, replace with new storage host (disables request buffering to allow > 50GB uploads)\n      // \"project-ref.supabase.co\" becomes \"project-ref.storage.supabase.co\"\n      if (opts === null || opts === void 0 ? void 0 : opts.useNewHostname) {\n        const isSupabaseHost = /supabase\\.(co|in|red)$/.test(baseUrl.hostname);\n        if (isSupabaseHost && !baseUrl.hostname.includes('storage.supabase.')) {\n          baseUrl.hostname = baseUrl.hostname.replace('supabase.', 'storage.supabase.');\n        }\n      }\n      this.url = baseUrl.href;\n      this.headers = Object.assign(Object.assign({}, constants_1.DEFAULT_HEADERS), headers);\n      this.fetch = (0, helpers_1.resolveFetch)(fetch);\n    }\n    /**\n     * Enable throwing errors instead of returning them.\n     */\n    throwOnError() {\n      this.shouldThrowOnError = true;\n      return this;\n    }\n    /**\n     * Retrieves the details of all Storage buckets within an existing project.\n     */\n    listBuckets() {\n      return __awaiter(this, void 0, void 0, function* () {\n        try {\n          const data = yield (0, fetch_1.get)(this.fetch, `${this.url}/bucket`, {\n            headers: this.headers\n          });\n          return {\n            data,\n            error: null\n          };\n        } catch (error) {\n          if (this.shouldThrowOnError) {\n            throw error;\n          }\n          if ((0, errors_1.isStorageError)(error)) {\n            return {\n              data: null,\n              error\n            };\n          }\n          throw error;\n        }\n      });\n    }\n    /**\n     * Retrieves the details of an existing Storage bucket.\n     *\n     * @param id The unique identifier of the bucket you would like to retrieve.\n     */\n    getBucket(id) {\n      return __awaiter(this, void 0, void 0, function* () {\n        try {\n          const data = yield (0, fetch_1.get)(this.fetch, `${this.url}/bucket/${id}`, {\n            headers: this.headers\n          });\n          return {\n            data,\n            error: null\n          };\n        } catch (error) {\n          if (this.shouldThrowOnError) {\n            throw error;\n          }\n          if ((0, errors_1.isStorageError)(error)) {\n            return {\n              data: null,\n              error\n            };\n          }\n          throw error;\n        }\n      });\n    }\n    /**\n     * Creates a new Storage bucket\n     *\n     * @param id A unique identifier for the bucket you are creating.\n     * @param options.public The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations. By default, buckets are private.\n     * @param options.fileSizeLimit specifies the max file size in bytes that can be uploaded to this bucket.\n     * The global file size limit takes precedence over this value.\n     * The default value is null, which doesn't set a per bucket file size limit.\n     * @param options.allowedMimeTypes specifies the allowed mime types that this bucket can accept during upload.\n     * The default value is null, which allows files with all mime types to be uploaded.\n     * Each mime type specified can be a wildcard, e.g. image/*, or a specific mime type, e.g. image/png.\n     * @returns newly created bucket id\n     * @param options.type (private-beta) specifies the bucket type. see `BucketType` for more details.\n     *   - default bucket type is `STANDARD`\n     */\n    createBucket(id, options = {\n      public: false\n    }) {\n      return __awaiter(this, void 0, void 0, function* () {\n        try {\n          const data = yield (0, fetch_1.post)(this.fetch, `${this.url}/bucket`, {\n            id,\n            name: id,\n            type: options.type,\n            public: options.public,\n            file_size_limit: options.fileSizeLimit,\n            allowed_mime_types: options.allowedMimeTypes\n          }, {\n            headers: this.headers\n          });\n          return {\n            data,\n            error: null\n          };\n        } catch (error) {\n          if (this.shouldThrowOnError) {\n            throw error;\n          }\n          if ((0, errors_1.isStorageError)(error)) {\n            return {\n              data: null,\n              error\n            };\n          }\n          throw error;\n        }\n      });\n    }\n    /**\n     * Updates a Storage bucket\n     *\n     * @param id A unique identifier for the bucket you are updating.\n     * @param options.public The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations.\n     * @param options.fileSizeLimit specifies the max file size in bytes that can be uploaded to this bucket.\n     * The global file size limit takes precedence over this value.\n     * The default value is null, which doesn't set a per bucket file size limit.\n     * @param options.allowedMimeTypes specifies the allowed mime types that this bucket can accept during upload.\n     * The default value is null, which allows files with all mime types to be uploaded.\n     * Each mime type specified can be a wildcard, e.g. image/*, or a specific mime type, e.g. image/png.\n     */\n    updateBucket(id, options) {\n      return __awaiter(this, void 0, void 0, function* () {\n        try {\n          const data = yield (0, fetch_1.put)(this.fetch, `${this.url}/bucket/${id}`, {\n            id,\n            name: id,\n            public: options.public,\n            file_size_limit: options.fileSizeLimit,\n            allowed_mime_types: options.allowedMimeTypes\n          }, {\n            headers: this.headers\n          });\n          return {\n            data,\n            error: null\n          };\n        } catch (error) {\n          if (this.shouldThrowOnError) {\n            throw error;\n          }\n          if ((0, errors_1.isStorageError)(error)) {\n            return {\n              data: null,\n              error\n            };\n          }\n          throw error;\n        }\n      });\n    }\n    /**\n     * Removes all objects inside a single bucket.\n     *\n     * @param id The unique identifier of the bucket you would like to empty.\n     */\n    emptyBucket(id) {\n      return __awaiter(this, void 0, void 0, function* () {\n        try {\n          const data = yield (0, fetch_1.post)(this.fetch, `${this.url}/bucket/${id}/empty`, {}, {\n            headers: this.headers\n          });\n          return {\n            data,\n            error: null\n          };\n        } catch (error) {\n          if (this.shouldThrowOnError) {\n            throw error;\n          }\n          if ((0, errors_1.isStorageError)(error)) {\n            return {\n              data: null,\n              error\n            };\n          }\n          throw error;\n        }\n      });\n    }\n    /**\n     * Deletes an existing bucket. A bucket can't be deleted with existing objects inside it.\n     * You must first `empty()` the bucket.\n     *\n     * @param id The unique identifier of the bucket you would like to delete.\n     */\n    deleteBucket(id) {\n      return __awaiter(this, void 0, void 0, function* () {\n        try {\n          const data = yield (0, fetch_1.remove)(this.fetch, `${this.url}/bucket/${id}`, {}, {\n            headers: this.headers\n          });\n          return {\n            data,\n            error: null\n          };\n        } catch (error) {\n          if (this.shouldThrowOnError) {\n            throw error;\n          }\n          if ((0, errors_1.isStorageError)(error)) {\n            return {\n              data: null,\n              error\n            };\n          }\n          throw error;\n        }\n      });\n    }\n  }\n  exports.default = StorageBucketApi;\n});","lineCount":268,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[4,6,2,4,"__awaiter"],[4,15,2,13],[4,18,2,17],[4,22,2,21],[4,26,2,25],[4,30,2,29],[4,31,2,30,"__awaiter"],[4,40,2,39],[4,44,2,44],[4,54,2,54,"thisArg"],[4,61,2,61],[4,63,2,63,"_arguments"],[4,73,2,73],[4,75,2,75,"P"],[4,76,2,76],[4,78,2,78,"generator"],[4,87,2,87],[4,89,2,89],[5,4,3,4],[5,13,3,13,"adopt"],[5,18,3,18,"adopt"],[5,19,3,19,"value"],[5,24,3,24],[5,26,3,26],[6,6,3,28],[6,13,3,35,"value"],[6,18,3,40],[6,30,3,52,"P"],[6,31,3,53],[6,34,3,56,"value"],[6,39,3,61],[6,42,3,64],[6,46,3,68,"P"],[6,47,3,69],[6,48,3,70],[6,58,3,80,"resolve"],[6,65,3,87],[6,67,3,89],[7,8,3,91,"resolve"],[7,15,3,98],[7,16,3,99,"value"],[7,21,3,104],[7,22,3,105],[8,6,3,107],[8,7,3,108],[8,8,3,109],[9,4,3,111],[10,4,4,4],[10,11,4,11],[10,16,4,16,"P"],[10,17,4,17],[10,22,4,22,"P"],[10,23,4,23],[10,26,4,26,"Promise"],[10,33,4,33],[10,34,4,34],[10,36,4,36],[10,46,4,46,"resolve"],[10,53,4,53],[10,55,4,55,"reject"],[10,61,4,61],[10,63,4,63],[11,6,5,8],[11,15,5,17,"fulfilled"],[11,24,5,26,"fulfilled"],[11,25,5,27,"value"],[11,30,5,32],[11,32,5,34],[12,8,5,36],[12,12,5,40],[13,10,5,42,"step"],[13,14,5,46],[13,15,5,47,"generator"],[13,24,5,56],[13,25,5,57,"next"],[13,29,5,61],[13,30,5,62,"value"],[13,35,5,67],[13,36,5,68],[13,37,5,69],[14,8,5,71],[14,9,5,72],[14,10,5,73],[14,17,5,80,"e"],[14,18,5,81],[14,20,5,83],[15,10,5,85,"reject"],[15,16,5,91],[15,17,5,92,"e"],[15,18,5,93],[15,19,5,94],[16,8,5,96],[17,6,5,98],[18,6,6,8],[18,15,6,17,"rejected"],[18,23,6,25,"rejected"],[18,24,6,26,"value"],[18,29,6,31],[18,31,6,33],[19,8,6,35],[19,12,6,39],[20,10,6,41,"step"],[20,14,6,45],[20,15,6,46,"generator"],[20,24,6,55],[20,25,6,56],[20,32,6,63],[20,33,6,64],[20,34,6,65,"value"],[20,39,6,70],[20,40,6,71],[20,41,6,72],[21,8,6,74],[21,9,6,75],[21,10,6,76],[21,17,6,83,"e"],[21,18,6,84],[21,20,6,86],[22,10,6,88,"reject"],[22,16,6,94],[22,17,6,95,"e"],[22,18,6,96],[22,19,6,97],[23,8,6,99],[24,6,6,101],[25,6,7,8],[25,15,7,17,"step"],[25,19,7,21,"step"],[25,20,7,22,"result"],[25,26,7,28],[25,28,7,30],[26,8,7,32,"result"],[26,14,7,38],[26,15,7,39,"done"],[26,19,7,43],[26,22,7,46,"resolve"],[26,29,7,53],[26,30,7,54,"result"],[26,36,7,60],[26,37,7,61,"value"],[26,42,7,66],[26,43,7,67],[26,46,7,70,"adopt"],[26,51,7,75],[26,52,7,76,"result"],[26,58,7,82],[26,59,7,83,"value"],[26,64,7,88],[26,65,7,89],[26,66,7,90,"then"],[26,70,7,94],[26,71,7,95,"fulfilled"],[26,80,7,104],[26,82,7,106,"rejected"],[26,90,7,114],[26,91,7,115],[27,6,7,117],[28,6,8,8,"step"],[28,10,8,12],[28,11,8,13],[28,12,8,14,"generator"],[28,21,8,23],[28,24,8,26,"generator"],[28,33,8,35],[28,34,8,36,"apply"],[28,39,8,41],[28,40,8,42,"thisArg"],[28,47,8,49],[28,49,8,51,"_arguments"],[28,59,8,61],[28,63,8,65],[28,65,8,67],[28,66,8,68],[28,68,8,70,"next"],[28,72,8,74],[28,73,8,75],[28,74,8,76],[28,75,8,77],[29,4,9,4],[29,5,9,5],[29,6,9,6],[30,2,10,0],[30,3,10,1],[31,2,11,0,"Object"],[31,8,11,6],[31,9,11,7,"defineProperty"],[31,23,11,21],[31,24,11,22,"exports"],[31,31,11,29],[31,33,11,31],[31,45,11,43],[31,47,11,45],[32,4,11,47,"value"],[32,9,11,52],[32,11,11,54],[33,2,11,59],[33,3,11,60],[33,4,11,61],[34,2,12,0],[34,8,12,6,"constants_1"],[34,19,12,17],[34,22,12,20,"require"],[34,29,12,27],[34,30,12,27,"_dependencyMap"],[34,44,12,27],[34,67,12,46],[34,68,12,47],[35,2,13,0],[35,8,13,6,"errors_1"],[35,16,13,14],[35,19,13,17,"require"],[35,26,13,24],[35,27,13,24,"_dependencyMap"],[35,41,13,24],[35,61,13,40],[35,62,13,41],[36,2,14,0],[36,8,14,6,"fetch_1"],[36,15,14,13],[36,18,14,16,"require"],[36,25,14,23],[36,26,14,23,"_dependencyMap"],[36,40,14,23],[36,59,14,38],[36,60,14,39],[37,2,15,0],[37,8,15,6,"helpers_1"],[37,17,15,15],[37,20,15,18,"require"],[37,27,15,25],[37,28,15,25,"_dependencyMap"],[37,42,15,25],[37,63,15,42],[37,64,15,43],[38,2,16,0],[38,8,16,6,"StorageBucketApi"],[38,24,16,22],[38,25,16,23],[39,4,17,4,"constructor"],[39,15,17,15,"constructor"],[39,16,17,16,"url"],[39,19,17,19],[39,21,17,21,"headers"],[39,28,17,28],[39,31,17,31],[39,32,17,32],[39,33,17,33],[39,35,17,35,"fetch"],[39,40,17,40],[39,42,17,42,"opts"],[39,46,17,46],[39,48,17,48],[40,6,18,8],[40,10,18,12],[40,11,18,13,"shouldThrowOnError"],[40,29,18,31],[40,32,18,34],[40,37,18,39],[41,6,19,8],[41,12,19,14,"baseUrl"],[41,19,19,21],[41,22,19,24],[41,26,19,28,"URL"],[41,29,19,31],[41,30,19,32,"url"],[41,33,19,35],[41,34,19,36],[42,6,20,8],[43,6,21,8],[44,6,22,8],[44,10,22,12,"opts"],[44,14,22,16],[44,19,22,21],[44,23,22,25],[44,27,22,29,"opts"],[44,31,22,33],[44,36,22,38],[44,41,22,43],[44,42,22,44],[44,45,22,47],[44,50,22,52],[44,51,22,53],[44,54,22,56,"opts"],[44,58,22,60],[44,59,22,61,"useNewHostname"],[44,73,22,75],[44,75,22,77],[45,8,23,12],[45,14,23,18,"isSupabaseHost"],[45,28,23,32],[45,31,23,35],[45,55,23,59],[45,56,23,60,"test"],[45,60,23,64],[45,61,23,65,"baseUrl"],[45,68,23,72],[45,69,23,73,"hostname"],[45,77,23,81],[45,78,23,82],[46,8,24,12],[46,12,24,16,"isSupabaseHost"],[46,26,24,30],[46,30,24,34],[46,31,24,35,"baseUrl"],[46,38,24,42],[46,39,24,43,"hostname"],[46,47,24,51],[46,48,24,52,"includes"],[46,56,24,60],[46,57,24,61],[46,76,24,80],[46,77,24,81],[46,79,24,83],[47,10,25,16,"baseUrl"],[47,17,25,23],[47,18,25,24,"hostname"],[47,26,25,32],[47,29,25,35,"baseUrl"],[47,36,25,42],[47,37,25,43,"hostname"],[47,45,25,51],[47,46,25,52,"replace"],[47,53,25,59],[47,54,25,60],[47,65,25,71],[47,67,25,73],[47,86,25,92],[47,87,25,93],[48,8,26,12],[49,6,27,8],[50,6,28,8],[50,10,28,12],[50,11,28,13,"url"],[50,14,28,16],[50,17,28,19,"baseUrl"],[50,24,28,26],[50,25,28,27,"href"],[50,29,28,31],[51,6,29,8],[51,10,29,12],[51,11,29,13,"headers"],[51,18,29,20],[51,21,29,23,"Object"],[51,27,29,29],[51,28,29,30,"assign"],[51,34,29,36],[51,35,29,37,"Object"],[51,41,29,43],[51,42,29,44,"assign"],[51,48,29,50],[51,49,29,51],[51,50,29,52],[51,51,29,53],[51,53,29,55,"constants_1"],[51,64,29,66],[51,65,29,67,"DEFAULT_HEADERS"],[51,80,29,82],[51,81,29,83],[51,83,29,85,"headers"],[51,90,29,92],[51,91,29,93],[52,6,30,8],[52,10,30,12],[52,11,30,13,"fetch"],[52,16,30,18],[52,19,30,21],[52,20,30,22],[52,21,30,23],[52,23,30,25,"helpers_1"],[52,32,30,34],[52,33,30,35,"resolveFetch"],[52,45,30,47],[52,47,30,49,"fetch"],[52,52,30,54],[52,53,30,55],[53,4,31,4],[54,4,32,4],[55,0,33,0],[56,0,34,0],[57,4,35,4,"throwOnError"],[57,16,35,16,"throwOnError"],[57,17,35,16],[57,19,35,19],[58,6,36,8],[58,10,36,12],[58,11,36,13,"shouldThrowOnError"],[58,29,36,31],[58,32,36,34],[58,36,36,38],[59,6,37,8],[59,13,37,15],[59,17,37,19],[60,4,38,4],[61,4,39,4],[62,0,40,0],[63,0,41,0],[64,4,42,4,"listBuckets"],[64,15,42,15,"listBuckets"],[64,16,42,15],[64,18,42,18],[65,6,43,8],[65,13,43,15,"__awaiter"],[65,22,43,24],[65,23,43,25],[65,27,43,29],[65,29,43,31],[65,34,43,36],[65,35,43,37],[65,37,43,39],[65,42,43,44],[65,43,43,45],[65,45,43,47],[65,58,43,60],[66,8,44,12],[66,12,44,16],[67,10,45,16],[67,16,45,22,"data"],[67,20,45,26],[67,23,45,29],[67,29,45,35],[67,30,45,36],[67,31,45,37],[67,33,45,39,"fetch_1"],[67,40,45,46],[67,41,45,47,"get"],[67,44,45,50],[67,46,45,52],[67,50,45,56],[67,51,45,57,"fetch"],[67,56,45,62],[67,58,45,64],[67,61,45,67],[67,65,45,71],[67,66,45,72,"url"],[67,69,45,75],[67,78,45,84],[67,80,45,86],[68,12,45,88,"headers"],[68,19,45,95],[68,21,45,97],[68,25,45,101],[68,26,45,102,"headers"],[69,10,45,110],[69,11,45,111],[69,12,45,112],[70,10,46,16],[70,17,46,23],[71,12,46,25,"data"],[71,16,46,29],[72,12,46,31,"error"],[72,17,46,36],[72,19,46,38],[73,10,46,43],[73,11,46,44],[74,8,47,12],[74,9,47,13],[74,10,48,12],[74,17,48,19,"error"],[74,22,48,24],[74,24,48,26],[75,10,49,16],[75,14,49,20],[75,18,49,24],[75,19,49,25,"shouldThrowOnError"],[75,37,49,43],[75,39,49,45],[76,12,50,20],[76,18,50,26,"error"],[76,23,50,31],[77,10,51,16],[78,10,52,16],[78,14,52,20],[78,15,52,21],[78,16,52,22],[78,18,52,24,"errors_1"],[78,26,52,32],[78,27,52,33,"isStorageError"],[78,41,52,47],[78,43,52,49,"error"],[78,48,52,54],[78,49,52,55],[78,51,52,57],[79,12,53,20],[79,19,53,27],[80,14,53,29,"data"],[80,18,53,33],[80,20,53,35],[80,24,53,39],[81,14,53,41,"error"],[82,12,53,47],[82,13,53,48],[83,10,54,16],[84,10,55,16],[84,16,55,22,"error"],[84,21,55,27],[85,8,56,12],[86,6,57,8],[86,7,57,9],[86,8,57,10],[87,4,58,4],[88,4,59,4],[89,0,60,0],[90,0,61,0],[91,0,62,0],[92,0,63,0],[93,4,64,4,"getBucket"],[93,13,64,13,"getBucket"],[93,14,64,14,"id"],[93,16,64,16],[93,18,64,18],[94,6,65,8],[94,13,65,15,"__awaiter"],[94,22,65,24],[94,23,65,25],[94,27,65,29],[94,29,65,31],[94,34,65,36],[94,35,65,37],[94,37,65,39],[94,42,65,44],[94,43,65,45],[94,45,65,47],[94,58,65,60],[95,8,66,12],[95,12,66,16],[96,10,67,16],[96,16,67,22,"data"],[96,20,67,26],[96,23,67,29],[96,29,67,35],[96,30,67,36],[96,31,67,37],[96,33,67,39,"fetch_1"],[96,40,67,46],[96,41,67,47,"get"],[96,44,67,50],[96,46,67,52],[96,50,67,56],[96,51,67,57,"fetch"],[96,56,67,62],[96,58,67,64],[96,61,67,67],[96,65,67,71],[96,66,67,72,"url"],[96,69,67,75],[96,80,67,86,"id"],[96,82,67,88],[96,84,67,90],[96,86,67,92],[97,12,67,94,"headers"],[97,19,67,101],[97,21,67,103],[97,25,67,107],[97,26,67,108,"headers"],[98,10,67,116],[98,11,67,117],[98,12,67,118],[99,10,68,16],[99,17,68,23],[100,12,68,25,"data"],[100,16,68,29],[101,12,68,31,"error"],[101,17,68,36],[101,19,68,38],[102,10,68,43],[102,11,68,44],[103,8,69,12],[103,9,69,13],[103,10,70,12],[103,17,70,19,"error"],[103,22,70,24],[103,24,70,26],[104,10,71,16],[104,14,71,20],[104,18,71,24],[104,19,71,25,"shouldThrowOnError"],[104,37,71,43],[104,39,71,45],[105,12,72,20],[105,18,72,26,"error"],[105,23,72,31],[106,10,73,16],[107,10,74,16],[107,14,74,20],[107,15,74,21],[107,16,74,22],[107,18,74,24,"errors_1"],[107,26,74,32],[107,27,74,33,"isStorageError"],[107,41,74,47],[107,43,74,49,"error"],[107,48,74,54],[107,49,74,55],[107,51,74,57],[108,12,75,20],[108,19,75,27],[109,14,75,29,"data"],[109,18,75,33],[109,20,75,35],[109,24,75,39],[110,14,75,41,"error"],[111,12,75,47],[111,13,75,48],[112,10,76,16],[113,10,77,16],[113,16,77,22,"error"],[113,21,77,27],[114,8,78,12],[115,6,79,8],[115,7,79,9],[115,8,79,10],[116,4,80,4],[117,4,81,4],[118,0,82,0],[119,0,83,0],[120,0,84,0],[121,0,85,0],[122,0,86,0],[123,0,87,0],[124,0,88,0],[125,0,89,0],[126,0,90,0],[127,0,91,0],[128,0,92,0],[129,0,93,0],[130,0,94,0],[131,0,95,0],[132,4,96,4,"createBucket"],[132,16,96,16,"createBucket"],[132,17,96,17,"id"],[132,19,96,19],[132,21,96,21,"options"],[132,28,96,28],[132,31,96,31],[133,6,97,8,"public"],[133,12,97,14],[133,14,97,16],[134,4,98,4],[134,5,98,5],[134,7,98,7],[135,6,99,8],[135,13,99,15,"__awaiter"],[135,22,99,24],[135,23,99,25],[135,27,99,29],[135,29,99,31],[135,34,99,36],[135,35,99,37],[135,37,99,39],[135,42,99,44],[135,43,99,45],[135,45,99,47],[135,58,99,60],[136,8,100,12],[136,12,100,16],[137,10,101,16],[137,16,101,22,"data"],[137,20,101,26],[137,23,101,29],[137,29,101,35],[137,30,101,36],[137,31,101,37],[137,33,101,39,"fetch_1"],[137,40,101,46],[137,41,101,47,"post"],[137,45,101,51],[137,47,101,53],[137,51,101,57],[137,52,101,58,"fetch"],[137,57,101,63],[137,59,101,65],[137,62,101,68],[137,66,101,72],[137,67,101,73,"url"],[137,70,101,76],[137,79,101,85],[137,81,101,87],[138,12,102,20,"id"],[138,14,102,22],[139,12,103,20,"name"],[139,16,103,24],[139,18,103,26,"id"],[139,20,103,28],[140,12,104,20,"type"],[140,16,104,24],[140,18,104,26,"options"],[140,25,104,33],[140,26,104,34,"type"],[140,30,104,38],[141,12,105,20,"public"],[141,18,105,26],[141,20,105,28,"options"],[141,27,105,35],[141,28,105,36,"public"],[141,34,105,42],[142,12,106,20,"file_size_limit"],[142,27,106,35],[142,29,106,37,"options"],[142,36,106,44],[142,37,106,45,"fileSizeLimit"],[142,50,106,58],[143,12,107,20,"allowed_mime_types"],[143,30,107,38],[143,32,107,40,"options"],[143,39,107,47],[143,40,107,48,"allowedMimeTypes"],[144,10,108,16],[144,11,108,17],[144,13,108,19],[145,12,108,21,"headers"],[145,19,108,28],[145,21,108,30],[145,25,108,34],[145,26,108,35,"headers"],[146,10,108,43],[146,11,108,44],[146,12,108,45],[147,10,109,16],[147,17,109,23],[148,12,109,25,"data"],[148,16,109,29],[149,12,109,31,"error"],[149,17,109,36],[149,19,109,38],[150,10,109,43],[150,11,109,44],[151,8,110,12],[151,9,110,13],[151,10,111,12],[151,17,111,19,"error"],[151,22,111,24],[151,24,111,26],[152,10,112,16],[152,14,112,20],[152,18,112,24],[152,19,112,25,"shouldThrowOnError"],[152,37,112,43],[152,39,112,45],[153,12,113,20],[153,18,113,26,"error"],[153,23,113,31],[154,10,114,16],[155,10,115,16],[155,14,115,20],[155,15,115,21],[155,16,115,22],[155,18,115,24,"errors_1"],[155,26,115,32],[155,27,115,33,"isStorageError"],[155,41,115,47],[155,43,115,49,"error"],[155,48,115,54],[155,49,115,55],[155,51,115,57],[156,12,116,20],[156,19,116,27],[157,14,116,29,"data"],[157,18,116,33],[157,20,116,35],[157,24,116,39],[158,14,116,41,"error"],[159,12,116,47],[159,13,116,48],[160,10,117,16],[161,10,118,16],[161,16,118,22,"error"],[161,21,118,27],[162,8,119,12],[163,6,120,8],[163,7,120,9],[163,8,120,10],[164,4,121,4],[165,4,122,4],[166,0,123,0],[167,0,124,0],[168,0,125,0],[169,0,126,0],[170,0,127,0],[171,0,128,0],[172,0,129,0],[173,0,130,0],[174,0,131,0],[175,0,132,0],[176,0,133,0],[177,4,134,4,"updateBucket"],[177,16,134,16,"updateBucket"],[177,17,134,17,"id"],[177,19,134,19],[177,21,134,21,"options"],[177,28,134,28],[177,30,134,30],[178,6,135,8],[178,13,135,15,"__awaiter"],[178,22,135,24],[178,23,135,25],[178,27,135,29],[178,29,135,31],[178,34,135,36],[178,35,135,37],[178,37,135,39],[178,42,135,44],[178,43,135,45],[178,45,135,47],[178,58,135,60],[179,8,136,12],[179,12,136,16],[180,10,137,16],[180,16,137,22,"data"],[180,20,137,26],[180,23,137,29],[180,29,137,35],[180,30,137,36],[180,31,137,37],[180,33,137,39,"fetch_1"],[180,40,137,46],[180,41,137,47,"put"],[180,44,137,50],[180,46,137,52],[180,50,137,56],[180,51,137,57,"fetch"],[180,56,137,62],[180,58,137,64],[180,61,137,67],[180,65,137,71],[180,66,137,72,"url"],[180,69,137,75],[180,80,137,86,"id"],[180,82,137,88],[180,84,137,90],[180,86,137,92],[181,12,138,20,"id"],[181,14,138,22],[182,12,139,20,"name"],[182,16,139,24],[182,18,139,26,"id"],[182,20,139,28],[183,12,140,20,"public"],[183,18,140,26],[183,20,140,28,"options"],[183,27,140,35],[183,28,140,36,"public"],[183,34,140,42],[184,12,141,20,"file_size_limit"],[184,27,141,35],[184,29,141,37,"options"],[184,36,141,44],[184,37,141,45,"fileSizeLimit"],[184,50,141,58],[185,12,142,20,"allowed_mime_types"],[185,30,142,38],[185,32,142,40,"options"],[185,39,142,47],[185,40,142,48,"allowedMimeTypes"],[186,10,143,16],[186,11,143,17],[186,13,143,19],[187,12,143,21,"headers"],[187,19,143,28],[187,21,143,30],[187,25,143,34],[187,26,143,35,"headers"],[188,10,143,43],[188,11,143,44],[188,12,143,45],[189,10,144,16],[189,17,144,23],[190,12,144,25,"data"],[190,16,144,29],[191,12,144,31,"error"],[191,17,144,36],[191,19,144,38],[192,10,144,43],[192,11,144,44],[193,8,145,12],[193,9,145,13],[193,10,146,12],[193,17,146,19,"error"],[193,22,146,24],[193,24,146,26],[194,10,147,16],[194,14,147,20],[194,18,147,24],[194,19,147,25,"shouldThrowOnError"],[194,37,147,43],[194,39,147,45],[195,12,148,20],[195,18,148,26,"error"],[195,23,148,31],[196,10,149,16],[197,10,150,16],[197,14,150,20],[197,15,150,21],[197,16,150,22],[197,18,150,24,"errors_1"],[197,26,150,32],[197,27,150,33,"isStorageError"],[197,41,150,47],[197,43,150,49,"error"],[197,48,150,54],[197,49,150,55],[197,51,150,57],[198,12,151,20],[198,19,151,27],[199,14,151,29,"data"],[199,18,151,33],[199,20,151,35],[199,24,151,39],[200,14,151,41,"error"],[201,12,151,47],[201,13,151,48],[202,10,152,16],[203,10,153,16],[203,16,153,22,"error"],[203,21,153,27],[204,8,154,12],[205,6,155,8],[205,7,155,9],[205,8,155,10],[206,4,156,4],[207,4,157,4],[208,0,158,0],[209,0,159,0],[210,0,160,0],[211,0,161,0],[212,4,162,4,"emptyBucket"],[212,15,162,15,"emptyBucket"],[212,16,162,16,"id"],[212,18,162,18],[212,20,162,20],[213,6,163,8],[213,13,163,15,"__awaiter"],[213,22,163,24],[213,23,163,25],[213,27,163,29],[213,29,163,31],[213,34,163,36],[213,35,163,37],[213,37,163,39],[213,42,163,44],[213,43,163,45],[213,45,163,47],[213,58,163,60],[214,8,164,12],[214,12,164,16],[215,10,165,16],[215,16,165,22,"data"],[215,20,165,26],[215,23,165,29],[215,29,165,35],[215,30,165,36],[215,31,165,37],[215,33,165,39,"fetch_1"],[215,40,165,46],[215,41,165,47,"post"],[215,45,165,51],[215,47,165,53],[215,51,165,57],[215,52,165,58,"fetch"],[215,57,165,63],[215,59,165,65],[215,62,165,68],[215,66,165,72],[215,67,165,73,"url"],[215,70,165,76],[215,81,165,87,"id"],[215,83,165,89],[215,91,165,97],[215,93,165,99],[215,94,165,100],[215,95,165,101],[215,97,165,103],[216,12,165,105,"headers"],[216,19,165,112],[216,21,165,114],[216,25,165,118],[216,26,165,119,"headers"],[217,10,165,127],[217,11,165,128],[217,12,165,129],[218,10,166,16],[218,17,166,23],[219,12,166,25,"data"],[219,16,166,29],[220,12,166,31,"error"],[220,17,166,36],[220,19,166,38],[221,10,166,43],[221,11,166,44],[222,8,167,12],[222,9,167,13],[222,10,168,12],[222,17,168,19,"error"],[222,22,168,24],[222,24,168,26],[223,10,169,16],[223,14,169,20],[223,18,169,24],[223,19,169,25,"shouldThrowOnError"],[223,37,169,43],[223,39,169,45],[224,12,170,20],[224,18,170,26,"error"],[224,23,170,31],[225,10,171,16],[226,10,172,16],[226,14,172,20],[226,15,172,21],[226,16,172,22],[226,18,172,24,"errors_1"],[226,26,172,32],[226,27,172,33,"isStorageError"],[226,41,172,47],[226,43,172,49,"error"],[226,48,172,54],[226,49,172,55],[226,51,172,57],[227,12,173,20],[227,19,173,27],[228,14,173,29,"data"],[228,18,173,33],[228,20,173,35],[228,24,173,39],[229,14,173,41,"error"],[230,12,173,47],[230,13,173,48],[231,10,174,16],[232,10,175,16],[232,16,175,22,"error"],[232,21,175,27],[233,8,176,12],[234,6,177,8],[234,7,177,9],[234,8,177,10],[235,4,178,4],[236,4,179,4],[237,0,180,0],[238,0,181,0],[239,0,182,0],[240,0,183,0],[241,0,184,0],[242,4,185,4,"deleteBucket"],[242,16,185,16,"deleteBucket"],[242,17,185,17,"id"],[242,19,185,19],[242,21,185,21],[243,6,186,8],[243,13,186,15,"__awaiter"],[243,22,186,24],[243,23,186,25],[243,27,186,29],[243,29,186,31],[243,34,186,36],[243,35,186,37],[243,37,186,39],[243,42,186,44],[243,43,186,45],[243,45,186,47],[243,58,186,60],[244,8,187,12],[244,12,187,16],[245,10,188,16],[245,16,188,22,"data"],[245,20,188,26],[245,23,188,29],[245,29,188,35],[245,30,188,36],[245,31,188,37],[245,33,188,39,"fetch_1"],[245,40,188,46],[245,41,188,47,"remove"],[245,47,188,53],[245,49,188,55],[245,53,188,59],[245,54,188,60,"fetch"],[245,59,188,65],[245,61,188,67],[245,64,188,70],[245,68,188,74],[245,69,188,75,"url"],[245,72,188,78],[245,83,188,89,"id"],[245,85,188,91],[245,87,188,93],[245,89,188,95],[245,90,188,96],[245,91,188,97],[245,93,188,99],[246,12,188,101,"headers"],[246,19,188,108],[246,21,188,110],[246,25,188,114],[246,26,188,115,"headers"],[247,10,188,123],[247,11,188,124],[247,12,188,125],[248,10,189,16],[248,17,189,23],[249,12,189,25,"data"],[249,16,189,29],[250,12,189,31,"error"],[250,17,189,36],[250,19,189,38],[251,10,189,43],[251,11,189,44],[252,8,190,12],[252,9,190,13],[252,10,191,12],[252,17,191,19,"error"],[252,22,191,24],[252,24,191,26],[253,10,192,16],[253,14,192,20],[253,18,192,24],[253,19,192,25,"shouldThrowOnError"],[253,37,192,43],[253,39,192,45],[254,12,193,20],[254,18,193,26,"error"],[254,23,193,31],[255,10,194,16],[256,10,195,16],[256,14,195,20],[256,15,195,21],[256,16,195,22],[256,18,195,24,"errors_1"],[256,26,195,32],[256,27,195,33,"isStorageError"],[256,41,195,47],[256,43,195,49,"error"],[256,48,195,54],[256,49,195,55],[256,51,195,57],[257,12,196,20],[257,19,196,27],[258,14,196,29,"data"],[258,18,196,33],[258,20,196,35],[258,24,196,39],[259,14,196,41,"error"],[260,12,196,47],[260,13,196,48],[261,10,197,16],[262,10,198,16],[262,16,198,22,"error"],[262,21,198,27],[263,8,199,12],[264,6,200,8],[264,7,200,9],[264,8,200,10],[265,4,201,4],[266,2,202,0],[267,2,203,0,"exports"],[267,9,203,7],[267,10,203,8,"default"],[267,17,203,15],[267,20,203,18,"StorageBucketApi"],[267,36,203,34],[268,0,203,35],[268,3]],"functionMap":{"names":["<global>","<anonymous>","adopt","P$argument_0","fulfilled","rejected","step","StorageBucketApi","constructor","throwOnError","listBuckets","__awaiter$argument_3","getBucket","createBucket","updateBucket","emptyBucket","deleteBucket"],"mappings":"AAA;4CCC;ICC,kEC,sCD,ID;QGE,2FH;QIC,8FJ;QKC,8GL;CDG;AOM;ICC;KDc;IEI;KFG;IGI;+CCC;SDc;KHC;IKM;+CDC;SCc;KLC;IMgB;+CFG;SEqB;KNC;IOa;+CHC;SGoB;KPC;IQM;+CJC;SIc;KRC;ISO;+CLC;SKc;KTC;CPC"},"hasCjsExports":true},"type":"js/module"}]}