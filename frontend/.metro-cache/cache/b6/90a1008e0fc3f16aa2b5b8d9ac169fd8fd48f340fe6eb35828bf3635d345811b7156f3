{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return Serializer;\n    }\n  });\n  // This file draws heavily from https://github.com/phoenixframework/phoenix/commit/cf098e9cf7a44ee6479d31d911a97d3c7430c6fe\n  // License: https://github.com/phoenixframework/phoenix/blob/master/LICENSE.md\n  class Serializer {\n    constructor() {\n      this.HEADER_LENGTH = 1;\n    }\n    decode(rawPayload, callback) {\n      if (rawPayload.constructor === ArrayBuffer) {\n        return callback(this._binaryDecode(rawPayload));\n      }\n      if (typeof rawPayload === 'string') {\n        return callback(JSON.parse(rawPayload));\n      }\n      return callback({});\n    }\n    _binaryDecode(buffer) {\n      const view = new DataView(buffer);\n      const decoder = new TextDecoder();\n      return this._decodeBroadcast(buffer, view, decoder);\n    }\n    _decodeBroadcast(buffer, view, decoder) {\n      const topicSize = view.getUint8(1);\n      const eventSize = view.getUint8(2);\n      let offset = this.HEADER_LENGTH + 2;\n      const topic = decoder.decode(buffer.slice(offset, offset + topicSize));\n      offset = offset + topicSize;\n      const event = decoder.decode(buffer.slice(offset, offset + eventSize));\n      offset = offset + eventSize;\n      const data = JSON.parse(decoder.decode(buffer.slice(offset, buffer.byteLength)));\n      return {\n        ref: null,\n        topic: topic,\n        event: event,\n        payload: data\n      };\n    }\n  }\n});","lineCount":50,"map":[[7,2,3,15,"Object"],[7,8,3,15],[7,9,3,15,"defineProperty"],[7,23,3,15],[7,24,3,15,"exports"],[7,31,3,15],[8,4,3,15,"enumerable"],[8,14,3,15],[9,4,3,15,"get"],[9,7,3,15],[9,18,3,15,"get"],[9,19,3,15],[10,6,3,15],[10,13,3,15,"Serializer"],[10,23,3,15],[11,4,3,15],[12,2,3,15],[13,2,1,0],[14,2,2,0],[15,2,3,15],[15,8,3,21,"Serializer"],[15,18,3,31],[15,19,3,32],[16,4,4,4,"constructor"],[16,15,4,15,"constructor"],[16,16,4,15],[16,18,4,18],[17,6,5,8],[17,10,5,12],[17,11,5,13,"HEADER_LENGTH"],[17,24,5,26],[17,27,5,29],[17,28,5,30],[18,4,6,4],[19,4,7,4,"decode"],[19,10,7,10,"decode"],[19,11,7,11,"rawPayload"],[19,21,7,21],[19,23,7,23,"callback"],[19,31,7,31],[19,33,7,33],[20,6,8,8],[20,10,8,12,"rawPayload"],[20,20,8,22],[20,21,8,23,"constructor"],[20,32,8,34],[20,37,8,39,"ArrayBuffer"],[20,48,8,50],[20,50,8,52],[21,8,9,12],[21,15,9,19,"callback"],[21,23,9,27],[21,24,9,28],[21,28,9,32],[21,29,9,33,"_binaryDecode"],[21,42,9,46],[21,43,9,47,"rawPayload"],[21,53,9,57],[21,54,9,58],[21,55,9,59],[22,6,10,8],[23,6,11,8],[23,10,11,12],[23,17,11,19,"rawPayload"],[23,27,11,29],[23,32,11,34],[23,40,11,42],[23,42,11,44],[24,8,12,12],[24,15,12,19,"callback"],[24,23,12,27],[24,24,12,28,"JSON"],[24,28,12,32],[24,29,12,33,"parse"],[24,34,12,38],[24,35,12,39,"rawPayload"],[24,45,12,49],[24,46,12,50],[24,47,12,51],[25,6,13,8],[26,6,14,8],[26,13,14,15,"callback"],[26,21,14,23],[26,22,14,24],[26,23,14,25],[26,24,14,26],[26,25,14,27],[27,4,15,4],[28,4,16,4,"_binaryDecode"],[28,17,16,17,"_binaryDecode"],[28,18,16,18,"buffer"],[28,24,16,24],[28,26,16,26],[29,6,17,8],[29,12,17,14,"view"],[29,16,17,18],[29,19,17,21],[29,23,17,25,"DataView"],[29,31,17,33],[29,32,17,34,"buffer"],[29,38,17,40],[29,39,17,41],[30,6,18,8],[30,12,18,14,"decoder"],[30,19,18,21],[30,22,18,24],[30,26,18,28,"TextDecoder"],[30,37,18,39],[30,38,18,40],[30,39,18,41],[31,6,19,8],[31,13,19,15],[31,17,19,19],[31,18,19,20,"_decodeBroadcast"],[31,34,19,36],[31,35,19,37,"buffer"],[31,41,19,43],[31,43,19,45,"view"],[31,47,19,49],[31,49,19,51,"decoder"],[31,56,19,58],[31,57,19,59],[32,4,20,4],[33,4,21,4,"_decodeBroadcast"],[33,20,21,20,"_decodeBroadcast"],[33,21,21,21,"buffer"],[33,27,21,27],[33,29,21,29,"view"],[33,33,21,33],[33,35,21,35,"decoder"],[33,42,21,42],[33,44,21,44],[34,6,22,8],[34,12,22,14,"topicSize"],[34,21,22,23],[34,24,22,26,"view"],[34,28,22,30],[34,29,22,31,"getUint8"],[34,37,22,39],[34,38,22,40],[34,39,22,41],[34,40,22,42],[35,6,23,8],[35,12,23,14,"eventSize"],[35,21,23,23],[35,24,23,26,"view"],[35,28,23,30],[35,29,23,31,"getUint8"],[35,37,23,39],[35,38,23,40],[35,39,23,41],[35,40,23,42],[36,6,24,8],[36,10,24,12,"offset"],[36,16,24,18],[36,19,24,21],[36,23,24,25],[36,24,24,26,"HEADER_LENGTH"],[36,37,24,39],[36,40,24,42],[36,41,24,43],[37,6,25,8],[37,12,25,14,"topic"],[37,17,25,19],[37,20,25,22,"decoder"],[37,27,25,29],[37,28,25,30,"decode"],[37,34,25,36],[37,35,25,37,"buffer"],[37,41,25,43],[37,42,25,44,"slice"],[37,47,25,49],[37,48,25,50,"offset"],[37,54,25,56],[37,56,25,58,"offset"],[37,62,25,64],[37,65,25,67,"topicSize"],[37,74,25,76],[37,75,25,77],[37,76,25,78],[38,6,26,8,"offset"],[38,12,26,14],[38,15,26,17,"offset"],[38,21,26,23],[38,24,26,26,"topicSize"],[38,33,26,35],[39,6,27,8],[39,12,27,14,"event"],[39,17,27,19],[39,20,27,22,"decoder"],[39,27,27,29],[39,28,27,30,"decode"],[39,34,27,36],[39,35,27,37,"buffer"],[39,41,27,43],[39,42,27,44,"slice"],[39,47,27,49],[39,48,27,50,"offset"],[39,54,27,56],[39,56,27,58,"offset"],[39,62,27,64],[39,65,27,67,"eventSize"],[39,74,27,76],[39,75,27,77],[39,76,27,78],[40,6,28,8,"offset"],[40,12,28,14],[40,15,28,17,"offset"],[40,21,28,23],[40,24,28,26,"eventSize"],[40,33,28,35],[41,6,29,8],[41,12,29,14,"data"],[41,16,29,18],[41,19,29,21,"JSON"],[41,23,29,25],[41,24,29,26,"parse"],[41,29,29,31],[41,30,29,32,"decoder"],[41,37,29,39],[41,38,29,40,"decode"],[41,44,29,46],[41,45,29,47,"buffer"],[41,51,29,53],[41,52,29,54,"slice"],[41,57,29,59],[41,58,29,60,"offset"],[41,64,29,66],[41,66,29,68,"buffer"],[41,72,29,74],[41,73,29,75,"byteLength"],[41,83,29,85],[41,84,29,86],[41,85,29,87],[41,86,29,88],[42,6,30,8],[42,13,30,15],[43,8,30,17,"ref"],[43,11,30,20],[43,13,30,22],[43,17,30,26],[44,8,30,28,"topic"],[44,13,30,33],[44,15,30,35,"topic"],[44,20,30,40],[45,8,30,42,"event"],[45,13,30,47],[45,15,30,49,"event"],[45,20,30,54],[46,8,30,56,"payload"],[46,15,30,63],[46,17,30,65,"data"],[47,6,30,70],[47,7,30,71],[48,4,31,4],[49,2,32,0],[50,0,32,1],[50,3]],"functionMap":{"names":["<global>","Serializer","Serializer#constructor","Serializer#decode","Serializer#_binaryDecode","Serializer#_decodeBroadcast"],"mappings":"AAA;eCE;ICC;KDE;IEC;KFQ;IGC;KHI;IIC;KJU;CDC"},"hasCjsExports":false},"type":"js/module"}]}