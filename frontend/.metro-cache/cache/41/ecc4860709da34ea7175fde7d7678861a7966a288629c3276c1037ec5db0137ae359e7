{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return RealtimePresence;\n    }\n  });\n  Object.defineProperty(exports, \"REALTIME_PRESENCE_LISTEN_EVENTS\", {\n    enumerable: true,\n    get: function () {\n      return REALTIME_PRESENCE_LISTEN_EVENTS;\n    }\n  });\n  /*\n    This file draws heavily from https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/assets/js/phoenix/presence.js\n    License: https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/LICENSE.md\n  */\n  var REALTIME_PRESENCE_LISTEN_EVENTS;\n  (function (REALTIME_PRESENCE_LISTEN_EVENTS) {\n    REALTIME_PRESENCE_LISTEN_EVENTS[\"SYNC\"] = \"sync\";\n    REALTIME_PRESENCE_LISTEN_EVENTS[\"JOIN\"] = \"join\";\n    REALTIME_PRESENCE_LISTEN_EVENTS[\"LEAVE\"] = \"leave\";\n  })(REALTIME_PRESENCE_LISTEN_EVENTS || (REALTIME_PRESENCE_LISTEN_EVENTS = {}));\n  class RealtimePresence {\n    /**\n     * Initializes the Presence.\n     *\n     * @param channel - The RealtimeChannel\n     * @param opts - The options,\n     *        for example `{events: {state: 'state', diff: 'diff'}}`\n     */\n    constructor(channel, opts) {\n      this.channel = channel;\n      this.state = {};\n      this.pendingDiffs = [];\n      this.joinRef = null;\n      this.enabled = false;\n      this.caller = {\n        onJoin: () => {},\n        onLeave: () => {},\n        onSync: () => {}\n      };\n      const events = (opts === null || opts === void 0 ? void 0 : opts.events) || {\n        state: 'presence_state',\n        diff: 'presence_diff'\n      };\n      this.channel._on(events.state, {}, newState => {\n        const {\n          onJoin,\n          onLeave,\n          onSync\n        } = this.caller;\n        this.joinRef = this.channel._joinRef();\n        this.state = RealtimePresence.syncState(this.state, newState, onJoin, onLeave);\n        this.pendingDiffs.forEach(diff => {\n          this.state = RealtimePresence.syncDiff(this.state, diff, onJoin, onLeave);\n        });\n        this.pendingDiffs = [];\n        onSync();\n      });\n      this.channel._on(events.diff, {}, diff => {\n        const {\n          onJoin,\n          onLeave,\n          onSync\n        } = this.caller;\n        if (this.inPendingSyncState()) {\n          this.pendingDiffs.push(diff);\n        } else {\n          this.state = RealtimePresence.syncDiff(this.state, diff, onJoin, onLeave);\n          onSync();\n        }\n      });\n      this.onJoin((key, currentPresences, newPresences) => {\n        this.channel._trigger('presence', {\n          event: 'join',\n          key,\n          currentPresences,\n          newPresences\n        });\n      });\n      this.onLeave((key, currentPresences, leftPresences) => {\n        this.channel._trigger('presence', {\n          event: 'leave',\n          key,\n          currentPresences,\n          leftPresences\n        });\n      });\n      this.onSync(() => {\n        this.channel._trigger('presence', {\n          event: 'sync'\n        });\n      });\n    }\n    /**\n     * Used to sync the list of presences on the server with the\n     * client's state.\n     *\n     * An optional `onJoin` and `onLeave` callback can be provided to\n     * react to changes in the client's local presences across\n     * disconnects and reconnects with the server.\n     *\n     * @internal\n     */\n    static syncState(currentState, newState, onJoin, onLeave) {\n      const state = this.cloneDeep(currentState);\n      const transformedState = this.transformState(newState);\n      const joins = {};\n      const leaves = {};\n      this.map(state, (key, presences) => {\n        if (!transformedState[key]) {\n          leaves[key] = presences;\n        }\n      });\n      this.map(transformedState, (key, newPresences) => {\n        const currentPresences = state[key];\n        if (currentPresences) {\n          const newPresenceRefs = newPresences.map(m => m.presence_ref);\n          const curPresenceRefs = currentPresences.map(m => m.presence_ref);\n          const joinedPresences = newPresences.filter(m => curPresenceRefs.indexOf(m.presence_ref) < 0);\n          const leftPresences = currentPresences.filter(m => newPresenceRefs.indexOf(m.presence_ref) < 0);\n          if (joinedPresences.length > 0) {\n            joins[key] = joinedPresences;\n          }\n          if (leftPresences.length > 0) {\n            leaves[key] = leftPresences;\n          }\n        } else {\n          joins[key] = newPresences;\n        }\n      });\n      return this.syncDiff(state, {\n        joins,\n        leaves\n      }, onJoin, onLeave);\n    }\n    /**\n     * Used to sync a diff of presence join and leave events from the\n     * server, as they happen.\n     *\n     * Like `syncState`, `syncDiff` accepts optional `onJoin` and\n     * `onLeave` callbacks to react to a user joining or leaving from a\n     * device.\n     *\n     * @internal\n     */\n    static syncDiff(state, diff, onJoin, onLeave) {\n      const {\n        joins,\n        leaves\n      } = {\n        joins: this.transformState(diff.joins),\n        leaves: this.transformState(diff.leaves)\n      };\n      if (!onJoin) {\n        onJoin = () => {};\n      }\n      if (!onLeave) {\n        onLeave = () => {};\n      }\n      this.map(joins, (key, newPresences) => {\n        var _a;\n        const currentPresences = (_a = state[key]) !== null && _a !== void 0 ? _a : [];\n        state[key] = this.cloneDeep(newPresences);\n        if (currentPresences.length > 0) {\n          const joinedPresenceRefs = state[key].map(m => m.presence_ref);\n          const curPresences = currentPresences.filter(m => joinedPresenceRefs.indexOf(m.presence_ref) < 0);\n          state[key].unshift(...curPresences);\n        }\n        onJoin(key, currentPresences, newPresences);\n      });\n      this.map(leaves, (key, leftPresences) => {\n        let currentPresences = state[key];\n        if (!currentPresences) return;\n        const presenceRefsToRemove = leftPresences.map(m => m.presence_ref);\n        currentPresences = currentPresences.filter(m => presenceRefsToRemove.indexOf(m.presence_ref) < 0);\n        state[key] = currentPresences;\n        onLeave(key, currentPresences, leftPresences);\n        if (currentPresences.length === 0) delete state[key];\n      });\n      return state;\n    }\n    /** @internal */\n    static map(obj, func) {\n      return Object.getOwnPropertyNames(obj).map(key => func(key, obj[key]));\n    }\n    /**\n     * Remove 'metas' key\n     * Change 'phx_ref' to 'presence_ref'\n     * Remove 'phx_ref' and 'phx_ref_prev'\n     *\n     * @example\n     * // returns {\n     *  abc123: [\n     *    { presence_ref: '2', user_id: 1 },\n     *    { presence_ref: '3', user_id: 2 }\n     *  ]\n     * }\n     * RealtimePresence.transformState({\n     *  abc123: {\n     *    metas: [\n     *      { phx_ref: '2', phx_ref_prev: '1' user_id: 1 },\n     *      { phx_ref: '3', user_id: 2 }\n     *    ]\n     *  }\n     * })\n     *\n     * @internal\n     */\n    static transformState(state) {\n      state = this.cloneDeep(state);\n      return Object.getOwnPropertyNames(state).reduce((newState, key) => {\n        const presences = state[key];\n        if ('metas' in presences) {\n          newState[key] = presences.metas.map(presence => {\n            presence['presence_ref'] = presence['phx_ref'];\n            delete presence['phx_ref'];\n            delete presence['phx_ref_prev'];\n            return presence;\n          });\n        } else {\n          newState[key] = presences;\n        }\n        return newState;\n      }, {});\n    }\n    /** @internal */\n    static cloneDeep(obj) {\n      return JSON.parse(JSON.stringify(obj));\n    }\n    /** @internal */\n    onJoin(callback) {\n      this.caller.onJoin = callback;\n    }\n    /** @internal */\n    onLeave(callback) {\n      this.caller.onLeave = callback;\n    }\n    /** @internal */\n    onSync(callback) {\n      this.caller.onSync = callback;\n    }\n    /** @internal */\n    inPendingSyncState() {\n      return !this.joinRef || this.joinRef !== this.channel._joinRef();\n    }\n  }\n});","lineCount":254,"map":[[7,2,11,15,"Object"],[7,8,11,15],[7,9,11,15,"defineProperty"],[7,23,11,15],[7,24,11,15,"exports"],[7,31,11,15],[8,4,11,15,"enumerable"],[8,14,11,15],[9,4,11,15,"get"],[9,7,11,15],[9,18,11,15,"get"],[9,19,11,15],[10,6,11,15],[10,13,11,15,"RealtimePresence"],[10,29,11,15],[11,4,11,15],[12,2,11,15],[13,2,5,0,"Object"],[13,8,5,0],[13,9,5,0,"defineProperty"],[13,23,5,0],[13,24,5,0,"exports"],[13,31,5,0],[14,4,5,0,"enumerable"],[14,14,5,0],[15,4,5,0,"get"],[15,7,5,0],[15,18,5,0,"get"],[15,19,5,0],[16,6,5,0],[16,13,5,0,"REALTIME_PRESENCE_LISTEN_EVENTS"],[16,44,5,0],[17,4,5,0],[18,2,5,0],[19,2,1,0],[20,0,2,0],[21,0,3,0],[22,0,4,0],[23,2,5,7],[23,6,5,11,"REALTIME_PRESENCE_LISTEN_EVENTS"],[23,37,5,42],[24,2,6,0],[24,3,6,1],[24,13,6,11,"REALTIME_PRESENCE_LISTEN_EVENTS"],[24,44,6,42],[24,46,6,44],[25,4,7,4,"REALTIME_PRESENCE_LISTEN_EVENTS"],[25,35,7,35],[25,36,7,36],[25,42,7,42],[25,43,7,43],[25,46,7,46],[25,52,7,52],[26,4,8,4,"REALTIME_PRESENCE_LISTEN_EVENTS"],[26,35,8,35],[26,36,8,36],[26,42,8,42],[26,43,8,43],[26,46,8,46],[26,52,8,52],[27,4,9,4,"REALTIME_PRESENCE_LISTEN_EVENTS"],[27,35,9,35],[27,36,9,36],[27,43,9,43],[27,44,9,44],[27,47,9,47],[27,54,9,54],[28,2,10,0],[28,3,10,1],[28,5,10,3,"REALTIME_PRESENCE_LISTEN_EVENTS"],[28,36,10,34],[28,41,10,39,"REALTIME_PRESENCE_LISTEN_EVENTS"],[28,72,10,70],[28,75,10,73],[28,76,10,74],[28,77,10,75],[28,78,10,76],[28,79,10,77],[29,2,11,15],[29,8,11,21,"RealtimePresence"],[29,24,11,37],[29,25,11,38],[30,4,12,4],[31,0,13,0],[32,0,14,0],[33,0,15,0],[34,0,16,0],[35,0,17,0],[36,0,18,0],[37,4,19,4,"constructor"],[37,15,19,15,"constructor"],[37,16,19,16,"channel"],[37,23,19,23],[37,25,19,25,"opts"],[37,29,19,29],[37,31,19,31],[38,6,20,8],[38,10,20,12],[38,11,20,13,"channel"],[38,18,20,20],[38,21,20,23,"channel"],[38,28,20,30],[39,6,21,8],[39,10,21,12],[39,11,21,13,"state"],[39,16,21,18],[39,19,21,21],[39,20,21,22],[39,21,21,23],[40,6,22,8],[40,10,22,12],[40,11,22,13,"pendingDiffs"],[40,23,22,25],[40,26,22,28],[40,28,22,30],[41,6,23,8],[41,10,23,12],[41,11,23,13,"joinRef"],[41,18,23,20],[41,21,23,23],[41,25,23,27],[42,6,24,8],[42,10,24,12],[42,11,24,13,"enabled"],[42,18,24,20],[42,21,24,23],[42,26,24,28],[43,6,25,8],[43,10,25,12],[43,11,25,13,"caller"],[43,17,25,19],[43,20,25,22],[44,8,26,12,"onJoin"],[44,14,26,18],[44,16,26,20,"onJoin"],[44,17,26,20],[44,22,26,26],[44,23,26,28],[44,24,26,29],[45,8,27,12,"onLeave"],[45,15,27,19],[45,17,27,21,"onLeave"],[45,18,27,21],[45,23,27,27],[45,24,27,29],[45,25,27,30],[46,8,28,12,"onSync"],[46,14,28,18],[46,16,28,20,"onSync"],[46,17,28,20],[46,22,28,26],[46,23,28,28],[47,6,29,8],[47,7,29,9],[48,6,30,8],[48,12,30,14,"events"],[48,18,30,20],[48,21,30,23],[48,22,30,24,"opts"],[48,26,30,28],[48,31,30,33],[48,35,30,37],[48,39,30,41,"opts"],[48,43,30,45],[48,48,30,50],[48,53,30,55],[48,54,30,56],[48,57,30,59],[48,62,30,64],[48,63,30,65],[48,66,30,68,"opts"],[48,70,30,72],[48,71,30,73,"events"],[48,77,30,79],[48,82,30,84],[49,8,31,12,"state"],[49,13,31,17],[49,15,31,19],[49,31,31,35],[50,8,32,12,"diff"],[50,12,32,16],[50,14,32,18],[51,6,33,8],[51,7,33,9],[52,6,34,8],[52,10,34,12],[52,11,34,13,"channel"],[52,18,34,20],[52,19,34,21,"_on"],[52,22,34,24],[52,23,34,25,"events"],[52,29,34,31],[52,30,34,32,"state"],[52,35,34,37],[52,37,34,39],[52,38,34,40],[52,39,34,41],[52,41,34,44,"newState"],[52,49,34,52],[52,53,34,57],[53,8,35,12],[53,14,35,18],[54,10,35,20,"onJoin"],[54,16,35,26],[55,10,35,28,"onLeave"],[55,17,35,35],[56,10,35,37,"onSync"],[57,8,35,44],[57,9,35,45],[57,12,35,48],[57,16,35,52],[57,17,35,53,"caller"],[57,23,35,59],[58,8,36,12],[58,12,36,16],[58,13,36,17,"joinRef"],[58,20,36,24],[58,23,36,27],[58,27,36,31],[58,28,36,32,"channel"],[58,35,36,39],[58,36,36,40,"_joinRef"],[58,44,36,48],[58,45,36,49],[58,46,36,50],[59,8,37,12],[59,12,37,16],[59,13,37,17,"state"],[59,18,37,22],[59,21,37,25,"RealtimePresence"],[59,37,37,41],[59,38,37,42,"syncState"],[59,47,37,51],[59,48,37,52],[59,52,37,56],[59,53,37,57,"state"],[59,58,37,62],[59,60,37,64,"newState"],[59,68,37,72],[59,70,37,74,"onJoin"],[59,76,37,80],[59,78,37,82,"onLeave"],[59,85,37,89],[59,86,37,90],[60,8,38,12],[60,12,38,16],[60,13,38,17,"pendingDiffs"],[60,25,38,29],[60,26,38,30,"forEach"],[60,33,38,37],[60,34,38,39,"diff"],[60,38,38,43],[60,42,38,48],[61,10,39,16],[61,14,39,20],[61,15,39,21,"state"],[61,20,39,26],[61,23,39,29,"RealtimePresence"],[61,39,39,45],[61,40,39,46,"syncDiff"],[61,48,39,54],[61,49,39,55],[61,53,39,59],[61,54,39,60,"state"],[61,59,39,65],[61,61,39,67,"diff"],[61,65,39,71],[61,67,39,73,"onJoin"],[61,73,39,79],[61,75,39,81,"onLeave"],[61,82,39,88],[61,83,39,89],[62,8,40,12],[62,9,40,13],[62,10,40,14],[63,8,41,12],[63,12,41,16],[63,13,41,17,"pendingDiffs"],[63,25,41,29],[63,28,41,32],[63,30,41,34],[64,8,42,12,"onSync"],[64,14,42,18],[64,15,42,19],[64,16,42,20],[65,6,43,8],[65,7,43,9],[65,8,43,10],[66,6,44,8],[66,10,44,12],[66,11,44,13,"channel"],[66,18,44,20],[66,19,44,21,"_on"],[66,22,44,24],[66,23,44,25,"events"],[66,29,44,31],[66,30,44,32,"diff"],[66,34,44,36],[66,36,44,38],[66,37,44,39],[66,38,44,40],[66,40,44,43,"diff"],[66,44,44,47],[66,48,44,52],[67,8,45,12],[67,14,45,18],[68,10,45,20,"onJoin"],[68,16,45,26],[69,10,45,28,"onLeave"],[69,17,45,35],[70,10,45,37,"onSync"],[71,8,45,44],[71,9,45,45],[71,12,45,48],[71,16,45,52],[71,17,45,53,"caller"],[71,23,45,59],[72,8,46,12],[72,12,46,16],[72,16,46,20],[72,17,46,21,"inPendingSyncState"],[72,35,46,39],[72,36,46,40],[72,37,46,41],[72,39,46,43],[73,10,47,16],[73,14,47,20],[73,15,47,21,"pendingDiffs"],[73,27,47,33],[73,28,47,34,"push"],[73,32,47,38],[73,33,47,39,"diff"],[73,37,47,43],[73,38,47,44],[74,8,48,12],[74,9,48,13],[74,15,49,17],[75,10,50,16],[75,14,50,20],[75,15,50,21,"state"],[75,20,50,26],[75,23,50,29,"RealtimePresence"],[75,39,50,45],[75,40,50,46,"syncDiff"],[75,48,50,54],[75,49,50,55],[75,53,50,59],[75,54,50,60,"state"],[75,59,50,65],[75,61,50,67,"diff"],[75,65,50,71],[75,67,50,73,"onJoin"],[75,73,50,79],[75,75,50,81,"onLeave"],[75,82,50,88],[75,83,50,89],[76,10,51,16,"onSync"],[76,16,51,22],[76,17,51,23],[76,18,51,24],[77,8,52,12],[78,6,53,8],[78,7,53,9],[78,8,53,10],[79,6,54,8],[79,10,54,12],[79,11,54,13,"onJoin"],[79,17,54,19],[79,18,54,20],[79,19,54,21,"key"],[79,22,54,24],[79,24,54,26,"currentPresences"],[79,40,54,42],[79,42,54,44,"newPresences"],[79,54,54,56],[79,59,54,61],[80,8,55,12],[80,12,55,16],[80,13,55,17,"channel"],[80,20,55,24],[80,21,55,25,"_trigger"],[80,29,55,33],[80,30,55,34],[80,40,55,44],[80,42,55,46],[81,10,56,16,"event"],[81,15,56,21],[81,17,56,23],[81,23,56,29],[82,10,57,16,"key"],[82,13,57,19],[83,10,58,16,"currentPresences"],[83,26,58,32],[84,10,59,16,"newPresences"],[85,8,60,12],[85,9,60,13],[85,10,60,14],[86,6,61,8],[86,7,61,9],[86,8,61,10],[87,6,62,8],[87,10,62,12],[87,11,62,13,"onLeave"],[87,18,62,20],[87,19,62,21],[87,20,62,22,"key"],[87,23,62,25],[87,25,62,27,"currentPresences"],[87,41,62,43],[87,43,62,45,"leftPresences"],[87,56,62,58],[87,61,62,63],[88,8,63,12],[88,12,63,16],[88,13,63,17,"channel"],[88,20,63,24],[88,21,63,25,"_trigger"],[88,29,63,33],[88,30,63,34],[88,40,63,44],[88,42,63,46],[89,10,64,16,"event"],[89,15,64,21],[89,17,64,23],[89,24,64,30],[90,10,65,16,"key"],[90,13,65,19],[91,10,66,16,"currentPresences"],[91,26,66,32],[92,10,67,16,"leftPresences"],[93,8,68,12],[93,9,68,13],[93,10,68,14],[94,6,69,8],[94,7,69,9],[94,8,69,10],[95,6,70,8],[95,10,70,12],[95,11,70,13,"onSync"],[95,17,70,19],[95,18,70,20],[95,24,70,26],[96,8,71,12],[96,12,71,16],[96,13,71,17,"channel"],[96,20,71,24],[96,21,71,25,"_trigger"],[96,29,71,33],[96,30,71,34],[96,40,71,44],[96,42,71,46],[97,10,71,48,"event"],[97,15,71,53],[97,17,71,55],[98,8,71,62],[98,9,71,63],[98,10,71,64],[99,6,72,8],[99,7,72,9],[99,8,72,10],[100,4,73,4],[101,4,74,4],[102,0,75,0],[103,0,76,0],[104,0,77,0],[105,0,78,0],[106,0,79,0],[107,0,80,0],[108,0,81,0],[109,0,82,0],[110,0,83,0],[111,4,84,4],[111,11,84,11,"syncState"],[111,20,84,20,"syncState"],[111,21,84,21,"currentState"],[111,33,84,33],[111,35,84,35,"newState"],[111,43,84,43],[111,45,84,45,"onJoin"],[111,51,84,51],[111,53,84,53,"onLeave"],[111,60,84,60],[111,62,84,62],[112,6,85,8],[112,12,85,14,"state"],[112,17,85,19],[112,20,85,22],[112,24,85,26],[112,25,85,27,"cloneDeep"],[112,34,85,36],[112,35,85,37,"currentState"],[112,47,85,49],[112,48,85,50],[113,6,86,8],[113,12,86,14,"transformedState"],[113,28,86,30],[113,31,86,33],[113,35,86,37],[113,36,86,38,"transformState"],[113,50,86,52],[113,51,86,53,"newState"],[113,59,86,61],[113,60,86,62],[114,6,87,8],[114,12,87,14,"joins"],[114,17,87,19],[114,20,87,22],[114,21,87,23],[114,22,87,24],[115,6,88,8],[115,12,88,14,"leaves"],[115,18,88,20],[115,21,88,23],[115,22,88,24],[115,23,88,25],[116,6,89,8],[116,10,89,12],[116,11,89,13,"map"],[116,14,89,16],[116,15,89,17,"state"],[116,20,89,22],[116,22,89,24],[116,23,89,25,"key"],[116,26,89,28],[116,28,89,30,"presences"],[116,37,89,39],[116,42,89,44],[117,8,90,12],[117,12,90,16],[117,13,90,17,"transformedState"],[117,29,90,33],[117,30,90,34,"key"],[117,33,90,37],[117,34,90,38],[117,36,90,40],[118,10,91,16,"leaves"],[118,16,91,22],[118,17,91,23,"key"],[118,20,91,26],[118,21,91,27],[118,24,91,30,"presences"],[118,33,91,39],[119,8,92,12],[120,6,93,8],[120,7,93,9],[120,8,93,10],[121,6,94,8],[121,10,94,12],[121,11,94,13,"map"],[121,14,94,16],[121,15,94,17,"transformedState"],[121,31,94,33],[121,33,94,35],[121,34,94,36,"key"],[121,37,94,39],[121,39,94,41,"newPresences"],[121,51,94,53],[121,56,94,58],[122,8,95,12],[122,14,95,18,"currentPresences"],[122,30,95,34],[122,33,95,37,"state"],[122,38,95,42],[122,39,95,43,"key"],[122,42,95,46],[122,43,95,47],[123,8,96,12],[123,12,96,16,"currentPresences"],[123,28,96,32],[123,30,96,34],[124,10,97,16],[124,16,97,22,"newPresenceRefs"],[124,31,97,37],[124,34,97,40,"newPresences"],[124,46,97,52],[124,47,97,53,"map"],[124,50,97,56],[124,51,97,58,"m"],[124,52,97,59],[124,56,97,64,"m"],[124,57,97,65],[124,58,97,66,"presence_ref"],[124,70,97,78],[124,71,97,79],[125,10,98,16],[125,16,98,22,"curPresenceRefs"],[125,31,98,37],[125,34,98,40,"currentPresences"],[125,50,98,56],[125,51,98,57,"map"],[125,54,98,60],[125,55,98,62,"m"],[125,56,98,63],[125,60,98,68,"m"],[125,61,98,69],[125,62,98,70,"presence_ref"],[125,74,98,82],[125,75,98,83],[126,10,99,16],[126,16,99,22,"joinedPresences"],[126,31,99,37],[126,34,99,40,"newPresences"],[126,46,99,52],[126,47,99,53,"filter"],[126,53,99,59],[126,54,99,61,"m"],[126,55,99,62],[126,59,99,67,"curPresenceRefs"],[126,74,99,82],[126,75,99,83,"indexOf"],[126,82,99,90],[126,83,99,91,"m"],[126,84,99,92],[126,85,99,93,"presence_ref"],[126,97,99,105],[126,98,99,106],[126,101,99,109],[126,102,99,110],[126,103,99,111],[127,10,100,16],[127,16,100,22,"leftPresences"],[127,29,100,35],[127,32,100,38,"currentPresences"],[127,48,100,54],[127,49,100,55,"filter"],[127,55,100,61],[127,56,100,63,"m"],[127,57,100,64],[127,61,100,69,"newPresenceRefs"],[127,76,100,84],[127,77,100,85,"indexOf"],[127,84,100,92],[127,85,100,93,"m"],[127,86,100,94],[127,87,100,95,"presence_ref"],[127,99,100,107],[127,100,100,108],[127,103,100,111],[127,104,100,112],[127,105,100,113],[128,10,101,16],[128,14,101,20,"joinedPresences"],[128,29,101,35],[128,30,101,36,"length"],[128,36,101,42],[128,39,101,45],[128,40,101,46],[128,42,101,48],[129,12,102,20,"joins"],[129,17,102,25],[129,18,102,26,"key"],[129,21,102,29],[129,22,102,30],[129,25,102,33,"joinedPresences"],[129,40,102,48],[130,10,103,16],[131,10,104,16],[131,14,104,20,"leftPresences"],[131,27,104,33],[131,28,104,34,"length"],[131,34,104,40],[131,37,104,43],[131,38,104,44],[131,40,104,46],[132,12,105,20,"leaves"],[132,18,105,26],[132,19,105,27,"key"],[132,22,105,30],[132,23,105,31],[132,26,105,34,"leftPresences"],[132,39,105,47],[133,10,106,16],[134,8,107,12],[134,9,107,13],[134,15,108,17],[135,10,109,16,"joins"],[135,15,109,21],[135,16,109,22,"key"],[135,19,109,25],[135,20,109,26],[135,23,109,29,"newPresences"],[135,35,109,41],[136,8,110,12],[137,6,111,8],[137,7,111,9],[137,8,111,10],[138,6,112,8],[138,13,112,15],[138,17,112,19],[138,18,112,20,"syncDiff"],[138,26,112,28],[138,27,112,29,"state"],[138,32,112,34],[138,34,112,36],[139,8,112,38,"joins"],[139,13,112,43],[140,8,112,45,"leaves"],[141,6,112,52],[141,7,112,53],[141,9,112,55,"onJoin"],[141,15,112,61],[141,17,112,63,"onLeave"],[141,24,112,70],[141,25,112,71],[142,4,113,4],[143,4,114,4],[144,0,115,0],[145,0,116,0],[146,0,117,0],[147,0,118,0],[148,0,119,0],[149,0,120,0],[150,0,121,0],[151,0,122,0],[152,0,123,0],[153,4,124,4],[153,11,124,11,"syncDiff"],[153,19,124,19,"syncDiff"],[153,20,124,20,"state"],[153,25,124,25],[153,27,124,27,"diff"],[153,31,124,31],[153,33,124,33,"onJoin"],[153,39,124,39],[153,41,124,41,"onLeave"],[153,48,124,48],[153,50,124,50],[154,6,125,8],[154,12,125,14],[155,8,125,16,"joins"],[155,13,125,21],[156,8,125,23,"leaves"],[157,6,125,30],[157,7,125,31],[157,10,125,34],[158,8,126,12,"joins"],[158,13,126,17],[158,15,126,19],[158,19,126,23],[158,20,126,24,"transformState"],[158,34,126,38],[158,35,126,39,"diff"],[158,39,126,43],[158,40,126,44,"joins"],[158,45,126,49],[158,46,126,50],[159,8,127,12,"leaves"],[159,14,127,18],[159,16,127,20],[159,20,127,24],[159,21,127,25,"transformState"],[159,35,127,39],[159,36,127,40,"diff"],[159,40,127,44],[159,41,127,45,"leaves"],[159,47,127,51],[160,6,128,8],[160,7,128,9],[161,6,129,8],[161,10,129,12],[161,11,129,13,"onJoin"],[161,17,129,19],[161,19,129,21],[162,8,130,12,"onJoin"],[162,14,130,18],[162,17,130,21,"onJoin"],[162,18,130,21],[162,23,130,27],[162,24,130,29],[162,25,130,30],[163,6,131,8],[164,6,132,8],[164,10,132,12],[164,11,132,13,"onLeave"],[164,18,132,20],[164,20,132,22],[165,8,133,12,"onLeave"],[165,15,133,19],[165,18,133,22,"onLeave"],[165,19,133,22],[165,24,133,28],[165,25,133,30],[165,26,133,31],[166,6,134,8],[167,6,135,8],[167,10,135,12],[167,11,135,13,"map"],[167,14,135,16],[167,15,135,17,"joins"],[167,20,135,22],[167,22,135,24],[167,23,135,25,"key"],[167,26,135,28],[167,28,135,30,"newPresences"],[167,40,135,42],[167,45,135,47],[168,8,136,12],[168,12,136,16,"_a"],[168,14,136,18],[169,8,137,12],[169,14,137,18,"currentPresences"],[169,30,137,34],[169,33,137,37],[169,34,137,38,"_a"],[169,36,137,40],[169,39,137,43,"state"],[169,44,137,48],[169,45,137,49,"key"],[169,48,137,52],[169,49,137,53],[169,55,137,59],[169,59,137,63],[169,63,137,67,"_a"],[169,65,137,69],[169,70,137,74],[169,75,137,79],[169,76,137,80],[169,79,137,83,"_a"],[169,81,137,85],[169,84,137,88],[169,86,137,90],[170,8,138,12,"state"],[170,13,138,17],[170,14,138,18,"key"],[170,17,138,21],[170,18,138,22],[170,21,138,25],[170,25,138,29],[170,26,138,30,"cloneDeep"],[170,35,138,39],[170,36,138,40,"newPresences"],[170,48,138,52],[170,49,138,53],[171,8,139,12],[171,12,139,16,"currentPresences"],[171,28,139,32],[171,29,139,33,"length"],[171,35,139,39],[171,38,139,42],[171,39,139,43],[171,41,139,45],[172,10,140,16],[172,16,140,22,"joinedPresenceRefs"],[172,34,140,40],[172,37,140,43,"state"],[172,42,140,48],[172,43,140,49,"key"],[172,46,140,52],[172,47,140,53],[172,48,140,54,"map"],[172,51,140,57],[172,52,140,59,"m"],[172,53,140,60],[172,57,140,65,"m"],[172,58,140,66],[172,59,140,67,"presence_ref"],[172,71,140,79],[172,72,140,80],[173,10,141,16],[173,16,141,22,"curPresences"],[173,28,141,34],[173,31,141,37,"currentPresences"],[173,47,141,53],[173,48,141,54,"filter"],[173,54,141,60],[173,55,141,62,"m"],[173,56,141,63],[173,60,141,68,"joinedPresenceRefs"],[173,78,141,86],[173,79,141,87,"indexOf"],[173,86,141,94],[173,87,141,95,"m"],[173,88,141,96],[173,89,141,97,"presence_ref"],[173,101,141,109],[173,102,141,110],[173,105,141,113],[173,106,141,114],[173,107,141,115],[174,10,142,16,"state"],[174,15,142,21],[174,16,142,22,"key"],[174,19,142,25],[174,20,142,26],[174,21,142,27,"unshift"],[174,28,142,34],[174,29,142,35],[174,32,142,38,"curPresences"],[174,44,142,50],[174,45,142,51],[175,8,143,12],[176,8,144,12,"onJoin"],[176,14,144,18],[176,15,144,19,"key"],[176,18,144,22],[176,20,144,24,"currentPresences"],[176,36,144,40],[176,38,144,42,"newPresences"],[176,50,144,54],[176,51,144,55],[177,6,145,8],[177,7,145,9],[177,8,145,10],[178,6,146,8],[178,10,146,12],[178,11,146,13,"map"],[178,14,146,16],[178,15,146,17,"leaves"],[178,21,146,23],[178,23,146,25],[178,24,146,26,"key"],[178,27,146,29],[178,29,146,31,"leftPresences"],[178,42,146,44],[178,47,146,49],[179,8,147,12],[179,12,147,16,"currentPresences"],[179,28,147,32],[179,31,147,35,"state"],[179,36,147,40],[179,37,147,41,"key"],[179,40,147,44],[179,41,147,45],[180,8,148,12],[180,12,148,16],[180,13,148,17,"currentPresences"],[180,29,148,33],[180,31,149,16],[181,8,150,12],[181,14,150,18,"presenceRefsToRemove"],[181,34,150,38],[181,37,150,41,"leftPresences"],[181,50,150,54],[181,51,150,55,"map"],[181,54,150,58],[181,55,150,60,"m"],[181,56,150,61],[181,60,150,66,"m"],[181,61,150,67],[181,62,150,68,"presence_ref"],[181,74,150,80],[181,75,150,81],[182,8,151,12,"currentPresences"],[182,24,151,28],[182,27,151,31,"currentPresences"],[182,43,151,47],[182,44,151,48,"filter"],[182,50,151,54],[182,51,151,56,"m"],[182,52,151,57],[182,56,151,62,"presenceRefsToRemove"],[182,76,151,82],[182,77,151,83,"indexOf"],[182,84,151,90],[182,85,151,91,"m"],[182,86,151,92],[182,87,151,93,"presence_ref"],[182,99,151,105],[182,100,151,106],[182,103,151,109],[182,104,151,110],[182,105,151,111],[183,8,152,12,"state"],[183,13,152,17],[183,14,152,18,"key"],[183,17,152,21],[183,18,152,22],[183,21,152,25,"currentPresences"],[183,37,152,41],[184,8,153,12,"onLeave"],[184,15,153,19],[184,16,153,20,"key"],[184,19,153,23],[184,21,153,25,"currentPresences"],[184,37,153,41],[184,39,153,43,"leftPresences"],[184,52,153,56],[184,53,153,57],[185,8,154,12],[185,12,154,16,"currentPresences"],[185,28,154,32],[185,29,154,33,"length"],[185,35,154,39],[185,40,154,44],[185,41,154,45],[185,43,155,16],[185,50,155,23,"state"],[185,55,155,28],[185,56,155,29,"key"],[185,59,155,32],[185,60,155,33],[186,6,156,8],[186,7,156,9],[186,8,156,10],[187,6,157,8],[187,13,157,15,"state"],[187,18,157,20],[188,4,158,4],[189,4,159,4],[190,4,160,4],[190,11,160,11,"map"],[190,14,160,14,"map"],[190,15,160,15,"obj"],[190,18,160,18],[190,20,160,20,"func"],[190,24,160,24],[190,26,160,26],[191,6,161,8],[191,13,161,15,"Object"],[191,19,161,21],[191,20,161,22,"getOwnPropertyNames"],[191,39,161,41],[191,40,161,42,"obj"],[191,43,161,45],[191,44,161,46],[191,45,161,47,"map"],[191,48,161,50],[191,49,161,52,"key"],[191,52,161,55],[191,56,161,60,"func"],[191,60,161,64],[191,61,161,65,"key"],[191,64,161,68],[191,66,161,70,"obj"],[191,69,161,73],[191,70,161,74,"key"],[191,73,161,77],[191,74,161,78],[191,75,161,79],[191,76,161,80],[192,4,162,4],[193,4,163,4],[194,0,164,0],[195,0,165,0],[196,0,166,0],[197,0,167,0],[198,0,168,0],[199,0,169,0],[200,0,170,0],[201,0,171,0],[202,0,172,0],[203,0,173,0],[204,0,174,0],[205,0,175,0],[206,0,176,0],[207,0,177,0],[208,0,178,0],[209,0,179,0],[210,0,180,0],[211,0,181,0],[212,0,182,0],[213,0,183,0],[214,0,184,0],[215,0,185,0],[216,4,186,4],[216,11,186,11,"transformState"],[216,25,186,25,"transformState"],[216,26,186,26,"state"],[216,31,186,31],[216,33,186,33],[217,6,187,8,"state"],[217,11,187,13],[217,14,187,16],[217,18,187,20],[217,19,187,21,"cloneDeep"],[217,28,187,30],[217,29,187,31,"state"],[217,34,187,36],[217,35,187,37],[218,6,188,8],[218,13,188,15,"Object"],[218,19,188,21],[218,20,188,22,"getOwnPropertyNames"],[218,39,188,41],[218,40,188,42,"state"],[218,45,188,47],[218,46,188,48],[218,47,188,49,"reduce"],[218,53,188,55],[218,54,188,56],[218,55,188,57,"newState"],[218,63,188,65],[218,65,188,67,"key"],[218,68,188,70],[218,73,188,75],[219,8,189,12],[219,14,189,18,"presences"],[219,23,189,27],[219,26,189,30,"state"],[219,31,189,35],[219,32,189,36,"key"],[219,35,189,39],[219,36,189,40],[220,8,190,12],[220,12,190,16],[220,19,190,23],[220,23,190,27,"presences"],[220,32,190,36],[220,34,190,38],[221,10,191,16,"newState"],[221,18,191,24],[221,19,191,25,"key"],[221,22,191,28],[221,23,191,29],[221,26,191,32,"presences"],[221,35,191,41],[221,36,191,42,"metas"],[221,41,191,47],[221,42,191,48,"map"],[221,45,191,51],[221,46,191,53,"presence"],[221,54,191,61],[221,58,191,66],[222,12,192,20,"presence"],[222,20,192,28],[222,21,192,29],[222,35,192,43],[222,36,192,44],[222,39,192,47,"presence"],[222,47,192,55],[222,48,192,56],[222,57,192,65],[222,58,192,66],[223,12,193,20],[223,19,193,27,"presence"],[223,27,193,35],[223,28,193,36],[223,37,193,45],[223,38,193,46],[224,12,194,20],[224,19,194,27,"presence"],[224,27,194,35],[224,28,194,36],[224,42,194,50],[224,43,194,51],[225,12,195,20],[225,19,195,27,"presence"],[225,27,195,35],[226,10,196,16],[226,11,196,17],[226,12,196,18],[227,8,197,12],[227,9,197,13],[227,15,198,17],[228,10,199,16,"newState"],[228,18,199,24],[228,19,199,25,"key"],[228,22,199,28],[228,23,199,29],[228,26,199,32,"presences"],[228,35,199,41],[229,8,200,12],[230,8,201,12],[230,15,201,19,"newState"],[230,23,201,27],[231,6,202,8],[231,7,202,9],[231,9,202,11],[231,10,202,12],[231,11,202,13],[231,12,202,14],[232,4,203,4],[233,4,204,4],[234,4,205,4],[234,11,205,11,"cloneDeep"],[234,20,205,20,"cloneDeep"],[234,21,205,21,"obj"],[234,24,205,24],[234,26,205,26],[235,6,206,8],[235,13,206,15,"JSON"],[235,17,206,19],[235,18,206,20,"parse"],[235,23,206,25],[235,24,206,26,"JSON"],[235,28,206,30],[235,29,206,31,"stringify"],[235,38,206,40],[235,39,206,41,"obj"],[235,42,206,44],[235,43,206,45],[235,44,206,46],[236,4,207,4],[237,4,208,4],[238,4,209,4,"onJoin"],[238,10,209,10,"onJoin"],[238,11,209,11,"callback"],[238,19,209,19],[238,21,209,21],[239,6,210,8],[239,10,210,12],[239,11,210,13,"caller"],[239,17,210,19],[239,18,210,20,"onJoin"],[239,24,210,26],[239,27,210,29,"callback"],[239,35,210,37],[240,4,211,4],[241,4,212,4],[242,4,213,4,"onLeave"],[242,11,213,11,"onLeave"],[242,12,213,12,"callback"],[242,20,213,20],[242,22,213,22],[243,6,214,8],[243,10,214,12],[243,11,214,13,"caller"],[243,17,214,19],[243,18,214,20,"onLeave"],[243,25,214,27],[243,28,214,30,"callback"],[243,36,214,38],[244,4,215,4],[245,4,216,4],[246,4,217,4,"onSync"],[246,10,217,10,"onSync"],[246,11,217,11,"callback"],[246,19,217,19],[246,21,217,21],[247,6,218,8],[247,10,218,12],[247,11,218,13,"caller"],[247,17,218,19],[247,18,218,20,"onSync"],[247,24,218,26],[247,27,218,29,"callback"],[247,35,218,37],[248,4,219,4],[249,4,220,4],[250,4,221,4,"inPendingSyncState"],[250,22,221,22,"inPendingSyncState"],[250,23,221,22],[250,25,221,25],[251,6,222,8],[251,13,222,15],[251,14,222,16],[251,18,222,20],[251,19,222,21,"joinRef"],[251,26,222,28],[251,30,222,32],[251,34,222,36],[251,35,222,37,"joinRef"],[251,42,222,44],[251,47,222,49],[251,51,222,53],[251,52,222,54,"channel"],[251,59,222,61],[251,60,222,62,"_joinRef"],[251,68,222,70],[251,69,222,71],[251,70,222,72],[252,4,223,4],[253,2,224,0],[254,0,224,1],[254,3]],"functionMap":{"names":["<global>","<anonymous>","RealtimePresence","constructor","caller.onJoin","caller.onLeave","caller.onSync","channel._on$argument_2","pendingDiffs.forEach$argument_0","onJoin$argument_0","onLeave$argument_0","onSync$argument_0","syncState","map$argument_1","newPresences.map$argument_0","currentPresences.map$argument_0","newPresences.filter$argument_0","currentPresences.filter$argument_0","syncDiff","onJoin","onLeave","state.key.map$argument_0","leftPresences.map$argument_0","map","Object.getOwnPropertyNames.map$argument_0","transformState","Object.getOwnPropertyNames.reduce$argument_0","presences.metas.map$argument_0","cloneDeep","onSync","inPendingSyncState"],"mappings":"AAA;CCK;CDI;eEC;ICQ;oBCO,SD;qBEC,SF;oBGC,SH;2CIM;sCCI;aDE;SJG;0CIC;SJS;oBMC;SNO;qBOC;SPO;oBQC;SRE;KDC;IUW;wBCK;SDI;mCCC;yDCG,qBD;6DEC,qBF;4DGC,kDH;8DIC,kDJ;SDW;KVE;IgBW;qBCM,SD;sBEG,SF;wBLE;0DQK,qBR;6DIC,qDJ;SKI;yBLC;2DSI,qBT;uDIC,uDJ;SKK;KhBE;IqBE;mDCC,4BD;KrBC;IuBwB;wDCE;oDCG;iBDK;SDM;KvBC;I0BE;K1BE;IiBE;KjBE;IkBE;KlBE;I2BE;K3BE;I4BE;K5BE;CFC"},"hasCjsExports":false},"type":"js/module"}]}