{"dependencies":[{"name":"punycode","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":15,"index":30},"end":{"line":3,"column":34,"index":49}}],"key":"TONbUuSFdSlopo1jMwiVGW5w7mM=","exportNames":["*"],"imports":1}},{"name":"./lib/mappingTable.json","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":19,"index":70},"end":{"line":4,"column":53,"index":104}}],"key":"Hhf9fLFc8A3+p5jvKHiM0uUFi/c=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var punycode = require(_dependencyMap[0], \"punycode\");\n  var mappingTable = require(_dependencyMap[1], \"./lib/mappingTable.json\");\n  var PROCESSING_OPTIONS = {\n    TRANSITIONAL: 0,\n    NONTRANSITIONAL: 1\n  };\n  function normalize(str) {\n    // fix bug in v8\n    return str.split('\\u0000').map(function (s) {\n      return s.normalize('NFC');\n    }).join('\\u0000');\n  }\n  function findStatus(val) {\n    var start = 0;\n    var end = mappingTable.length - 1;\n    while (start <= end) {\n      var mid = Math.floor((start + end) / 2);\n      var target = mappingTable[mid];\n      if (target[0][0] <= val && target[0][1] >= val) {\n        return target;\n      } else if (target[0][0] > val) {\n        end = mid - 1;\n      } else {\n        start = mid + 1;\n      }\n    }\n    return null;\n  }\n  var regexAstralSymbols = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n  function countSymbols(string) {\n    return string\n    // replace every surrogate pair with a BMP symbol\n    .replace(regexAstralSymbols, '_')\n    // then get the length\n    .length;\n  }\n  function mapChars(domain_name, useSTD3, processing_option) {\n    var hasError = false;\n    var processed = \"\";\n    var len = countSymbols(domain_name);\n    for (var i = 0; i < len; ++i) {\n      var codePoint = domain_name.codePointAt(i);\n      var status = findStatus(codePoint);\n      switch (status[1]) {\n        case \"disallowed\":\n          hasError = true;\n          processed += String.fromCodePoint(codePoint);\n          break;\n        case \"ignored\":\n          break;\n        case \"mapped\":\n          processed += String.fromCodePoint.apply(String, status[2]);\n          break;\n        case \"deviation\":\n          if (processing_option === PROCESSING_OPTIONS.TRANSITIONAL) {\n            processed += String.fromCodePoint.apply(String, status[2]);\n          } else {\n            processed += String.fromCodePoint(codePoint);\n          }\n          break;\n        case \"valid\":\n          processed += String.fromCodePoint(codePoint);\n          break;\n        case \"disallowed_STD3_mapped\":\n          if (useSTD3) {\n            hasError = true;\n            processed += String.fromCodePoint(codePoint);\n          } else {\n            processed += String.fromCodePoint.apply(String, status[2]);\n          }\n          break;\n        case \"disallowed_STD3_valid\":\n          if (useSTD3) {\n            hasError = true;\n          }\n          processed += String.fromCodePoint(codePoint);\n          break;\n      }\n    }\n    return {\n      string: processed,\n      error: hasError\n    };\n  }\n  var combiningMarksRegex = /[\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08E4-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B62\\u0B63\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0C00-\\u0C03\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0D01-\\u0D03\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D82\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F\\u109A-\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u180B-\\u180D\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u19B0-\\u19C0\\u19C8\\u19C9\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F\\u1AB0-\\u1ABE\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF2-\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF5\\u1DFC-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA880\\uA881\\uA8B4-\\uA8C4\\uA8E0-\\uA8F1\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9E5\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2D]|\\uD800[\\uDDFD\\uDEE0\\uDF76-\\uDF7A]|\\uD802[\\uDE01-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE0F\\uDE38-\\uDE3A\\uDE3F\\uDEE5\\uDEE6]|\\uD804[\\uDC00-\\uDC02\\uDC38-\\uDC46\\uDC7F-\\uDC82\\uDCB0-\\uDCBA\\uDD00-\\uDD02\\uDD27-\\uDD34\\uDD73\\uDD80-\\uDD82\\uDDB3-\\uDDC0\\uDE2C-\\uDE37\\uDEDF-\\uDEEA\\uDF01-\\uDF03\\uDF3C\\uDF3E-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF57\\uDF62\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDCB0-\\uDCC3\\uDDAF-\\uDDB5\\uDDB8-\\uDDC0\\uDE30-\\uDE40\\uDEAB-\\uDEB7]|\\uD81A[\\uDEF0-\\uDEF4\\uDF30-\\uDF36]|\\uD81B[\\uDF51-\\uDF7E\\uDF8F-\\uDF92]|\\uD82F[\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD83A[\\uDCD0-\\uDCD6]|\\uDB40[\\uDD00-\\uDDEF]/;\n  function validateLabel(label, processing_option) {\n    if (label.substr(0, 4) === \"xn--\") {\n      label = punycode.toUnicode(label);\n      processing_option = PROCESSING_OPTIONS.NONTRANSITIONAL;\n    }\n    var error = false;\n    if (normalize(label) !== label || label[3] === \"-\" && label[4] === \"-\" || label[0] === \"-\" || label[label.length - 1] === \"-\" || label.indexOf(\".\") !== -1 || label.search(combiningMarksRegex) === 0) {\n      error = true;\n    }\n    var len = countSymbols(label);\n    for (var i = 0; i < len; ++i) {\n      var status = findStatus(label.codePointAt(i));\n      if (processing === PROCESSING_OPTIONS.TRANSITIONAL && status[1] !== \"valid\" || processing === PROCESSING_OPTIONS.NONTRANSITIONAL && status[1] !== \"valid\" && status[1] !== \"deviation\") {\n        error = true;\n        break;\n      }\n    }\n    return {\n      label: label,\n      error: error\n    };\n  }\n  function processing(domain_name, useSTD3, processing_option) {\n    var result = mapChars(domain_name, useSTD3, processing_option);\n    result.string = normalize(result.string);\n    var labels = result.string.split(\".\");\n    for (var i = 0; i < labels.length; ++i) {\n      try {\n        var validation = validateLabel(labels[i]);\n        labels[i] = validation.label;\n        result.error = result.error || validation.error;\n      } catch (e) {\n        result.error = true;\n      }\n    }\n    return {\n      string: labels.join(\".\"),\n      error: result.error\n    };\n  }\n  module.exports.toASCII = function (domain_name, useSTD3, processing_option, verifyDnsLength) {\n    var result = processing(domain_name, useSTD3, processing_option);\n    var labels = result.string.split(\".\");\n    labels = labels.map(function (l) {\n      try {\n        return punycode.toASCII(l);\n      } catch (e) {\n        result.error = true;\n        return l;\n      }\n    });\n    if (verifyDnsLength) {\n      var total = labels.slice(0, labels.length - 1).join(\".\").length;\n      if (total.length > 253 || total.length === 0) {\n        result.error = true;\n      }\n      for (var i = 0; i < labels.length; ++i) {\n        if (labels.length > 63 || labels.length === 0) {\n          result.error = true;\n          break;\n        }\n      }\n    }\n    if (result.error) return null;\n    return labels.join(\".\");\n  };\n  module.exports.toUnicode = function (domain_name, useSTD3) {\n    var result = processing(domain_name, useSTD3, PROCESSING_OPTIONS.NONTRANSITIONAL);\n    return {\n      domain: result.string,\n      error: result.error\n    };\n  };\n  module.exports.PROCESSING_OPTIONS = PROCESSING_OPTIONS;\n});","lineCount":163,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[4,6,3,4,"punycode"],[4,14,3,12],[4,17,3,15,"require"],[4,24,3,22],[4,25,3,22,"_dependencyMap"],[4,39,3,22],[4,54,3,33],[4,55,3,34],[5,2,4,0],[5,6,4,4,"mappingTable"],[5,18,4,16],[5,21,4,19,"require"],[5,28,4,26],[5,29,4,26,"_dependencyMap"],[5,43,4,26],[5,73,4,52],[5,74,4,53],[6,2,6,0],[6,6,6,4,"PROCESSING_OPTIONS"],[6,24,6,22],[6,27,6,25],[7,4,7,2,"TRANSITIONAL"],[7,16,7,14],[7,18,7,16],[7,19,7,17],[8,4,8,2,"NONTRANSITIONAL"],[8,19,8,17],[8,21,8,19],[9,2,9,0],[9,3,9,1],[10,2,11,0],[10,11,11,9,"normalize"],[10,20,11,18,"normalize"],[10,21,11,19,"str"],[10,24,11,22],[10,26,11,24],[11,4,11,26],[12,4,12,2],[12,11,12,9,"str"],[12,14,12,12],[12,15,12,13,"split"],[12,20,12,18],[12,21,12,19],[12,29,12,27],[12,30,12,28],[12,31,12,29,"map"],[12,34,12,32],[12,35,12,33],[12,45,12,43,"s"],[12,46,12,44],[12,48,12,46],[13,6,12,48],[13,13,12,55,"s"],[13,14,12,56],[13,15,12,57,"normalize"],[13,24,12,66],[13,25,12,67],[13,30,12,72],[13,31,12,73],[14,4,12,75],[14,5,12,76],[14,6,12,77],[14,7,12,78,"join"],[14,11,12,82],[14,12,12,83],[14,20,12,91],[14,21,12,92],[15,2,13,0],[16,2,15,0],[16,11,15,9,"findStatus"],[16,21,15,19,"findStatus"],[16,22,15,20,"val"],[16,25,15,23],[16,27,15,25],[17,4,16,2],[17,8,16,6,"start"],[17,13,16,11],[17,16,16,14],[17,17,16,15],[18,4,17,2],[18,8,17,6,"end"],[18,11,17,9],[18,14,17,12,"mappingTable"],[18,26,17,24],[18,27,17,25,"length"],[18,33,17,31],[18,36,17,34],[18,37,17,35],[19,4,19,2],[19,11,19,9,"start"],[19,16,19,14],[19,20,19,18,"end"],[19,23,19,21],[19,25,19,23],[20,6,20,4],[20,10,20,8,"mid"],[20,13,20,11],[20,16,20,14,"Math"],[20,20,20,18],[20,21,20,19,"floor"],[20,26,20,24],[20,27,20,25],[20,28,20,26,"start"],[20,33,20,31],[20,36,20,34,"end"],[20,39,20,37],[20,43,20,41],[20,44,20,42],[20,45,20,43],[21,6,22,4],[21,10,22,8,"target"],[21,16,22,14],[21,19,22,17,"mappingTable"],[21,31,22,29],[21,32,22,30,"mid"],[21,35,22,33],[21,36,22,34],[22,6,23,4],[22,10,23,8,"target"],[22,16,23,14],[22,17,23,15],[22,18,23,16],[22,19,23,17],[22,20,23,18],[22,21,23,19],[22,22,23,20],[22,26,23,24,"val"],[22,29,23,27],[22,33,23,31,"target"],[22,39,23,37],[22,40,23,38],[22,41,23,39],[22,42,23,40],[22,43,23,41],[22,44,23,42],[22,45,23,43],[22,49,23,47,"val"],[22,52,23,50],[22,54,23,52],[23,8,24,6],[23,15,24,13,"target"],[23,21,24,19],[24,6,25,4],[24,7,25,5],[24,13,25,11],[24,17,25,15,"target"],[24,23,25,21],[24,24,25,22],[24,25,25,23],[24,26,25,24],[24,27,25,25],[24,28,25,26],[24,29,25,27],[24,32,25,30,"val"],[24,35,25,33],[24,37,25,35],[25,8,26,6,"end"],[25,11,26,9],[25,14,26,12,"mid"],[25,17,26,15],[25,20,26,18],[25,21,26,19],[26,6,27,4],[26,7,27,5],[26,13,27,11],[27,8,28,6,"start"],[27,13,28,11],[27,16,28,14,"mid"],[27,19,28,17],[27,22,28,20],[27,23,28,21],[28,6,29,4],[29,4,30,2],[30,4,32,2],[30,11,32,9],[30,15,32,13],[31,2,33,0],[32,2,35,0],[32,6,35,4,"regexAstralSymbols"],[32,24,35,22],[32,27,35,25],[32,60,35,58],[33,2,37,0],[33,11,37,9,"countSymbols"],[33,23,37,21,"countSymbols"],[33,24,37,22,"string"],[33,30,37,28],[33,32,37,30],[34,4,38,2],[34,11,38,9,"string"],[35,4,39,4],[36,4,39,4],[36,5,40,5,"replace"],[36,12,40,12],[36,13,40,13,"regexAstralSymbols"],[36,31,40,31],[36,33,40,33],[36,36,40,36],[37,4,41,4],[38,4,41,4],[38,5,42,5,"length"],[38,11,42,11],[39,2,43,0],[40,2,45,0],[40,11,45,9,"mapChars"],[40,19,45,17,"mapChars"],[40,20,45,18,"domain_name"],[40,31,45,29],[40,33,45,31,"useSTD3"],[40,40,45,38],[40,42,45,40,"processing_option"],[40,59,45,57],[40,61,45,59],[41,4,46,2],[41,8,46,6,"hasError"],[41,16,46,14],[41,19,46,17],[41,24,46,22],[42,4,47,2],[42,8,47,6,"processed"],[42,17,47,15],[42,20,47,18],[42,22,47,20],[43,4,49,2],[43,8,49,6,"len"],[43,11,49,9],[43,14,49,12,"countSymbols"],[43,26,49,24],[43,27,49,25,"domain_name"],[43,38,49,36],[43,39,49,37],[44,4,50,2],[44,9,50,7],[44,13,50,11,"i"],[44,14,50,12],[44,17,50,15],[44,18,50,16],[44,20,50,18,"i"],[44,21,50,19],[44,24,50,22,"len"],[44,27,50,25],[44,29,50,27],[44,31,50,29,"i"],[44,32,50,30],[44,34,50,32],[45,6,51,4],[45,10,51,8,"codePoint"],[45,19,51,17],[45,22,51,20,"domain_name"],[45,33,51,31],[45,34,51,32,"codePointAt"],[45,45,51,43],[45,46,51,44,"i"],[45,47,51,45],[45,48,51,46],[46,6,52,4],[46,10,52,8,"status"],[46,16,52,14],[46,19,52,17,"findStatus"],[46,29,52,27],[46,30,52,28,"codePoint"],[46,39,52,37],[46,40,52,38],[47,6,54,4],[47,14,54,12,"status"],[47,20,54,18],[47,21,54,19],[47,22,54,20],[47,23,54,21],[48,8,55,6],[48,13,55,11],[48,25,55,23],[49,10,56,8,"hasError"],[49,18,56,16],[49,21,56,19],[49,25,56,23],[50,10,57,8,"processed"],[50,19,57,17],[50,23,57,21,"String"],[50,29,57,27],[50,30,57,28,"fromCodePoint"],[50,43,57,41],[50,44,57,42,"codePoint"],[50,53,57,51],[50,54,57,52],[51,10,58,8],[52,8,59,6],[52,13,59,11],[52,22,59,20],[53,10,60,8],[54,8,61,6],[54,13,61,11],[54,21,61,19],[55,10,62,8,"processed"],[55,19,62,17],[55,23,62,21,"String"],[55,29,62,27],[55,30,62,28,"fromCodePoint"],[55,43,62,41],[55,44,62,42,"apply"],[55,49,62,47],[55,50,62,48,"String"],[55,56,62,54],[55,58,62,56,"status"],[55,64,62,62],[55,65,62,63],[55,66,62,64],[55,67,62,65],[55,68,62,66],[56,10,63,8],[57,8,64,6],[57,13,64,11],[57,24,64,22],[58,10,65,8],[58,14,65,12,"processing_option"],[58,31,65,29],[58,36,65,34,"PROCESSING_OPTIONS"],[58,54,65,52],[58,55,65,53,"TRANSITIONAL"],[58,67,65,65],[58,69,65,67],[59,12,66,10,"processed"],[59,21,66,19],[59,25,66,23,"String"],[59,31,66,29],[59,32,66,30,"fromCodePoint"],[59,45,66,43],[59,46,66,44,"apply"],[59,51,66,49],[59,52,66,50,"String"],[59,58,66,56],[59,60,66,58,"status"],[59,66,66,64],[59,67,66,65],[59,68,66,66],[59,69,66,67],[59,70,66,68],[60,10,67,8],[60,11,67,9],[60,17,67,15],[61,12,68,10,"processed"],[61,21,68,19],[61,25,68,23,"String"],[61,31,68,29],[61,32,68,30,"fromCodePoint"],[61,45,68,43],[61,46,68,44,"codePoint"],[61,55,68,53],[61,56,68,54],[62,10,69,8],[63,10,70,8],[64,8,71,6],[64,13,71,11],[64,20,71,18],[65,10,72,8,"processed"],[65,19,72,17],[65,23,72,21,"String"],[65,29,72,27],[65,30,72,28,"fromCodePoint"],[65,43,72,41],[65,44,72,42,"codePoint"],[65,53,72,51],[65,54,72,52],[66,10,73,8],[67,8,74,6],[67,13,74,11],[67,37,74,35],[68,10,75,8],[68,14,75,12,"useSTD3"],[68,21,75,19],[68,23,75,21],[69,12,76,10,"hasError"],[69,20,76,18],[69,23,76,21],[69,27,76,25],[70,12,77,10,"processed"],[70,21,77,19],[70,25,77,23,"String"],[70,31,77,29],[70,32,77,30,"fromCodePoint"],[70,45,77,43],[70,46,77,44,"codePoint"],[70,55,77,53],[70,56,77,54],[71,10,78,8],[71,11,78,9],[71,17,78,15],[72,12,79,10,"processed"],[72,21,79,19],[72,25,79,23,"String"],[72,31,79,29],[72,32,79,30,"fromCodePoint"],[72,45,79,43],[72,46,79,44,"apply"],[72,51,79,49],[72,52,79,50,"String"],[72,58,79,56],[72,60,79,58,"status"],[72,66,79,64],[72,67,79,65],[72,68,79,66],[72,69,79,67],[72,70,79,68],[73,10,80,8],[74,10,81,8],[75,8,82,6],[75,13,82,11],[75,36,82,34],[76,10,83,8],[76,14,83,12,"useSTD3"],[76,21,83,19],[76,23,83,21],[77,12,84,10,"hasError"],[77,20,84,18],[77,23,84,21],[77,27,84,25],[78,10,85,8],[79,10,87,8,"processed"],[79,19,87,17],[79,23,87,21,"String"],[79,29,87,27],[79,30,87,28,"fromCodePoint"],[79,43,87,41],[79,44,87,42,"codePoint"],[79,53,87,51],[79,54,87,52],[80,10,88,8],[81,6,89,4],[82,4,90,2],[83,4,92,2],[83,11,92,9],[84,6,93,4,"string"],[84,12,93,10],[84,14,93,12,"processed"],[84,23,93,21],[85,6,94,4,"error"],[85,11,94,9],[85,13,94,11,"hasError"],[86,4,95,2],[86,5,95,3],[87,2,96,0],[88,2,98,0],[88,6,98,4,"combiningMarksRegex"],[88,25,98,23],[88,28,98,26],[88,2751,98,2749],[89,2,100,0],[89,11,100,9,"validateLabel"],[89,24,100,22,"validateLabel"],[89,25,100,23,"label"],[89,30,100,28],[89,32,100,30,"processing_option"],[89,49,100,47],[89,51,100,49],[90,4,101,2],[90,8,101,6,"label"],[90,13,101,11],[90,14,101,12,"substr"],[90,20,101,18],[90,21,101,19],[90,22,101,20],[90,24,101,22],[90,25,101,23],[90,26,101,24],[90,31,101,29],[90,37,101,35],[90,39,101,37],[91,6,102,4,"label"],[91,11,102,9],[91,14,102,12,"punycode"],[91,22,102,20],[91,23,102,21,"toUnicode"],[91,32,102,30],[91,33,102,31,"label"],[91,38,102,36],[91,39,102,37],[92,6,103,4,"processing_option"],[92,23,103,21],[92,26,103,24,"PROCESSING_OPTIONS"],[92,44,103,42],[92,45,103,43,"NONTRANSITIONAL"],[92,60,103,58],[93,4,104,2],[94,4,106,2],[94,8,106,6,"error"],[94,13,106,11],[94,16,106,14],[94,21,106,19],[95,4,108,2],[95,8,108,6,"normalize"],[95,17,108,15],[95,18,108,16,"label"],[95,23,108,21],[95,24,108,22],[95,29,108,27,"label"],[95,34,108,32],[95,38,109,7,"label"],[95,43,109,12],[95,44,109,13],[95,45,109,14],[95,46,109,15],[95,51,109,20],[95,54,109,23],[95,58,109,27,"label"],[95,63,109,32],[95,64,109,33],[95,65,109,34],[95,66,109,35],[95,71,109,40],[95,74,109,44],[95,78,110,6,"label"],[95,83,110,11],[95,84,110,12],[95,85,110,13],[95,86,110,14],[95,91,110,19],[95,94,110,22],[95,98,110,26,"label"],[95,103,110,31],[95,104,110,32,"label"],[95,109,110,37],[95,110,110,38,"length"],[95,116,110,44],[95,119,110,47],[95,120,110,48],[95,121,110,49],[95,126,110,54],[95,129,110,57],[95,133,111,6,"label"],[95,138,111,11],[95,139,111,12,"indexOf"],[95,146,111,19],[95,147,111,20],[95,150,111,23],[95,151,111,24],[95,156,111,29],[95,157,111,30],[95,158,111,31],[95,162,112,6,"label"],[95,167,112,11],[95,168,112,12,"search"],[95,174,112,18],[95,175,112,19,"combiningMarksRegex"],[95,194,112,38],[95,195,112,39],[95,200,112,44],[95,201,112,45],[95,203,112,47],[96,6,113,4,"error"],[96,11,113,9],[96,14,113,12],[96,18,113,16],[97,4,114,2],[98,4,116,2],[98,8,116,6,"len"],[98,11,116,9],[98,14,116,12,"countSymbols"],[98,26,116,24],[98,27,116,25,"label"],[98,32,116,30],[98,33,116,31],[99,4,117,2],[99,9,117,7],[99,13,117,11,"i"],[99,14,117,12],[99,17,117,15],[99,18,117,16],[99,20,117,18,"i"],[99,21,117,19],[99,24,117,22,"len"],[99,27,117,25],[99,29,117,27],[99,31,117,29,"i"],[99,32,117,30],[99,34,117,32],[100,6,118,4],[100,10,118,8,"status"],[100,16,118,14],[100,19,118,17,"findStatus"],[100,29,118,27],[100,30,118,28,"label"],[100,35,118,33],[100,36,118,34,"codePointAt"],[100,47,118,45],[100,48,118,46,"i"],[100,49,118,47],[100,50,118,48],[100,51,118,49],[101,6,119,4],[101,10,119,9,"processing"],[101,20,119,19],[101,25,119,24,"PROCESSING_OPTIONS"],[101,43,119,42],[101,44,119,43,"TRANSITIONAL"],[101,56,119,55],[101,60,119,59,"status"],[101,66,119,65],[101,67,119,66],[101,68,119,67],[101,69,119,68],[101,74,119,73],[101,81,119,80],[101,85,120,9,"processing"],[101,95,120,19],[101,100,120,24,"PROCESSING_OPTIONS"],[101,118,120,42],[101,119,120,43,"NONTRANSITIONAL"],[101,134,120,58],[101,138,121,9,"status"],[101,144,121,15],[101,145,121,16],[101,146,121,17],[101,147,121,18],[101,152,121,23],[101,159,121,30],[101,163,121,34,"status"],[101,169,121,40],[101,170,121,41],[101,171,121,42],[101,172,121,43],[101,177,121,48],[101,188,121,60],[101,190,121,62],[102,8,122,6,"error"],[102,13,122,11],[102,16,122,14],[102,20,122,18],[103,8,123,6],[104,6,124,4],[105,4,125,2],[106,4,127,2],[106,11,127,9],[107,6,128,4,"label"],[107,11,128,9],[107,13,128,11,"label"],[107,18,128,16],[108,6,129,4,"error"],[108,11,129,9],[108,13,129,11,"error"],[109,4,130,2],[109,5,130,3],[110,2,131,0],[111,2,133,0],[111,11,133,9,"processing"],[111,21,133,19,"processing"],[111,22,133,20,"domain_name"],[111,33,133,31],[111,35,133,33,"useSTD3"],[111,42,133,40],[111,44,133,42,"processing_option"],[111,61,133,59],[111,63,133,61],[112,4,134,2],[112,8,134,6,"result"],[112,14,134,12],[112,17,134,15,"mapChars"],[112,25,134,23],[112,26,134,24,"domain_name"],[112,37,134,35],[112,39,134,37,"useSTD3"],[112,46,134,44],[112,48,134,46,"processing_option"],[112,65,134,63],[112,66,134,64],[113,4,135,2,"result"],[113,10,135,8],[113,11,135,9,"string"],[113,17,135,15],[113,20,135,18,"normalize"],[113,29,135,27],[113,30,135,28,"result"],[113,36,135,34],[113,37,135,35,"string"],[113,43,135,41],[113,44,135,42],[114,4,137,2],[114,8,137,6,"labels"],[114,14,137,12],[114,17,137,15,"result"],[114,23,137,21],[114,24,137,22,"string"],[114,30,137,28],[114,31,137,29,"split"],[114,36,137,34],[114,37,137,35],[114,40,137,38],[114,41,137,39],[115,4,138,2],[115,9,138,7],[115,13,138,11,"i"],[115,14,138,12],[115,17,138,15],[115,18,138,16],[115,20,138,18,"i"],[115,21,138,19],[115,24,138,22,"labels"],[115,30,138,28],[115,31,138,29,"length"],[115,37,138,35],[115,39,138,37],[115,41,138,39,"i"],[115,42,138,40],[115,44,138,42],[116,6,139,4],[116,10,139,8],[117,8,140,6],[117,12,140,10,"validation"],[117,22,140,20],[117,25,140,23,"validateLabel"],[117,38,140,36],[117,39,140,37,"labels"],[117,45,140,43],[117,46,140,44,"i"],[117,47,140,45],[117,48,140,46],[117,49,140,47],[118,8,141,6,"labels"],[118,14,141,12],[118,15,141,13,"i"],[118,16,141,14],[118,17,141,15],[118,20,141,18,"validation"],[118,30,141,28],[118,31,141,29,"label"],[118,36,141,34],[119,8,142,6,"result"],[119,14,142,12],[119,15,142,13,"error"],[119,20,142,18],[119,23,142,21,"result"],[119,29,142,27],[119,30,142,28,"error"],[119,35,142,33],[119,39,142,37,"validation"],[119,49,142,47],[119,50,142,48,"error"],[119,55,142,53],[120,6,143,4],[120,7,143,5],[120,8,143,6],[120,15,143,12,"e"],[120,16,143,13],[120,18,143,15],[121,8,144,6,"result"],[121,14,144,12],[121,15,144,13,"error"],[121,20,144,18],[121,23,144,21],[121,27,144,25],[122,6,145,4],[123,4,146,2],[124,4,148,2],[124,11,148,9],[125,6,149,4,"string"],[125,12,149,10],[125,14,149,12,"labels"],[125,20,149,18],[125,21,149,19,"join"],[125,25,149,23],[125,26,149,24],[125,29,149,27],[125,30,149,28],[126,6,150,4,"error"],[126,11,150,9],[126,13,150,11,"result"],[126,19,150,17],[126,20,150,18,"error"],[127,4,151,2],[127,5,151,3],[128,2,152,0],[129,2,154,0,"module"],[129,8,154,6],[129,9,154,7,"exports"],[129,16,154,14],[129,17,154,15,"toASCII"],[129,24,154,22],[129,27,154,25],[129,37,154,34,"domain_name"],[129,48,154,45],[129,50,154,47,"useSTD3"],[129,57,154,54],[129,59,154,56,"processing_option"],[129,76,154,73],[129,78,154,75,"verifyDnsLength"],[129,93,154,90],[129,95,154,92],[130,4,155,2],[130,8,155,6,"result"],[130,14,155,12],[130,17,155,15,"processing"],[130,27,155,25],[130,28,155,26,"domain_name"],[130,39,155,37],[130,41,155,39,"useSTD3"],[130,48,155,46],[130,50,155,48,"processing_option"],[130,67,155,65],[130,68,155,66],[131,4,156,2],[131,8,156,6,"labels"],[131,14,156,12],[131,17,156,15,"result"],[131,23,156,21],[131,24,156,22,"string"],[131,30,156,28],[131,31,156,29,"split"],[131,36,156,34],[131,37,156,35],[131,40,156,38],[131,41,156,39],[132,4,157,2,"labels"],[132,10,157,8],[132,13,157,11,"labels"],[132,19,157,17],[132,20,157,18,"map"],[132,23,157,21],[132,24,157,22],[132,34,157,31,"l"],[132,35,157,32],[132,37,157,34],[133,6,158,4],[133,10,158,8],[134,8,159,6],[134,15,159,13,"punycode"],[134,23,159,21],[134,24,159,22,"toASCII"],[134,31,159,29],[134,32,159,30,"l"],[134,33,159,31],[134,34,159,32],[135,6,160,4],[135,7,160,5],[135,8,160,6],[135,15,160,12,"e"],[135,16,160,13],[135,18,160,15],[136,8,161,6,"result"],[136,14,161,12],[136,15,161,13,"error"],[136,20,161,18],[136,23,161,21],[136,27,161,25],[137,8,162,6],[137,15,162,13,"l"],[137,16,162,14],[138,6,163,4],[139,4,164,2],[139,5,164,3],[139,6,164,4],[140,4,166,2],[140,8,166,6,"verifyDnsLength"],[140,23,166,21],[140,25,166,23],[141,6,167,4],[141,10,167,8,"total"],[141,15,167,13],[141,18,167,16,"labels"],[141,24,167,22],[141,25,167,23,"slice"],[141,30,167,28],[141,31,167,29],[141,32,167,30],[141,34,167,32,"labels"],[141,40,167,38],[141,41,167,39,"length"],[141,47,167,45],[141,50,167,48],[141,51,167,49],[141,52,167,50],[141,53,167,51,"join"],[141,57,167,55],[141,58,167,56],[141,61,167,59],[141,62,167,60],[141,63,167,61,"length"],[141,69,167,67],[142,6,168,4],[142,10,168,8,"total"],[142,15,168,13],[142,16,168,14,"length"],[142,22,168,20],[142,25,168,23],[142,28,168,26],[142,32,168,30,"total"],[142,37,168,35],[142,38,168,36,"length"],[142,44,168,42],[142,49,168,47],[142,50,168,48],[142,52,168,50],[143,8,169,6,"result"],[143,14,169,12],[143,15,169,13,"error"],[143,20,169,18],[143,23,169,21],[143,27,169,25],[144,6,170,4],[145,6,172,4],[145,11,172,9],[145,15,172,13,"i"],[145,16,172,14],[145,19,172,15],[145,20,172,16],[145,22,172,18,"i"],[145,23,172,19],[145,26,172,22,"labels"],[145,32,172,28],[145,33,172,29,"length"],[145,39,172,35],[145,41,172,37],[145,43,172,39,"i"],[145,44,172,40],[145,46,172,42],[146,8,173,6],[146,12,173,10,"labels"],[146,18,173,16],[146,19,173,17,"length"],[146,25,173,23],[146,28,173,26],[146,30,173,28],[146,34,173,32,"labels"],[146,40,173,38],[146,41,173,39,"length"],[146,47,173,45],[146,52,173,50],[146,53,173,51],[146,55,173,53],[147,10,174,8,"result"],[147,16,174,14],[147,17,174,15,"error"],[147,22,174,20],[147,25,174,23],[147,29,174,27],[148,10,175,8],[149,8,176,6],[150,6,177,4],[151,4,178,2],[152,4,180,2],[152,8,180,6,"result"],[152,14,180,12],[152,15,180,13,"error"],[152,20,180,18],[152,22,180,20],[152,29,180,27],[152,33,180,31],[153,4,181,2],[153,11,181,9,"labels"],[153,17,181,15],[153,18,181,16,"join"],[153,22,181,20],[153,23,181,21],[153,26,181,24],[153,27,181,25],[154,2,182,0],[154,3,182,1],[155,2,184,0,"module"],[155,8,184,6],[155,9,184,7,"exports"],[155,16,184,14],[155,17,184,15,"toUnicode"],[155,26,184,24],[155,29,184,27],[155,39,184,36,"domain_name"],[155,50,184,47],[155,52,184,49,"useSTD3"],[155,59,184,56],[155,61,184,58],[156,4,185,2],[156,8,185,6,"result"],[156,14,185,12],[156,17,185,15,"processing"],[156,27,185,25],[156,28,185,26,"domain_name"],[156,39,185,37],[156,41,185,39,"useSTD3"],[156,48,185,46],[156,50,185,48,"PROCESSING_OPTIONS"],[156,68,185,66],[156,69,185,67,"NONTRANSITIONAL"],[156,84,185,82],[156,85,185,83],[157,4,187,2],[157,11,187,9],[158,6,188,4,"domain"],[158,12,188,10],[158,14,188,12,"result"],[158,20,188,18],[158,21,188,19,"string"],[158,27,188,25],[159,6,189,4,"error"],[159,11,189,9],[159,13,189,11,"result"],[159,19,189,17],[159,20,189,18,"error"],[160,4,190,2],[160,5,190,3],[161,2,191,0],[161,3,191,1],[162,2,193,0,"module"],[162,8,193,6],[162,9,193,7,"exports"],[162,16,193,14],[162,17,193,15,"PROCESSING_OPTIONS"],[162,35,193,33],[162,38,193,36,"PROCESSING_OPTIONS"],[162,56,193,54],[163,0,193,55],[163,3]],"functionMap":{"names":["<global>","normalize","str.split.map$argument_0","findStatus","countSymbols","mapChars","validateLabel","processing","module.exports.toASCII","labels.map$argument_0","module.exports.toUnicode"],"mappings":"AAA;ACU;iCCC,2CD;CDC;AGE;CHkB;AII;CJM;AKE;CLmD;AMI;CN+B;AOE;CPmB;yBQE;sBCG;GDO;CRkB;2BUE;CVO"},"hasCjsExports":true},"type":"js/module"}]}