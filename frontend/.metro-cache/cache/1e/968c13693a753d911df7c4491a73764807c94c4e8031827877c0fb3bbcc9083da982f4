{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":31,"index":46}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../WorkletEventHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":47},"end":{"line":4,"column":61,"index":108}}],"key":"588C2ttWmFfH+Cx2zV7Dtb/CLj8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.useEvent = useEvent;\n  var _react = require(_dependencyMap[0], \"react\");\n  var _WorkletEventHandler = require(_dependencyMap[1], \"../WorkletEventHandler\");\n  /**\n   * Worklet to provide as an argument to `useEvent` hook.\n   */\n\n  /**\n   * Lets you run a function whenever a specified native event occurs.\n   *\n   * @param handler - A function that receives an event object with event data - {@link EventHandler}.\n   * @param eventNames - An array of event names the `handler` callback will react to.\n   * @param rebuild - Whether the event handler should be rebuilt. Defaults to `false`.\n   * @returns A function that will be called when the event occurs - {@link EventHandlerProcessed}.\n   * @see https://docs.swmansion.com/react-native-reanimated/docs/advanced/useEvent\n   */\n  // @ts-expect-error This overload is required by our API.\n  // We don't know which properites of a component that is made into\n  // an AnimatedComponent are event handlers and we don't want to force the user to define it.\n  // Therefore we disguise `useEvent` return type as a simple function and we handle\n  // it being a React Ref in `createAnimatedComponent`.\n\n  function useEvent(handler, eventNames = [], rebuild = false) {\n    const initRef = (0, _react.useRef)(null);\n    if (initRef.current === null) {\n      const workletEventHandler = new _WorkletEventHandler.WorkletEventHandler(handler, eventNames);\n      initRef.current = {\n        workletEventHandler\n      };\n    } else if (rebuild) {\n      const workletEventHandler = initRef.current.workletEventHandler;\n      workletEventHandler.updateEventHandler(handler, eventNames);\n      initRef.current = {\n        workletEventHandler\n      };\n    }\n    return initRef.current;\n  }\n});","lineCount":45,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,25,0,"exports"],[7,9,25,0],[7,10,25,0,"useEvent"],[7,18,25,0],[7,21,25,0,"useEvent"],[7,29,25,0],[8,2,3,0],[8,6,3,0,"_react"],[8,12,3,0],[8,15,3,0,"require"],[8,22,3,0],[8,23,3,0,"_dependencyMap"],[8,37,3,0],[9,2,4,0],[9,6,4,0,"_WorkletEventHandler"],[9,26,4,0],[9,29,4,0,"require"],[9,36,4,0],[9,37,4,0,"_dependencyMap"],[9,51,4,0],[10,2,6,0],[11,0,7,0],[12,0,8,0],[14,2,10,0],[15,0,11,0],[16,0,12,0],[17,0,13,0],[18,0,14,0],[19,0,15,0],[20,0,16,0],[21,0,17,0],[22,0,18,0],[23,2,19,0],[24,2,20,0],[25,2,21,0],[26,2,22,0],[27,2,23,0],[29,2,25,7],[29,11,25,16,"useEvent"],[29,19,25,24,"useEvent"],[29,20,25,25,"handler"],[29,27,25,32],[29,29,25,34,"eventNames"],[29,39,25,44],[29,42,25,47],[29,44,25,49],[29,46,25,51,"rebuild"],[29,53,25,58],[29,56,25,61],[29,61,25,66],[29,63,25,68],[30,4,26,2],[30,10,26,8,"initRef"],[30,17,26,15],[30,20,26,18],[30,24,26,18,"useRef"],[30,30,26,24],[30,31,26,24,"useRef"],[30,37,26,24],[30,39,26,25],[30,43,26,29],[30,44,26,30],[31,4,27,2],[31,8,27,6,"initRef"],[31,15,27,13],[31,16,27,14,"current"],[31,23,27,21],[31,28,27,26],[31,32,27,30],[31,34,27,32],[32,6,28,4],[32,12,28,10,"workletEventHandler"],[32,31,28,29],[32,34,28,32],[32,38,28,36,"WorkletEventHandler"],[32,58,28,55],[32,59,28,55,"WorkletEventHandler"],[32,78,28,55],[32,79,28,56,"handler"],[32,86,28,63],[32,88,28,65,"eventNames"],[32,98,28,75],[32,99,28,76],[33,6,29,4,"initRef"],[33,13,29,11],[33,14,29,12,"current"],[33,21,29,19],[33,24,29,22],[34,8,30,6,"workletEventHandler"],[35,6,31,4],[35,7,31,5],[36,4,32,2],[36,5,32,3],[36,11,32,9],[36,15,32,13,"rebuild"],[36,22,32,20],[36,24,32,22],[37,6,33,4],[37,12,33,10,"workletEventHandler"],[37,31,33,29],[37,34,33,32,"initRef"],[37,41,33,39],[37,42,33,40,"current"],[37,49,33,47],[37,50,33,48,"workletEventHandler"],[37,69,33,67],[38,6,34,4,"workletEventHandler"],[38,25,34,23],[38,26,34,24,"updateEventHandler"],[38,44,34,42],[38,45,34,43,"handler"],[38,52,34,50],[38,54,34,52,"eventNames"],[38,64,34,62],[38,65,34,63],[39,6,35,4,"initRef"],[39,13,35,11],[39,14,35,12,"current"],[39,21,35,19],[39,24,35,22],[40,8,36,6,"workletEventHandler"],[41,6,37,4],[41,7,37,5],[42,4,38,2],[43,4,39,2],[43,11,39,9,"initRef"],[43,18,39,16],[43,19,39,17,"current"],[43,26,39,24],[44,2,40,0],[45,0,40,1],[45,3]],"functionMap":{"names":["<global>","useEvent"],"mappings":"AAA;OCwB;CDe"},"hasCjsExports":false},"type":"js/module"}]}