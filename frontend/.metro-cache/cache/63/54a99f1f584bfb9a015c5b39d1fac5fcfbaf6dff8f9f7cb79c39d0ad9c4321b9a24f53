{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  // This file draws heavily from https://github.com/phoenixframework/phoenix/commit/cf098e9cf7a44ee6479d31d911a97d3c7430c6fe\n  // License: https://github.com/phoenixframework/phoenix/blob/master/LICENSE.md\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  class Serializer {\n    constructor() {\n      this.HEADER_LENGTH = 1;\n    }\n    decode(rawPayload, callback) {\n      if (rawPayload.constructor === ArrayBuffer) {\n        return callback(this._binaryDecode(rawPayload));\n      }\n      if (typeof rawPayload === 'string') {\n        return callback(JSON.parse(rawPayload));\n      }\n      return callback({});\n    }\n    _binaryDecode(buffer) {\n      const view = new DataView(buffer);\n      const decoder = new TextDecoder();\n      return this._decodeBroadcast(buffer, view, decoder);\n    }\n    _decodeBroadcast(buffer, view, decoder) {\n      const topicSize = view.getUint8(1);\n      const eventSize = view.getUint8(2);\n      let offset = this.HEADER_LENGTH + 2;\n      const topic = decoder.decode(buffer.slice(offset, offset + topicSize));\n      offset = offset + topicSize;\n      const event = decoder.decode(buffer.slice(offset, offset + eventSize));\n      offset = offset + eventSize;\n      const data = JSON.parse(decoder.decode(buffer.slice(offset, buffer.byteLength)));\n      return {\n        ref: null,\n        topic: topic,\n        event: event,\n        payload: data\n      };\n    }\n  }\n  exports.default = Serializer;\n});","lineCount":45,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[5,2,3,0],[6,2,4,0,"Object"],[6,8,4,6],[6,9,4,7,"defineProperty"],[6,23,4,21],[6,24,4,22,"exports"],[6,31,4,29],[6,33,4,31],[6,45,4,43],[6,47,4,45],[7,4,4,47,"value"],[7,9,4,52],[7,11,4,54],[8,2,4,59],[8,3,4,60],[8,4,4,61],[9,2,5,0],[9,8,5,6,"Serializer"],[9,18,5,16],[9,19,5,17],[10,4,6,4,"constructor"],[10,15,6,15,"constructor"],[10,16,6,15],[10,18,6,18],[11,6,7,8],[11,10,7,12],[11,11,7,13,"HEADER_LENGTH"],[11,24,7,26],[11,27,7,29],[11,28,7,30],[12,4,8,4],[13,4,9,4,"decode"],[13,10,9,10,"decode"],[13,11,9,11,"rawPayload"],[13,21,9,21],[13,23,9,23,"callback"],[13,31,9,31],[13,33,9,33],[14,6,10,8],[14,10,10,12,"rawPayload"],[14,20,10,22],[14,21,10,23,"constructor"],[14,32,10,34],[14,37,10,39,"ArrayBuffer"],[14,48,10,50],[14,50,10,52],[15,8,11,12],[15,15,11,19,"callback"],[15,23,11,27],[15,24,11,28],[15,28,11,32],[15,29,11,33,"_binaryDecode"],[15,42,11,46],[15,43,11,47,"rawPayload"],[15,53,11,57],[15,54,11,58],[15,55,11,59],[16,6,12,8],[17,6,13,8],[17,10,13,12],[17,17,13,19,"rawPayload"],[17,27,13,29],[17,32,13,34],[17,40,13,42],[17,42,13,44],[18,8,14,12],[18,15,14,19,"callback"],[18,23,14,27],[18,24,14,28,"JSON"],[18,28,14,32],[18,29,14,33,"parse"],[18,34,14,38],[18,35,14,39,"rawPayload"],[18,45,14,49],[18,46,14,50],[18,47,14,51],[19,6,15,8],[20,6,16,8],[20,13,16,15,"callback"],[20,21,16,23],[20,22,16,24],[20,23,16,25],[20,24,16,26],[20,25,16,27],[21,4,17,4],[22,4,18,4,"_binaryDecode"],[22,17,18,17,"_binaryDecode"],[22,18,18,18,"buffer"],[22,24,18,24],[22,26,18,26],[23,6,19,8],[23,12,19,14,"view"],[23,16,19,18],[23,19,19,21],[23,23,19,25,"DataView"],[23,31,19,33],[23,32,19,34,"buffer"],[23,38,19,40],[23,39,19,41],[24,6,20,8],[24,12,20,14,"decoder"],[24,19,20,21],[24,22,20,24],[24,26,20,28,"TextDecoder"],[24,37,20,39],[24,38,20,40],[24,39,20,41],[25,6,21,8],[25,13,21,15],[25,17,21,19],[25,18,21,20,"_decodeBroadcast"],[25,34,21,36],[25,35,21,37,"buffer"],[25,41,21,43],[25,43,21,45,"view"],[25,47,21,49],[25,49,21,51,"decoder"],[25,56,21,58],[25,57,21,59],[26,4,22,4],[27,4,23,4,"_decodeBroadcast"],[27,20,23,20,"_decodeBroadcast"],[27,21,23,21,"buffer"],[27,27,23,27],[27,29,23,29,"view"],[27,33,23,33],[27,35,23,35,"decoder"],[27,42,23,42],[27,44,23,44],[28,6,24,8],[28,12,24,14,"topicSize"],[28,21,24,23],[28,24,24,26,"view"],[28,28,24,30],[28,29,24,31,"getUint8"],[28,37,24,39],[28,38,24,40],[28,39,24,41],[28,40,24,42],[29,6,25,8],[29,12,25,14,"eventSize"],[29,21,25,23],[29,24,25,26,"view"],[29,28,25,30],[29,29,25,31,"getUint8"],[29,37,25,39],[29,38,25,40],[29,39,25,41],[29,40,25,42],[30,6,26,8],[30,10,26,12,"offset"],[30,16,26,18],[30,19,26,21],[30,23,26,25],[30,24,26,26,"HEADER_LENGTH"],[30,37,26,39],[30,40,26,42],[30,41,26,43],[31,6,27,8],[31,12,27,14,"topic"],[31,17,27,19],[31,20,27,22,"decoder"],[31,27,27,29],[31,28,27,30,"decode"],[31,34,27,36],[31,35,27,37,"buffer"],[31,41,27,43],[31,42,27,44,"slice"],[31,47,27,49],[31,48,27,50,"offset"],[31,54,27,56],[31,56,27,58,"offset"],[31,62,27,64],[31,65,27,67,"topicSize"],[31,74,27,76],[31,75,27,77],[31,76,27,78],[32,6,28,8,"offset"],[32,12,28,14],[32,15,28,17,"offset"],[32,21,28,23],[32,24,28,26,"topicSize"],[32,33,28,35],[33,6,29,8],[33,12,29,14,"event"],[33,17,29,19],[33,20,29,22,"decoder"],[33,27,29,29],[33,28,29,30,"decode"],[33,34,29,36],[33,35,29,37,"buffer"],[33,41,29,43],[33,42,29,44,"slice"],[33,47,29,49],[33,48,29,50,"offset"],[33,54,29,56],[33,56,29,58,"offset"],[33,62,29,64],[33,65,29,67,"eventSize"],[33,74,29,76],[33,75,29,77],[33,76,29,78],[34,6,30,8,"offset"],[34,12,30,14],[34,15,30,17,"offset"],[34,21,30,23],[34,24,30,26,"eventSize"],[34,33,30,35],[35,6,31,8],[35,12,31,14,"data"],[35,16,31,18],[35,19,31,21,"JSON"],[35,23,31,25],[35,24,31,26,"parse"],[35,29,31,31],[35,30,31,32,"decoder"],[35,37,31,39],[35,38,31,40,"decode"],[35,44,31,46],[35,45,31,47,"buffer"],[35,51,31,53],[35,52,31,54,"slice"],[35,57,31,59],[35,58,31,60,"offset"],[35,64,31,66],[35,66,31,68,"buffer"],[35,72,31,74],[35,73,31,75,"byteLength"],[35,83,31,85],[35,84,31,86],[35,85,31,87],[35,86,31,88],[36,6,32,8],[36,13,32,15],[37,8,32,17,"ref"],[37,11,32,20],[37,13,32,22],[37,17,32,26],[38,8,32,28,"topic"],[38,13,32,33],[38,15,32,35,"topic"],[38,20,32,40],[39,8,32,42,"event"],[39,13,32,47],[39,15,32,49,"event"],[39,20,32,54],[40,8,32,56,"payload"],[40,15,32,63],[40,17,32,65,"data"],[41,6,32,70],[41,7,32,71],[42,4,33,4],[43,2,34,0],[44,2,35,0,"exports"],[44,9,35,7],[44,10,35,8,"default"],[44,17,35,15],[44,20,35,18,"Serializer"],[44,30,35,28],[45,0,35,29],[45,3]],"functionMap":{"names":["<global>","Serializer","Serializer#constructor","Serializer#decode","Serializer#_binaryDecode","Serializer#_decodeBroadcast"],"mappings":"AAA;ACI;ICC;KDE;IEC;KFQ;IGC;KHI;IIC;KJU;CDC"},"hasCjsExports":true},"type":"js/module"}]}