{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return Timer;\n    }\n  });\n  /**\n   * Creates a timer that accepts a `timerCalc` function to perform calculated timeout retries, such as exponential backoff.\n   *\n   * @example\n   *    let reconnectTimer = new Timer(() => this.connect(), function(tries){\n   *      return [1000, 5000, 10000][tries - 1] || 10000\n   *    })\n   *    reconnectTimer.scheduleTimeout() // fires after 1000\n   *    reconnectTimer.scheduleTimeout() // fires after 5000\n   *    reconnectTimer.reset()\n   *    reconnectTimer.scheduleTimeout() // fires after 1000\n   */\n  class Timer {\n    constructor(callback, timerCalc) {\n      this.callback = callback;\n      this.timerCalc = timerCalc;\n      this.timer = undefined;\n      this.tries = 0;\n      this.callback = callback;\n      this.timerCalc = timerCalc;\n    }\n    reset() {\n      this.tries = 0;\n      clearTimeout(this.timer);\n      this.timer = undefined;\n    }\n    // Cancels any previous scheduleTimeout and schedules callback\n    scheduleTimeout() {\n      clearTimeout(this.timer);\n      this.timer = setTimeout(() => {\n        this.tries = this.tries + 1;\n        this.callback();\n      }, this.timerCalc(this.tries + 1));\n    }\n  }\n});","lineCount":48,"map":[[7,2,13,15,"Object"],[7,8,13,15],[7,9,13,15,"defineProperty"],[7,23,13,15],[7,24,13,15,"exports"],[7,31,13,15],[8,4,13,15,"enumerable"],[8,14,13,15],[9,4,13,15,"get"],[9,7,13,15],[9,18,13,15,"get"],[9,19,13,15],[10,6,13,15],[10,13,13,15,"Timer"],[10,18,13,15],[11,4,13,15],[12,2,13,15],[13,2,1,0],[14,0,2,0],[15,0,3,0],[16,0,4,0],[17,0,5,0],[18,0,6,0],[19,0,7,0],[20,0,8,0],[21,0,9,0],[22,0,10,0],[23,0,11,0],[24,0,12,0],[25,2,13,15],[25,8,13,21,"Timer"],[25,13,13,26],[25,14,13,27],[26,4,14,4,"constructor"],[26,15,14,15,"constructor"],[26,16,14,16,"callback"],[26,24,14,24],[26,26,14,26,"timerCalc"],[26,35,14,35],[26,37,14,37],[27,6,15,8],[27,10,15,12],[27,11,15,13,"callback"],[27,19,15,21],[27,22,15,24,"callback"],[27,30,15,32],[28,6,16,8],[28,10,16,12],[28,11,16,13,"timerCalc"],[28,20,16,22],[28,23,16,25,"timerCalc"],[28,32,16,34],[29,6,17,8],[29,10,17,12],[29,11,17,13,"timer"],[29,16,17,18],[29,19,17,21,"undefined"],[29,28,17,30],[30,6,18,8],[30,10,18,12],[30,11,18,13,"tries"],[30,16,18,18],[30,19,18,21],[30,20,18,22],[31,6,19,8],[31,10,19,12],[31,11,19,13,"callback"],[31,19,19,21],[31,22,19,24,"callback"],[31,30,19,32],[32,6,20,8],[32,10,20,12],[32,11,20,13,"timerCalc"],[32,20,20,22],[32,23,20,25,"timerCalc"],[32,32,20,34],[33,4,21,4],[34,4,22,4,"reset"],[34,9,22,9,"reset"],[34,10,22,9],[34,12,22,12],[35,6,23,8],[35,10,23,12],[35,11,23,13,"tries"],[35,16,23,18],[35,19,23,21],[35,20,23,22],[36,6,24,8,"clearTimeout"],[36,18,24,20],[36,19,24,21],[36,23,24,25],[36,24,24,26,"timer"],[36,29,24,31],[36,30,24,32],[37,6,25,8],[37,10,25,12],[37,11,25,13,"timer"],[37,16,25,18],[37,19,25,21,"undefined"],[37,28,25,30],[38,4,26,4],[39,4,27,4],[40,4,28,4,"scheduleTimeout"],[40,19,28,19,"scheduleTimeout"],[40,20,28,19],[40,22,28,22],[41,6,29,8,"clearTimeout"],[41,18,29,20],[41,19,29,21],[41,23,29,25],[41,24,29,26,"timer"],[41,29,29,31],[41,30,29,32],[42,6,30,8],[42,10,30,12],[42,11,30,13,"timer"],[42,16,30,18],[42,19,30,21,"setTimeout"],[42,29,30,31],[42,30,30,32],[42,36,30,38],[43,8,31,12],[43,12,31,16],[43,13,31,17,"tries"],[43,18,31,22],[43,21,31,25],[43,25,31,29],[43,26,31,30,"tries"],[43,31,31,35],[43,34,31,38],[43,35,31,39],[44,8,32,12],[44,12,32,16],[44,13,32,17,"callback"],[44,21,32,25],[44,22,32,26],[44,23,32,27],[45,6,33,8],[45,7,33,9],[45,9,33,11],[45,13,33,15],[45,14,33,16,"timerCalc"],[45,23,33,25],[45,24,33,26],[45,28,33,30],[45,29,33,31,"tries"],[45,34,33,36],[45,37,33,39],[45,38,33,40],[45,39,33,41],[45,40,33,42],[46,4,34,4],[47,2,35,0],[48,0,35,1],[48,3]],"functionMap":{"names":["<global>","Timer","Timer#constructor","Timer#reset","Timer#scheduleTimeout","setTimeout$argument_0"],"mappings":"AAA;eCY;ICC;KDO;IEC;KFI;IGE;gCCE;SDG;KHC;CDC"},"hasCjsExports":false},"type":"js/module"}]}