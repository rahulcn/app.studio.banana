{"dependencies":[{"name":"@supabase/functions-js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":12,"column":23,"index":781},"end":{"line":12,"column":56,"index":814}}],"key":"glpf6oTP7di01DC4h74kjG9zUk8=","exportNames":["*"],"imports":1}},{"name":"@supabase/postgrest-js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":13,"column":23,"index":839},"end":{"line":13,"column":56,"index":872}}],"key":"cL6u/nzyiUXVZ5YxlIegXtn34JQ=","exportNames":["*"],"imports":1}},{"name":"@supabase/realtime-js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":14,"column":22,"index":896},"end":{"line":14,"column":54,"index":928}}],"key":"ufvOE+4NpNY3D4MWUjApZQJLO+w=","exportNames":["*"],"imports":1}},{"name":"@supabase/storage-js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":15,"column":21,"index":951},"end":{"line":15,"column":52,"index":982}}],"key":"QxvtUmCIxi2sN/azuKOSJ477D7U=","exportNames":["*"],"imports":1}},{"name":"./lib/constants","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":16,"column":20,"index":1004},"end":{"line":16,"column":46,"index":1030}}],"key":"Tozkr70n9lVAcLLAJew2JSVOK9Y=","exportNames":["*"],"imports":1}},{"name":"./lib/fetch","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":17,"column":16,"index":1048},"end":{"line":17,"column":38,"index":1070}}],"key":"R6LkNjEOXDiLQ/+hwj6jDUhuOC4=","exportNames":["*"],"imports":1}},{"name":"./lib/helpers","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":18,"column":18,"index":1090},"end":{"line":18,"column":42,"index":1114}}],"key":"WC5jlm7KwiIsdJM6jCtPN6iFk4U=","exportNames":["*"],"imports":1}},{"name":"./lib/SupabaseAuthClient","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":19,"column":29,"index":1145},"end":{"line":19,"column":64,"index":1180}}],"key":"1AnNupT1kuXoI5Q2fZ4eDSG6OJQ=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n    function adopt(value) {\n      return value instanceof P ? value : new P(function (resolve) {\n        resolve(value);\n      });\n    }\n    return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) {\n        try {\n          step(generator.next(value));\n        } catch (e) {\n          reject(e);\n        }\n      }\n      function rejected(value) {\n        try {\n          step(generator[\"throw\"](value));\n        } catch (e) {\n          reject(e);\n        }\n      }\n      function step(result) {\n        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n      }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n  };\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  const functions_js_1 = require(_dependencyMap[0], \"@supabase/functions-js\");\n  const postgrest_js_1 = require(_dependencyMap[1], \"@supabase/postgrest-js\");\n  const realtime_js_1 = require(_dependencyMap[2], \"@supabase/realtime-js\");\n  const storage_js_1 = require(_dependencyMap[3], \"@supabase/storage-js\");\n  const constants_1 = require(_dependencyMap[4], \"./lib/constants\");\n  const fetch_1 = require(_dependencyMap[5], \"./lib/fetch\");\n  const helpers_1 = require(_dependencyMap[6], \"./lib/helpers\");\n  const SupabaseAuthClient_1 = require(_dependencyMap[7], \"./lib/SupabaseAuthClient\");\n  /**\n   * Supabase Client.\n   *\n   * An isomorphic Javascript client for interacting with Postgres.\n   */\n  class SupabaseClient {\n    /**\n     * Create a new client for use in the browser.\n     * @param supabaseUrl The unique Supabase URL which is supplied when you create a new project in your project dashboard.\n     * @param supabaseKey The unique Supabase Key which is supplied when you create a new project in your project dashboard.\n     * @param options.db.schema You can switch in between schemas. The schema needs to be on the list of exposed schemas inside Supabase.\n     * @param options.auth.autoRefreshToken Set to \"true\" if you want to automatically refresh the token before expiring.\n     * @param options.auth.persistSession Set to \"true\" if you want to automatically save the user session into local storage.\n     * @param options.auth.detectSessionInUrl Set to \"true\" if you want to automatically detects OAuth grants in the URL and signs in the user.\n     * @param options.realtime Options passed along to realtime-js constructor.\n     * @param options.storage Options passed along to the storage-js constructor.\n     * @param options.global.fetch A custom fetch implementation.\n     * @param options.global.headers Any additional headers to send with each network request.\n     */\n    constructor(supabaseUrl, supabaseKey, options) {\n      var _a, _b, _c;\n      this.supabaseUrl = supabaseUrl;\n      this.supabaseKey = supabaseKey;\n      const baseUrl = (0, helpers_1.validateSupabaseUrl)(supabaseUrl);\n      if (!supabaseKey) throw new Error('supabaseKey is required.');\n      this.realtimeUrl = new URL('realtime/v1', baseUrl);\n      this.realtimeUrl.protocol = this.realtimeUrl.protocol.replace('http', 'ws');\n      this.authUrl = new URL('auth/v1', baseUrl);\n      this.storageUrl = new URL('storage/v1', baseUrl);\n      this.functionsUrl = new URL('functions/v1', baseUrl);\n      // default storage key uses the supabase project ref as a namespace\n      const defaultStorageKey = `sb-${baseUrl.hostname.split('.')[0]}-auth-token`;\n      const DEFAULTS = {\n        db: constants_1.DEFAULT_DB_OPTIONS,\n        realtime: constants_1.DEFAULT_REALTIME_OPTIONS,\n        auth: Object.assign(Object.assign({}, constants_1.DEFAULT_AUTH_OPTIONS), {\n          storageKey: defaultStorageKey\n        }),\n        global: constants_1.DEFAULT_GLOBAL_OPTIONS\n      };\n      const settings = (0, helpers_1.applySettingDefaults)(options !== null && options !== void 0 ? options : {}, DEFAULTS);\n      this.storageKey = (_a = settings.auth.storageKey) !== null && _a !== void 0 ? _a : '';\n      this.headers = (_b = settings.global.headers) !== null && _b !== void 0 ? _b : {};\n      if (!settings.accessToken) {\n        this.auth = this._initSupabaseAuthClient((_c = settings.auth) !== null && _c !== void 0 ? _c : {}, this.headers, settings.global.fetch);\n      } else {\n        this.accessToken = settings.accessToken;\n        this.auth = new Proxy({}, {\n          get: (_, prop) => {\n            throw new Error(`@supabase/supabase-js: Supabase Client is configured with the accessToken option, accessing supabase.auth.${String(prop)} is not possible`);\n          }\n        });\n      }\n      this.fetch = (0, fetch_1.fetchWithAuth)(supabaseKey, this._getAccessToken.bind(this), settings.global.fetch);\n      this.realtime = this._initRealtimeClient(Object.assign({\n        headers: this.headers,\n        accessToken: this._getAccessToken.bind(this)\n      }, settings.realtime));\n      this.rest = new postgrest_js_1.PostgrestClient(new URL('rest/v1', baseUrl).href, {\n        headers: this.headers,\n        schema: settings.db.schema,\n        fetch: this.fetch\n      });\n      this.storage = new storage_js_1.StorageClient(this.storageUrl.href, this.headers, this.fetch, options === null || options === void 0 ? void 0 : options.storage);\n      if (!settings.accessToken) {\n        this._listenForAuthEvents();\n      }\n    }\n    /**\n     * Supabase Functions allows you to deploy and invoke edge functions.\n     */\n    get functions() {\n      return new functions_js_1.FunctionsClient(this.functionsUrl.href, {\n        headers: this.headers,\n        customFetch: this.fetch\n      });\n    }\n    /**\n     * Perform a query on a table or a view.\n     *\n     * @param relation - The table or view name to query\n     */\n    from(relation) {\n      return this.rest.from(relation);\n    }\n    // NOTE: signatures must be kept in sync with PostgrestClient.schema\n    /**\n     * Select a schema to query or perform an function (rpc) call.\n     *\n     * The schema needs to be on the list of exposed schemas inside Supabase.\n     *\n     * @param schema - The schema to query\n     */\n    schema(schema) {\n      return this.rest.schema(schema);\n    }\n    // NOTE: signatures must be kept in sync with PostgrestClient.rpc\n    /**\n     * Perform a function call.\n     *\n     * @param fn - The function name to call\n     * @param args - The arguments to pass to the function call\n     * @param options - Named parameters\n     * @param options.head - When set to `true`, `data` will not be returned.\n     * Useful if you only need the count.\n     * @param options.get - When set to `true`, the function will be called with\n     * read-only access mode.\n     * @param options.count - Count algorithm to use to count rows returned by the\n     * function. Only applicable for [set-returning\n     * functions](https://www.postgresql.org/docs/current/functions-srf.html).\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     */\n    rpc(fn, args = {}, options = {}) {\n      return this.rest.rpc(fn, args, options);\n    }\n    /**\n     * Creates a Realtime channel with Broadcast, Presence, and Postgres Changes.\n     *\n     * @param {string} name - The name of the Realtime channel.\n     * @param {Object} opts - The options to pass to the Realtime channel.\n     *\n     */\n    channel(name, opts = {\n      config: {}\n    }) {\n      return this.realtime.channel(name, opts);\n    }\n    /**\n     * Returns all Realtime channels.\n     */\n    getChannels() {\n      return this.realtime.getChannels();\n    }\n    /**\n     * Unsubscribes and removes Realtime channel from Realtime client.\n     *\n     * @param {RealtimeChannel} channel - The name of the Realtime channel.\n     *\n     */\n    removeChannel(channel) {\n      return this.realtime.removeChannel(channel);\n    }\n    /**\n     * Unsubscribes and removes all Realtime channels from Realtime client.\n     */\n    removeAllChannels() {\n      return this.realtime.removeAllChannels();\n    }\n    _getAccessToken() {\n      var _a, _b;\n      return __awaiter(this, void 0, void 0, function* () {\n        if (this.accessToken) {\n          return yield this.accessToken();\n        }\n        const {\n          data\n        } = yield this.auth.getSession();\n        return (_b = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : this.supabaseKey;\n      });\n    }\n    _initSupabaseAuthClient({\n      autoRefreshToken,\n      persistSession,\n      detectSessionInUrl,\n      storage,\n      userStorage,\n      storageKey,\n      flowType,\n      lock,\n      debug\n    }, headers, fetch) {\n      const authHeaders = {\n        Authorization: `Bearer ${this.supabaseKey}`,\n        apikey: `${this.supabaseKey}`\n      };\n      return new SupabaseAuthClient_1.SupabaseAuthClient({\n        url: this.authUrl.href,\n        headers: Object.assign(Object.assign({}, authHeaders), headers),\n        storageKey: storageKey,\n        autoRefreshToken,\n        persistSession,\n        detectSessionInUrl,\n        storage,\n        userStorage,\n        flowType,\n        lock,\n        debug,\n        fetch,\n        // auth checks if there is a custom authorizaiton header using this flag\n        // so it knows whether to return an error when getUser is called with no session\n        hasCustomAuthorizationHeader: Object.keys(this.headers).some(key => key.toLowerCase() === 'authorization')\n      });\n    }\n    _initRealtimeClient(options) {\n      return new realtime_js_1.RealtimeClient(this.realtimeUrl.href, Object.assign(Object.assign({}, options), {\n        params: Object.assign({\n          apikey: this.supabaseKey\n        }, options === null || options === void 0 ? void 0 : options.params)\n      }));\n    }\n    _listenForAuthEvents() {\n      let data = this.auth.onAuthStateChange((event, session) => {\n        this._handleTokenChanged(event, 'CLIENT', session === null || session === void 0 ? void 0 : session.access_token);\n      });\n      return data;\n    }\n    _handleTokenChanged(event, source, token) {\n      if ((event === 'TOKEN_REFRESHED' || event === 'SIGNED_IN') && this.changedAccessToken !== token) {\n        this.changedAccessToken = token;\n        this.realtime.setAuth(token);\n      } else if (event === 'SIGNED_OUT') {\n        this.realtime.setAuth();\n        if (source == 'STORAGE') this.auth.signOut();\n        this.changedAccessToken = undefined;\n      }\n    }\n  }\n  exports.default = SupabaseClient;\n});","lineCount":268,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[4,6,2,4,"__awaiter"],[4,15,2,13],[4,18,2,17],[4,22,2,21],[4,26,2,25],[4,30,2,29],[4,31,2,30,"__awaiter"],[4,40,2,39],[4,44,2,44],[4,54,2,54,"thisArg"],[4,61,2,61],[4,63,2,63,"_arguments"],[4,73,2,73],[4,75,2,75,"P"],[4,76,2,76],[4,78,2,78,"generator"],[4,87,2,87],[4,89,2,89],[5,4,3,4],[5,13,3,13,"adopt"],[5,18,3,18,"adopt"],[5,19,3,19,"value"],[5,24,3,24],[5,26,3,26],[6,6,3,28],[6,13,3,35,"value"],[6,18,3,40],[6,30,3,52,"P"],[6,31,3,53],[6,34,3,56,"value"],[6,39,3,61],[6,42,3,64],[6,46,3,68,"P"],[6,47,3,69],[6,48,3,70],[6,58,3,80,"resolve"],[6,65,3,87],[6,67,3,89],[7,8,3,91,"resolve"],[7,15,3,98],[7,16,3,99,"value"],[7,21,3,104],[7,22,3,105],[8,6,3,107],[8,7,3,108],[8,8,3,109],[9,4,3,111],[10,4,4,4],[10,11,4,11],[10,16,4,16,"P"],[10,17,4,17],[10,22,4,22,"P"],[10,23,4,23],[10,26,4,26,"Promise"],[10,33,4,33],[10,34,4,34],[10,36,4,36],[10,46,4,46,"resolve"],[10,53,4,53],[10,55,4,55,"reject"],[10,61,4,61],[10,63,4,63],[11,6,5,8],[11,15,5,17,"fulfilled"],[11,24,5,26,"fulfilled"],[11,25,5,27,"value"],[11,30,5,32],[11,32,5,34],[12,8,5,36],[12,12,5,40],[13,10,5,42,"step"],[13,14,5,46],[13,15,5,47,"generator"],[13,24,5,56],[13,25,5,57,"next"],[13,29,5,61],[13,30,5,62,"value"],[13,35,5,67],[13,36,5,68],[13,37,5,69],[14,8,5,71],[14,9,5,72],[14,10,5,73],[14,17,5,80,"e"],[14,18,5,81],[14,20,5,83],[15,10,5,85,"reject"],[15,16,5,91],[15,17,5,92,"e"],[15,18,5,93],[15,19,5,94],[16,8,5,96],[17,6,5,98],[18,6,6,8],[18,15,6,17,"rejected"],[18,23,6,25,"rejected"],[18,24,6,26,"value"],[18,29,6,31],[18,31,6,33],[19,8,6,35],[19,12,6,39],[20,10,6,41,"step"],[20,14,6,45],[20,15,6,46,"generator"],[20,24,6,55],[20,25,6,56],[20,32,6,63],[20,33,6,64],[20,34,6,65,"value"],[20,39,6,70],[20,40,6,71],[20,41,6,72],[21,8,6,74],[21,9,6,75],[21,10,6,76],[21,17,6,83,"e"],[21,18,6,84],[21,20,6,86],[22,10,6,88,"reject"],[22,16,6,94],[22,17,6,95,"e"],[22,18,6,96],[22,19,6,97],[23,8,6,99],[24,6,6,101],[25,6,7,8],[25,15,7,17,"step"],[25,19,7,21,"step"],[25,20,7,22,"result"],[25,26,7,28],[25,28,7,30],[26,8,7,32,"result"],[26,14,7,38],[26,15,7,39,"done"],[26,19,7,43],[26,22,7,46,"resolve"],[26,29,7,53],[26,30,7,54,"result"],[26,36,7,60],[26,37,7,61,"value"],[26,42,7,66],[26,43,7,67],[26,46,7,70,"adopt"],[26,51,7,75],[26,52,7,76,"result"],[26,58,7,82],[26,59,7,83,"value"],[26,64,7,88],[26,65,7,89],[26,66,7,90,"then"],[26,70,7,94],[26,71,7,95,"fulfilled"],[26,80,7,104],[26,82,7,106,"rejected"],[26,90,7,114],[26,91,7,115],[27,6,7,117],[28,6,8,8,"step"],[28,10,8,12],[28,11,8,13],[28,12,8,14,"generator"],[28,21,8,23],[28,24,8,26,"generator"],[28,33,8,35],[28,34,8,36,"apply"],[28,39,8,41],[28,40,8,42,"thisArg"],[28,47,8,49],[28,49,8,51,"_arguments"],[28,59,8,61],[28,63,8,65],[28,65,8,67],[28,66,8,68],[28,68,8,70,"next"],[28,72,8,74],[28,73,8,75],[28,74,8,76],[28,75,8,77],[29,4,9,4],[29,5,9,5],[29,6,9,6],[30,2,10,0],[30,3,10,1],[31,2,11,0,"Object"],[31,8,11,6],[31,9,11,7,"defineProperty"],[31,23,11,21],[31,24,11,22,"exports"],[31,31,11,29],[31,33,11,31],[31,45,11,43],[31,47,11,45],[32,4,11,47,"value"],[32,9,11,52],[32,11,11,54],[33,2,11,59],[33,3,11,60],[33,4,11,61],[34,2,12,0],[34,8,12,6,"functions_js_1"],[34,22,12,20],[34,25,12,23,"require"],[34,32,12,30],[34,33,12,30,"_dependencyMap"],[34,47,12,30],[34,76,12,55],[34,77,12,56],[35,2,13,0],[35,8,13,6,"postgrest_js_1"],[35,22,13,20],[35,25,13,23,"require"],[35,32,13,30],[35,33,13,30,"_dependencyMap"],[35,47,13,30],[35,76,13,55],[35,77,13,56],[36,2,14,0],[36,8,14,6,"realtime_js_1"],[36,21,14,19],[36,24,14,22,"require"],[36,31,14,29],[36,32,14,29,"_dependencyMap"],[36,46,14,29],[36,74,14,53],[36,75,14,54],[37,2,15,0],[37,8,15,6,"storage_js_1"],[37,20,15,18],[37,23,15,21,"require"],[37,30,15,28],[37,31,15,28,"_dependencyMap"],[37,45,15,28],[37,72,15,51],[37,73,15,52],[38,2,16,0],[38,8,16,6,"constants_1"],[38,19,16,17],[38,22,16,20,"require"],[38,29,16,27],[38,30,16,27,"_dependencyMap"],[38,44,16,27],[38,66,16,45],[38,67,16,46],[39,2,17,0],[39,8,17,6,"fetch_1"],[39,15,17,13],[39,18,17,16,"require"],[39,25,17,23],[39,26,17,23,"_dependencyMap"],[39,40,17,23],[39,58,17,37],[39,59,17,38],[40,2,18,0],[40,8,18,6,"helpers_1"],[40,17,18,15],[40,20,18,18,"require"],[40,27,18,25],[40,28,18,25,"_dependencyMap"],[40,42,18,25],[40,62,18,41],[40,63,18,42],[41,2,19,0],[41,8,19,6,"SupabaseAuthClient_1"],[41,28,19,26],[41,31,19,29,"require"],[41,38,19,36],[41,39,19,36,"_dependencyMap"],[41,53,19,36],[41,84,19,63],[41,85,19,64],[42,2,20,0],[43,0,21,0],[44,0,22,0],[45,0,23,0],[46,0,24,0],[47,2,25,0],[47,8,25,6,"SupabaseClient"],[47,22,25,20],[47,23,25,21],[48,4,26,4],[49,0,27,0],[50,0,28,0],[51,0,29,0],[52,0,30,0],[53,0,31,0],[54,0,32,0],[55,0,33,0],[56,0,34,0],[57,0,35,0],[58,0,36,0],[59,0,37,0],[60,0,38,0],[61,4,39,4,"constructor"],[61,15,39,15,"constructor"],[61,16,39,16,"supabaseUrl"],[61,27,39,27],[61,29,39,29,"supabaseKey"],[61,40,39,40],[61,42,39,42,"options"],[61,49,39,49],[61,51,39,51],[62,6,40,8],[62,10,40,12,"_a"],[62,12,40,14],[62,14,40,16,"_b"],[62,16,40,18],[62,18,40,20,"_c"],[62,20,40,22],[63,6,41,8],[63,10,41,12],[63,11,41,13,"supabaseUrl"],[63,22,41,24],[63,25,41,27,"supabaseUrl"],[63,36,41,38],[64,6,42,8],[64,10,42,12],[64,11,42,13,"supabaseKey"],[64,22,42,24],[64,25,42,27,"supabaseKey"],[64,36,42,38],[65,6,43,8],[65,12,43,14,"baseUrl"],[65,19,43,21],[65,22,43,24],[65,23,43,25],[65,24,43,26],[65,26,43,28,"helpers_1"],[65,35,43,37],[65,36,43,38,"validateSupabaseUrl"],[65,55,43,57],[65,57,43,59,"supabaseUrl"],[65,68,43,70],[65,69,43,71],[66,6,44,8],[66,10,44,12],[66,11,44,13,"supabaseKey"],[66,22,44,24],[66,24,45,12],[66,30,45,18],[66,34,45,22,"Error"],[66,39,45,27],[66,40,45,28],[66,66,45,54],[66,67,45,55],[67,6,46,8],[67,10,46,12],[67,11,46,13,"realtimeUrl"],[67,22,46,24],[67,25,46,27],[67,29,46,31,"URL"],[67,32,46,34],[67,33,46,35],[67,46,46,48],[67,48,46,50,"baseUrl"],[67,55,46,57],[67,56,46,58],[68,6,47,8],[68,10,47,12],[68,11,47,13,"realtimeUrl"],[68,22,47,24],[68,23,47,25,"protocol"],[68,31,47,33],[68,34,47,36],[68,38,47,40],[68,39,47,41,"realtimeUrl"],[68,50,47,52],[68,51,47,53,"protocol"],[68,59,47,61],[68,60,47,62,"replace"],[68,67,47,69],[68,68,47,70],[68,74,47,76],[68,76,47,78],[68,80,47,82],[68,81,47,83],[69,6,48,8],[69,10,48,12],[69,11,48,13,"authUrl"],[69,18,48,20],[69,21,48,23],[69,25,48,27,"URL"],[69,28,48,30],[69,29,48,31],[69,38,48,40],[69,40,48,42,"baseUrl"],[69,47,48,49],[69,48,48,50],[70,6,49,8],[70,10,49,12],[70,11,49,13,"storageUrl"],[70,21,49,23],[70,24,49,26],[70,28,49,30,"URL"],[70,31,49,33],[70,32,49,34],[70,44,49,46],[70,46,49,48,"baseUrl"],[70,53,49,55],[70,54,49,56],[71,6,50,8],[71,10,50,12],[71,11,50,13,"functionsUrl"],[71,23,50,25],[71,26,50,28],[71,30,50,32,"URL"],[71,33,50,35],[71,34,50,36],[71,48,50,50],[71,50,50,52,"baseUrl"],[71,57,50,59],[71,58,50,60],[72,6,51,8],[73,6,52,8],[73,12,52,14,"defaultStorageKey"],[73,29,52,31],[73,32,52,34],[73,38,52,40,"baseUrl"],[73,45,52,47],[73,46,52,48,"hostname"],[73,54,52,56],[73,55,52,57,"split"],[73,60,52,62],[73,61,52,63],[73,64,52,66],[73,65,52,67],[73,66,52,68],[73,67,52,69],[73,68,52,70],[73,81,52,83],[74,6,53,8],[74,12,53,14,"DEFAULTS"],[74,20,53,22],[74,23,53,25],[75,8,54,12,"db"],[75,10,54,14],[75,12,54,16,"constants_1"],[75,23,54,27],[75,24,54,28,"DEFAULT_DB_OPTIONS"],[75,42,54,46],[76,8,55,12,"realtime"],[76,16,55,20],[76,18,55,22,"constants_1"],[76,29,55,33],[76,30,55,34,"DEFAULT_REALTIME_OPTIONS"],[76,54,55,58],[77,8,56,12,"auth"],[77,12,56,16],[77,14,56,18,"Object"],[77,20,56,24],[77,21,56,25,"assign"],[77,27,56,31],[77,28,56,32,"Object"],[77,34,56,38],[77,35,56,39,"assign"],[77,41,56,45],[77,42,56,46],[77,43,56,47],[77,44,56,48],[77,46,56,50,"constants_1"],[77,57,56,61],[77,58,56,62,"DEFAULT_AUTH_OPTIONS"],[77,78,56,82],[77,79,56,83],[77,81,56,85],[78,10,56,87,"storageKey"],[78,20,56,97],[78,22,56,99,"defaultStorageKey"],[79,8,56,117],[79,9,56,118],[79,10,56,119],[80,8,57,12,"global"],[80,14,57,18],[80,16,57,20,"constants_1"],[80,27,57,31],[80,28,57,32,"DEFAULT_GLOBAL_OPTIONS"],[81,6,58,8],[81,7,58,9],[82,6,59,8],[82,12,59,14,"settings"],[82,20,59,22],[82,23,59,25],[82,24,59,26],[82,25,59,27],[82,27,59,29,"helpers_1"],[82,36,59,38],[82,37,59,39,"applySettingDefaults"],[82,57,59,59],[82,59,59,61,"options"],[82,66,59,68],[82,71,59,73],[82,75,59,77],[82,79,59,81,"options"],[82,86,59,88],[82,91,59,93],[82,96,59,98],[82,97,59,99],[82,100,59,102,"options"],[82,107,59,109],[82,110,59,112],[82,111,59,113],[82,112,59,114],[82,114,59,116,"DEFAULTS"],[82,122,59,124],[82,123,59,125],[83,6,60,8],[83,10,60,12],[83,11,60,13,"storageKey"],[83,21,60,23],[83,24,60,26],[83,25,60,27,"_a"],[83,27,60,29],[83,30,60,32,"settings"],[83,38,60,40],[83,39,60,41,"auth"],[83,43,60,45],[83,44,60,46,"storageKey"],[83,54,60,56],[83,60,60,62],[83,64,60,66],[83,68,60,70,"_a"],[83,70,60,72],[83,75,60,77],[83,80,60,82],[83,81,60,83],[83,84,60,86,"_a"],[83,86,60,88],[83,89,60,91],[83,91,60,93],[84,6,61,8],[84,10,61,12],[84,11,61,13,"headers"],[84,18,61,20],[84,21,61,23],[84,22,61,24,"_b"],[84,24,61,26],[84,27,61,29,"settings"],[84,35,61,37],[84,36,61,38,"global"],[84,42,61,44],[84,43,61,45,"headers"],[84,50,61,52],[84,56,61,58],[84,60,61,62],[84,64,61,66,"_b"],[84,66,61,68],[84,71,61,73],[84,76,61,78],[84,77,61,79],[84,80,61,82,"_b"],[84,82,61,84],[84,85,61,87],[84,86,61,88],[84,87,61,89],[85,6,62,8],[85,10,62,12],[85,11,62,13,"settings"],[85,19,62,21],[85,20,62,22,"accessToken"],[85,31,62,33],[85,33,62,35],[86,8,63,12],[86,12,63,16],[86,13,63,17,"auth"],[86,17,63,21],[86,20,63,24],[86,24,63,28],[86,25,63,29,"_initSupabaseAuthClient"],[86,48,63,52],[86,49,63,53],[86,50,63,54,"_c"],[86,52,63,56],[86,55,63,59,"settings"],[86,63,63,67],[86,64,63,68,"auth"],[86,68,63,72],[86,74,63,78],[86,78,63,82],[86,82,63,86,"_c"],[86,84,63,88],[86,89,63,93],[86,94,63,98],[86,95,63,99],[86,98,63,102,"_c"],[86,100,63,104],[86,103,63,107],[86,104,63,108],[86,105,63,109],[86,107,63,111],[86,111,63,115],[86,112,63,116,"headers"],[86,119,63,123],[86,121,63,125,"settings"],[86,129,63,133],[86,130,63,134,"global"],[86,136,63,140],[86,137,63,141,"fetch"],[86,142,63,146],[86,143,63,147],[87,6,64,8],[87,7,64,9],[87,13,65,13],[88,8,66,12],[88,12,66,16],[88,13,66,17,"accessToken"],[88,24,66,28],[88,27,66,31,"settings"],[88,35,66,39],[88,36,66,40,"accessToken"],[88,47,66,51],[89,8,67,12],[89,12,67,16],[89,13,67,17,"auth"],[89,17,67,21],[89,20,67,24],[89,24,67,28,"Proxy"],[89,29,67,33],[89,30,67,34],[89,31,67,35],[89,32,67,36],[89,34,67,38],[90,10,68,16,"get"],[90,13,68,19],[90,15,68,21,"get"],[90,16,68,22,"_"],[90,17,68,23],[90,19,68,25,"prop"],[90,23,68,29],[90,28,68,34],[91,12,69,20],[91,18,69,26],[91,22,69,30,"Error"],[91,27,69,35],[91,28,69,36],[91,137,69,145,"String"],[91,143,69,151],[91,144,69,152,"prop"],[91,148,69,156],[91,149,69,157],[91,167,69,175],[91,168,69,176],[92,10,70,16],[93,8,71,12],[93,9,71,13],[93,10,71,14],[94,6,72,8],[95,6,73,8],[95,10,73,12],[95,11,73,13,"fetch"],[95,16,73,18],[95,19,73,21],[95,20,73,22],[95,21,73,23],[95,23,73,25,"fetch_1"],[95,30,73,32],[95,31,73,33,"fetchWithAuth"],[95,44,73,46],[95,46,73,48,"supabaseKey"],[95,57,73,59],[95,59,73,61],[95,63,73,65],[95,64,73,66,"_getAccessToken"],[95,79,73,81],[95,80,73,82,"bind"],[95,84,73,86],[95,85,73,87],[95,89,73,91],[95,90,73,92],[95,92,73,94,"settings"],[95,100,73,102],[95,101,73,103,"global"],[95,107,73,109],[95,108,73,110,"fetch"],[95,113,73,115],[95,114,73,116],[96,6,74,8],[96,10,74,12],[96,11,74,13,"realtime"],[96,19,74,21],[96,22,74,24],[96,26,74,28],[96,27,74,29,"_initRealtimeClient"],[96,46,74,48],[96,47,74,49,"Object"],[96,53,74,55],[96,54,74,56,"assign"],[96,60,74,62],[96,61,74,63],[97,8,74,65,"headers"],[97,15,74,72],[97,17,74,74],[97,21,74,78],[97,22,74,79,"headers"],[97,29,74,86],[98,8,74,88,"accessToken"],[98,19,74,99],[98,21,74,101],[98,25,74,105],[98,26,74,106,"_getAccessToken"],[98,41,74,121],[98,42,74,122,"bind"],[98,46,74,126],[98,47,74,127],[98,51,74,131],[99,6,74,133],[99,7,74,134],[99,9,74,136,"settings"],[99,17,74,144],[99,18,74,145,"realtime"],[99,26,74,153],[99,27,74,154],[99,28,74,155],[100,6,75,8],[100,10,75,12],[100,11,75,13,"rest"],[100,15,75,17],[100,18,75,20],[100,22,75,24,"postgrest_js_1"],[100,36,75,38],[100,37,75,39,"PostgrestClient"],[100,52,75,54],[100,53,75,55],[100,57,75,59,"URL"],[100,60,75,62],[100,61,75,63],[100,70,75,72],[100,72,75,74,"baseUrl"],[100,79,75,81],[100,80,75,82],[100,81,75,83,"href"],[100,85,75,87],[100,87,75,89],[101,8,76,12,"headers"],[101,15,76,19],[101,17,76,21],[101,21,76,25],[101,22,76,26,"headers"],[101,29,76,33],[102,8,77,12,"schema"],[102,14,77,18],[102,16,77,20,"settings"],[102,24,77,28],[102,25,77,29,"db"],[102,27,77,31],[102,28,77,32,"schema"],[102,34,77,38],[103,8,78,12,"fetch"],[103,13,78,17],[103,15,78,19],[103,19,78,23],[103,20,78,24,"fetch"],[104,6,79,8],[104,7,79,9],[104,8,79,10],[105,6,80,8],[105,10,80,12],[105,11,80,13,"storage"],[105,18,80,20],[105,21,80,23],[105,25,80,27,"storage_js_1"],[105,37,80,39],[105,38,80,40,"StorageClient"],[105,51,80,53],[105,52,80,54],[105,56,80,58],[105,57,80,59,"storageUrl"],[105,67,80,69],[105,68,80,70,"href"],[105,72,80,74],[105,74,80,76],[105,78,80,80],[105,79,80,81,"headers"],[105,86,80,88],[105,88,80,90],[105,92,80,94],[105,93,80,95,"fetch"],[105,98,80,100],[105,100,80,102,"options"],[105,107,80,109],[105,112,80,114],[105,116,80,118],[105,120,80,122,"options"],[105,127,80,129],[105,132,80,134],[105,137,80,139],[105,138,80,140],[105,141,80,143],[105,146,80,148],[105,147,80,149],[105,150,80,152,"options"],[105,157,80,159],[105,158,80,160,"storage"],[105,165,80,167],[105,166,80,168],[106,6,81,8],[106,10,81,12],[106,11,81,13,"settings"],[106,19,81,21],[106,20,81,22,"accessToken"],[106,31,81,33],[106,33,81,35],[107,8,82,12],[107,12,82,16],[107,13,82,17,"_listenForAuthEvents"],[107,33,82,37],[107,34,82,38],[107,35,82,39],[108,6,83,8],[109,4,84,4],[110,4,85,4],[111,0,86,0],[112,0,87,0],[113,4,88,4],[113,8,88,8,"functions"],[113,17,88,17,"functions"],[113,18,88,17],[113,20,88,20],[114,6,89,8],[114,13,89,15],[114,17,89,19,"functions_js_1"],[114,31,89,33],[114,32,89,34,"FunctionsClient"],[114,47,89,49],[114,48,89,50],[114,52,89,54],[114,53,89,55,"functionsUrl"],[114,65,89,67],[114,66,89,68,"href"],[114,70,89,72],[114,72,89,74],[115,8,90,12,"headers"],[115,15,90,19],[115,17,90,21],[115,21,90,25],[115,22,90,26,"headers"],[115,29,90,33],[116,8,91,12,"customFetch"],[116,19,91,23],[116,21,91,25],[116,25,91,29],[116,26,91,30,"fetch"],[117,6,92,8],[117,7,92,9],[117,8,92,10],[118,4,93,4],[119,4,94,4],[120,0,95,0],[121,0,96,0],[122,0,97,0],[123,0,98,0],[124,4,99,4,"from"],[124,8,99,8,"from"],[124,9,99,9,"relation"],[124,17,99,17],[124,19,99,19],[125,6,100,8],[125,13,100,15],[125,17,100,19],[125,18,100,20,"rest"],[125,22,100,24],[125,23,100,25,"from"],[125,27,100,29],[125,28,100,30,"relation"],[125,36,100,38],[125,37,100,39],[126,4,101,4],[127,4,102,4],[128,4,103,4],[129,0,104,0],[130,0,105,0],[131,0,106,0],[132,0,107,0],[133,0,108,0],[134,0,109,0],[135,4,110,4,"schema"],[135,10,110,10,"schema"],[135,11,110,11,"schema"],[135,17,110,17],[135,19,110,19],[136,6,111,8],[136,13,111,15],[136,17,111,19],[136,18,111,20,"rest"],[136,22,111,24],[136,23,111,25,"schema"],[136,29,111,31],[136,30,111,32,"schema"],[136,36,111,38],[136,37,111,39],[137,4,112,4],[138,4,113,4],[139,4,114,4],[140,0,115,0],[141,0,116,0],[142,0,117,0],[143,0,118,0],[144,0,119,0],[145,0,120,0],[146,0,121,0],[147,0,122,0],[148,0,123,0],[149,0,124,0],[150,0,125,0],[151,0,126,0],[152,0,127,0],[153,0,128,0],[154,0,129,0],[155,0,130,0],[156,0,131,0],[157,0,132,0],[158,0,133,0],[159,0,134,0],[160,0,135,0],[161,0,136,0],[162,4,137,4,"rpc"],[162,7,137,7,"rpc"],[162,8,137,8,"fn"],[162,10,137,10],[162,12,137,12,"args"],[162,16,137,16],[162,19,137,19],[162,20,137,20],[162,21,137,21],[162,23,137,23,"options"],[162,30,137,30],[162,33,137,33],[162,34,137,34],[162,35,137,35],[162,37,137,37],[163,6,138,8],[163,13,138,15],[163,17,138,19],[163,18,138,20,"rest"],[163,22,138,24],[163,23,138,25,"rpc"],[163,26,138,28],[163,27,138,29,"fn"],[163,29,138,31],[163,31,138,33,"args"],[163,35,138,37],[163,37,138,39,"options"],[163,44,138,46],[163,45,138,47],[164,4,139,4],[165,4,140,4],[166,0,141,0],[167,0,142,0],[168,0,143,0],[169,0,144,0],[170,0,145,0],[171,0,146,0],[172,4,147,4,"channel"],[172,11,147,11,"channel"],[172,12,147,12,"name"],[172,16,147,16],[172,18,147,18,"opts"],[172,22,147,22],[172,25,147,25],[173,6,147,27,"config"],[173,12,147,33],[173,14,147,35],[173,15,147,36],[174,4,147,38],[174,5,147,39],[174,7,147,41],[175,6,148,8],[175,13,148,15],[175,17,148,19],[175,18,148,20,"realtime"],[175,26,148,28],[175,27,148,29,"channel"],[175,34,148,36],[175,35,148,37,"name"],[175,39,148,41],[175,41,148,43,"opts"],[175,45,148,47],[175,46,148,48],[176,4,149,4],[177,4,150,4],[178,0,151,0],[179,0,152,0],[180,4,153,4,"getChannels"],[180,15,153,15,"getChannels"],[180,16,153,15],[180,18,153,18],[181,6,154,8],[181,13,154,15],[181,17,154,19],[181,18,154,20,"realtime"],[181,26,154,28],[181,27,154,29,"getChannels"],[181,38,154,40],[181,39,154,41],[181,40,154,42],[182,4,155,4],[183,4,156,4],[184,0,157,0],[185,0,158,0],[186,0,159,0],[187,0,160,0],[188,0,161,0],[189,4,162,4,"removeChannel"],[189,17,162,17,"removeChannel"],[189,18,162,18,"channel"],[189,25,162,25],[189,27,162,27],[190,6,163,8],[190,13,163,15],[190,17,163,19],[190,18,163,20,"realtime"],[190,26,163,28],[190,27,163,29,"removeChannel"],[190,40,163,42],[190,41,163,43,"channel"],[190,48,163,50],[190,49,163,51],[191,4,164,4],[192,4,165,4],[193,0,166,0],[194,0,167,0],[195,4,168,4,"removeAllChannels"],[195,21,168,21,"removeAllChannels"],[195,22,168,21],[195,24,168,24],[196,6,169,8],[196,13,169,15],[196,17,169,19],[196,18,169,20,"realtime"],[196,26,169,28],[196,27,169,29,"removeAllChannels"],[196,44,169,46],[196,45,169,47],[196,46,169,48],[197,4,170,4],[198,4,171,4,"_getAccessToken"],[198,19,171,19,"_getAccessToken"],[198,20,171,19],[198,22,171,22],[199,6,172,8],[199,10,172,12,"_a"],[199,12,172,14],[199,14,172,16,"_b"],[199,16,172,18],[200,6,173,8],[200,13,173,15,"__awaiter"],[200,22,173,24],[200,23,173,25],[200,27,173,29],[200,29,173,31],[200,34,173,36],[200,35,173,37],[200,37,173,39],[200,42,173,44],[200,43,173,45],[200,45,173,47],[200,58,173,60],[201,8,174,12],[201,12,174,16],[201,16,174,20],[201,17,174,21,"accessToken"],[201,28,174,32],[201,30,174,34],[202,10,175,16],[202,17,175,23],[202,23,175,29],[202,27,175,33],[202,28,175,34,"accessToken"],[202,39,175,45],[202,40,175,46],[202,41,175,47],[203,8,176,12],[204,8,177,12],[204,14,177,18],[205,10,177,20,"data"],[206,8,177,25],[206,9,177,26],[206,12,177,29],[206,18,177,35],[206,22,177,39],[206,23,177,40,"auth"],[206,27,177,44],[206,28,177,45,"getSession"],[206,38,177,55],[206,39,177,56],[206,40,177,57],[207,8,178,12],[207,15,178,19],[207,16,178,20,"_b"],[207,18,178,22],[207,21,178,25],[207,22,178,26,"_a"],[207,24,178,28],[207,27,178,31,"data"],[207,31,178,35],[207,32,178,36,"session"],[207,39,178,43],[207,45,178,49],[207,49,178,53],[207,53,178,57,"_a"],[207,55,178,59],[207,60,178,64],[207,65,178,69],[207,66,178,70],[207,69,178,73],[207,74,178,78],[207,75,178,79],[207,78,178,82,"_a"],[207,80,178,84],[207,81,178,85,"access_token"],[207,93,178,97],[207,99,178,103],[207,103,178,107],[207,107,178,111,"_b"],[207,109,178,113],[207,114,178,118],[207,119,178,123],[207,120,178,124],[207,123,178,127,"_b"],[207,125,178,129],[207,128,178,132],[207,132,178,136],[207,133,178,137,"supabaseKey"],[207,144,178,148],[208,6,179,8],[208,7,179,9],[208,8,179,10],[209,4,180,4],[210,4,181,4,"_initSupabaseAuthClient"],[210,27,181,27,"_initSupabaseAuthClient"],[210,28,181,28],[211,6,181,30,"autoRefreshToken"],[211,22,181,46],[212,6,181,48,"persistSession"],[212,20,181,62],[213,6,181,64,"detectSessionInUrl"],[213,24,181,82],[214,6,181,84,"storage"],[214,13,181,91],[215,6,181,93,"userStorage"],[215,17,181,104],[216,6,181,106,"storageKey"],[216,16,181,116],[217,6,181,118,"flowType"],[217,14,181,126],[218,6,181,128,"lock"],[218,10,181,132],[219,6,181,134,"debug"],[220,4,181,141],[220,5,181,142],[220,7,181,144,"headers"],[220,14,181,151],[220,16,181,153,"fetch"],[220,21,181,158],[220,23,181,160],[221,6,182,8],[221,12,182,14,"authHeaders"],[221,23,182,25],[221,26,182,28],[222,8,183,12,"Authorization"],[222,21,183,25],[222,23,183,27],[222,33,183,37],[222,37,183,41],[222,38,183,42,"supabaseKey"],[222,49,183,53],[222,51,183,55],[223,8,184,12,"apikey"],[223,14,184,18],[223,16,184,20],[223,19,184,23],[223,23,184,27],[223,24,184,28,"supabaseKey"],[223,35,184,39],[224,6,185,8],[224,7,185,9],[225,6,186,8],[225,13,186,15],[225,17,186,19,"SupabaseAuthClient_1"],[225,37,186,39],[225,38,186,40,"SupabaseAuthClient"],[225,56,186,58],[225,57,186,59],[226,8,187,12,"url"],[226,11,187,15],[226,13,187,17],[226,17,187,21],[226,18,187,22,"authUrl"],[226,25,187,29],[226,26,187,30,"href"],[226,30,187,34],[227,8,188,12,"headers"],[227,15,188,19],[227,17,188,21,"Object"],[227,23,188,27],[227,24,188,28,"assign"],[227,30,188,34],[227,31,188,35,"Object"],[227,37,188,41],[227,38,188,42,"assign"],[227,44,188,48],[227,45,188,49],[227,46,188,50],[227,47,188,51],[227,49,188,53,"authHeaders"],[227,60,188,64],[227,61,188,65],[227,63,188,67,"headers"],[227,70,188,74],[227,71,188,75],[228,8,189,12,"storageKey"],[228,18,189,22],[228,20,189,24,"storageKey"],[228,30,189,34],[229,8,190,12,"autoRefreshToken"],[229,24,190,28],[230,8,191,12,"persistSession"],[230,22,191,26],[231,8,192,12,"detectSessionInUrl"],[231,26,192,30],[232,8,193,12,"storage"],[232,15,193,19],[233,8,194,12,"userStorage"],[233,19,194,23],[234,8,195,12,"flowType"],[234,16,195,20],[235,8,196,12,"lock"],[235,12,196,16],[236,8,197,12,"debug"],[236,13,197,17],[237,8,198,12,"fetch"],[237,13,198,17],[238,8,199,12],[239,8,200,12],[240,8,201,12,"hasCustomAuthorizationHeader"],[240,36,201,40],[240,38,201,42,"Object"],[240,44,201,48],[240,45,201,49,"keys"],[240,49,201,53],[240,50,201,54],[240,54,201,58],[240,55,201,59,"headers"],[240,62,201,66],[240,63,201,67],[240,64,201,68,"some"],[240,68,201,72],[240,69,201,74,"key"],[240,72,201,77],[240,76,201,82,"key"],[240,79,201,85],[240,80,201,86,"toLowerCase"],[240,91,201,97],[240,92,201,98],[240,93,201,99],[240,98,201,104],[240,113,201,119],[241,6,202,8],[241,7,202,9],[241,8,202,10],[242,4,203,4],[243,4,204,4,"_initRealtimeClient"],[243,23,204,23,"_initRealtimeClient"],[243,24,204,24,"options"],[243,31,204,31],[243,33,204,33],[244,6,205,8],[244,13,205,15],[244,17,205,19,"realtime_js_1"],[244,30,205,32],[244,31,205,33,"RealtimeClient"],[244,45,205,47],[244,46,205,48],[244,50,205,52],[244,51,205,53,"realtimeUrl"],[244,62,205,64],[244,63,205,65,"href"],[244,67,205,69],[244,69,205,71,"Object"],[244,75,205,77],[244,76,205,78,"assign"],[244,82,205,84],[244,83,205,85,"Object"],[244,89,205,91],[244,90,205,92,"assign"],[244,96,205,98],[244,97,205,99],[244,98,205,100],[244,99,205,101],[244,101,205,103,"options"],[244,108,205,110],[244,109,205,111],[244,111,205,113],[245,8,205,115,"params"],[245,14,205,121],[245,16,205,123,"Object"],[245,22,205,129],[245,23,205,130,"assign"],[245,29,205,136],[245,30,205,137],[246,10,205,139,"apikey"],[246,16,205,145],[246,18,205,147],[246,22,205,151],[246,23,205,152,"supabaseKey"],[247,8,205,164],[247,9,205,165],[247,11,205,167,"options"],[247,18,205,174],[247,23,205,179],[247,27,205,183],[247,31,205,187,"options"],[247,38,205,194],[247,43,205,199],[247,48,205,204],[247,49,205,205],[247,52,205,208],[247,57,205,213],[247,58,205,214],[247,61,205,217,"options"],[247,68,205,224],[247,69,205,225,"params"],[247,75,205,231],[248,6,205,233],[248,7,205,234],[248,8,205,235],[248,9,205,236],[249,4,206,4],[250,4,207,4,"_listenForAuthEvents"],[250,24,207,24,"_listenForAuthEvents"],[250,25,207,24],[250,27,207,27],[251,6,208,8],[251,10,208,12,"data"],[251,14,208,16],[251,17,208,19],[251,21,208,23],[251,22,208,24,"auth"],[251,26,208,28],[251,27,208,29,"onAuthStateChange"],[251,44,208,46],[251,45,208,47],[251,46,208,48,"event"],[251,51,208,53],[251,53,208,55,"session"],[251,60,208,62],[251,65,208,67],[252,8,209,12],[252,12,209,16],[252,13,209,17,"_handleTokenChanged"],[252,32,209,36],[252,33,209,37,"event"],[252,38,209,42],[252,40,209,44],[252,48,209,52],[252,50,209,54,"session"],[252,57,209,61],[252,62,209,66],[252,66,209,70],[252,70,209,74,"session"],[252,77,209,81],[252,82,209,86],[252,87,209,91],[252,88,209,92],[252,91,209,95],[252,96,209,100],[252,97,209,101],[252,100,209,104,"session"],[252,107,209,111],[252,108,209,112,"access_token"],[252,120,209,124],[252,121,209,125],[253,6,210,8],[253,7,210,9],[253,8,210,10],[254,6,211,8],[254,13,211,15,"data"],[254,17,211,19],[255,4,212,4],[256,4,213,4,"_handleTokenChanged"],[256,23,213,23,"_handleTokenChanged"],[256,24,213,24,"event"],[256,29,213,29],[256,31,213,31,"source"],[256,37,213,37],[256,39,213,39,"token"],[256,44,213,44],[256,46,213,46],[257,6,214,8],[257,10,214,12],[257,11,214,13,"event"],[257,16,214,18],[257,21,214,23],[257,38,214,40],[257,42,214,44,"event"],[257,47,214,49],[257,52,214,54],[257,63,214,65],[257,68,215,12],[257,72,215,16],[257,73,215,17,"changedAccessToken"],[257,91,215,35],[257,96,215,40,"token"],[257,101,215,45],[257,103,215,47],[258,8,216,12],[258,12,216,16],[258,13,216,17,"changedAccessToken"],[258,31,216,35],[258,34,216,38,"token"],[258,39,216,43],[259,8,217,12],[259,12,217,16],[259,13,217,17,"realtime"],[259,21,217,25],[259,22,217,26,"setAuth"],[259,29,217,33],[259,30,217,34,"token"],[259,35,217,39],[259,36,217,40],[260,6,218,8],[260,7,218,9],[260,13,219,13],[260,17,219,17,"event"],[260,22,219,22],[260,27,219,27],[260,39,219,39],[260,41,219,41],[261,8,220,12],[261,12,220,16],[261,13,220,17,"realtime"],[261,21,220,25],[261,22,220,26,"setAuth"],[261,29,220,33],[261,30,220,34],[261,31,220,35],[262,8,221,12],[262,12,221,16,"source"],[262,18,221,22],[262,22,221,26],[262,31,221,35],[262,33,222,16],[262,37,222,20],[262,38,222,21,"auth"],[262,42,222,25],[262,43,222,26,"signOut"],[262,50,222,33],[262,51,222,34],[262,52,222,35],[263,8,223,12],[263,12,223,16],[263,13,223,17,"changedAccessToken"],[263,31,223,35],[263,34,223,38,"undefined"],[263,43,223,47],[264,6,224,8],[265,4,225,4],[266,2,226,0],[267,2,227,0,"exports"],[267,9,227,7],[267,10,227,8,"default"],[267,17,227,15],[267,20,227,18,"SupabaseClient"],[267,34,227,32],[268,0,227,33],[268,3]],"functionMap":{"names":["<global>","<anonymous>","adopt","P$argument_0","fulfilled","rejected","step","SupabaseClient","constructor","Proxy$argument_1.get","get__functions","from","schema","rpc","channel","getChannels","removeChannel","removeAllChannels","_getAccessToken","__awaiter$argument_3","_initSupabaseAuthClient","Object.keys.some$argument_0","_initRealtimeClient","_listenForAuthEvents","auth.onAuthStateChange$argument_0","_handleTokenChanged"],"mappings":"AAA;4CCC;ICC,kEC,sCD,ID;QGE,2FH;QIC,8FJ;QKC,8GL;CDG;AOe;ICc;qBC6B;iBDE;KDc;IGI;KHK;IIM;KJE;IKS;KLE;IMyB;KNE;IOQ;KPE;IQI;KRE;ISO;KTE;IUI;KVE;IWC;+CCE;SDM;KXC;IaC;yECoB,8CD;KbE;IeC;KfE;IgBC;+CCC;SDE;KhBE;IkBC;KlBY;CPC"},"hasCjsExports":true},"type":"js/module"}]}