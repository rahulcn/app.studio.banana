{"dependencies":[{"name":"./url-state-machine","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":2,"column":12,"index":26},"end":{"line":2,"column":42,"index":56}}],"key":"KF7fEdasAZzqmian4fpJpPONPSU=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  const usm = require(_dependencyMap[0], \"./url-state-machine\");\n  exports.implementation = class URLImpl {\n    constructor(constructorArgs) {\n      const url = constructorArgs[0];\n      const base = constructorArgs[1];\n      let parsedBase = null;\n      if (base !== undefined) {\n        parsedBase = usm.basicURLParse(base);\n        if (parsedBase === \"failure\") {\n          throw new TypeError(\"Invalid base URL\");\n        }\n      }\n      const parsedURL = usm.basicURLParse(url, {\n        baseURL: parsedBase\n      });\n      if (parsedURL === \"failure\") {\n        throw new TypeError(\"Invalid URL\");\n      }\n      this._url = parsedURL;\n\n      // TODO: query stuff\n    }\n    get href() {\n      return usm.serializeURL(this._url);\n    }\n    set href(v) {\n      const parsedURL = usm.basicURLParse(v);\n      if (parsedURL === \"failure\") {\n        throw new TypeError(\"Invalid URL\");\n      }\n      this._url = parsedURL;\n    }\n    get origin() {\n      return usm.serializeURLOrigin(this._url);\n    }\n    get protocol() {\n      return this._url.scheme + \":\";\n    }\n    set protocol(v) {\n      usm.basicURLParse(v + \":\", {\n        url: this._url,\n        stateOverride: \"scheme start\"\n      });\n    }\n    get username() {\n      return this._url.username;\n    }\n    set username(v) {\n      if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n        return;\n      }\n      usm.setTheUsername(this._url, v);\n    }\n    get password() {\n      return this._url.password;\n    }\n    set password(v) {\n      if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n        return;\n      }\n      usm.setThePassword(this._url, v);\n    }\n    get host() {\n      const url = this._url;\n      if (url.host === null) {\n        return \"\";\n      }\n      if (url.port === null) {\n        return usm.serializeHost(url.host);\n      }\n      return usm.serializeHost(url.host) + \":\" + usm.serializeInteger(url.port);\n    }\n    set host(v) {\n      if (this._url.cannotBeABaseURL) {\n        return;\n      }\n      usm.basicURLParse(v, {\n        url: this._url,\n        stateOverride: \"host\"\n      });\n    }\n    get hostname() {\n      if (this._url.host === null) {\n        return \"\";\n      }\n      return usm.serializeHost(this._url.host);\n    }\n    set hostname(v) {\n      if (this._url.cannotBeABaseURL) {\n        return;\n      }\n      usm.basicURLParse(v, {\n        url: this._url,\n        stateOverride: \"hostname\"\n      });\n    }\n    get port() {\n      if (this._url.port === null) {\n        return \"\";\n      }\n      return usm.serializeInteger(this._url.port);\n    }\n    set port(v) {\n      if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n        return;\n      }\n      if (v === \"\") {\n        this._url.port = null;\n      } else {\n        usm.basicURLParse(v, {\n          url: this._url,\n          stateOverride: \"port\"\n        });\n      }\n    }\n    get pathname() {\n      if (this._url.cannotBeABaseURL) {\n        return this._url.path[0];\n      }\n      if (this._url.path.length === 0) {\n        return \"\";\n      }\n      return \"/\" + this._url.path.join(\"/\");\n    }\n    set pathname(v) {\n      if (this._url.cannotBeABaseURL) {\n        return;\n      }\n      this._url.path = [];\n      usm.basicURLParse(v, {\n        url: this._url,\n        stateOverride: \"path start\"\n      });\n    }\n    get search() {\n      if (this._url.query === null || this._url.query === \"\") {\n        return \"\";\n      }\n      return \"?\" + this._url.query;\n    }\n    set search(v) {\n      // TODO: query stuff\n\n      const url = this._url;\n      if (v === \"\") {\n        url.query = null;\n        return;\n      }\n      const input = v[0] === \"?\" ? v.substring(1) : v;\n      url.query = \"\";\n      usm.basicURLParse(input, {\n        url,\n        stateOverride: \"query\"\n      });\n    }\n    get hash() {\n      if (this._url.fragment === null || this._url.fragment === \"\") {\n        return \"\";\n      }\n      return \"#\" + this._url.fragment;\n    }\n    set hash(v) {\n      if (v === \"\") {\n        this._url.fragment = null;\n        return;\n      }\n      const input = v[0] === \"#\" ? v.substring(1) : v;\n      this._url.fragment = \"\";\n      usm.basicURLParse(input, {\n        url: this._url,\n        stateOverride: \"fragment\"\n      });\n    }\n    toJSON() {\n      return this.href;\n    }\n  };\n});","lineCount":181,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[4,8,2,6,"usm"],[4,11,2,9],[4,14,2,12,"require"],[4,21,2,19],[4,22,2,19,"_dependencyMap"],[4,36,2,19],[4,62,2,41],[4,63,2,42],[5,2,4,0,"exports"],[5,9,4,7],[5,10,4,8,"implementation"],[5,24,4,22],[5,27,4,25],[5,33,4,31,"URLImpl"],[5,40,4,38],[5,41,4,39],[6,4,5,2,"constructor"],[6,15,5,13,"constructor"],[6,16,5,14,"constructorArgs"],[6,31,5,29],[6,33,5,31],[7,6,6,4],[7,12,6,10,"url"],[7,15,6,13],[7,18,6,16,"constructorArgs"],[7,33,6,31],[7,34,6,32],[7,35,6,33],[7,36,6,34],[8,6,7,4],[8,12,7,10,"base"],[8,16,7,14],[8,19,7,17,"constructorArgs"],[8,34,7,32],[8,35,7,33],[8,36,7,34],[8,37,7,35],[9,6,9,4],[9,10,9,8,"parsedBase"],[9,20,9,18],[9,23,9,21],[9,27,9,25],[10,6,10,4],[10,10,10,8,"base"],[10,14,10,12],[10,19,10,17,"undefined"],[10,28,10,26],[10,30,10,28],[11,8,11,6,"parsedBase"],[11,18,11,16],[11,21,11,19,"usm"],[11,24,11,22],[11,25,11,23,"basicURLParse"],[11,38,11,36],[11,39,11,37,"base"],[11,43,11,41],[11,44,11,42],[12,8,12,6],[12,12,12,10,"parsedBase"],[12,22,12,20],[12,27,12,25],[12,36,12,34],[12,38,12,36],[13,10,13,8],[13,16,13,14],[13,20,13,18,"TypeError"],[13,29,13,27],[13,30,13,28],[13,48,13,46],[13,49,13,47],[14,8,14,6],[15,6,15,4],[16,6,17,4],[16,12,17,10,"parsedURL"],[16,21,17,19],[16,24,17,22,"usm"],[16,27,17,25],[16,28,17,26,"basicURLParse"],[16,41,17,39],[16,42,17,40,"url"],[16,45,17,43],[16,47,17,45],[17,8,17,47,"baseURL"],[17,15,17,54],[17,17,17,56,"parsedBase"],[18,6,17,67],[18,7,17,68],[18,8,17,69],[19,6,18,4],[19,10,18,8,"parsedURL"],[19,19,18,17],[19,24,18,22],[19,33,18,31],[19,35,18,33],[20,8,19,6],[20,14,19,12],[20,18,19,16,"TypeError"],[20,27,19,25],[20,28,19,26],[20,41,19,39],[20,42,19,40],[21,6,20,4],[22,6,22,4],[22,10,22,8],[22,11,22,9,"_url"],[22,15,22,13],[22,18,22,16,"parsedURL"],[22,27,22,25],[24,6,24,4],[25,4,25,2],[26,4,27,2],[26,8,27,6,"href"],[26,12,27,10,"href"],[26,13,27,10],[26,15,27,13],[27,6,28,4],[27,13,28,11,"usm"],[27,16,28,14],[27,17,28,15,"serializeURL"],[27,29,28,27],[27,30,28,28],[27,34,28,32],[27,35,28,33,"_url"],[27,39,28,37],[27,40,28,38],[28,4,29,2],[29,4,31,2],[29,8,31,6,"href"],[29,12,31,10,"href"],[29,13,31,11,"v"],[29,14,31,12],[29,16,31,14],[30,6,32,4],[30,12,32,10,"parsedURL"],[30,21,32,19],[30,24,32,22,"usm"],[30,27,32,25],[30,28,32,26,"basicURLParse"],[30,41,32,39],[30,42,32,40,"v"],[30,43,32,41],[30,44,32,42],[31,6,33,4],[31,10,33,8,"parsedURL"],[31,19,33,17],[31,24,33,22],[31,33,33,31],[31,35,33,33],[32,8,34,6],[32,14,34,12],[32,18,34,16,"TypeError"],[32,27,34,25],[32,28,34,26],[32,41,34,39],[32,42,34,40],[33,6,35,4],[34,6,37,4],[34,10,37,8],[34,11,37,9,"_url"],[34,15,37,13],[34,18,37,16,"parsedURL"],[34,27,37,25],[35,4,38,2],[36,4,40,2],[36,8,40,6,"origin"],[36,14,40,12,"origin"],[36,15,40,12],[36,17,40,15],[37,6,41,4],[37,13,41,11,"usm"],[37,16,41,14],[37,17,41,15,"serializeURLOrigin"],[37,35,41,33],[37,36,41,34],[37,40,41,38],[37,41,41,39,"_url"],[37,45,41,43],[37,46,41,44],[38,4,42,2],[39,4,44,2],[39,8,44,6,"protocol"],[39,16,44,14,"protocol"],[39,17,44,14],[39,19,44,17],[40,6,45,4],[40,13,45,11],[40,17,45,15],[40,18,45,16,"_url"],[40,22,45,20],[40,23,45,21,"scheme"],[40,29,45,27],[40,32,45,30],[40,35,45,33],[41,4,46,2],[42,4,48,2],[42,8,48,6,"protocol"],[42,16,48,14,"protocol"],[42,17,48,15,"v"],[42,18,48,16],[42,20,48,18],[43,6,49,4,"usm"],[43,9,49,7],[43,10,49,8,"basicURLParse"],[43,23,49,21],[43,24,49,22,"v"],[43,25,49,23],[43,28,49,26],[43,31,49,29],[43,33,49,31],[44,8,49,33,"url"],[44,11,49,36],[44,13,49,38],[44,17,49,42],[44,18,49,43,"_url"],[44,22,49,47],[45,8,49,49,"stateOverride"],[45,21,49,62],[45,23,49,64],[46,6,49,79],[46,7,49,80],[46,8,49,81],[47,4,50,2],[48,4,52,2],[48,8,52,6,"username"],[48,16,52,14,"username"],[48,17,52,14],[48,19,52,17],[49,6,53,4],[49,13,53,11],[49,17,53,15],[49,18,53,16,"_url"],[49,22,53,20],[49,23,53,21,"username"],[49,31,53,29],[50,4,54,2],[51,4,56,2],[51,8,56,6,"username"],[51,16,56,14,"username"],[51,17,56,15,"v"],[51,18,56,16],[51,20,56,18],[52,6,57,4],[52,10,57,8,"usm"],[52,13,57,11],[52,14,57,12,"cannotHaveAUsernamePasswordPort"],[52,45,57,43],[52,46,57,44],[52,50,57,48],[52,51,57,49,"_url"],[52,55,57,53],[52,56,57,54],[52,58,57,56],[53,8,58,6],[54,6,59,4],[55,6,61,4,"usm"],[55,9,61,7],[55,10,61,8,"setTheUsername"],[55,24,61,22],[55,25,61,23],[55,29,61,27],[55,30,61,28,"_url"],[55,34,61,32],[55,36,61,34,"v"],[55,37,61,35],[55,38,61,36],[56,4,62,2],[57,4,64,2],[57,8,64,6,"password"],[57,16,64,14,"password"],[57,17,64,14],[57,19,64,17],[58,6,65,4],[58,13,65,11],[58,17,65,15],[58,18,65,16,"_url"],[58,22,65,20],[58,23,65,21,"password"],[58,31,65,29],[59,4,66,2],[60,4,68,2],[60,8,68,6,"password"],[60,16,68,14,"password"],[60,17,68,15,"v"],[60,18,68,16],[60,20,68,18],[61,6,69,4],[61,10,69,8,"usm"],[61,13,69,11],[61,14,69,12,"cannotHaveAUsernamePasswordPort"],[61,45,69,43],[61,46,69,44],[61,50,69,48],[61,51,69,49,"_url"],[61,55,69,53],[61,56,69,54],[61,58,69,56],[62,8,70,6],[63,6,71,4],[64,6,73,4,"usm"],[64,9,73,7],[64,10,73,8,"setThePassword"],[64,24,73,22],[64,25,73,23],[64,29,73,27],[64,30,73,28,"_url"],[64,34,73,32],[64,36,73,34,"v"],[64,37,73,35],[64,38,73,36],[65,4,74,2],[66,4,76,2],[66,8,76,6,"host"],[66,12,76,10,"host"],[66,13,76,10],[66,15,76,13],[67,6,77,4],[67,12,77,10,"url"],[67,15,77,13],[67,18,77,16],[67,22,77,20],[67,23,77,21,"_url"],[67,27,77,25],[68,6,79,4],[68,10,79,8,"url"],[68,13,79,11],[68,14,79,12,"host"],[68,18,79,16],[68,23,79,21],[68,27,79,25],[68,29,79,27],[69,8,80,6],[69,15,80,13],[69,17,80,15],[70,6,81,4],[71,6,83,4],[71,10,83,8,"url"],[71,13,83,11],[71,14,83,12,"port"],[71,18,83,16],[71,23,83,21],[71,27,83,25],[71,29,83,27],[72,8,84,6],[72,15,84,13,"usm"],[72,18,84,16],[72,19,84,17,"serializeHost"],[72,32,84,30],[72,33,84,31,"url"],[72,36,84,34],[72,37,84,35,"host"],[72,41,84,39],[72,42,84,40],[73,6,85,4],[74,6,87,4],[74,13,87,11,"usm"],[74,16,87,14],[74,17,87,15,"serializeHost"],[74,30,87,28],[74,31,87,29,"url"],[74,34,87,32],[74,35,87,33,"host"],[74,39,87,37],[74,40,87,38],[74,43,87,41],[74,46,87,44],[74,49,87,47,"usm"],[74,52,87,50],[74,53,87,51,"serializeInteger"],[74,69,87,67],[74,70,87,68,"url"],[74,73,87,71],[74,74,87,72,"port"],[74,78,87,76],[74,79,87,77],[75,4,88,2],[76,4,90,2],[76,8,90,6,"host"],[76,12,90,10,"host"],[76,13,90,11,"v"],[76,14,90,12],[76,16,90,14],[77,6,91,4],[77,10,91,8],[77,14,91,12],[77,15,91,13,"_url"],[77,19,91,17],[77,20,91,18,"cannotBeABaseURL"],[77,36,91,34],[77,38,91,36],[78,8,92,6],[79,6,93,4],[80,6,95,4,"usm"],[80,9,95,7],[80,10,95,8,"basicURLParse"],[80,23,95,21],[80,24,95,22,"v"],[80,25,95,23],[80,27,95,25],[81,8,95,27,"url"],[81,11,95,30],[81,13,95,32],[81,17,95,36],[81,18,95,37,"_url"],[81,22,95,41],[82,8,95,43,"stateOverride"],[82,21,95,56],[82,23,95,58],[83,6,95,65],[83,7,95,66],[83,8,95,67],[84,4,96,2],[85,4,98,2],[85,8,98,6,"hostname"],[85,16,98,14,"hostname"],[85,17,98,14],[85,19,98,17],[86,6,99,4],[86,10,99,8],[86,14,99,12],[86,15,99,13,"_url"],[86,19,99,17],[86,20,99,18,"host"],[86,24,99,22],[86,29,99,27],[86,33,99,31],[86,35,99,33],[87,8,100,6],[87,15,100,13],[87,17,100,15],[88,6,101,4],[89,6,103,4],[89,13,103,11,"usm"],[89,16,103,14],[89,17,103,15,"serializeHost"],[89,30,103,28],[89,31,103,29],[89,35,103,33],[89,36,103,34,"_url"],[89,40,103,38],[89,41,103,39,"host"],[89,45,103,43],[89,46,103,44],[90,4,104,2],[91,4,106,2],[91,8,106,6,"hostname"],[91,16,106,14,"hostname"],[91,17,106,15,"v"],[91,18,106,16],[91,20,106,18],[92,6,107,4],[92,10,107,8],[92,14,107,12],[92,15,107,13,"_url"],[92,19,107,17],[92,20,107,18,"cannotBeABaseURL"],[92,36,107,34],[92,38,107,36],[93,8,108,6],[94,6,109,4],[95,6,111,4,"usm"],[95,9,111,7],[95,10,111,8,"basicURLParse"],[95,23,111,21],[95,24,111,22,"v"],[95,25,111,23],[95,27,111,25],[96,8,111,27,"url"],[96,11,111,30],[96,13,111,32],[96,17,111,36],[96,18,111,37,"_url"],[96,22,111,41],[97,8,111,43,"stateOverride"],[97,21,111,56],[97,23,111,58],[98,6,111,69],[98,7,111,70],[98,8,111,71],[99,4,112,2],[100,4,114,2],[100,8,114,6,"port"],[100,12,114,10,"port"],[100,13,114,10],[100,15,114,13],[101,6,115,4],[101,10,115,8],[101,14,115,12],[101,15,115,13,"_url"],[101,19,115,17],[101,20,115,18,"port"],[101,24,115,22],[101,29,115,27],[101,33,115,31],[101,35,115,33],[102,8,116,6],[102,15,116,13],[102,17,116,15],[103,6,117,4],[104,6,119,4],[104,13,119,11,"usm"],[104,16,119,14],[104,17,119,15,"serializeInteger"],[104,33,119,31],[104,34,119,32],[104,38,119,36],[104,39,119,37,"_url"],[104,43,119,41],[104,44,119,42,"port"],[104,48,119,46],[104,49,119,47],[105,4,120,2],[106,4,122,2],[106,8,122,6,"port"],[106,12,122,10,"port"],[106,13,122,11,"v"],[106,14,122,12],[106,16,122,14],[107,6,123,4],[107,10,123,8,"usm"],[107,13,123,11],[107,14,123,12,"cannotHaveAUsernamePasswordPort"],[107,45,123,43],[107,46,123,44],[107,50,123,48],[107,51,123,49,"_url"],[107,55,123,53],[107,56,123,54],[107,58,123,56],[108,8,124,6],[109,6,125,4],[110,6,127,4],[110,10,127,8,"v"],[110,11,127,9],[110,16,127,14],[110,18,127,16],[110,20,127,18],[111,8,128,6],[111,12,128,10],[111,13,128,11,"_url"],[111,17,128,15],[111,18,128,16,"port"],[111,22,128,20],[111,25,128,23],[111,29,128,27],[112,6,129,4],[112,7,129,5],[112,13,129,11],[113,8,130,6,"usm"],[113,11,130,9],[113,12,130,10,"basicURLParse"],[113,25,130,23],[113,26,130,24,"v"],[113,27,130,25],[113,29,130,27],[114,10,130,29,"url"],[114,13,130,32],[114,15,130,34],[114,19,130,38],[114,20,130,39,"_url"],[114,24,130,43],[115,10,130,45,"stateOverride"],[115,23,130,58],[115,25,130,60],[116,8,130,67],[116,9,130,68],[116,10,130,69],[117,6,131,4],[118,4,132,2],[119,4,134,2],[119,8,134,6,"pathname"],[119,16,134,14,"pathname"],[119,17,134,14],[119,19,134,17],[120,6,135,4],[120,10,135,8],[120,14,135,12],[120,15,135,13,"_url"],[120,19,135,17],[120,20,135,18,"cannotBeABaseURL"],[120,36,135,34],[120,38,135,36],[121,8,136,6],[121,15,136,13],[121,19,136,17],[121,20,136,18,"_url"],[121,24,136,22],[121,25,136,23,"path"],[121,29,136,27],[121,30,136,28],[121,31,136,29],[121,32,136,30],[122,6,137,4],[123,6,139,4],[123,10,139,8],[123,14,139,12],[123,15,139,13,"_url"],[123,19,139,17],[123,20,139,18,"path"],[123,24,139,22],[123,25,139,23,"length"],[123,31,139,29],[123,36,139,34],[123,37,139,35],[123,39,139,37],[124,8,140,6],[124,15,140,13],[124,17,140,15],[125,6,141,4],[126,6,143,4],[126,13,143,11],[126,16,143,14],[126,19,143,17],[126,23,143,21],[126,24,143,22,"_url"],[126,28,143,26],[126,29,143,27,"path"],[126,33,143,31],[126,34,143,32,"join"],[126,38,143,36],[126,39,143,37],[126,42,143,40],[126,43,143,41],[127,4,144,2],[128,4,146,2],[128,8,146,6,"pathname"],[128,16,146,14,"pathname"],[128,17,146,15,"v"],[128,18,146,16],[128,20,146,18],[129,6,147,4],[129,10,147,8],[129,14,147,12],[129,15,147,13,"_url"],[129,19,147,17],[129,20,147,18,"cannotBeABaseURL"],[129,36,147,34],[129,38,147,36],[130,8,148,6],[131,6,149,4],[132,6,151,4],[132,10,151,8],[132,11,151,9,"_url"],[132,15,151,13],[132,16,151,14,"path"],[132,20,151,18],[132,23,151,21],[132,25,151,23],[133,6,152,4,"usm"],[133,9,152,7],[133,10,152,8,"basicURLParse"],[133,23,152,21],[133,24,152,22,"v"],[133,25,152,23],[133,27,152,25],[134,8,152,27,"url"],[134,11,152,30],[134,13,152,32],[134,17,152,36],[134,18,152,37,"_url"],[134,22,152,41],[135,8,152,43,"stateOverride"],[135,21,152,56],[135,23,152,58],[136,6,152,71],[136,7,152,72],[136,8,152,73],[137,4,153,2],[138,4,155,2],[138,8,155,6,"search"],[138,14,155,12,"search"],[138,15,155,12],[138,17,155,15],[139,6,156,4],[139,10,156,8],[139,14,156,12],[139,15,156,13,"_url"],[139,19,156,17],[139,20,156,18,"query"],[139,25,156,23],[139,30,156,28],[139,34,156,32],[139,38,156,36],[139,42,156,40],[139,43,156,41,"_url"],[139,47,156,45],[139,48,156,46,"query"],[139,53,156,51],[139,58,156,56],[139,60,156,58],[139,62,156,60],[140,8,157,6],[140,15,157,13],[140,17,157,15],[141,6,158,4],[142,6,160,4],[142,13,160,11],[142,16,160,14],[142,19,160,17],[142,23,160,21],[142,24,160,22,"_url"],[142,28,160,26],[142,29,160,27,"query"],[142,34,160,32],[143,4,161,2],[144,4,163,2],[144,8,163,6,"search"],[144,14,163,12,"search"],[144,15,163,13,"v"],[144,16,163,14],[144,18,163,16],[145,6,164,4],[147,6,166,4],[147,12,166,10,"url"],[147,15,166,13],[147,18,166,16],[147,22,166,20],[147,23,166,21,"_url"],[147,27,166,25],[148,6,168,4],[148,10,168,8,"v"],[148,11,168,9],[148,16,168,14],[148,18,168,16],[148,20,168,18],[149,8,169,6,"url"],[149,11,169,9],[149,12,169,10,"query"],[149,17,169,15],[149,20,169,18],[149,24,169,22],[150,8,170,6],[151,6,171,4],[152,6,173,4],[152,12,173,10,"input"],[152,17,173,15],[152,20,173,18,"v"],[152,21,173,19],[152,22,173,20],[152,23,173,21],[152,24,173,22],[152,29,173,27],[152,32,173,30],[152,35,173,33,"v"],[152,36,173,34],[152,37,173,35,"substring"],[152,46,173,44],[152,47,173,45],[152,48,173,46],[152,49,173,47],[152,52,173,50,"v"],[152,53,173,51],[153,6,174,4,"url"],[153,9,174,7],[153,10,174,8,"query"],[153,15,174,13],[153,18,174,16],[153,20,174,18],[154,6,175,4,"usm"],[154,9,175,7],[154,10,175,8,"basicURLParse"],[154,23,175,21],[154,24,175,22,"input"],[154,29,175,27],[154,31,175,29],[155,8,175,31,"url"],[155,11,175,34],[156,8,175,36,"stateOverride"],[156,21,175,49],[156,23,175,51],[157,6,175,59],[157,7,175,60],[157,8,175,61],[158,4,176,2],[159,4,178,2],[159,8,178,6,"hash"],[159,12,178,10,"hash"],[159,13,178,10],[159,15,178,13],[160,6,179,4],[160,10,179,8],[160,14,179,12],[160,15,179,13,"_url"],[160,19,179,17],[160,20,179,18,"fragment"],[160,28,179,26],[160,33,179,31],[160,37,179,35],[160,41,179,39],[160,45,179,43],[160,46,179,44,"_url"],[160,50,179,48],[160,51,179,49,"fragment"],[160,59,179,57],[160,64,179,62],[160,66,179,64],[160,68,179,66],[161,8,180,6],[161,15,180,13],[161,17,180,15],[162,6,181,4],[163,6,183,4],[163,13,183,11],[163,16,183,14],[163,19,183,17],[163,23,183,21],[163,24,183,22,"_url"],[163,28,183,26],[163,29,183,27,"fragment"],[163,37,183,35],[164,4,184,2],[165,4,186,2],[165,8,186,6,"hash"],[165,12,186,10,"hash"],[165,13,186,11,"v"],[165,14,186,12],[165,16,186,14],[166,6,187,4],[166,10,187,8,"v"],[166,11,187,9],[166,16,187,14],[166,18,187,16],[166,20,187,18],[167,8,188,6],[167,12,188,10],[167,13,188,11,"_url"],[167,17,188,15],[167,18,188,16,"fragment"],[167,26,188,24],[167,29,188,27],[167,33,188,31],[168,8,189,6],[169,6,190,4],[170,6,192,4],[170,12,192,10,"input"],[170,17,192,15],[170,20,192,18,"v"],[170,21,192,19],[170,22,192,20],[170,23,192,21],[170,24,192,22],[170,29,192,27],[170,32,192,30],[170,35,192,33,"v"],[170,36,192,34],[170,37,192,35,"substring"],[170,46,192,44],[170,47,192,45],[170,48,192,46],[170,49,192,47],[170,52,192,50,"v"],[170,53,192,51],[171,6,193,4],[171,10,193,8],[171,11,193,9,"_url"],[171,15,193,13],[171,16,193,14,"fragment"],[171,24,193,22],[171,27,193,25],[171,29,193,27],[172,6,194,4,"usm"],[172,9,194,7],[172,10,194,8,"basicURLParse"],[172,23,194,21],[172,24,194,22,"input"],[172,29,194,27],[172,31,194,29],[173,8,194,31,"url"],[173,11,194,34],[173,13,194,36],[173,17,194,40],[173,18,194,41,"_url"],[173,22,194,45],[174,8,194,47,"stateOverride"],[174,21,194,60],[174,23,194,62],[175,6,194,73],[175,7,194,74],[175,8,194,75],[176,4,195,2],[177,4,197,2,"toJSON"],[177,10,197,8,"toJSON"],[177,11,197,8],[177,13,197,11],[178,6,198,4],[178,13,198,11],[178,17,198,15],[178,18,198,16,"href"],[178,22,198,20],[179,4,199,2],[180,2,200,0],[180,3,200,1],[181,0,200,2],[181,3]],"functionMap":{"names":["<global>","URLImpl","URLImpl#constructor","URLImpl#get__href","URLImpl#set__href","URLImpl#get__origin","URLImpl#get__protocol","URLImpl#set__protocol","URLImpl#get__username","URLImpl#set__username","URLImpl#get__password","URLImpl#set__password","URLImpl#get__host","URLImpl#set__host","URLImpl#get__hostname","URLImpl#set__hostname","URLImpl#get__port","URLImpl#set__port","URLImpl#get__pathname","URLImpl#set__pathname","URLImpl#get__search","URLImpl#set__search","URLImpl#get__hash","URLImpl#set__hash","URLImpl#toJSON"],"mappings":"AAA;yBCG;ECC;GDoB;EEE;GFE;EGE;GHO;EIE;GJE;EKE;GLE;EME;GNE;EOE;GPE;EQE;GRM;ESE;GTE;EUE;GVM;EWE;GXY;EYE;GZM;EaE;GbM;EcE;GdM;EeE;GfM;EgBE;GhBU;EiBE;GjBU;EkBE;GlBO;EmBE;GnBM;EoBE;GpBa;EqBE;GrBM;EsBE;GtBS;EuBE;GvBE;CDC"},"hasCjsExports":true},"type":"js/module"}]}